

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Sep 14 16:33:14 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2
    41                           	psect	text12,local,class=CODE,merge=1,delta=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	text52,local,class=CODE,merge=1,delta=2
    82                           	psect	text53,local,class=CODE,merge=1,delta=2
    83                           	psect	text54,local,class=CODE,merge=1,delta=2
    84                           	psect	text55,local,class=CODE,merge=1,delta=2
    85                           	psect	text56,local,class=CODE,merge=1,delta=2
    86                           	psect	text57,local,class=CODE,merge=1,delta=2
    87                           	psect	text58,local,class=CODE,merge=1,delta=2
    88                           	psect	text59,local,class=CODE,merge=1,delta=2
    89                           	psect	text60,local,class=CODE,merge=1,delta=2
    90                           	psect	text61,local,class=CODE,merge=1,delta=2
    91                           	psect	text62,local,class=CODE,merge=1,delta=2
    92                           	psect	text63,local,class=CODE,merge=1,delta=2
    93                           	psect	text64,local,class=CODE,merge=1,delta=2
    94                           	psect	text65,local,class=CODE,merge=1,delta=2
    95                           	psect	text66,local,class=CODE,merge=1,delta=2
    96                           	psect	text67,local,class=CODE,merge=1,delta=2
    97                           	psect	text68,local,class=CODE,merge=1,delta=2
    98                           	psect	text69,local,class=CODE,merge=1,delta=2
    99                           	psect	text70,local,class=CODE,merge=1,delta=2
   100                           	psect	text71,local,class=CODE,merge=1,delta=2
   101                           	psect	text72,local,class=CODE,merge=1,delta=2
   102                           	psect	text73,local,class=CODE,merge=1,delta=2
   103                           	psect	text74,local,class=CODE,merge=1,delta=2
   104                           	psect	text75,local,class=CODE,merge=1,delta=2
   105                           	psect	text76,local,class=CODE,merge=1,delta=2
   106                           	psect	text77,local,class=CODE,merge=1,delta=2
   107                           	psect	text78,local,class=CODE,merge=1,delta=2
   108                           	psect	text79,local,class=CODE,merge=1,delta=2
   109                           	psect	text80,local,class=CODE,merge=1,delta=2
   110                           	psect	intentry,global,class=CODE,delta=2
   111                           	psect	text82,local,class=CODE,merge=1,delta=2
   112                           	psect	text83,local,class=CODE,merge=1,delta=2
   113                           	psect	text84,local,class=CODE,merge=1,delta=2
   114                           	dabs	1,0xCA0,32
   115                           	dabs	1,0xC20,80
   116                           	dabs	1,0xBD4,28
   117                           	dabs	1,0xBA0,52
   118                           	dabs	1,0xB20,80
   119                           	dabs	1,0xAE8,8
   120                           	dabs	1,0x26D8,0,_nmea_data
   121                           	dabs	1,0x2764,0,_txdata
   122                           	dabs	1,0x7E,2
   123  0000                     
   124                           ; Version 2.05
   125                           ; Generated 20/12/2018 GMT
   126                           ; 
   127                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC16F18446 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  008C                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  010F                     	;# 
   213  0110                     	;# 
   214  0111                     	;# 
   215  0112                     	;# 
   216  0113                     	;# 
   217  0114                     	;# 
   218  0115                     	;# 
   219  0116                     	;# 
   220  0117                     	;# 
   221  0118                     	;# 
   222  0119                     	;# 
   223  0119                     	;# 
   224  0119                     	;# 
   225  011A                     	;# 
   226  011A                     	;# 
   227  011A                     	;# 
   228  011B                     	;# 
   229  011B                     	;# 
   230  011B                     	;# 
   231  011B                     	;# 
   232  011B                     	;# 
   233  011C                     	;# 
   234  011C                     	;# 
   235  011C                     	;# 
   236  011D                     	;# 
   237  011D                     	;# 
   238  011D                     	;# 
   239  011E                     	;# 
   240  011E                     	;# 
   241  011E                     	;# 
   242  011F                     	;# 
   243  011F                     	;# 
   244  011F                     	;# 
   245  011F                     	;# 
   246  011F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  018E                     	;# 
   250  018F                     	;# 
   251  0190                     	;# 
   252  0191                     	;# 
   253  0192                     	;# 
   254  0196                     	;# 
   255  0197                     	;# 
   256  0198                     	;# 
   257  0199                     	;# 
   258  019A                     	;# 
   259  019B                     	;# 
   260  019C                     	;# 
   261  020C                     	;# 
   262  020D                     	;# 
   263  020E                     	;# 
   264  020E                     	;# 
   265  020F                     	;# 
   266  020F                     	;# 
   267  0210                     	;# 
   268  0210                     	;# 
   269  0211                     	;# 
   270  0211                     	;# 
   271  0212                     	;# 
   272  0213                     	;# 
   273  0214                     	;# 
   274  0214                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0216                     	;# 
   278  0216                     	;# 
   279  0217                     	;# 
   280  0217                     	;# 
   281  0218                     	;# 
   282  0219                     	;# 
   283  021A                     	;# 
   284  021A                     	;# 
   285  021B                     	;# 
   286  021B                     	;# 
   287  021C                     	;# 
   288  021C                     	;# 
   289  021D                     	;# 
   290  021D                     	;# 
   291  021E                     	;# 
   292  021F                     	;# 
   293  028C                     	;# 
   294  028C                     	;# 
   295  028D                     	;# 
   296  028D                     	;# 
   297  028E                     	;# 
   298  028F                     	;# 
   299  0290                     	;# 
   300  0291                     	;# 
   301  0292                     	;# 
   302  0292                     	;# 
   303  0293                     	;# 
   304  0293                     	;# 
   305  0294                     	;# 
   306  0295                     	;# 
   307  0296                     	;# 
   308  0297                     	;# 
   309  0298                     	;# 
   310  0298                     	;# 
   311  0299                     	;# 
   312  0299                     	;# 
   313  029A                     	;# 
   314  029B                     	;# 
   315  029C                     	;# 
   316  029D                     	;# 
   317  029F                     	;# 
   318  030C                     	;# 
   319  030C                     	;# 
   320  030D                     	;# 
   321  030E                     	;# 
   322  030F                     	;# 
   323  0310                     	;# 
   324  0310                     	;# 
   325  0311                     	;# 
   326  0312                     	;# 
   327  0313                     	;# 
   328  0314                     	;# 
   329  0314                     	;# 
   330  0315                     	;# 
   331  0316                     	;# 
   332  0317                     	;# 
   333  0318                     	;# 
   334  0318                     	;# 
   335  0319                     	;# 
   336  031A                     	;# 
   337  031B                     	;# 
   338  038C                     	;# 
   339  038C                     	;# 
   340  038D                     	;# 
   341  038E                     	;# 
   342  0390                     	;# 
   343  0390                     	;# 
   344  0391                     	;# 
   345  0392                     	;# 
   346  048C                     	;# 
   347  048C                     	;# 
   348  048D                     	;# 
   349  048E                     	;# 
   350  048F                     	;# 
   351  048F                     	;# 
   352  0490                     	;# 
   353  0491                     	;# 
   354  0492                     	;# 
   355  0492                     	;# 
   356  0493                     	;# 
   357  0494                     	;# 
   358  0495                     	;# 
   359  0495                     	;# 
   360  0496                     	;# 
   361  0497                     	;# 
   362  0498                     	;# 
   363  0499                     	;# 
   364  049A                     	;# 
   365  049B                     	;# 
   366  049C                     	;# 
   367  049D                     	;# 
   368  058C                     	;# 
   369  058C                     	;# 
   370  058D                     	;# 
   371  058E                     	;# 
   372  058F                     	;# 
   373  058F                     	;# 
   374  0590                     	;# 
   375  0591                     	;# 
   376  0592                     	;# 
   377  0593                     	;# 
   378  059C                     	;# 
   379  059C                     	;# 
   380  059D                     	;# 
   381  059D                     	;# 
   382  059E                     	;# 
   383  059F                     	;# 
   384  060C                     	;# 
   385  060C                     	;# 
   386  060D                     	;# 
   387  060D                     	;# 
   388  060E                     	;# 
   389  060F                     	;# 
   390  0610                     	;# 
   391  0611                     	;# 
   392  0612                     	;# 
   393  0613                     	;# 
   394  0614                     	;# 
   395  0616                     	;# 
   396  0616                     	;# 
   397  0617                     	;# 
   398  0617                     	;# 
   399  0618                     	;# 
   400  0619                     	;# 
   401  061A                     	;# 
   402  061B                     	;# 
   403  061C                     	;# 
   404  061D                     	;# 
   405  061E                     	;# 
   406  070C                     	;# 
   407  070D                     	;# 
   408  070E                     	;# 
   409  070F                     	;# 
   410  0710                     	;# 
   411  0711                     	;# 
   412  0712                     	;# 
   413  0713                     	;# 
   414  0714                     	;# 
   415  0716                     	;# 
   416  0717                     	;# 
   417  0718                     	;# 
   418  0719                     	;# 
   419  071A                     	;# 
   420  071B                     	;# 
   421  071C                     	;# 
   422  071D                     	;# 
   423  071E                     	;# 
   424  0796                     	;# 
   425  0797                     	;# 
   426  0798                     	;# 
   427  0799                     	;# 
   428  079A                     	;# 
   429  079B                     	;# 
   430  079C                     	;# 
   431  079D                     	;# 
   432  080C                     	;# 
   433  080D                     	;# 
   434  080E                     	;# 
   435  080F                     	;# 
   436  0810                     	;# 
   437  0811                     	;# 
   438  0812                     	;# 
   439  0813                     	;# 
   440  0814                     	;# 
   441  081A                     	;# 
   442  081A                     	;# 
   443  081B                     	;# 
   444  081C                     	;# 
   445  081C                     	;# 
   446  081D                     	;# 
   447  081E                     	;# 
   448  081F                     	;# 
   449  088C                     	;# 
   450  088D                     	;# 
   451  088E                     	;# 
   452  088F                     	;# 
   453  0890                     	;# 
   454  0891                     	;# 
   455  0892                     	;# 
   456  0893                     	;# 
   457  0895                     	;# 
   458  0896                     	;# 
   459  0897                     	;# 
   460  0898                     	;# 
   461  0899                     	;# 
   462  089A                     	;# 
   463  089B                     	;# 
   464  090C                     	;# 
   465  090E                     	;# 
   466  090F                     	;# 
   467  091F                     	;# 
   468  098F                     	;# 
   469  098F                     	;# 
   470  0990                     	;# 
   471  0991                     	;# 
   472  0992                     	;# 
   473  0993                     	;# 
   474  0994                     	;# 
   475  0995                     	;# 
   476  0996                     	;# 
   477  0997                     	;# 
   478  1E0F                     	;# 
   479  1E10                     	;# 
   480  1E11                     	;# 
   481  1E12                     	;# 
   482  1E13                     	;# 
   483  1E14                     	;# 
   484  1E15                     	;# 
   485  1E16                     	;# 
   486  1E17                     	;# 
   487  1E18                     	;# 
   488  1E19                     	;# 
   489  1E1A                     	;# 
   490  1E1B                     	;# 
   491  1E1C                     	;# 
   492  1E1D                     	;# 
   493  1E1E                     	;# 
   494  1E1F                     	;# 
   495  1E20                     	;# 
   496  1E21                     	;# 
   497  1E22                     	;# 
   498  1E23                     	;# 
   499  1E24                     	;# 
   500  1E25                     	;# 
   501  1E26                     	;# 
   502  1E27                     	;# 
   503  1E28                     	;# 
   504  1E29                     	;# 
   505  1E2A                     	;# 
   506  1E2B                     	;# 
   507  1E2C                     	;# 
   508  1E2D                     	;# 
   509  1E2E                     	;# 
   510  1E2F                     	;# 
   511  1E30                     	;# 
   512  1E31                     	;# 
   513  1E32                     	;# 
   514  1E33                     	;# 
   515  1E34                     	;# 
   516  1E35                     	;# 
   517  1E36                     	;# 
   518  1E37                     	;# 
   519  1E8F                     	;# 
   520  1E90                     	;# 
   521  1E91                     	;# 
   522  1E92                     	;# 
   523  1E93                     	;# 
   524  1E94                     	;# 
   525  1E95                     	;# 
   526  1E96                     	;# 
   527  1E97                     	;# 
   528  1E9C                     	;# 
   529  1E9D                     	;# 
   530  1E9E                     	;# 
   531  1EA1                     	;# 
   532  1EA2                     	;# 
   533  1EA3                     	;# 
   534  1EA4                     	;# 
   535  1EA9                     	;# 
   536  1EAA                     	;# 
   537  1EB1                     	;# 
   538  1EB2                     	;# 
   539  1EB8                     	;# 
   540  1EB9                     	;# 
   541  1EBA                     	;# 
   542  1EBB                     	;# 
   543  1EBC                     	;# 
   544  1EBD                     	;# 
   545  1EBE                     	;# 
   546  1EC3                     	;# 
   547  1EC5                     	;# 
   548  1EC6                     	;# 
   549  1EC7                     	;# 
   550  1EC8                     	;# 
   551  1EC9                     	;# 
   552  1ECA                     	;# 
   553  1ECB                     	;# 
   554  1ECB                     	;# 
   555  1ECB                     	;# 
   556  1ECC                     	;# 
   557  1ECC                     	;# 
   558  1ECC                     	;# 
   559  1F10                     	;# 
   560  1F11                     	;# 
   561  1F12                     	;# 
   562  1F14                     	;# 
   563  1F15                     	;# 
   564  1F1C                     	;# 
   565  1F1D                     	;# 
   566  1F1E                     	;# 
   567  1F1F                     	;# 
   568  1F20                     	;# 
   569  1F21                     	;# 
   570  1F22                     	;# 
   571  1F23                     	;# 
   572  1F24                     	;# 
   573  1F25                     	;# 
   574  1F26                     	;# 
   575  1F27                     	;# 
   576  1F38                     	;# 
   577  1F39                     	;# 
   578  1F3A                     	;# 
   579  1F3B                     	;# 
   580  1F3C                     	;# 
   581  1F3D                     	;# 
   582  1F3E                     	;# 
   583  1F3F                     	;# 
   584  1F43                     	;# 
   585  1F44                     	;# 
   586  1F45                     	;# 
   587  1F46                     	;# 
   588  1F47                     	;# 
   589  1F48                     	;# 
   590  1F49                     	;# 
   591  1F4A                     	;# 
   592  1F4E                     	;# 
   593  1F4F                     	;# 
   594  1F50                     	;# 
   595  1F51                     	;# 
   596  1F52                     	;# 
   597  1F53                     	;# 
   598  1F54                     	;# 
   599  1F55                     	;# 
   600  1FE4                     	;# 
   601  1FE5                     	;# 
   602  1FE6                     	;# 
   603  1FE7                     	;# 
   604  1FE8                     	;# 
   605  1FE8                     	;# 
   606  1FE9                     	;# 
   607  1FEA                     	;# 
   608  1FEB                     	;# 
   609  1FED                     	;# 
   610  1FEE                     	;# 
   611  1FEF                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0008                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000D                     	;# 
   626  000E                     	;# 
   627  0012                     	;# 
   628  0013                     	;# 
   629  0014                     	;# 
   630  0018                     	;# 
   631  0019                     	;# 
   632  001A                     	;# 
   633  008C                     	;# 
   634  008C                     	;# 
   635  008D                     	;# 
   636  008E                     	;# 
   637  008E                     	;# 
   638  008F                     	;# 
   639  0090                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0092                     	;# 
   644  0093                     	;# 
   645  0094                     	;# 
   646  0094                     	;# 
   647  0095                     	;# 
   648  0096                     	;# 
   649  0096                     	;# 
   650  0097                     	;# 
   651  0098                     	;# 
   652  0099                     	;# 
   653  009A                     	;# 
   654  009B                     	;# 
   655  009B                     	;# 
   656  009C                     	;# 
   657  009D                     	;# 
   658  009D                     	;# 
   659  009E                     	;# 
   660  009F                     	;# 
   661  010C                     	;# 
   662  010C                     	;# 
   663  010D                     	;# 
   664  010E                     	;# 
   665  010F                     	;# 
   666  010F                     	;# 
   667  0110                     	;# 
   668  0111                     	;# 
   669  0112                     	;# 
   670  0113                     	;# 
   671  0114                     	;# 
   672  0115                     	;# 
   673  0116                     	;# 
   674  0117                     	;# 
   675  0118                     	;# 
   676  0119                     	;# 
   677  0119                     	;# 
   678  0119                     	;# 
   679  011A                     	;# 
   680  011A                     	;# 
   681  011A                     	;# 
   682  011B                     	;# 
   683  011B                     	;# 
   684  011B                     	;# 
   685  011B                     	;# 
   686  011B                     	;# 
   687  011C                     	;# 
   688  011C                     	;# 
   689  011C                     	;# 
   690  011D                     	;# 
   691  011D                     	;# 
   692  011D                     	;# 
   693  011E                     	;# 
   694  011E                     	;# 
   695  011E                     	;# 
   696  011F                     	;# 
   697  011F                     	;# 
   698  011F                     	;# 
   699  011F                     	;# 
   700  011F                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703  018E                     	;# 
   704  018F                     	;# 
   705  0190                     	;# 
   706  0191                     	;# 
   707  0192                     	;# 
   708  0196                     	;# 
   709  0197                     	;# 
   710  0198                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019B                     	;# 
   714  019C                     	;# 
   715  020C                     	;# 
   716  020D                     	;# 
   717  020E                     	;# 
   718  020E                     	;# 
   719  020F                     	;# 
   720  020F                     	;# 
   721  0210                     	;# 
   722  0210                     	;# 
   723  0211                     	;# 
   724  0211                     	;# 
   725  0212                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0216                     	;# 
   732  0216                     	;# 
   733  0217                     	;# 
   734  0217                     	;# 
   735  0218                     	;# 
   736  0219                     	;# 
   737  021A                     	;# 
   738  021A                     	;# 
   739  021B                     	;# 
   740  021B                     	;# 
   741  021C                     	;# 
   742  021C                     	;# 
   743  021D                     	;# 
   744  021D                     	;# 
   745  021E                     	;# 
   746  021F                     	;# 
   747  028C                     	;# 
   748  028C                     	;# 
   749  028D                     	;# 
   750  028D                     	;# 
   751  028E                     	;# 
   752  028F                     	;# 
   753  0290                     	;# 
   754  0291                     	;# 
   755  0292                     	;# 
   756  0292                     	;# 
   757  0293                     	;# 
   758  0293                     	;# 
   759  0294                     	;# 
   760  0295                     	;# 
   761  0296                     	;# 
   762  0297                     	;# 
   763  0298                     	;# 
   764  0298                     	;# 
   765  0299                     	;# 
   766  0299                     	;# 
   767  029A                     	;# 
   768  029B                     	;# 
   769  029C                     	;# 
   770  029D                     	;# 
   771  029F                     	;# 
   772  030C                     	;# 
   773  030C                     	;# 
   774  030D                     	;# 
   775  030E                     	;# 
   776  030F                     	;# 
   777  0310                     	;# 
   778  0310                     	;# 
   779  0311                     	;# 
   780  0312                     	;# 
   781  0313                     	;# 
   782  0314                     	;# 
   783  0314                     	;# 
   784  0315                     	;# 
   785  0316                     	;# 
   786  0317                     	;# 
   787  0318                     	;# 
   788  0318                     	;# 
   789  0319                     	;# 
   790  031A                     	;# 
   791  031B                     	;# 
   792  038C                     	;# 
   793  038C                     	;# 
   794  038D                     	;# 
   795  038E                     	;# 
   796  0390                     	;# 
   797  0390                     	;# 
   798  0391                     	;# 
   799  0392                     	;# 
   800  048C                     	;# 
   801  048C                     	;# 
   802  048D                     	;# 
   803  048E                     	;# 
   804  048F                     	;# 
   805  048F                     	;# 
   806  0490                     	;# 
   807  0491                     	;# 
   808  0492                     	;# 
   809  0492                     	;# 
   810  0493                     	;# 
   811  0494                     	;# 
   812  0495                     	;# 
   813  0495                     	;# 
   814  0496                     	;# 
   815  0497                     	;# 
   816  0498                     	;# 
   817  0499                     	;# 
   818  049A                     	;# 
   819  049B                     	;# 
   820  049C                     	;# 
   821  049D                     	;# 
   822  058C                     	;# 
   823  058C                     	;# 
   824  058D                     	;# 
   825  058E                     	;# 
   826  058F                     	;# 
   827  058F                     	;# 
   828  0590                     	;# 
   829  0591                     	;# 
   830  0592                     	;# 
   831  0593                     	;# 
   832  059C                     	;# 
   833  059C                     	;# 
   834  059D                     	;# 
   835  059D                     	;# 
   836  059E                     	;# 
   837  059F                     	;# 
   838  060C                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060D                     	;# 
   842  060E                     	;# 
   843  060F                     	;# 
   844  0610                     	;# 
   845  0611                     	;# 
   846  0612                     	;# 
   847  0613                     	;# 
   848  0614                     	;# 
   849  0616                     	;# 
   850  0616                     	;# 
   851  0617                     	;# 
   852  0617                     	;# 
   853  0618                     	;# 
   854  0619                     	;# 
   855  061A                     	;# 
   856  061B                     	;# 
   857  061C                     	;# 
   858  061D                     	;# 
   859  061E                     	;# 
   860  070C                     	;# 
   861  070D                     	;# 
   862  070E                     	;# 
   863  070F                     	;# 
   864  0710                     	;# 
   865  0711                     	;# 
   866  0712                     	;# 
   867  0713                     	;# 
   868  0714                     	;# 
   869  0716                     	;# 
   870  0717                     	;# 
   871  0718                     	;# 
   872  0719                     	;# 
   873  071A                     	;# 
   874  071B                     	;# 
   875  071C                     	;# 
   876  071D                     	;# 
   877  071E                     	;# 
   878  0796                     	;# 
   879  0797                     	;# 
   880  0798                     	;# 
   881  0799                     	;# 
   882  079A                     	;# 
   883  079B                     	;# 
   884  079C                     	;# 
   885  079D                     	;# 
   886  080C                     	;# 
   887  080D                     	;# 
   888  080E                     	;# 
   889  080F                     	;# 
   890  0810                     	;# 
   891  0811                     	;# 
   892  0812                     	;# 
   893  0813                     	;# 
   894  0814                     	;# 
   895  081A                     	;# 
   896  081A                     	;# 
   897  081B                     	;# 
   898  081C                     	;# 
   899  081C                     	;# 
   900  081D                     	;# 
   901  081E                     	;# 
   902  081F                     	;# 
   903  088C                     	;# 
   904  088D                     	;# 
   905  088E                     	;# 
   906  088F                     	;# 
   907  0890                     	;# 
   908  0891                     	;# 
   909  0892                     	;# 
   910  0893                     	;# 
   911  0895                     	;# 
   912  0896                     	;# 
   913  0897                     	;# 
   914  0898                     	;# 
   915  0899                     	;# 
   916  089A                     	;# 
   917  089B                     	;# 
   918  090C                     	;# 
   919  090E                     	;# 
   920  090F                     	;# 
   921  091F                     	;# 
   922  098F                     	;# 
   923  098F                     	;# 
   924  0990                     	;# 
   925  0991                     	;# 
   926  0992                     	;# 
   927  0993                     	;# 
   928  0994                     	;# 
   929  0995                     	;# 
   930  0996                     	;# 
   931  0997                     	;# 
   932  1E0F                     	;# 
   933  1E10                     	;# 
   934  1E11                     	;# 
   935  1E12                     	;# 
   936  1E13                     	;# 
   937  1E14                     	;# 
   938  1E15                     	;# 
   939  1E16                     	;# 
   940  1E17                     	;# 
   941  1E18                     	;# 
   942  1E19                     	;# 
   943  1E1A                     	;# 
   944  1E1B                     	;# 
   945  1E1C                     	;# 
   946  1E1D                     	;# 
   947  1E1E                     	;# 
   948  1E1F                     	;# 
   949  1E20                     	;# 
   950  1E21                     	;# 
   951  1E22                     	;# 
   952  1E23                     	;# 
   953  1E24                     	;# 
   954  1E25                     	;# 
   955  1E26                     	;# 
   956  1E27                     	;# 
   957  1E28                     	;# 
   958  1E29                     	;# 
   959  1E2A                     	;# 
   960  1E2B                     	;# 
   961  1E2C                     	;# 
   962  1E2D                     	;# 
   963  1E2E                     	;# 
   964  1E2F                     	;# 
   965  1E30                     	;# 
   966  1E31                     	;# 
   967  1E32                     	;# 
   968  1E33                     	;# 
   969  1E34                     	;# 
   970  1E35                     	;# 
   971  1E36                     	;# 
   972  1E37                     	;# 
   973  1E8F                     	;# 
   974  1E90                     	;# 
   975  1E91                     	;# 
   976  1E92                     	;# 
   977  1E93                     	;# 
   978  1E94                     	;# 
   979  1E95                     	;# 
   980  1E96                     	;# 
   981  1E97                     	;# 
   982  1E9C                     	;# 
   983  1E9D                     	;# 
   984  1E9E                     	;# 
   985  1EA1                     	;# 
   986  1EA2                     	;# 
   987  1EA3                     	;# 
   988  1EA4                     	;# 
   989  1EA9                     	;# 
   990  1EAA                     	;# 
   991  1EB1                     	;# 
   992  1EB2                     	;# 
   993  1EB8                     	;# 
   994  1EB9                     	;# 
   995  1EBA                     	;# 
   996  1EBB                     	;# 
   997  1EBC                     	;# 
   998  1EBD                     	;# 
   999  1EBE                     	;# 
  1000  1EC3                     	;# 
  1001  1EC5                     	;# 
  1002  1EC6                     	;# 
  1003  1EC7                     	;# 
  1004  1EC8                     	;# 
  1005  1EC9                     	;# 
  1006  1ECA                     	;# 
  1007  1ECB                     	;# 
  1008  1ECB                     	;# 
  1009  1ECB                     	;# 
  1010  1ECC                     	;# 
  1011  1ECC                     	;# 
  1012  1ECC                     	;# 
  1013  1F10                     	;# 
  1014  1F11                     	;# 
  1015  1F12                     	;# 
  1016  1F14                     	;# 
  1017  1F15                     	;# 
  1018  1F1C                     	;# 
  1019  1F1D                     	;# 
  1020  1F1E                     	;# 
  1021  1F1F                     	;# 
  1022  1F20                     	;# 
  1023  1F21                     	;# 
  1024  1F22                     	;# 
  1025  1F23                     	;# 
  1026  1F24                     	;# 
  1027  1F25                     	;# 
  1028  1F26                     	;# 
  1029  1F27                     	;# 
  1030  1F38                     	;# 
  1031  1F39                     	;# 
  1032  1F3A                     	;# 
  1033  1F3B                     	;# 
  1034  1F3C                     	;# 
  1035  1F3D                     	;# 
  1036  1F3E                     	;# 
  1037  1F3F                     	;# 
  1038  1F43                     	;# 
  1039  1F44                     	;# 
  1040  1F45                     	;# 
  1041  1F46                     	;# 
  1042  1F47                     	;# 
  1043  1F48                     	;# 
  1044  1F49                     	;# 
  1045  1F4A                     	;# 
  1046  1F4E                     	;# 
  1047  1F4F                     	;# 
  1048  1F50                     	;# 
  1049  1F51                     	;# 
  1050  1F52                     	;# 
  1051  1F53                     	;# 
  1052  1F54                     	;# 
  1053  1F55                     	;# 
  1054  1FE4                     	;# 
  1055  1FE5                     	;# 
  1056  1FE6                     	;# 
  1057  1FE7                     	;# 
  1058  1FE8                     	;# 
  1059  1FE8                     	;# 
  1060  1FE9                     	;# 
  1061  1FEA                     	;# 
  1062  1FEB                     	;# 
  1063  1FED                     	;# 
  1064  1FEE                     	;# 
  1065  1FEF                     	;# 
  1066  0000                     	;# 
  1067  0001                     	;# 
  1068  0002                     	;# 
  1069  0003                     	;# 
  1070  0004                     	;# 
  1071  0005                     	;# 
  1072  0006                     	;# 
  1073  0007                     	;# 
  1074  0008                     	;# 
  1075  0009                     	;# 
  1076  000A                     	;# 
  1077  000B                     	;# 
  1078  000C                     	;# 
  1079  000D                     	;# 
  1080  000E                     	;# 
  1081  0012                     	;# 
  1082  0013                     	;# 
  1083  0014                     	;# 
  1084  0018                     	;# 
  1085  0019                     	;# 
  1086  001A                     	;# 
  1087  008C                     	;# 
  1088  008C                     	;# 
  1089  008D                     	;# 
  1090  008E                     	;# 
  1091  008E                     	;# 
  1092  008F                     	;# 
  1093  0090                     	;# 
  1094  0090                     	;# 
  1095  0091                     	;# 
  1096  0092                     	;# 
  1097  0092                     	;# 
  1098  0093                     	;# 
  1099  0094                     	;# 
  1100  0094                     	;# 
  1101  0095                     	;# 
  1102  0096                     	;# 
  1103  0096                     	;# 
  1104  0097                     	;# 
  1105  0098                     	;# 
  1106  0099                     	;# 
  1107  009A                     	;# 
  1108  009B                     	;# 
  1109  009B                     	;# 
  1110  009C                     	;# 
  1111  009D                     	;# 
  1112  009D                     	;# 
  1113  009E                     	;# 
  1114  009F                     	;# 
  1115  010C                     	;# 
  1116  010C                     	;# 
  1117  010D                     	;# 
  1118  010E                     	;# 
  1119  010F                     	;# 
  1120  010F                     	;# 
  1121  0110                     	;# 
  1122  0111                     	;# 
  1123  0112                     	;# 
  1124  0113                     	;# 
  1125  0114                     	;# 
  1126  0115                     	;# 
  1127  0116                     	;# 
  1128  0117                     	;# 
  1129  0118                     	;# 
  1130  0119                     	;# 
  1131  0119                     	;# 
  1132  0119                     	;# 
  1133  011A                     	;# 
  1134  011A                     	;# 
  1135  011A                     	;# 
  1136  011B                     	;# 
  1137  011B                     	;# 
  1138  011B                     	;# 
  1139  011B                     	;# 
  1140  011B                     	;# 
  1141  011C                     	;# 
  1142  011C                     	;# 
  1143  011C                     	;# 
  1144  011D                     	;# 
  1145  011D                     	;# 
  1146  011D                     	;# 
  1147  011E                     	;# 
  1148  011E                     	;# 
  1149  011E                     	;# 
  1150  011F                     	;# 
  1151  011F                     	;# 
  1152  011F                     	;# 
  1153  011F                     	;# 
  1154  011F                     	;# 
  1155  018C                     	;# 
  1156  018D                     	;# 
  1157  018E                     	;# 
  1158  018F                     	;# 
  1159  0190                     	;# 
  1160  0191                     	;# 
  1161  0192                     	;# 
  1162  0196                     	;# 
  1163  0197                     	;# 
  1164  0198                     	;# 
  1165  0199                     	;# 
  1166  019A                     	;# 
  1167  019B                     	;# 
  1168  019C                     	;# 
  1169  020C                     	;# 
  1170  020D                     	;# 
  1171  020E                     	;# 
  1172  020E                     	;# 
  1173  020F                     	;# 
  1174  020F                     	;# 
  1175  0210                     	;# 
  1176  0210                     	;# 
  1177  0211                     	;# 
  1178  0211                     	;# 
  1179  0212                     	;# 
  1180  0213                     	;# 
  1181  0214                     	;# 
  1182  0214                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0216                     	;# 
  1186  0216                     	;# 
  1187  0217                     	;# 
  1188  0217                     	;# 
  1189  0218                     	;# 
  1190  0219                     	;# 
  1191  021A                     	;# 
  1192  021A                     	;# 
  1193  021B                     	;# 
  1194  021B                     	;# 
  1195  021C                     	;# 
  1196  021C                     	;# 
  1197  021D                     	;# 
  1198  021D                     	;# 
  1199  021E                     	;# 
  1200  021F                     	;# 
  1201  028C                     	;# 
  1202  028C                     	;# 
  1203  028D                     	;# 
  1204  028D                     	;# 
  1205  028E                     	;# 
  1206  028F                     	;# 
  1207  0290                     	;# 
  1208  0291                     	;# 
  1209  0292                     	;# 
  1210  0292                     	;# 
  1211  0293                     	;# 
  1212  0293                     	;# 
  1213  0294                     	;# 
  1214  0295                     	;# 
  1215  0296                     	;# 
  1216  0297                     	;# 
  1217  0298                     	;# 
  1218  0298                     	;# 
  1219  0299                     	;# 
  1220  0299                     	;# 
  1221  029A                     	;# 
  1222  029B                     	;# 
  1223  029C                     	;# 
  1224  029D                     	;# 
  1225  029F                     	;# 
  1226  030C                     	;# 
  1227  030C                     	;# 
  1228  030D                     	;# 
  1229  030E                     	;# 
  1230  030F                     	;# 
  1231  0310                     	;# 
  1232  0310                     	;# 
  1233  0311                     	;# 
  1234  0312                     	;# 
  1235  0313                     	;# 
  1236  0314                     	;# 
  1237  0314                     	;# 
  1238  0315                     	;# 
  1239  0316                     	;# 
  1240  0317                     	;# 
  1241  0318                     	;# 
  1242  0318                     	;# 
  1243  0319                     	;# 
  1244  031A                     	;# 
  1245  031B                     	;# 
  1246  038C                     	;# 
  1247  038C                     	;# 
  1248  038D                     	;# 
  1249  038E                     	;# 
  1250  0390                     	;# 
  1251  0390                     	;# 
  1252  0391                     	;# 
  1253  0392                     	;# 
  1254  048C                     	;# 
  1255  048C                     	;# 
  1256  048D                     	;# 
  1257  048E                     	;# 
  1258  048F                     	;# 
  1259  048F                     	;# 
  1260  0490                     	;# 
  1261  0491                     	;# 
  1262  0492                     	;# 
  1263  0492                     	;# 
  1264  0493                     	;# 
  1265  0494                     	;# 
  1266  0495                     	;# 
  1267  0495                     	;# 
  1268  0496                     	;# 
  1269  0497                     	;# 
  1270  0498                     	;# 
  1271  0499                     	;# 
  1272  049A                     	;# 
  1273  049B                     	;# 
  1274  049C                     	;# 
  1275  049D                     	;# 
  1276  058C                     	;# 
  1277  058C                     	;# 
  1278  058D                     	;# 
  1279  058E                     	;# 
  1280  058F                     	;# 
  1281  058F                     	;# 
  1282  0590                     	;# 
  1283  0591                     	;# 
  1284  0592                     	;# 
  1285  0593                     	;# 
  1286  059C                     	;# 
  1287  059C                     	;# 
  1288  059D                     	;# 
  1289  059D                     	;# 
  1290  059E                     	;# 
  1291  059F                     	;# 
  1292  060C                     	;# 
  1293  060C                     	;# 
  1294  060D                     	;# 
  1295  060D                     	;# 
  1296  060E                     	;# 
  1297  060F                     	;# 
  1298  0610                     	;# 
  1299  0611                     	;# 
  1300  0612                     	;# 
  1301  0613                     	;# 
  1302  0614                     	;# 
  1303  0616                     	;# 
  1304  0616                     	;# 
  1305  0617                     	;# 
  1306  0617                     	;# 
  1307  0618                     	;# 
  1308  0619                     	;# 
  1309  061A                     	;# 
  1310  061B                     	;# 
  1311  061C                     	;# 
  1312  061D                     	;# 
  1313  061E                     	;# 
  1314  070C                     	;# 
  1315  070D                     	;# 
  1316  070E                     	;# 
  1317  070F                     	;# 
  1318  0710                     	;# 
  1319  0711                     	;# 
  1320  0712                     	;# 
  1321  0713                     	;# 
  1322  0714                     	;# 
  1323  0716                     	;# 
  1324  0717                     	;# 
  1325  0718                     	;# 
  1326  0719                     	;# 
  1327  071A                     	;# 
  1328  071B                     	;# 
  1329  071C                     	;# 
  1330  071D                     	;# 
  1331  071E                     	;# 
  1332  0796                     	;# 
  1333  0797                     	;# 
  1334  0798                     	;# 
  1335  0799                     	;# 
  1336  079A                     	;# 
  1337  079B                     	;# 
  1338  079C                     	;# 
  1339  079D                     	;# 
  1340  080C                     	;# 
  1341  080D                     	;# 
  1342  080E                     	;# 
  1343  080F                     	;# 
  1344  0810                     	;# 
  1345  0811                     	;# 
  1346  0812                     	;# 
  1347  0813                     	;# 
  1348  0814                     	;# 
  1349  081A                     	;# 
  1350  081A                     	;# 
  1351  081B                     	;# 
  1352  081C                     	;# 
  1353  081C                     	;# 
  1354  081D                     	;# 
  1355  081E                     	;# 
  1356  081F                     	;# 
  1357  088C                     	;# 
  1358  088D                     	;# 
  1359  088E                     	;# 
  1360  088F                     	;# 
  1361  0890                     	;# 
  1362  0891                     	;# 
  1363  0892                     	;# 
  1364  0893                     	;# 
  1365  0895                     	;# 
  1366  0896                     	;# 
  1367  0897                     	;# 
  1368  0898                     	;# 
  1369  0899                     	;# 
  1370  089A                     	;# 
  1371  089B                     	;# 
  1372  090C                     	;# 
  1373  090E                     	;# 
  1374  090F                     	;# 
  1375  091F                     	;# 
  1376  098F                     	;# 
  1377  098F                     	;# 
  1378  0990                     	;# 
  1379  0991                     	;# 
  1380  0992                     	;# 
  1381  0993                     	;# 
  1382  0994                     	;# 
  1383  0995                     	;# 
  1384  0996                     	;# 
  1385  0997                     	;# 
  1386  1E0F                     	;# 
  1387  1E10                     	;# 
  1388  1E11                     	;# 
  1389  1E12                     	;# 
  1390  1E13                     	;# 
  1391  1E14                     	;# 
  1392  1E15                     	;# 
  1393  1E16                     	;# 
  1394  1E17                     	;# 
  1395  1E18                     	;# 
  1396  1E19                     	;# 
  1397  1E1A                     	;# 
  1398  1E1B                     	;# 
  1399  1E1C                     	;# 
  1400  1E1D                     	;# 
  1401  1E1E                     	;# 
  1402  1E1F                     	;# 
  1403  1E20                     	;# 
  1404  1E21                     	;# 
  1405  1E22                     	;# 
  1406  1E23                     	;# 
  1407  1E24                     	;# 
  1408  1E25                     	;# 
  1409  1E26                     	;# 
  1410  1E27                     	;# 
  1411  1E28                     	;# 
  1412  1E29                     	;# 
  1413  1E2A                     	;# 
  1414  1E2B                     	;# 
  1415  1E2C                     	;# 
  1416  1E2D                     	;# 
  1417  1E2E                     	;# 
  1418  1E2F                     	;# 
  1419  1E30                     	;# 
  1420  1E31                     	;# 
  1421  1E32                     	;# 
  1422  1E33                     	;# 
  1423  1E34                     	;# 
  1424  1E35                     	;# 
  1425  1E36                     	;# 
  1426  1E37                     	;# 
  1427  1E8F                     	;# 
  1428  1E90                     	;# 
  1429  1E91                     	;# 
  1430  1E92                     	;# 
  1431  1E93                     	;# 
  1432  1E94                     	;# 
  1433  1E95                     	;# 
  1434  1E96                     	;# 
  1435  1E97                     	;# 
  1436  1E9C                     	;# 
  1437  1E9D                     	;# 
  1438  1E9E                     	;# 
  1439  1EA1                     	;# 
  1440  1EA2                     	;# 
  1441  1EA3                     	;# 
  1442  1EA4                     	;# 
  1443  1EA9                     	;# 
  1444  1EAA                     	;# 
  1445  1EB1                     	;# 
  1446  1EB2                     	;# 
  1447  1EB8                     	;# 
  1448  1EB9                     	;# 
  1449  1EBA                     	;# 
  1450  1EBB                     	;# 
  1451  1EBC                     	;# 
  1452  1EBD                     	;# 
  1453  1EBE                     	;# 
  1454  1EC3                     	;# 
  1455  1EC5                     	;# 
  1456  1EC6                     	;# 
  1457  1EC7                     	;# 
  1458  1EC8                     	;# 
  1459  1EC9                     	;# 
  1460  1ECA                     	;# 
  1461  1ECB                     	;# 
  1462  1ECB                     	;# 
  1463  1ECB                     	;# 
  1464  1ECC                     	;# 
  1465  1ECC                     	;# 
  1466  1ECC                     	;# 
  1467  1F10                     	;# 
  1468  1F11                     	;# 
  1469  1F12                     	;# 
  1470  1F14                     	;# 
  1471  1F15                     	;# 
  1472  1F1C                     	;# 
  1473  1F1D                     	;# 
  1474  1F1E                     	;# 
  1475  1F1F                     	;# 
  1476  1F20                     	;# 
  1477  1F21                     	;# 
  1478  1F22                     	;# 
  1479  1F23                     	;# 
  1480  1F24                     	;# 
  1481  1F25                     	;# 
  1482  1F26                     	;# 
  1483  1F27                     	;# 
  1484  1F38                     	;# 
  1485  1F39                     	;# 
  1486  1F3A                     	;# 
  1487  1F3B                     	;# 
  1488  1F3C                     	;# 
  1489  1F3D                     	;# 
  1490  1F3E                     	;# 
  1491  1F3F                     	;# 
  1492  1F43                     	;# 
  1493  1F44                     	;# 
  1494  1F45                     	;# 
  1495  1F46                     	;# 
  1496  1F47                     	;# 
  1497  1F48                     	;# 
  1498  1F49                     	;# 
  1499  1F4A                     	;# 
  1500  1F4E                     	;# 
  1501  1F4F                     	;# 
  1502  1F50                     	;# 
  1503  1F51                     	;# 
  1504  1F52                     	;# 
  1505  1F53                     	;# 
  1506  1F54                     	;# 
  1507  1F55                     	;# 
  1508  1FE4                     	;# 
  1509  1FE5                     	;# 
  1510  1FE6                     	;# 
  1511  1FE7                     	;# 
  1512  1FE8                     	;# 
  1513  1FE8                     	;# 
  1514  1FE9                     	;# 
  1515  1FEA                     	;# 
  1516  1FEB                     	;# 
  1517  1FED                     	;# 
  1518  1FEE                     	;# 
  1519  1FEF                     	;# 
  1520  0000                     	;# 
  1521  0001                     	;# 
  1522  0002                     	;# 
  1523  0003                     	;# 
  1524  0004                     	;# 
  1525  0005                     	;# 
  1526  0006                     	;# 
  1527  0007                     	;# 
  1528  0008                     	;# 
  1529  0009                     	;# 
  1530  000A                     	;# 
  1531  000B                     	;# 
  1532  000C                     	;# 
  1533  000D                     	;# 
  1534  000E                     	;# 
  1535  0012                     	;# 
  1536  0013                     	;# 
  1537  0014                     	;# 
  1538  0018                     	;# 
  1539  0019                     	;# 
  1540  001A                     	;# 
  1541  008C                     	;# 
  1542  008C                     	;# 
  1543  008D                     	;# 
  1544  008E                     	;# 
  1545  008E                     	;# 
  1546  008F                     	;# 
  1547  0090                     	;# 
  1548  0090                     	;# 
  1549  0091                     	;# 
  1550  0092                     	;# 
  1551  0092                     	;# 
  1552  0093                     	;# 
  1553  0094                     	;# 
  1554  0094                     	;# 
  1555  0095                     	;# 
  1556  0096                     	;# 
  1557  0096                     	;# 
  1558  0097                     	;# 
  1559  0098                     	;# 
  1560  0099                     	;# 
  1561  009A                     	;# 
  1562  009B                     	;# 
  1563  009B                     	;# 
  1564  009C                     	;# 
  1565  009D                     	;# 
  1566  009D                     	;# 
  1567  009E                     	;# 
  1568  009F                     	;# 
  1569  010C                     	;# 
  1570  010C                     	;# 
  1571  010D                     	;# 
  1572  010E                     	;# 
  1573  010F                     	;# 
  1574  010F                     	;# 
  1575  0110                     	;# 
  1576  0111                     	;# 
  1577  0112                     	;# 
  1578  0113                     	;# 
  1579  0114                     	;# 
  1580  0115                     	;# 
  1581  0116                     	;# 
  1582  0117                     	;# 
  1583  0118                     	;# 
  1584  0119                     	;# 
  1585  0119                     	;# 
  1586  0119                     	;# 
  1587  011A                     	;# 
  1588  011A                     	;# 
  1589  011A                     	;# 
  1590  011B                     	;# 
  1591  011B                     	;# 
  1592  011B                     	;# 
  1593  011B                     	;# 
  1594  011B                     	;# 
  1595  011C                     	;# 
  1596  011C                     	;# 
  1597  011C                     	;# 
  1598  011D                     	;# 
  1599  011D                     	;# 
  1600  011D                     	;# 
  1601  011E                     	;# 
  1602  011E                     	;# 
  1603  011E                     	;# 
  1604  011F                     	;# 
  1605  011F                     	;# 
  1606  011F                     	;# 
  1607  011F                     	;# 
  1608  011F                     	;# 
  1609  018C                     	;# 
  1610  018D                     	;# 
  1611  018E                     	;# 
  1612  018F                     	;# 
  1613  0190                     	;# 
  1614  0191                     	;# 
  1615  0192                     	;# 
  1616  0196                     	;# 
  1617  0197                     	;# 
  1618  0198                     	;# 
  1619  0199                     	;# 
  1620  019A                     	;# 
  1621  019B                     	;# 
  1622  019C                     	;# 
  1623  020C                     	;# 
  1624  020D                     	;# 
  1625  020E                     	;# 
  1626  020E                     	;# 
  1627  020F                     	;# 
  1628  020F                     	;# 
  1629  0210                     	;# 
  1630  0210                     	;# 
  1631  0211                     	;# 
  1632  0211                     	;# 
  1633  0212                     	;# 
  1634  0213                     	;# 
  1635  0214                     	;# 
  1636  0214                     	;# 
  1637  0215                     	;# 
  1638  0215                     	;# 
  1639  0216                     	;# 
  1640  0216                     	;# 
  1641  0217                     	;# 
  1642  0217                     	;# 
  1643  0218                     	;# 
  1644  0219                     	;# 
  1645  021A                     	;# 
  1646  021A                     	;# 
  1647  021B                     	;# 
  1648  021B                     	;# 
  1649  021C                     	;# 
  1650  021C                     	;# 
  1651  021D                     	;# 
  1652  021D                     	;# 
  1653  021E                     	;# 
  1654  021F                     	;# 
  1655  028C                     	;# 
  1656  028C                     	;# 
  1657  028D                     	;# 
  1658  028D                     	;# 
  1659  028E                     	;# 
  1660  028F                     	;# 
  1661  0290                     	;# 
  1662  0291                     	;# 
  1663  0292                     	;# 
  1664  0292                     	;# 
  1665  0293                     	;# 
  1666  0293                     	;# 
  1667  0294                     	;# 
  1668  0295                     	;# 
  1669  0296                     	;# 
  1670  0297                     	;# 
  1671  0298                     	;# 
  1672  0298                     	;# 
  1673  0299                     	;# 
  1674  0299                     	;# 
  1675  029A                     	;# 
  1676  029B                     	;# 
  1677  029C                     	;# 
  1678  029D                     	;# 
  1679  029F                     	;# 
  1680  030C                     	;# 
  1681  030C                     	;# 
  1682  030D                     	;# 
  1683  030E                     	;# 
  1684  030F                     	;# 
  1685  0310                     	;# 
  1686  0310                     	;# 
  1687  0311                     	;# 
  1688  0312                     	;# 
  1689  0313                     	;# 
  1690  0314                     	;# 
  1691  0314                     	;# 
  1692  0315                     	;# 
  1693  0316                     	;# 
  1694  0317                     	;# 
  1695  0318                     	;# 
  1696  0318                     	;# 
  1697  0319                     	;# 
  1698  031A                     	;# 
  1699  031B                     	;# 
  1700  038C                     	;# 
  1701  038C                     	;# 
  1702  038D                     	;# 
  1703  038E                     	;# 
  1704  0390                     	;# 
  1705  0390                     	;# 
  1706  0391                     	;# 
  1707  0392                     	;# 
  1708  048C                     	;# 
  1709  048C                     	;# 
  1710  048D                     	;# 
  1711  048E                     	;# 
  1712  048F                     	;# 
  1713  048F                     	;# 
  1714  0490                     	;# 
  1715  0491                     	;# 
  1716  0492                     	;# 
  1717  0492                     	;# 
  1718  0493                     	;# 
  1719  0494                     	;# 
  1720  0495                     	;# 
  1721  0495                     	;# 
  1722  0496                     	;# 
  1723  0497                     	;# 
  1724  0498                     	;# 
  1725  0499                     	;# 
  1726  049A                     	;# 
  1727  049B                     	;# 
  1728  049C                     	;# 
  1729  049D                     	;# 
  1730  058C                     	;# 
  1731  058C                     	;# 
  1732  058D                     	;# 
  1733  058E                     	;# 
  1734  058F                     	;# 
  1735  058F                     	;# 
  1736  0590                     	;# 
  1737  0591                     	;# 
  1738  0592                     	;# 
  1739  0593                     	;# 
  1740  059C                     	;# 
  1741  059C                     	;# 
  1742  059D                     	;# 
  1743  059D                     	;# 
  1744  059E                     	;# 
  1745  059F                     	;# 
  1746  060C                     	;# 
  1747  060C                     	;# 
  1748  060D                     	;# 
  1749  060D                     	;# 
  1750  060E                     	;# 
  1751  060F                     	;# 
  1752  0610                     	;# 
  1753  0611                     	;# 
  1754  0612                     	;# 
  1755  0613                     	;# 
  1756  0614                     	;# 
  1757  0616                     	;# 
  1758  0616                     	;# 
  1759  0617                     	;# 
  1760  0617                     	;# 
  1761  0618                     	;# 
  1762  0619                     	;# 
  1763  061A                     	;# 
  1764  061B                     	;# 
  1765  061C                     	;# 
  1766  061D                     	;# 
  1767  061E                     	;# 
  1768  070C                     	;# 
  1769  070D                     	;# 
  1770  070E                     	;# 
  1771  070F                     	;# 
  1772  0710                     	;# 
  1773  0711                     	;# 
  1774  0712                     	;# 
  1775  0713                     	;# 
  1776  0714                     	;# 
  1777  0716                     	;# 
  1778  0717                     	;# 
  1779  0718                     	;# 
  1780  0719                     	;# 
  1781  071A                     	;# 
  1782  071B                     	;# 
  1783  071C                     	;# 
  1784  071D                     	;# 
  1785  071E                     	;# 
  1786  0796                     	;# 
  1787  0797                     	;# 
  1788  0798                     	;# 
  1789  0799                     	;# 
  1790  079A                     	;# 
  1791  079B                     	;# 
  1792  079C                     	;# 
  1793  079D                     	;# 
  1794  080C                     	;# 
  1795  080D                     	;# 
  1796  080E                     	;# 
  1797  080F                     	;# 
  1798  0810                     	;# 
  1799  0811                     	;# 
  1800  0812                     	;# 
  1801  0813                     	;# 
  1802  0814                     	;# 
  1803  081A                     	;# 
  1804  081A                     	;# 
  1805  081B                     	;# 
  1806  081C                     	;# 
  1807  081C                     	;# 
  1808  081D                     	;# 
  1809  081E                     	;# 
  1810  081F                     	;# 
  1811  088C                     	;# 
  1812  088D                     	;# 
  1813  088E                     	;# 
  1814  088F                     	;# 
  1815  0890                     	;# 
  1816  0891                     	;# 
  1817  0892                     	;# 
  1818  0893                     	;# 
  1819  0895                     	;# 
  1820  0896                     	;# 
  1821  0897                     	;# 
  1822  0898                     	;# 
  1823  0899                     	;# 
  1824  089A                     	;# 
  1825  089B                     	;# 
  1826  090C                     	;# 
  1827  090E                     	;# 
  1828  090F                     	;# 
  1829  091F                     	;# 
  1830  098F                     	;# 
  1831  098F                     	;# 
  1832  0990                     	;# 
  1833  0991                     	;# 
  1834  0992                     	;# 
  1835  0993                     	;# 
  1836  0994                     	;# 
  1837  0995                     	;# 
  1838  0996                     	;# 
  1839  0997                     	;# 
  1840  1E0F                     	;# 
  1841  1E10                     	;# 
  1842  1E11                     	;# 
  1843  1E12                     	;# 
  1844  1E13                     	;# 
  1845  1E14                     	;# 
  1846  1E15                     	;# 
  1847  1E16                     	;# 
  1848  1E17                     	;# 
  1849  1E18                     	;# 
  1850  1E19                     	;# 
  1851  1E1A                     	;# 
  1852  1E1B                     	;# 
  1853  1E1C                     	;# 
  1854  1E1D                     	;# 
  1855  1E1E                     	;# 
  1856  1E1F                     	;# 
  1857  1E20                     	;# 
  1858  1E21                     	;# 
  1859  1E22                     	;# 
  1860  1E23                     	;# 
  1861  1E24                     	;# 
  1862  1E25                     	;# 
  1863  1E26                     	;# 
  1864  1E27                     	;# 
  1865  1E28                     	;# 
  1866  1E29                     	;# 
  1867  1E2A                     	;# 
  1868  1E2B                     	;# 
  1869  1E2C                     	;# 
  1870  1E2D                     	;# 
  1871  1E2E                     	;# 
  1872  1E2F                     	;# 
  1873  1E30                     	;# 
  1874  1E31                     	;# 
  1875  1E32                     	;# 
  1876  1E33                     	;# 
  1877  1E34                     	;# 
  1878  1E35                     	;# 
  1879  1E36                     	;# 
  1880  1E37                     	;# 
  1881  1E8F                     	;# 
  1882  1E90                     	;# 
  1883  1E91                     	;# 
  1884  1E92                     	;# 
  1885  1E93                     	;# 
  1886  1E94                     	;# 
  1887  1E95                     	;# 
  1888  1E96                     	;# 
  1889  1E97                     	;# 
  1890  1E9C                     	;# 
  1891  1E9D                     	;# 
  1892  1E9E                     	;# 
  1893  1EA1                     	;# 
  1894  1EA2                     	;# 
  1895  1EA3                     	;# 
  1896  1EA4                     	;# 
  1897  1EA9                     	;# 
  1898  1EAA                     	;# 
  1899  1EB1                     	;# 
  1900  1EB2                     	;# 
  1901  1EB8                     	;# 
  1902  1EB9                     	;# 
  1903  1EBA                     	;# 
  1904  1EBB                     	;# 
  1905  1EBC                     	;# 
  1906  1EBD                     	;# 
  1907  1EBE                     	;# 
  1908  1EC3                     	;# 
  1909  1EC5                     	;# 
  1910  1EC6                     	;# 
  1911  1EC7                     	;# 
  1912  1EC8                     	;# 
  1913  1EC9                     	;# 
  1914  1ECA                     	;# 
  1915  1ECB                     	;# 
  1916  1ECB                     	;# 
  1917  1ECB                     	;# 
  1918  1ECC                     	;# 
  1919  1ECC                     	;# 
  1920  1ECC                     	;# 
  1921  1F10                     	;# 
  1922  1F11                     	;# 
  1923  1F12                     	;# 
  1924  1F14                     	;# 
  1925  1F15                     	;# 
  1926  1F1C                     	;# 
  1927  1F1D                     	;# 
  1928  1F1E                     	;# 
  1929  1F1F                     	;# 
  1930  1F20                     	;# 
  1931  1F21                     	;# 
  1932  1F22                     	;# 
  1933  1F23                     	;# 
  1934  1F24                     	;# 
  1935  1F25                     	;# 
  1936  1F26                     	;# 
  1937  1F27                     	;# 
  1938  1F38                     	;# 
  1939  1F39                     	;# 
  1940  1F3A                     	;# 
  1941  1F3B                     	;# 
  1942  1F3C                     	;# 
  1943  1F3D                     	;# 
  1944  1F3E                     	;# 
  1945  1F3F                     	;# 
  1946  1F43                     	;# 
  1947  1F44                     	;# 
  1948  1F45                     	;# 
  1949  1F46                     	;# 
  1950  1F47                     	;# 
  1951  1F48                     	;# 
  1952  1F49                     	;# 
  1953  1F4A                     	;# 
  1954  1F4E                     	;# 
  1955  1F4F                     	;# 
  1956  1F50                     	;# 
  1957  1F51                     	;# 
  1958  1F52                     	;# 
  1959  1F53                     	;# 
  1960  1F54                     	;# 
  1961  1F55                     	;# 
  1962  1FE4                     	;# 
  1963  1FE5                     	;# 
  1964  1FE6                     	;# 
  1965  1FE7                     	;# 
  1966  1FE8                     	;# 
  1967  1FE8                     	;# 
  1968  1FE9                     	;# 
  1969  1FEA                     	;# 
  1970  1FEB                     	;# 
  1971  1FED                     	;# 
  1972  1FEE                     	;# 
  1973  1FEF                     	;# 
  1974  0000                     	;# 
  1975  0001                     	;# 
  1976  0002                     	;# 
  1977  0003                     	;# 
  1978  0004                     	;# 
  1979  0005                     	;# 
  1980  0006                     	;# 
  1981  0007                     	;# 
  1982  0008                     	;# 
  1983  0009                     	;# 
  1984  000A                     	;# 
  1985  000B                     	;# 
  1986  000C                     	;# 
  1987  000D                     	;# 
  1988  000E                     	;# 
  1989  0012                     	;# 
  1990  0013                     	;# 
  1991  0014                     	;# 
  1992  0018                     	;# 
  1993  0019                     	;# 
  1994  001A                     	;# 
  1995  008C                     	;# 
  1996  008C                     	;# 
  1997  008D                     	;# 
  1998  008E                     	;# 
  1999  008E                     	;# 
  2000  008F                     	;# 
  2001  0090                     	;# 
  2002  0090                     	;# 
  2003  0091                     	;# 
  2004  0092                     	;# 
  2005  0092                     	;# 
  2006  0093                     	;# 
  2007  0094                     	;# 
  2008  0094                     	;# 
  2009  0095                     	;# 
  2010  0096                     	;# 
  2011  0096                     	;# 
  2012  0097                     	;# 
  2013  0098                     	;# 
  2014  0099                     	;# 
  2015  009A                     	;# 
  2016  009B                     	;# 
  2017  009B                     	;# 
  2018  009C                     	;# 
  2019  009D                     	;# 
  2020  009D                     	;# 
  2021  009E                     	;# 
  2022  009F                     	;# 
  2023  010C                     	;# 
  2024  010C                     	;# 
  2025  010D                     	;# 
  2026  010E                     	;# 
  2027  010F                     	;# 
  2028  010F                     	;# 
  2029  0110                     	;# 
  2030  0111                     	;# 
  2031  0112                     	;# 
  2032  0113                     	;# 
  2033  0114                     	;# 
  2034  0115                     	;# 
  2035  0116                     	;# 
  2036  0117                     	;# 
  2037  0118                     	;# 
  2038  0119                     	;# 
  2039  0119                     	;# 
  2040  0119                     	;# 
  2041  011A                     	;# 
  2042  011A                     	;# 
  2043  011A                     	;# 
  2044  011B                     	;# 
  2045  011B                     	;# 
  2046  011B                     	;# 
  2047  011B                     	;# 
  2048  011B                     	;# 
  2049  011C                     	;# 
  2050  011C                     	;# 
  2051  011C                     	;# 
  2052  011D                     	;# 
  2053  011D                     	;# 
  2054  011D                     	;# 
  2055  011E                     	;# 
  2056  011E                     	;# 
  2057  011E                     	;# 
  2058  011F                     	;# 
  2059  011F                     	;# 
  2060  011F                     	;# 
  2061  011F                     	;# 
  2062  011F                     	;# 
  2063  018C                     	;# 
  2064  018D                     	;# 
  2065  018E                     	;# 
  2066  018F                     	;# 
  2067  0190                     	;# 
  2068  0191                     	;# 
  2069  0192                     	;# 
  2070  0196                     	;# 
  2071  0197                     	;# 
  2072  0198                     	;# 
  2073  0199                     	;# 
  2074  019A                     	;# 
  2075  019B                     	;# 
  2076  019C                     	;# 
  2077  020C                     	;# 
  2078  020D                     	;# 
  2079  020E                     	;# 
  2080  020E                     	;# 
  2081  020F                     	;# 
  2082  020F                     	;# 
  2083  0210                     	;# 
  2084  0210                     	;# 
  2085  0211                     	;# 
  2086  0211                     	;# 
  2087  0212                     	;# 
  2088  0213                     	;# 
  2089  0214                     	;# 
  2090  0214                     	;# 
  2091  0215                     	;# 
  2092  0215                     	;# 
  2093  0216                     	;# 
  2094  0216                     	;# 
  2095  0217                     	;# 
  2096  0217                     	;# 
  2097  0218                     	;# 
  2098  0219                     	;# 
  2099  021A                     	;# 
  2100  021A                     	;# 
  2101  021B                     	;# 
  2102  021B                     	;# 
  2103  021C                     	;# 
  2104  021C                     	;# 
  2105  021D                     	;# 
  2106  021D                     	;# 
  2107  021E                     	;# 
  2108  021F                     	;# 
  2109  028C                     	;# 
  2110  028C                     	;# 
  2111  028D                     	;# 
  2112  028D                     	;# 
  2113  028E                     	;# 
  2114  028F                     	;# 
  2115  0290                     	;# 
  2116  0291                     	;# 
  2117  0292                     	;# 
  2118  0292                     	;# 
  2119  0293                     	;# 
  2120  0293                     	;# 
  2121  0294                     	;# 
  2122  0295                     	;# 
  2123  0296                     	;# 
  2124  0297                     	;# 
  2125  0298                     	;# 
  2126  0298                     	;# 
  2127  0299                     	;# 
  2128  0299                     	;# 
  2129  029A                     	;# 
  2130  029B                     	;# 
  2131  029C                     	;# 
  2132  029D                     	;# 
  2133  029F                     	;# 
  2134  030C                     	;# 
  2135  030C                     	;# 
  2136  030D                     	;# 
  2137  030E                     	;# 
  2138  030F                     	;# 
  2139  0310                     	;# 
  2140  0310                     	;# 
  2141  0311                     	;# 
  2142  0312                     	;# 
  2143  0313                     	;# 
  2144  0314                     	;# 
  2145  0314                     	;# 
  2146  0315                     	;# 
  2147  0316                     	;# 
  2148  0317                     	;# 
  2149  0318                     	;# 
  2150  0318                     	;# 
  2151  0319                     	;# 
  2152  031A                     	;# 
  2153  031B                     	;# 
  2154  038C                     	;# 
  2155  038C                     	;# 
  2156  038D                     	;# 
  2157  038E                     	;# 
  2158  0390                     	;# 
  2159  0390                     	;# 
  2160  0391                     	;# 
  2161  0392                     	;# 
  2162  048C                     	;# 
  2163  048C                     	;# 
  2164  048D                     	;# 
  2165  048E                     	;# 
  2166  048F                     	;# 
  2167  048F                     	;# 
  2168  0490                     	;# 
  2169  0491                     	;# 
  2170  0492                     	;# 
  2171  0492                     	;# 
  2172  0493                     	;# 
  2173  0494                     	;# 
  2174  0495                     	;# 
  2175  0495                     	;# 
  2176  0496                     	;# 
  2177  0497                     	;# 
  2178  0498                     	;# 
  2179  0499                     	;# 
  2180  049A                     	;# 
  2181  049B                     	;# 
  2182  049C                     	;# 
  2183  049D                     	;# 
  2184  058C                     	;# 
  2185  058C                     	;# 
  2186  058D                     	;# 
  2187  058E                     	;# 
  2188  058F                     	;# 
  2189  058F                     	;# 
  2190  0590                     	;# 
  2191  0591                     	;# 
  2192  0592                     	;# 
  2193  0593                     	;# 
  2194  059C                     	;# 
  2195  059C                     	;# 
  2196  059D                     	;# 
  2197  059D                     	;# 
  2198  059E                     	;# 
  2199  059F                     	;# 
  2200  060C                     	;# 
  2201  060C                     	;# 
  2202  060D                     	;# 
  2203  060D                     	;# 
  2204  060E                     	;# 
  2205  060F                     	;# 
  2206  0610                     	;# 
  2207  0611                     	;# 
  2208  0612                     	;# 
  2209  0613                     	;# 
  2210  0614                     	;# 
  2211  0616                     	;# 
  2212  0616                     	;# 
  2213  0617                     	;# 
  2214  0617                     	;# 
  2215  0618                     	;# 
  2216  0619                     	;# 
  2217  061A                     	;# 
  2218  061B                     	;# 
  2219  061C                     	;# 
  2220  061D                     	;# 
  2221  061E                     	;# 
  2222  070C                     	;# 
  2223  070D                     	;# 
  2224  070E                     	;# 
  2225  070F                     	;# 
  2226  0710                     	;# 
  2227  0711                     	;# 
  2228  0712                     	;# 
  2229  0713                     	;# 
  2230  0714                     	;# 
  2231  0716                     	;# 
  2232  0717                     	;# 
  2233  0718                     	;# 
  2234  0719                     	;# 
  2235  071A                     	;# 
  2236  071B                     	;# 
  2237  071C                     	;# 
  2238  071D                     	;# 
  2239  071E                     	;# 
  2240  0796                     	;# 
  2241  0797                     	;# 
  2242  0798                     	;# 
  2243  0799                     	;# 
  2244  079A                     	;# 
  2245  079B                     	;# 
  2246  079C                     	;# 
  2247  079D                     	;# 
  2248  080C                     	;# 
  2249  080D                     	;# 
  2250  080E                     	;# 
  2251  080F                     	;# 
  2252  0810                     	;# 
  2253  0811                     	;# 
  2254  0812                     	;# 
  2255  0813                     	;# 
  2256  0814                     	;# 
  2257  081A                     	;# 
  2258  081A                     	;# 
  2259  081B                     	;# 
  2260  081C                     	;# 
  2261  081C                     	;# 
  2262  081D                     	;# 
  2263  081E                     	;# 
  2264  081F                     	;# 
  2265  088C                     	;# 
  2266  088D                     	;# 
  2267  088E                     	;# 
  2268  088F                     	;# 
  2269  0890                     	;# 
  2270  0891                     	;# 
  2271  0892                     	;# 
  2272  0893                     	;# 
  2273  0895                     	;# 
  2274  0896                     	;# 
  2275  0897                     	;# 
  2276  0898                     	;# 
  2277  0899                     	;# 
  2278  089A                     	;# 
  2279  089B                     	;# 
  2280  090C                     	;# 
  2281  090E                     	;# 
  2282  090F                     	;# 
  2283  091F                     	;# 
  2284  098F                     	;# 
  2285  098F                     	;# 
  2286  0990                     	;# 
  2287  0991                     	;# 
  2288  0992                     	;# 
  2289  0993                     	;# 
  2290  0994                     	;# 
  2291  0995                     	;# 
  2292  0996                     	;# 
  2293  0997                     	;# 
  2294  1E0F                     	;# 
  2295  1E10                     	;# 
  2296  1E11                     	;# 
  2297  1E12                     	;# 
  2298  1E13                     	;# 
  2299  1E14                     	;# 
  2300  1E15                     	;# 
  2301  1E16                     	;# 
  2302  1E17                     	;# 
  2303  1E18                     	;# 
  2304  1E19                     	;# 
  2305  1E1A                     	;# 
  2306  1E1B                     	;# 
  2307  1E1C                     	;# 
  2308  1E1D                     	;# 
  2309  1E1E                     	;# 
  2310  1E1F                     	;# 
  2311  1E20                     	;# 
  2312  1E21                     	;# 
  2313  1E22                     	;# 
  2314  1E23                     	;# 
  2315  1E24                     	;# 
  2316  1E25                     	;# 
  2317  1E26                     	;# 
  2318  1E27                     	;# 
  2319  1E28                     	;# 
  2320  1E29                     	;# 
  2321  1E2A                     	;# 
  2322  1E2B                     	;# 
  2323  1E2C                     	;# 
  2324  1E2D                     	;# 
  2325  1E2E                     	;# 
  2326  1E2F                     	;# 
  2327  1E30                     	;# 
  2328  1E31                     	;# 
  2329  1E32                     	;# 
  2330  1E33                     	;# 
  2331  1E34                     	;# 
  2332  1E35                     	;# 
  2333  1E36                     	;# 
  2334  1E37                     	;# 
  2335  1E8F                     	;# 
  2336  1E90                     	;# 
  2337  1E91                     	;# 
  2338  1E92                     	;# 
  2339  1E93                     	;# 
  2340  1E94                     	;# 
  2341  1E95                     	;# 
  2342  1E96                     	;# 
  2343  1E97                     	;# 
  2344  1E9C                     	;# 
  2345  1E9D                     	;# 
  2346  1E9E                     	;# 
  2347  1EA1                     	;# 
  2348  1EA2                     	;# 
  2349  1EA3                     	;# 
  2350  1EA4                     	;# 
  2351  1EA9                     	;# 
  2352  1EAA                     	;# 
  2353  1EB1                     	;# 
  2354  1EB2                     	;# 
  2355  1EB8                     	;# 
  2356  1EB9                     	;# 
  2357  1EBA                     	;# 
  2358  1EBB                     	;# 
  2359  1EBC                     	;# 
  2360  1EBD                     	;# 
  2361  1EBE                     	;# 
  2362  1EC3                     	;# 
  2363  1EC5                     	;# 
  2364  1EC6                     	;# 
  2365  1EC7                     	;# 
  2366  1EC8                     	;# 
  2367  1EC9                     	;# 
  2368  1ECA                     	;# 
  2369  1ECB                     	;# 
  2370  1ECB                     	;# 
  2371  1ECB                     	;# 
  2372  1ECC                     	;# 
  2373  1ECC                     	;# 
  2374  1ECC                     	;# 
  2375  1F10                     	;# 
  2376  1F11                     	;# 
  2377  1F12                     	;# 
  2378  1F14                     	;# 
  2379  1F15                     	;# 
  2380  1F1C                     	;# 
  2381  1F1D                     	;# 
  2382  1F1E                     	;# 
  2383  1F1F                     	;# 
  2384  1F20                     	;# 
  2385  1F21                     	;# 
  2386  1F22                     	;# 
  2387  1F23                     	;# 
  2388  1F24                     	;# 
  2389  1F25                     	;# 
  2390  1F26                     	;# 
  2391  1F27                     	;# 
  2392  1F38                     	;# 
  2393  1F39                     	;# 
  2394  1F3A                     	;# 
  2395  1F3B                     	;# 
  2396  1F3C                     	;# 
  2397  1F3D                     	;# 
  2398  1F3E                     	;# 
  2399  1F3F                     	;# 
  2400  1F43                     	;# 
  2401  1F44                     	;# 
  2402  1F45                     	;# 
  2403  1F46                     	;# 
  2404  1F47                     	;# 
  2405  1F48                     	;# 
  2406  1F49                     	;# 
  2407  1F4A                     	;# 
  2408  1F4E                     	;# 
  2409  1F4F                     	;# 
  2410  1F50                     	;# 
  2411  1F51                     	;# 
  2412  1F52                     	;# 
  2413  1F53                     	;# 
  2414  1F54                     	;# 
  2415  1F55                     	;# 
  2416  1FE4                     	;# 
  2417  1FE5                     	;# 
  2418  1FE6                     	;# 
  2419  1FE7                     	;# 
  2420  1FE8                     	;# 
  2421  1FE8                     	;# 
  2422  1FE9                     	;# 
  2423  1FEA                     	;# 
  2424  1FEB                     	;# 
  2425  1FED                     	;# 
  2426  1FEE                     	;# 
  2427  1FEF                     	;# 
  2428  0000                     	;# 
  2429  0001                     	;# 
  2430  0002                     	;# 
  2431  0003                     	;# 
  2432  0004                     	;# 
  2433  0005                     	;# 
  2434  0006                     	;# 
  2435  0007                     	;# 
  2436  0008                     	;# 
  2437  0009                     	;# 
  2438  000A                     	;# 
  2439  000B                     	;# 
  2440  000C                     	;# 
  2441  000D                     	;# 
  2442  000E                     	;# 
  2443  0012                     	;# 
  2444  0013                     	;# 
  2445  0014                     	;# 
  2446  0018                     	;# 
  2447  0019                     	;# 
  2448  001A                     	;# 
  2449  008C                     	;# 
  2450  008C                     	;# 
  2451  008D                     	;# 
  2452  008E                     	;# 
  2453  008E                     	;# 
  2454  008F                     	;# 
  2455  0090                     	;# 
  2456  0090                     	;# 
  2457  0091                     	;# 
  2458  0092                     	;# 
  2459  0092                     	;# 
  2460  0093                     	;# 
  2461  0094                     	;# 
  2462  0094                     	;# 
  2463  0095                     	;# 
  2464  0096                     	;# 
  2465  0096                     	;# 
  2466  0097                     	;# 
  2467  0098                     	;# 
  2468  0099                     	;# 
  2469  009A                     	;# 
  2470  009B                     	;# 
  2471  009B                     	;# 
  2472  009C                     	;# 
  2473  009D                     	;# 
  2474  009D                     	;# 
  2475  009E                     	;# 
  2476  009F                     	;# 
  2477  010C                     	;# 
  2478  010C                     	;# 
  2479  010D                     	;# 
  2480  010E                     	;# 
  2481  010F                     	;# 
  2482  010F                     	;# 
  2483  0110                     	;# 
  2484  0111                     	;# 
  2485  0112                     	;# 
  2486  0113                     	;# 
  2487  0114                     	;# 
  2488  0115                     	;# 
  2489  0116                     	;# 
  2490  0117                     	;# 
  2491  0118                     	;# 
  2492  0119                     	;# 
  2493  0119                     	;# 
  2494  0119                     	;# 
  2495  011A                     	;# 
  2496  011A                     	;# 
  2497  011A                     	;# 
  2498  011B                     	;# 
  2499  011B                     	;# 
  2500  011B                     	;# 
  2501  011B                     	;# 
  2502  011B                     	;# 
  2503  011C                     	;# 
  2504  011C                     	;# 
  2505  011C                     	;# 
  2506  011D                     	;# 
  2507  011D                     	;# 
  2508  011D                     	;# 
  2509  011E                     	;# 
  2510  011E                     	;# 
  2511  011E                     	;# 
  2512  011F                     	;# 
  2513  011F                     	;# 
  2514  011F                     	;# 
  2515  011F                     	;# 
  2516  011F                     	;# 
  2517  018C                     	;# 
  2518  018D                     	;# 
  2519  018E                     	;# 
  2520  018F                     	;# 
  2521  0190                     	;# 
  2522  0191                     	;# 
  2523  0192                     	;# 
  2524  0196                     	;# 
  2525  0197                     	;# 
  2526  0198                     	;# 
  2527  0199                     	;# 
  2528  019A                     	;# 
  2529  019B                     	;# 
  2530  019C                     	;# 
  2531  020C                     	;# 
  2532  020D                     	;# 
  2533  020E                     	;# 
  2534  020E                     	;# 
  2535  020F                     	;# 
  2536  020F                     	;# 
  2537  0210                     	;# 
  2538  0210                     	;# 
  2539  0211                     	;# 
  2540  0211                     	;# 
  2541  0212                     	;# 
  2542  0213                     	;# 
  2543  0214                     	;# 
  2544  0214                     	;# 
  2545  0215                     	;# 
  2546  0215                     	;# 
  2547  0216                     	;# 
  2548  0216                     	;# 
  2549  0217                     	;# 
  2550  0217                     	;# 
  2551  0218                     	;# 
  2552  0219                     	;# 
  2553  021A                     	;# 
  2554  021A                     	;# 
  2555  021B                     	;# 
  2556  021B                     	;# 
  2557  021C                     	;# 
  2558  021C                     	;# 
  2559  021D                     	;# 
  2560  021D                     	;# 
  2561  021E                     	;# 
  2562  021F                     	;# 
  2563  028C                     	;# 
  2564  028C                     	;# 
  2565  028D                     	;# 
  2566  028D                     	;# 
  2567  028E                     	;# 
  2568  028F                     	;# 
  2569  0290                     	;# 
  2570  0291                     	;# 
  2571  0292                     	;# 
  2572  0292                     	;# 
  2573  0293                     	;# 
  2574  0293                     	;# 
  2575  0294                     	;# 
  2576  0295                     	;# 
  2577  0296                     	;# 
  2578  0297                     	;# 
  2579  0298                     	;# 
  2580  0298                     	;# 
  2581  0299                     	;# 
  2582  0299                     	;# 
  2583  029A                     	;# 
  2584  029B                     	;# 
  2585  029C                     	;# 
  2586  029D                     	;# 
  2587  029F                     	;# 
  2588  030C                     	;# 
  2589  030C                     	;# 
  2590  030D                     	;# 
  2591  030E                     	;# 
  2592  030F                     	;# 
  2593  0310                     	;# 
  2594  0310                     	;# 
  2595  0311                     	;# 
  2596  0312                     	;# 
  2597  0313                     	;# 
  2598  0314                     	;# 
  2599  0314                     	;# 
  2600  0315                     	;# 
  2601  0316                     	;# 
  2602  0317                     	;# 
  2603  0318                     	;# 
  2604  0318                     	;# 
  2605  0319                     	;# 
  2606  031A                     	;# 
  2607  031B                     	;# 
  2608  038C                     	;# 
  2609  038C                     	;# 
  2610  038D                     	;# 
  2611  038E                     	;# 
  2612  0390                     	;# 
  2613  0390                     	;# 
  2614  0391                     	;# 
  2615  0392                     	;# 
  2616  048C                     	;# 
  2617  048C                     	;# 
  2618  048D                     	;# 
  2619  048E                     	;# 
  2620  048F                     	;# 
  2621  048F                     	;# 
  2622  0490                     	;# 
  2623  0491                     	;# 
  2624  0492                     	;# 
  2625  0492                     	;# 
  2626  0493                     	;# 
  2627  0494                     	;# 
  2628  0495                     	;# 
  2629  0495                     	;# 
  2630  0496                     	;# 
  2631  0497                     	;# 
  2632  0498                     	;# 
  2633  0499                     	;# 
  2634  049A                     	;# 
  2635  049B                     	;# 
  2636  049C                     	;# 
  2637  049D                     	;# 
  2638  058C                     	;# 
  2639  058C                     	;# 
  2640  058D                     	;# 
  2641  058E                     	;# 
  2642  058F                     	;# 
  2643  058F                     	;# 
  2644  0590                     	;# 
  2645  0591                     	;# 
  2646  0592                     	;# 
  2647  0593                     	;# 
  2648  059C                     	;# 
  2649  059C                     	;# 
  2650  059D                     	;# 
  2651  059D                     	;# 
  2652  059E                     	;# 
  2653  059F                     	;# 
  2654  060C                     	;# 
  2655  060C                     	;# 
  2656  060D                     	;# 
  2657  060D                     	;# 
  2658  060E                     	;# 
  2659  060F                     	;# 
  2660  0610                     	;# 
  2661  0611                     	;# 
  2662  0612                     	;# 
  2663  0613                     	;# 
  2664  0614                     	;# 
  2665  0616                     	;# 
  2666  0616                     	;# 
  2667  0617                     	;# 
  2668  0617                     	;# 
  2669  0618                     	;# 
  2670  0619                     	;# 
  2671  061A                     	;# 
  2672  061B                     	;# 
  2673  061C                     	;# 
  2674  061D                     	;# 
  2675  061E                     	;# 
  2676  070C                     	;# 
  2677  070D                     	;# 
  2678  070E                     	;# 
  2679  070F                     	;# 
  2680  0710                     	;# 
  2681  0711                     	;# 
  2682  0712                     	;# 
  2683  0713                     	;# 
  2684  0714                     	;# 
  2685  0716                     	;# 
  2686  0717                     	;# 
  2687  0718                     	;# 
  2688  0719                     	;# 
  2689  071A                     	;# 
  2690  071B                     	;# 
  2691  071C                     	;# 
  2692  071D                     	;# 
  2693  071E                     	;# 
  2694  0796                     	;# 
  2695  0797                     	;# 
  2696  0798                     	;# 
  2697  0799                     	;# 
  2698  079A                     	;# 
  2699  079B                     	;# 
  2700  079C                     	;# 
  2701  079D                     	;# 
  2702  080C                     	;# 
  2703  080D                     	;# 
  2704  080E                     	;# 
  2705  080F                     	;# 
  2706  0810                     	;# 
  2707  0811                     	;# 
  2708  0812                     	;# 
  2709  0813                     	;# 
  2710  0814                     	;# 
  2711  081A                     	;# 
  2712  081A                     	;# 
  2713  081B                     	;# 
  2714  081C                     	;# 
  2715  081C                     	;# 
  2716  081D                     	;# 
  2717  081E                     	;# 
  2718  081F                     	;# 
  2719  088C                     	;# 
  2720  088D                     	;# 
  2721  088E                     	;# 
  2722  088F                     	;# 
  2723  0890                     	;# 
  2724  0891                     	;# 
  2725  0892                     	;# 
  2726  0893                     	;# 
  2727  0895                     	;# 
  2728  0896                     	;# 
  2729  0897                     	;# 
  2730  0898                     	;# 
  2731  0899                     	;# 
  2732  089A                     	;# 
  2733  089B                     	;# 
  2734  090C                     	;# 
  2735  090E                     	;# 
  2736  090F                     	;# 
  2737  091F                     	;# 
  2738  098F                     	;# 
  2739  098F                     	;# 
  2740  0990                     	;# 
  2741  0991                     	;# 
  2742  0992                     	;# 
  2743  0993                     	;# 
  2744  0994                     	;# 
  2745  0995                     	;# 
  2746  0996                     	;# 
  2747  0997                     	;# 
  2748  1E0F                     	;# 
  2749  1E10                     	;# 
  2750  1E11                     	;# 
  2751  1E12                     	;# 
  2752  1E13                     	;# 
  2753  1E14                     	;# 
  2754  1E15                     	;# 
  2755  1E16                     	;# 
  2756  1E17                     	;# 
  2757  1E18                     	;# 
  2758  1E19                     	;# 
  2759  1E1A                     	;# 
  2760  1E1B                     	;# 
  2761  1E1C                     	;# 
  2762  1E1D                     	;# 
  2763  1E1E                     	;# 
  2764  1E1F                     	;# 
  2765  1E20                     	;# 
  2766  1E21                     	;# 
  2767  1E22                     	;# 
  2768  1E23                     	;# 
  2769  1E24                     	;# 
  2770  1E25                     	;# 
  2771  1E26                     	;# 
  2772  1E27                     	;# 
  2773  1E28                     	;# 
  2774  1E29                     	;# 
  2775  1E2A                     	;# 
  2776  1E2B                     	;# 
  2777  1E2C                     	;# 
  2778  1E2D                     	;# 
  2779  1E2E                     	;# 
  2780  1E2F                     	;# 
  2781  1E30                     	;# 
  2782  1E31                     	;# 
  2783  1E32                     	;# 
  2784  1E33                     	;# 
  2785  1E34                     	;# 
  2786  1E35                     	;# 
  2787  1E36                     	;# 
  2788  1E37                     	;# 
  2789  1E8F                     	;# 
  2790  1E90                     	;# 
  2791  1E91                     	;# 
  2792  1E92                     	;# 
  2793  1E93                     	;# 
  2794  1E94                     	;# 
  2795  1E95                     	;# 
  2796  1E96                     	;# 
  2797  1E97                     	;# 
  2798  1E9C                     	;# 
  2799  1E9D                     	;# 
  2800  1E9E                     	;# 
  2801  1EA1                     	;# 
  2802  1EA2                     	;# 
  2803  1EA3                     	;# 
  2804  1EA4                     	;# 
  2805  1EA9                     	;# 
  2806  1EAA                     	;# 
  2807  1EB1                     	;# 
  2808  1EB2                     	;# 
  2809  1EB8                     	;# 
  2810  1EB9                     	;# 
  2811  1EBA                     	;# 
  2812  1EBB                     	;# 
  2813  1EBC                     	;# 
  2814  1EBD                     	;# 
  2815  1EBE                     	;# 
  2816  1EC3                     	;# 
  2817  1EC5                     	;# 
  2818  1EC6                     	;# 
  2819  1EC7                     	;# 
  2820  1EC8                     	;# 
  2821  1EC9                     	;# 
  2822  1ECA                     	;# 
  2823  1ECB                     	;# 
  2824  1ECB                     	;# 
  2825  1ECB                     	;# 
  2826  1ECC                     	;# 
  2827  1ECC                     	;# 
  2828  1ECC                     	;# 
  2829  1F10                     	;# 
  2830  1F11                     	;# 
  2831  1F12                     	;# 
  2832  1F14                     	;# 
  2833  1F15                     	;# 
  2834  1F1C                     	;# 
  2835  1F1D                     	;# 
  2836  1F1E                     	;# 
  2837  1F1F                     	;# 
  2838  1F20                     	;# 
  2839  1F21                     	;# 
  2840  1F22                     	;# 
  2841  1F23                     	;# 
  2842  1F24                     	;# 
  2843  1F25                     	;# 
  2844  1F26                     	;# 
  2845  1F27                     	;# 
  2846  1F38                     	;# 
  2847  1F39                     	;# 
  2848  1F3A                     	;# 
  2849  1F3B                     	;# 
  2850  1F3C                     	;# 
  2851  1F3D                     	;# 
  2852  1F3E                     	;# 
  2853  1F3F                     	;# 
  2854  1F43                     	;# 
  2855  1F44                     	;# 
  2856  1F45                     	;# 
  2857  1F46                     	;# 
  2858  1F47                     	;# 
  2859  1F48                     	;# 
  2860  1F49                     	;# 
  2861  1F4A                     	;# 
  2862  1F4E                     	;# 
  2863  1F4F                     	;# 
  2864  1F50                     	;# 
  2865  1F51                     	;# 
  2866  1F52                     	;# 
  2867  1F53                     	;# 
  2868  1F54                     	;# 
  2869  1F55                     	;# 
  2870  1FE4                     	;# 
  2871  1FE5                     	;# 
  2872  1FE6                     	;# 
  2873  1FE7                     	;# 
  2874  1FE8                     	;# 
  2875  1FE8                     	;# 
  2876  1FE9                     	;# 
  2877  1FEA                     	;# 
  2878  1FEB                     	;# 
  2879  1FED                     	;# 
  2880  1FEE                     	;# 
  2881  1FEF                     	;# 
  2882  0000                     	;# 
  2883  0001                     	;# 
  2884  0002                     	;# 
  2885  0003                     	;# 
  2886  0004                     	;# 
  2887  0005                     	;# 
  2888  0006                     	;# 
  2889  0007                     	;# 
  2890  0008                     	;# 
  2891  0009                     	;# 
  2892  000A                     	;# 
  2893  000B                     	;# 
  2894  000C                     	;# 
  2895  000D                     	;# 
  2896  000E                     	;# 
  2897  0012                     	;# 
  2898  0013                     	;# 
  2899  0014                     	;# 
  2900  0018                     	;# 
  2901  0019                     	;# 
  2902  001A                     	;# 
  2903  008C                     	;# 
  2904  008C                     	;# 
  2905  008D                     	;# 
  2906  008E                     	;# 
  2907  008E                     	;# 
  2908  008F                     	;# 
  2909  0090                     	;# 
  2910  0090                     	;# 
  2911  0091                     	;# 
  2912  0092                     	;# 
  2913  0092                     	;# 
  2914  0093                     	;# 
  2915  0094                     	;# 
  2916  0094                     	;# 
  2917  0095                     	;# 
  2918  0096                     	;# 
  2919  0096                     	;# 
  2920  0097                     	;# 
  2921  0098                     	;# 
  2922  0099                     	;# 
  2923  009A                     	;# 
  2924  009B                     	;# 
  2925  009B                     	;# 
  2926  009C                     	;# 
  2927  009D                     	;# 
  2928  009D                     	;# 
  2929  009E                     	;# 
  2930  009F                     	;# 
  2931  010C                     	;# 
  2932  010C                     	;# 
  2933  010D                     	;# 
  2934  010E                     	;# 
  2935  010F                     	;# 
  2936  010F                     	;# 
  2937  0110                     	;# 
  2938  0111                     	;# 
  2939  0112                     	;# 
  2940  0113                     	;# 
  2941  0114                     	;# 
  2942  0115                     	;# 
  2943  0116                     	;# 
  2944  0117                     	;# 
  2945  0118                     	;# 
  2946  0119                     	;# 
  2947  0119                     	;# 
  2948  0119                     	;# 
  2949  011A                     	;# 
  2950  011A                     	;# 
  2951  011A                     	;# 
  2952  011B                     	;# 
  2953  011B                     	;# 
  2954  011B                     	;# 
  2955  011B                     	;# 
  2956  011B                     	;# 
  2957  011C                     	;# 
  2958  011C                     	;# 
  2959  011C                     	;# 
  2960  011D                     	;# 
  2961  011D                     	;# 
  2962  011D                     	;# 
  2963  011E                     	;# 
  2964  011E                     	;# 
  2965  011E                     	;# 
  2966  011F                     	;# 
  2967  011F                     	;# 
  2968  011F                     	;# 
  2969  011F                     	;# 
  2970  011F                     	;# 
  2971  018C                     	;# 
  2972  018D                     	;# 
  2973  018E                     	;# 
  2974  018F                     	;# 
  2975  0190                     	;# 
  2976  0191                     	;# 
  2977  0192                     	;# 
  2978  0196                     	;# 
  2979  0197                     	;# 
  2980  0198                     	;# 
  2981  0199                     	;# 
  2982  019A                     	;# 
  2983  019B                     	;# 
  2984  019C                     	;# 
  2985  020C                     	;# 
  2986  020D                     	;# 
  2987  020E                     	;# 
  2988  020E                     	;# 
  2989  020F                     	;# 
  2990  020F                     	;# 
  2991  0210                     	;# 
  2992  0210                     	;# 
  2993  0211                     	;# 
  2994  0211                     	;# 
  2995  0212                     	;# 
  2996  0213                     	;# 
  2997  0214                     	;# 
  2998  0214                     	;# 
  2999  0215                     	;# 
  3000  0215                     	;# 
  3001  0216                     	;# 
  3002  0216                     	;# 
  3003  0217                     	;# 
  3004  0217                     	;# 
  3005  0218                     	;# 
  3006  0219                     	;# 
  3007  021A                     	;# 
  3008  021A                     	;# 
  3009  021B                     	;# 
  3010  021B                     	;# 
  3011  021C                     	;# 
  3012  021C                     	;# 
  3013  021D                     	;# 
  3014  021D                     	;# 
  3015  021E                     	;# 
  3016  021F                     	;# 
  3017  028C                     	;# 
  3018  028C                     	;# 
  3019  028D                     	;# 
  3020  028D                     	;# 
  3021  028E                     	;# 
  3022  028F                     	;# 
  3023  0290                     	;# 
  3024  0291                     	;# 
  3025  0292                     	;# 
  3026  0292                     	;# 
  3027  0293                     	;# 
  3028  0293                     	;# 
  3029  0294                     	;# 
  3030  0295                     	;# 
  3031  0296                     	;# 
  3032  0297                     	;# 
  3033  0298                     	;# 
  3034  0298                     	;# 
  3035  0299                     	;# 
  3036  0299                     	;# 
  3037  029A                     	;# 
  3038  029B                     	;# 
  3039  029C                     	;# 
  3040  029D                     	;# 
  3041  029F                     	;# 
  3042  030C                     	;# 
  3043  030C                     	;# 
  3044  030D                     	;# 
  3045  030E                     	;# 
  3046  030F                     	;# 
  3047  0310                     	;# 
  3048  0310                     	;# 
  3049  0311                     	;# 
  3050  0312                     	;# 
  3051  0313                     	;# 
  3052  0314                     	;# 
  3053  0314                     	;# 
  3054  0315                     	;# 
  3055  0316                     	;# 
  3056  0317                     	;# 
  3057  0318                     	;# 
  3058  0318                     	;# 
  3059  0319                     	;# 
  3060  031A                     	;# 
  3061  031B                     	;# 
  3062  038C                     	;# 
  3063  038C                     	;# 
  3064  038D                     	;# 
  3065  038E                     	;# 
  3066  0390                     	;# 
  3067  0390                     	;# 
  3068  0391                     	;# 
  3069  0392                     	;# 
  3070  048C                     	;# 
  3071  048C                     	;# 
  3072  048D                     	;# 
  3073  048E                     	;# 
  3074  048F                     	;# 
  3075  048F                     	;# 
  3076  0490                     	;# 
  3077  0491                     	;# 
  3078  0492                     	;# 
  3079  0492                     	;# 
  3080  0493                     	;# 
  3081  0494                     	;# 
  3082  0495                     	;# 
  3083  0495                     	;# 
  3084  0496                     	;# 
  3085  0497                     	;# 
  3086  0498                     	;# 
  3087  0499                     	;# 
  3088  049A                     	;# 
  3089  049B                     	;# 
  3090  049C                     	;# 
  3091  049D                     	;# 
  3092  058C                     	;# 
  3093  058C                     	;# 
  3094  058D                     	;# 
  3095  058E                     	;# 
  3096  058F                     	;# 
  3097  058F                     	;# 
  3098  0590                     	;# 
  3099  0591                     	;# 
  3100  0592                     	;# 
  3101  0593                     	;# 
  3102  059C                     	;# 
  3103  059C                     	;# 
  3104  059D                     	;# 
  3105  059D                     	;# 
  3106  059E                     	;# 
  3107  059F                     	;# 
  3108  060C                     	;# 
  3109  060C                     	;# 
  3110  060D                     	;# 
  3111  060D                     	;# 
  3112  060E                     	;# 
  3113  060F                     	;# 
  3114  0610                     	;# 
  3115  0611                     	;# 
  3116  0612                     	;# 
  3117  0613                     	;# 
  3118  0614                     	;# 
  3119  0616                     	;# 
  3120  0616                     	;# 
  3121  0617                     	;# 
  3122  0617                     	;# 
  3123  0618                     	;# 
  3124  0619                     	;# 
  3125  061A                     	;# 
  3126  061B                     	;# 
  3127  061C                     	;# 
  3128  061D                     	;# 
  3129  061E                     	;# 
  3130  070C                     	;# 
  3131  070D                     	;# 
  3132  070E                     	;# 
  3133  070F                     	;# 
  3134  0710                     	;# 
  3135  0711                     	;# 
  3136  0712                     	;# 
  3137  0713                     	;# 
  3138  0714                     	;# 
  3139  0716                     	;# 
  3140  0717                     	;# 
  3141  0718                     	;# 
  3142  0719                     	;# 
  3143  071A                     	;# 
  3144  071B                     	;# 
  3145  071C                     	;# 
  3146  071D                     	;# 
  3147  071E                     	;# 
  3148  0796                     	;# 
  3149  0797                     	;# 
  3150  0798                     	;# 
  3151  0799                     	;# 
  3152  079A                     	;# 
  3153  079B                     	;# 
  3154  079C                     	;# 
  3155  079D                     	;# 
  3156  080C                     	;# 
  3157  080D                     	;# 
  3158  080E                     	;# 
  3159  080F                     	;# 
  3160  0810                     	;# 
  3161  0811                     	;# 
  3162  0812                     	;# 
  3163  0813                     	;# 
  3164  0814                     	;# 
  3165  081A                     	;# 
  3166  081A                     	;# 
  3167  081B                     	;# 
  3168  081C                     	;# 
  3169  081C                     	;# 
  3170  081D                     	;# 
  3171  081E                     	;# 
  3172  081F                     	;# 
  3173  088C                     	;# 
  3174  088D                     	;# 
  3175  088E                     	;# 
  3176  088F                     	;# 
  3177  0890                     	;# 
  3178  0891                     	;# 
  3179  0892                     	;# 
  3180  0893                     	;# 
  3181  0895                     	;# 
  3182  0896                     	;# 
  3183  0897                     	;# 
  3184  0898                     	;# 
  3185  0899                     	;# 
  3186  089A                     	;# 
  3187  089B                     	;# 
  3188  090C                     	;# 
  3189  090E                     	;# 
  3190  090F                     	;# 
  3191  091F                     	;# 
  3192  098F                     	;# 
  3193  098F                     	;# 
  3194  0990                     	;# 
  3195  0991                     	;# 
  3196  0992                     	;# 
  3197  0993                     	;# 
  3198  0994                     	;# 
  3199  0995                     	;# 
  3200  0996                     	;# 
  3201  0997                     	;# 
  3202  1E0F                     	;# 
  3203  1E10                     	;# 
  3204  1E11                     	;# 
  3205  1E12                     	;# 
  3206  1E13                     	;# 
  3207  1E14                     	;# 
  3208  1E15                     	;# 
  3209  1E16                     	;# 
  3210  1E17                     	;# 
  3211  1E18                     	;# 
  3212  1E19                     	;# 
  3213  1E1A                     	;# 
  3214  1E1B                     	;# 
  3215  1E1C                     	;# 
  3216  1E1D                     	;# 
  3217  1E1E                     	;# 
  3218  1E1F                     	;# 
  3219  1E20                     	;# 
  3220  1E21                     	;# 
  3221  1E22                     	;# 
  3222  1E23                     	;# 
  3223  1E24                     	;# 
  3224  1E25                     	;# 
  3225  1E26                     	;# 
  3226  1E27                     	;# 
  3227  1E28                     	;# 
  3228  1E29                     	;# 
  3229  1E2A                     	;# 
  3230  1E2B                     	;# 
  3231  1E2C                     	;# 
  3232  1E2D                     	;# 
  3233  1E2E                     	;# 
  3234  1E2F                     	;# 
  3235  1E30                     	;# 
  3236  1E31                     	;# 
  3237  1E32                     	;# 
  3238  1E33                     	;# 
  3239  1E34                     	;# 
  3240  1E35                     	;# 
  3241  1E36                     	;# 
  3242  1E37                     	;# 
  3243  1E8F                     	;# 
  3244  1E90                     	;# 
  3245  1E91                     	;# 
  3246  1E92                     	;# 
  3247  1E93                     	;# 
  3248  1E94                     	;# 
  3249  1E95                     	;# 
  3250  1E96                     	;# 
  3251  1E97                     	;# 
  3252  1E9C                     	;# 
  3253  1E9D                     	;# 
  3254  1E9E                     	;# 
  3255  1EA1                     	;# 
  3256  1EA2                     	;# 
  3257  1EA3                     	;# 
  3258  1EA4                     	;# 
  3259  1EA9                     	;# 
  3260  1EAA                     	;# 
  3261  1EB1                     	;# 
  3262  1EB2                     	;# 
  3263  1EB8                     	;# 
  3264  1EB9                     	;# 
  3265  1EBA                     	;# 
  3266  1EBB                     	;# 
  3267  1EBC                     	;# 
  3268  1EBD                     	;# 
  3269  1EBE                     	;# 
  3270  1EC3                     	;# 
  3271  1EC5                     	;# 
  3272  1EC6                     	;# 
  3273  1EC7                     	;# 
  3274  1EC8                     	;# 
  3275  1EC9                     	;# 
  3276  1ECA                     	;# 
  3277  1ECB                     	;# 
  3278  1ECB                     	;# 
  3279  1ECB                     	;# 
  3280  1ECC                     	;# 
  3281  1ECC                     	;# 
  3282  1ECC                     	;# 
  3283  1F10                     	;# 
  3284  1F11                     	;# 
  3285  1F12                     	;# 
  3286  1F14                     	;# 
  3287  1F15                     	;# 
  3288  1F1C                     	;# 
  3289  1F1D                     	;# 
  3290  1F1E                     	;# 
  3291  1F1F                     	;# 
  3292  1F20                     	;# 
  3293  1F21                     	;# 
  3294  1F22                     	;# 
  3295  1F23                     	;# 
  3296  1F24                     	;# 
  3297  1F25                     	;# 
  3298  1F26                     	;# 
  3299  1F27                     	;# 
  3300  1F38                     	;# 
  3301  1F39                     	;# 
  3302  1F3A                     	;# 
  3303  1F3B                     	;# 
  3304  1F3C                     	;# 
  3305  1F3D                     	;# 
  3306  1F3E                     	;# 
  3307  1F3F                     	;# 
  3308  1F43                     	;# 
  3309  1F44                     	;# 
  3310  1F45                     	;# 
  3311  1F46                     	;# 
  3312  1F47                     	;# 
  3313  1F48                     	;# 
  3314  1F49                     	;# 
  3315  1F4A                     	;# 
  3316  1F4E                     	;# 
  3317  1F4F                     	;# 
  3318  1F50                     	;# 
  3319  1F51                     	;# 
  3320  1F52                     	;# 
  3321  1F53                     	;# 
  3322  1F54                     	;# 
  3323  1F55                     	;# 
  3324  1FE4                     	;# 
  3325  1FE5                     	;# 
  3326  1FE6                     	;# 
  3327  1FE7                     	;# 
  3328  1FE8                     	;# 
  3329  1FE8                     	;# 
  3330  1FE9                     	;# 
  3331  1FEA                     	;# 
  3332  1FEB                     	;# 
  3333  1FED                     	;# 
  3334  1FEE                     	;# 
  3335  1FEF                     	;# 
  3336  0000                     	;# 
  3337  0001                     	;# 
  3338  0002                     	;# 
  3339  0003                     	;# 
  3340  0004                     	;# 
  3341  0005                     	;# 
  3342  0006                     	;# 
  3343  0007                     	;# 
  3344  0008                     	;# 
  3345  0009                     	;# 
  3346  000A                     	;# 
  3347  000B                     	;# 
  3348  000C                     	;# 
  3349  000D                     	;# 
  3350  000E                     	;# 
  3351  0012                     	;# 
  3352  0013                     	;# 
  3353  0014                     	;# 
  3354  0018                     	;# 
  3355  0019                     	;# 
  3356  001A                     	;# 
  3357  008C                     	;# 
  3358  008C                     	;# 
  3359  008D                     	;# 
  3360  008E                     	;# 
  3361  008E                     	;# 
  3362  008F                     	;# 
  3363  0090                     	;# 
  3364  0090                     	;# 
  3365  0091                     	;# 
  3366  0092                     	;# 
  3367  0092                     	;# 
  3368  0093                     	;# 
  3369  0094                     	;# 
  3370  0094                     	;# 
  3371  0095                     	;# 
  3372  0096                     	;# 
  3373  0096                     	;# 
  3374  0097                     	;# 
  3375  0098                     	;# 
  3376  0099                     	;# 
  3377  009A                     	;# 
  3378  009B                     	;# 
  3379  009B                     	;# 
  3380  009C                     	;# 
  3381  009D                     	;# 
  3382  009D                     	;# 
  3383  009E                     	;# 
  3384  009F                     	;# 
  3385  010C                     	;# 
  3386  010C                     	;# 
  3387  010D                     	;# 
  3388  010E                     	;# 
  3389  010F                     	;# 
  3390  010F                     	;# 
  3391  0110                     	;# 
  3392  0111                     	;# 
  3393  0112                     	;# 
  3394  0113                     	;# 
  3395  0114                     	;# 
  3396  0115                     	;# 
  3397  0116                     	;# 
  3398  0117                     	;# 
  3399  0118                     	;# 
  3400  0119                     	;# 
  3401  0119                     	;# 
  3402  0119                     	;# 
  3403  011A                     	;# 
  3404  011A                     	;# 
  3405  011A                     	;# 
  3406  011B                     	;# 
  3407  011B                     	;# 
  3408  011B                     	;# 
  3409  011B                     	;# 
  3410  011B                     	;# 
  3411  011C                     	;# 
  3412  011C                     	;# 
  3413  011C                     	;# 
  3414  011D                     	;# 
  3415  011D                     	;# 
  3416  011D                     	;# 
  3417  011E                     	;# 
  3418  011E                     	;# 
  3419  011E                     	;# 
  3420  011F                     	;# 
  3421  011F                     	;# 
  3422  011F                     	;# 
  3423  011F                     	;# 
  3424  011F                     	;# 
  3425  018C                     	;# 
  3426  018D                     	;# 
  3427  018E                     	;# 
  3428  018F                     	;# 
  3429  0190                     	;# 
  3430  0191                     	;# 
  3431  0192                     	;# 
  3432  0196                     	;# 
  3433  0197                     	;# 
  3434  0198                     	;# 
  3435  0199                     	;# 
  3436  019A                     	;# 
  3437  019B                     	;# 
  3438  019C                     	;# 
  3439  020C                     	;# 
  3440  020D                     	;# 
  3441  020E                     	;# 
  3442  020E                     	;# 
  3443  020F                     	;# 
  3444  020F                     	;# 
  3445  0210                     	;# 
  3446  0210                     	;# 
  3447  0211                     	;# 
  3448  0211                     	;# 
  3449  0212                     	;# 
  3450  0213                     	;# 
  3451  0214                     	;# 
  3452  0214                     	;# 
  3453  0215                     	;# 
  3454  0215                     	;# 
  3455  0216                     	;# 
  3456  0216                     	;# 
  3457  0217                     	;# 
  3458  0217                     	;# 
  3459  0218                     	;# 
  3460  0219                     	;# 
  3461  021A                     	;# 
  3462  021A                     	;# 
  3463  021B                     	;# 
  3464  021B                     	;# 
  3465  021C                     	;# 
  3466  021C                     	;# 
  3467  021D                     	;# 
  3468  021D                     	;# 
  3469  021E                     	;# 
  3470  021F                     	;# 
  3471  028C                     	;# 
  3472  028C                     	;# 
  3473  028D                     	;# 
  3474  028D                     	;# 
  3475  028E                     	;# 
  3476  028F                     	;# 
  3477  0290                     	;# 
  3478  0291                     	;# 
  3479  0292                     	;# 
  3480  0292                     	;# 
  3481  0293                     	;# 
  3482  0293                     	;# 
  3483  0294                     	;# 
  3484  0295                     	;# 
  3485  0296                     	;# 
  3486  0297                     	;# 
  3487  0298                     	;# 
  3488  0298                     	;# 
  3489  0299                     	;# 
  3490  0299                     	;# 
  3491  029A                     	;# 
  3492  029B                     	;# 
  3493  029C                     	;# 
  3494  029D                     	;# 
  3495  029F                     	;# 
  3496  030C                     	;# 
  3497  030C                     	;# 
  3498  030D                     	;# 
  3499  030E                     	;# 
  3500  030F                     	;# 
  3501  0310                     	;# 
  3502  0310                     	;# 
  3503  0311                     	;# 
  3504  0312                     	;# 
  3505  0313                     	;# 
  3506  0314                     	;# 
  3507  0314                     	;# 
  3508  0315                     	;# 
  3509  0316                     	;# 
  3510  0317                     	;# 
  3511  0318                     	;# 
  3512  0318                     	;# 
  3513  0319                     	;# 
  3514  031A                     	;# 
  3515  031B                     	;# 
  3516  038C                     	;# 
  3517  038C                     	;# 
  3518  038D                     	;# 
  3519  038E                     	;# 
  3520  0390                     	;# 
  3521  0390                     	;# 
  3522  0391                     	;# 
  3523  0392                     	;# 
  3524  048C                     	;# 
  3525  048C                     	;# 
  3526  048D                     	;# 
  3527  048E                     	;# 
  3528  048F                     	;# 
  3529  048F                     	;# 
  3530  0490                     	;# 
  3531  0491                     	;# 
  3532  0492                     	;# 
  3533  0492                     	;# 
  3534  0493                     	;# 
  3535  0494                     	;# 
  3536  0495                     	;# 
  3537  0495                     	;# 
  3538  0496                     	;# 
  3539  0497                     	;# 
  3540  0498                     	;# 
  3541  0499                     	;# 
  3542  049A                     	;# 
  3543  049B                     	;# 
  3544  049C                     	;# 
  3545  049D                     	;# 
  3546  058C                     	;# 
  3547  058C                     	;# 
  3548  058D                     	;# 
  3549  058E                     	;# 
  3550  058F                     	;# 
  3551  058F                     	;# 
  3552  0590                     	;# 
  3553  0591                     	;# 
  3554  0592                     	;# 
  3555  0593                     	;# 
  3556  059C                     	;# 
  3557  059C                     	;# 
  3558  059D                     	;# 
  3559  059D                     	;# 
  3560  059E                     	;# 
  3561  059F                     	;# 
  3562  060C                     	;# 
  3563  060C                     	;# 
  3564  060D                     	;# 
  3565  060D                     	;# 
  3566  060E                     	;# 
  3567  060F                     	;# 
  3568  0610                     	;# 
  3569  0611                     	;# 
  3570  0612                     	;# 
  3571  0613                     	;# 
  3572  0614                     	;# 
  3573  0616                     	;# 
  3574  0616                     	;# 
  3575  0617                     	;# 
  3576  0617                     	;# 
  3577  0618                     	;# 
  3578  0619                     	;# 
  3579  061A                     	;# 
  3580  061B                     	;# 
  3581  061C                     	;# 
  3582  061D                     	;# 
  3583  061E                     	;# 
  3584  070C                     	;# 
  3585  070D                     	;# 
  3586  070E                     	;# 
  3587  070F                     	;# 
  3588  0710                     	;# 
  3589  0711                     	;# 
  3590  0712                     	;# 
  3591  0713                     	;# 
  3592  0714                     	;# 
  3593  0716                     	;# 
  3594  0717                     	;# 
  3595  0718                     	;# 
  3596  0719                     	;# 
  3597  071A                     	;# 
  3598  071B                     	;# 
  3599  071C                     	;# 
  3600  071D                     	;# 
  3601  071E                     	;# 
  3602  0796                     	;# 
  3603  0797                     	;# 
  3604  0798                     	;# 
  3605  0799                     	;# 
  3606  079A                     	;# 
  3607  079B                     	;# 
  3608  079C                     	;# 
  3609  079D                     	;# 
  3610  080C                     	;# 
  3611  080D                     	;# 
  3612  080E                     	;# 
  3613  080F                     	;# 
  3614  0810                     	;# 
  3615  0811                     	;# 
  3616  0812                     	;# 
  3617  0813                     	;# 
  3618  0814                     	;# 
  3619  081A                     	;# 
  3620  081A                     	;# 
  3621  081B                     	;# 
  3622  081C                     	;# 
  3623  081C                     	;# 
  3624  081D                     	;# 
  3625  081E                     	;# 
  3626  081F                     	;# 
  3627  088C                     	;# 
  3628  088D                     	;# 
  3629  088E                     	;# 
  3630  088F                     	;# 
  3631  0890                     	;# 
  3632  0891                     	;# 
  3633  0892                     	;# 
  3634  0893                     	;# 
  3635  0895                     	;# 
  3636  0896                     	;# 
  3637  0897                     	;# 
  3638  0898                     	;# 
  3639  0899                     	;# 
  3640  089A                     	;# 
  3641  089B                     	;# 
  3642  090C                     	;# 
  3643  090E                     	;# 
  3644  090F                     	;# 
  3645  091F                     	;# 
  3646  098F                     	;# 
  3647  098F                     	;# 
  3648  0990                     	;# 
  3649  0991                     	;# 
  3650  0992                     	;# 
  3651  0993                     	;# 
  3652  0994                     	;# 
  3653  0995                     	;# 
  3654  0996                     	;# 
  3655  0997                     	;# 
  3656  1E0F                     	;# 
  3657  1E10                     	;# 
  3658  1E11                     	;# 
  3659  1E12                     	;# 
  3660  1E13                     	;# 
  3661  1E14                     	;# 
  3662  1E15                     	;# 
  3663  1E16                     	;# 
  3664  1E17                     	;# 
  3665  1E18                     	;# 
  3666  1E19                     	;# 
  3667  1E1A                     	;# 
  3668  1E1B                     	;# 
  3669  1E1C                     	;# 
  3670  1E1D                     	;# 
  3671  1E1E                     	;# 
  3672  1E1F                     	;# 
  3673  1E20                     	;# 
  3674  1E21                     	;# 
  3675  1E22                     	;# 
  3676  1E23                     	;# 
  3677  1E24                     	;# 
  3678  1E25                     	;# 
  3679  1E26                     	;# 
  3680  1E27                     	;# 
  3681  1E28                     	;# 
  3682  1E29                     	;# 
  3683  1E2A                     	;# 
  3684  1E2B                     	;# 
  3685  1E2C                     	;# 
  3686  1E2D                     	;# 
  3687  1E2E                     	;# 
  3688  1E2F                     	;# 
  3689  1E30                     	;# 
  3690  1E31                     	;# 
  3691  1E32                     	;# 
  3692  1E33                     	;# 
  3693  1E34                     	;# 
  3694  1E35                     	;# 
  3695  1E36                     	;# 
  3696  1E37                     	;# 
  3697  1E8F                     	;# 
  3698  1E90                     	;# 
  3699  1E91                     	;# 
  3700  1E92                     	;# 
  3701  1E93                     	;# 
  3702  1E94                     	;# 
  3703  1E95                     	;# 
  3704  1E96                     	;# 
  3705  1E97                     	;# 
  3706  1E9C                     	;# 
  3707  1E9D                     	;# 
  3708  1E9E                     	;# 
  3709  1EA1                     	;# 
  3710  1EA2                     	;# 
  3711  1EA3                     	;# 
  3712  1EA4                     	;# 
  3713  1EA9                     	;# 
  3714  1EAA                     	;# 
  3715  1EB1                     	;# 
  3716  1EB2                     	;# 
  3717  1EB8                     	;# 
  3718  1EB9                     	;# 
  3719  1EBA                     	;# 
  3720  1EBB                     	;# 
  3721  1EBC                     	;# 
  3722  1EBD                     	;# 
  3723  1EBE                     	;# 
  3724  1EC3                     	;# 
  3725  1EC5                     	;# 
  3726  1EC6                     	;# 
  3727  1EC7                     	;# 
  3728  1EC8                     	;# 
  3729  1EC9                     	;# 
  3730  1ECA                     	;# 
  3731  1ECB                     	;# 
  3732  1ECB                     	;# 
  3733  1ECB                     	;# 
  3734  1ECC                     	;# 
  3735  1ECC                     	;# 
  3736  1ECC                     	;# 
  3737  1F10                     	;# 
  3738  1F11                     	;# 
  3739  1F12                     	;# 
  3740  1F14                     	;# 
  3741  1F15                     	;# 
  3742  1F1C                     	;# 
  3743  1F1D                     	;# 
  3744  1F1E                     	;# 
  3745  1F1F                     	;# 
  3746  1F20                     	;# 
  3747  1F21                     	;# 
  3748  1F22                     	;# 
  3749  1F23                     	;# 
  3750  1F24                     	;# 
  3751  1F25                     	;# 
  3752  1F26                     	;# 
  3753  1F27                     	;# 
  3754  1F38                     	;# 
  3755  1F39                     	;# 
  3756  1F3A                     	;# 
  3757  1F3B                     	;# 
  3758  1F3C                     	;# 
  3759  1F3D                     	;# 
  3760  1F3E                     	;# 
  3761  1F3F                     	;# 
  3762  1F43                     	;# 
  3763  1F44                     	;# 
  3764  1F45                     	;# 
  3765  1F46                     	;# 
  3766  1F47                     	;# 
  3767  1F48                     	;# 
  3768  1F49                     	;# 
  3769  1F4A                     	;# 
  3770  1F4E                     	;# 
  3771  1F4F                     	;# 
  3772  1F50                     	;# 
  3773  1F51                     	;# 
  3774  1F52                     	;# 
  3775  1F53                     	;# 
  3776  1F54                     	;# 
  3777  1F55                     	;# 
  3778  1FE4                     	;# 
  3779  1FE5                     	;# 
  3780  1FE6                     	;# 
  3781  1FE7                     	;# 
  3782  1FE8                     	;# 
  3783  1FE8                     	;# 
  3784  1FE9                     	;# 
  3785  1FEA                     	;# 
  3786  1FEB                     	;# 
  3787  1FED                     	;# 
  3788  1FEE                     	;# 
  3789  1FEF                     	;# 
  3790  0000                     	;# 
  3791  0001                     	;# 
  3792  0002                     	;# 
  3793  0003                     	;# 
  3794  0004                     	;# 
  3795  0005                     	;# 
  3796  0006                     	;# 
  3797  0007                     	;# 
  3798  0008                     	;# 
  3799  0009                     	;# 
  3800  000A                     	;# 
  3801  000B                     	;# 
  3802  000C                     	;# 
  3803  000D                     	;# 
  3804  000E                     	;# 
  3805  0012                     	;# 
  3806  0013                     	;# 
  3807  0014                     	;# 
  3808  0018                     	;# 
  3809  0019                     	;# 
  3810  001A                     	;# 
  3811  008C                     	;# 
  3812  008C                     	;# 
  3813  008D                     	;# 
  3814  008E                     	;# 
  3815  008E                     	;# 
  3816  008F                     	;# 
  3817  0090                     	;# 
  3818  0090                     	;# 
  3819  0091                     	;# 
  3820  0092                     	;# 
  3821  0092                     	;# 
  3822  0093                     	;# 
  3823  0094                     	;# 
  3824  0094                     	;# 
  3825  0095                     	;# 
  3826  0096                     	;# 
  3827  0096                     	;# 
  3828  0097                     	;# 
  3829  0098                     	;# 
  3830  0099                     	;# 
  3831  009A                     	;# 
  3832  009B                     	;# 
  3833  009B                     	;# 
  3834  009C                     	;# 
  3835  009D                     	;# 
  3836  009D                     	;# 
  3837  009E                     	;# 
  3838  009F                     	;# 
  3839  010C                     	;# 
  3840  010C                     	;# 
  3841  010D                     	;# 
  3842  010E                     	;# 
  3843  010F                     	;# 
  3844  010F                     	;# 
  3845  0110                     	;# 
  3846  0111                     	;# 
  3847  0112                     	;# 
  3848  0113                     	;# 
  3849  0114                     	;# 
  3850  0115                     	;# 
  3851  0116                     	;# 
  3852  0117                     	;# 
  3853  0118                     	;# 
  3854  0119                     	;# 
  3855  0119                     	;# 
  3856  0119                     	;# 
  3857  011A                     	;# 
  3858  011A                     	;# 
  3859  011A                     	;# 
  3860  011B                     	;# 
  3861  011B                     	;# 
  3862  011B                     	;# 
  3863  011B                     	;# 
  3864  011B                     	;# 
  3865  011C                     	;# 
  3866  011C                     	;# 
  3867  011C                     	;# 
  3868  011D                     	;# 
  3869  011D                     	;# 
  3870  011D                     	;# 
  3871  011E                     	;# 
  3872  011E                     	;# 
  3873  011E                     	;# 
  3874  011F                     	;# 
  3875  011F                     	;# 
  3876  011F                     	;# 
  3877  011F                     	;# 
  3878  011F                     	;# 
  3879  018C                     	;# 
  3880  018D                     	;# 
  3881  018E                     	;# 
  3882  018F                     	;# 
  3883  0190                     	;# 
  3884  0191                     	;# 
  3885  0192                     	;# 
  3886  0196                     	;# 
  3887  0197                     	;# 
  3888  0198                     	;# 
  3889  0199                     	;# 
  3890  019A                     	;# 
  3891  019B                     	;# 
  3892  019C                     	;# 
  3893  020C                     	;# 
  3894  020D                     	;# 
  3895  020E                     	;# 
  3896  020E                     	;# 
  3897  020F                     	;# 
  3898  020F                     	;# 
  3899  0210                     	;# 
  3900  0210                     	;# 
  3901  0211                     	;# 
  3902  0211                     	;# 
  3903  0212                     	;# 
  3904  0213                     	;# 
  3905  0214                     	;# 
  3906  0214                     	;# 
  3907  0215                     	;# 
  3908  0215                     	;# 
  3909  0216                     	;# 
  3910  0216                     	;# 
  3911  0217                     	;# 
  3912  0217                     	;# 
  3913  0218                     	;# 
  3914  0219                     	;# 
  3915  021A                     	;# 
  3916  021A                     	;# 
  3917  021B                     	;# 
  3918  021B                     	;# 
  3919  021C                     	;# 
  3920  021C                     	;# 
  3921  021D                     	;# 
  3922  021D                     	;# 
  3923  021E                     	;# 
  3924  021F                     	;# 
  3925  028C                     	;# 
  3926  028C                     	;# 
  3927  028D                     	;# 
  3928  028D                     	;# 
  3929  028E                     	;# 
  3930  028F                     	;# 
  3931  0290                     	;# 
  3932  0291                     	;# 
  3933  0292                     	;# 
  3934  0292                     	;# 
  3935  0293                     	;# 
  3936  0293                     	;# 
  3937  0294                     	;# 
  3938  0295                     	;# 
  3939  0296                     	;# 
  3940  0297                     	;# 
  3941  0298                     	;# 
  3942  0298                     	;# 
  3943  0299                     	;# 
  3944  0299                     	;# 
  3945  029A                     	;# 
  3946  029B                     	;# 
  3947  029C                     	;# 
  3948  029D                     	;# 
  3949  029F                     	;# 
  3950  030C                     	;# 
  3951  030C                     	;# 
  3952  030D                     	;# 
  3953  030E                     	;# 
  3954  030F                     	;# 
  3955  0310                     	;# 
  3956  0310                     	;# 
  3957  0311                     	;# 
  3958  0312                     	;# 
  3959  0313                     	;# 
  3960  0314                     	;# 
  3961  0314                     	;# 
  3962  0315                     	;# 
  3963  0316                     	;# 
  3964  0317                     	;# 
  3965  0318                     	;# 
  3966  0318                     	;# 
  3967  0319                     	;# 
  3968  031A                     	;# 
  3969  031B                     	;# 
  3970  038C                     	;# 
  3971  038C                     	;# 
  3972  038D                     	;# 
  3973  038E                     	;# 
  3974  0390                     	;# 
  3975  0390                     	;# 
  3976  0391                     	;# 
  3977  0392                     	;# 
  3978  048C                     	;# 
  3979  048C                     	;# 
  3980  048D                     	;# 
  3981  048E                     	;# 
  3982  048F                     	;# 
  3983  048F                     	;# 
  3984  0490                     	;# 
  3985  0491                     	;# 
  3986  0492                     	;# 
  3987  0492                     	;# 
  3988  0493                     	;# 
  3989  0494                     	;# 
  3990  0495                     	;# 
  3991  0495                     	;# 
  3992  0496                     	;# 
  3993  0497                     	;# 
  3994  0498                     	;# 
  3995  0499                     	;# 
  3996  049A                     	;# 
  3997  049B                     	;# 
  3998  049C                     	;# 
  3999  049D                     	;# 
  4000  058C                     	;# 
  4001  058C                     	;# 
  4002  058D                     	;# 
  4003  058E                     	;# 
  4004  058F                     	;# 
  4005  058F                     	;# 
  4006  0590                     	;# 
  4007  0591                     	;# 
  4008  0592                     	;# 
  4009  0593                     	;# 
  4010  059C                     	;# 
  4011  059C                     	;# 
  4012  059D                     	;# 
  4013  059D                     	;# 
  4014  059E                     	;# 
  4015  059F                     	;# 
  4016  060C                     	;# 
  4017  060C                     	;# 
  4018  060D                     	;# 
  4019  060D                     	;# 
  4020  060E                     	;# 
  4021  060F                     	;# 
  4022  0610                     	;# 
  4023  0611                     	;# 
  4024  0612                     	;# 
  4025  0613                     	;# 
  4026  0614                     	;# 
  4027  0616                     	;# 
  4028  0616                     	;# 
  4029  0617                     	;# 
  4030  0617                     	;# 
  4031  0618                     	;# 
  4032  0619                     	;# 
  4033  061A                     	;# 
  4034  061B                     	;# 
  4035  061C                     	;# 
  4036  061D                     	;# 
  4037  061E                     	;# 
  4038  070C                     	;# 
  4039  070D                     	;# 
  4040  070E                     	;# 
  4041  070F                     	;# 
  4042  0710                     	;# 
  4043  0711                     	;# 
  4044  0712                     	;# 
  4045  0713                     	;# 
  4046  0714                     	;# 
  4047  0716                     	;# 
  4048  0717                     	;# 
  4049  0718                     	;# 
  4050  0719                     	;# 
  4051  071A                     	;# 
  4052  071B                     	;# 
  4053  071C                     	;# 
  4054  071D                     	;# 
  4055  071E                     	;# 
  4056  0796                     	;# 
  4057  0797                     	;# 
  4058  0798                     	;# 
  4059  0799                     	;# 
  4060  079A                     	;# 
  4061  079B                     	;# 
  4062  079C                     	;# 
  4063  079D                     	;# 
  4064  080C                     	;# 
  4065  080D                     	;# 
  4066  080E                     	;# 
  4067  080F                     	;# 
  4068  0810                     	;# 
  4069  0811                     	;# 
  4070  0812                     	;# 
  4071  0813                     	;# 
  4072  0814                     	;# 
  4073  081A                     	;# 
  4074  081A                     	;# 
  4075  081B                     	;# 
  4076  081C                     	;# 
  4077  081C                     	;# 
  4078  081D                     	;# 
  4079  081E                     	;# 
  4080  081F                     	;# 
  4081  088C                     	;# 
  4082  088D                     	;# 
  4083  088E                     	;# 
  4084  088F                     	;# 
  4085  0890                     	;# 
  4086  0891                     	;# 
  4087  0892                     	;# 
  4088  0893                     	;# 
  4089  0895                     	;# 
  4090  0896                     	;# 
  4091  0897                     	;# 
  4092  0898                     	;# 
  4093  0899                     	;# 
  4094  089A                     	;# 
  4095  089B                     	;# 
  4096  090C                     	;# 
  4097  090E                     	;# 
  4098  090F                     	;# 
  4099  091F                     	;# 
  4100  098F                     	;# 
  4101  098F                     	;# 
  4102  0990                     	;# 
  4103  0991                     	;# 
  4104  0992                     	;# 
  4105  0993                     	;# 
  4106  0994                     	;# 
  4107  0995                     	;# 
  4108  0996                     	;# 
  4109  0997                     	;# 
  4110  1E0F                     	;# 
  4111  1E10                     	;# 
  4112  1E11                     	;# 
  4113  1E12                     	;# 
  4114  1E13                     	;# 
  4115  1E14                     	;# 
  4116  1E15                     	;# 
  4117  1E16                     	;# 
  4118  1E17                     	;# 
  4119  1E18                     	;# 
  4120  1E19                     	;# 
  4121  1E1A                     	;# 
  4122  1E1B                     	;# 
  4123  1E1C                     	;# 
  4124  1E1D                     	;# 
  4125  1E1E                     	;# 
  4126  1E1F                     	;# 
  4127  1E20                     	;# 
  4128  1E21                     	;# 
  4129  1E22                     	;# 
  4130  1E23                     	;# 
  4131  1E24                     	;# 
  4132  1E25                     	;# 
  4133  1E26                     	;# 
  4134  1E27                     	;# 
  4135  1E28                     	;# 
  4136  1E29                     	;# 
  4137  1E2A                     	;# 
  4138  1E2B                     	;# 
  4139  1E2C                     	;# 
  4140  1E2D                     	;# 
  4141  1E2E                     	;# 
  4142  1E2F                     	;# 
  4143  1E30                     	;# 
  4144  1E31                     	;# 
  4145  1E32                     	;# 
  4146  1E33                     	;# 
  4147  1E34                     	;# 
  4148  1E35                     	;# 
  4149  1E36                     	;# 
  4150  1E37                     	;# 
  4151  1E8F                     	;# 
  4152  1E90                     	;# 
  4153  1E91                     	;# 
  4154  1E92                     	;# 
  4155  1E93                     	;# 
  4156  1E94                     	;# 
  4157  1E95                     	;# 
  4158  1E96                     	;# 
  4159  1E97                     	;# 
  4160  1E9C                     	;# 
  4161  1E9D                     	;# 
  4162  1E9E                     	;# 
  4163  1EA1                     	;# 
  4164  1EA2                     	;# 
  4165  1EA3                     	;# 
  4166  1EA4                     	;# 
  4167  1EA9                     	;# 
  4168  1EAA                     	;# 
  4169  1EB1                     	;# 
  4170  1EB2                     	;# 
  4171  1EB8                     	;# 
  4172  1EB9                     	;# 
  4173  1EBA                     	;# 
  4174  1EBB                     	;# 
  4175  1EBC                     	;# 
  4176  1EBD                     	;# 
  4177  1EBE                     	;# 
  4178  1EC3                     	;# 
  4179  1EC5                     	;# 
  4180  1EC6                     	;# 
  4181  1EC7                     	;# 
  4182  1EC8                     	;# 
  4183  1EC9                     	;# 
  4184  1ECA                     	;# 
  4185  1ECB                     	;# 
  4186  1ECB                     	;# 
  4187  1ECB                     	;# 
  4188  1ECC                     	;# 
  4189  1ECC                     	;# 
  4190  1ECC                     	;# 
  4191  1F10                     	;# 
  4192  1F11                     	;# 
  4193  1F12                     	;# 
  4194  1F14                     	;# 
  4195  1F15                     	;# 
  4196  1F1C                     	;# 
  4197  1F1D                     	;# 
  4198  1F1E                     	;# 
  4199  1F1F                     	;# 
  4200  1F20                     	;# 
  4201  1F21                     	;# 
  4202  1F22                     	;# 
  4203  1F23                     	;# 
  4204  1F24                     	;# 
  4205  1F25                     	;# 
  4206  1F26                     	;# 
  4207  1F27                     	;# 
  4208  1F38                     	;# 
  4209  1F39                     	;# 
  4210  1F3A                     	;# 
  4211  1F3B                     	;# 
  4212  1F3C                     	;# 
  4213  1F3D                     	;# 
  4214  1F3E                     	;# 
  4215  1F3F                     	;# 
  4216  1F43                     	;# 
  4217  1F44                     	;# 
  4218  1F45                     	;# 
  4219  1F46                     	;# 
  4220  1F47                     	;# 
  4221  1F48                     	;# 
  4222  1F49                     	;# 
  4223  1F4A                     	;# 
  4224  1F4E                     	;# 
  4225  1F4F                     	;# 
  4226  1F50                     	;# 
  4227  1F51                     	;# 
  4228  1F52                     	;# 
  4229  1F53                     	;# 
  4230  1F54                     	;# 
  4231  1F55                     	;# 
  4232  1FE4                     	;# 
  4233  1FE5                     	;# 
  4234  1FE6                     	;# 
  4235  1FE7                     	;# 
  4236  1FE8                     	;# 
  4237  1FE8                     	;# 
  4238  1FE9                     	;# 
  4239  1FEA                     	;# 
  4240  1FEB                     	;# 
  4241  1FED                     	;# 
  4242  1FEE                     	;# 
  4243  1FEF                     	;# 
  4244  0000                     	;# 
  4245  0001                     	;# 
  4246  0002                     	;# 
  4247  0003                     	;# 
  4248  0004                     	;# 
  4249  0005                     	;# 
  4250  0006                     	;# 
  4251  0007                     	;# 
  4252  0008                     	;# 
  4253  0009                     	;# 
  4254  000A                     	;# 
  4255  000B                     	;# 
  4256  000C                     	;# 
  4257  000D                     	;# 
  4258  000E                     	;# 
  4259  0012                     	;# 
  4260  0013                     	;# 
  4261  0014                     	;# 
  4262  0018                     	;# 
  4263  0019                     	;# 
  4264  001A                     	;# 
  4265  008C                     	;# 
  4266  008C                     	;# 
  4267  008D                     	;# 
  4268  008E                     	;# 
  4269  008E                     	;# 
  4270  008F                     	;# 
  4271  0090                     	;# 
  4272  0090                     	;# 
  4273  0091                     	;# 
  4274  0092                     	;# 
  4275  0092                     	;# 
  4276  0093                     	;# 
  4277  0094                     	;# 
  4278  0094                     	;# 
  4279  0095                     	;# 
  4280  0096                     	;# 
  4281  0096                     	;# 
  4282  0097                     	;# 
  4283  0098                     	;# 
  4284  0099                     	;# 
  4285  009A                     	;# 
  4286  009B                     	;# 
  4287  009B                     	;# 
  4288  009C                     	;# 
  4289  009D                     	;# 
  4290  009D                     	;# 
  4291  009E                     	;# 
  4292  009F                     	;# 
  4293  010C                     	;# 
  4294  010C                     	;# 
  4295  010D                     	;# 
  4296  010E                     	;# 
  4297  010F                     	;# 
  4298  010F                     	;# 
  4299  0110                     	;# 
  4300  0111                     	;# 
  4301  0112                     	;# 
  4302  0113                     	;# 
  4303  0114                     	;# 
  4304  0115                     	;# 
  4305  0116                     	;# 
  4306  0117                     	;# 
  4307  0118                     	;# 
  4308  0119                     	;# 
  4309  0119                     	;# 
  4310  0119                     	;# 
  4311  011A                     	;# 
  4312  011A                     	;# 
  4313  011A                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011B                     	;# 
  4318  011B                     	;# 
  4319  011C                     	;# 
  4320  011C                     	;# 
  4321  011C                     	;# 
  4322  011D                     	;# 
  4323  011D                     	;# 
  4324  011D                     	;# 
  4325  011E                     	;# 
  4326  011E                     	;# 
  4327  011E                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  011F                     	;# 
  4332  011F                     	;# 
  4333  018C                     	;# 
  4334  018D                     	;# 
  4335  018E                     	;# 
  4336  018F                     	;# 
  4337  0190                     	;# 
  4338  0191                     	;# 
  4339  0192                     	;# 
  4340  0196                     	;# 
  4341  0197                     	;# 
  4342  0198                     	;# 
  4343  0199                     	;# 
  4344  019A                     	;# 
  4345  019B                     	;# 
  4346  019C                     	;# 
  4347  020C                     	;# 
  4348  020D                     	;# 
  4349  020E                     	;# 
  4350  020E                     	;# 
  4351  020F                     	;# 
  4352  020F                     	;# 
  4353  0210                     	;# 
  4354  0210                     	;# 
  4355  0211                     	;# 
  4356  0211                     	;# 
  4357  0212                     	;# 
  4358  0213                     	;# 
  4359  0214                     	;# 
  4360  0214                     	;# 
  4361  0215                     	;# 
  4362  0215                     	;# 
  4363  0216                     	;# 
  4364  0216                     	;# 
  4365  0217                     	;# 
  4366  0217                     	;# 
  4367  0218                     	;# 
  4368  0219                     	;# 
  4369  021A                     	;# 
  4370  021A                     	;# 
  4371  021B                     	;# 
  4372  021B                     	;# 
  4373  021C                     	;# 
  4374  021C                     	;# 
  4375  021D                     	;# 
  4376  021D                     	;# 
  4377  021E                     	;# 
  4378  021F                     	;# 
  4379  028C                     	;# 
  4380  028C                     	;# 
  4381  028D                     	;# 
  4382  028D                     	;# 
  4383  028E                     	;# 
  4384  028F                     	;# 
  4385  0290                     	;# 
  4386  0291                     	;# 
  4387  0292                     	;# 
  4388  0292                     	;# 
  4389  0293                     	;# 
  4390  0293                     	;# 
  4391  0294                     	;# 
  4392  0295                     	;# 
  4393  0296                     	;# 
  4394  0297                     	;# 
  4395  0298                     	;# 
  4396  0298                     	;# 
  4397  0299                     	;# 
  4398  0299                     	;# 
  4399  029A                     	;# 
  4400  029B                     	;# 
  4401  029C                     	;# 
  4402  029D                     	;# 
  4403  029F                     	;# 
  4404  030C                     	;# 
  4405  030C                     	;# 
  4406  030D                     	;# 
  4407  030E                     	;# 
  4408  030F                     	;# 
  4409  0310                     	;# 
  4410  0310                     	;# 
  4411  0311                     	;# 
  4412  0312                     	;# 
  4413  0313                     	;# 
  4414  0314                     	;# 
  4415  0314                     	;# 
  4416  0315                     	;# 
  4417  0316                     	;# 
  4418  0317                     	;# 
  4419  0318                     	;# 
  4420  0318                     	;# 
  4421  0319                     	;# 
  4422  031A                     	;# 
  4423  031B                     	;# 
  4424  038C                     	;# 
  4425  038C                     	;# 
  4426  038D                     	;# 
  4427  038E                     	;# 
  4428  0390                     	;# 
  4429  0390                     	;# 
  4430  0391                     	;# 
  4431  0392                     	;# 
  4432  048C                     	;# 
  4433  048C                     	;# 
  4434  048D                     	;# 
  4435  048E                     	;# 
  4436  048F                     	;# 
  4437  048F                     	;# 
  4438  0490                     	;# 
  4439  0491                     	;# 
  4440  0492                     	;# 
  4441  0492                     	;# 
  4442  0493                     	;# 
  4443  0494                     	;# 
  4444  0495                     	;# 
  4445  0495                     	;# 
  4446  0496                     	;# 
  4447  0497                     	;# 
  4448  0498                     	;# 
  4449  0499                     	;# 
  4450  049A                     	;# 
  4451  049B                     	;# 
  4452  049C                     	;# 
  4453  049D                     	;# 
  4454  058C                     	;# 
  4455  058C                     	;# 
  4456  058D                     	;# 
  4457  058E                     	;# 
  4458  058F                     	;# 
  4459  058F                     	;# 
  4460  0590                     	;# 
  4461  0591                     	;# 
  4462  0592                     	;# 
  4463  0593                     	;# 
  4464  059C                     	;# 
  4465  059C                     	;# 
  4466  059D                     	;# 
  4467  059D                     	;# 
  4468  059E                     	;# 
  4469  059F                     	;# 
  4470  060C                     	;# 
  4471  060C                     	;# 
  4472  060D                     	;# 
  4473  060D                     	;# 
  4474  060E                     	;# 
  4475  060F                     	;# 
  4476  0610                     	;# 
  4477  0611                     	;# 
  4478  0612                     	;# 
  4479  0613                     	;# 
  4480  0614                     	;# 
  4481  0616                     	;# 
  4482  0616                     	;# 
  4483  0617                     	;# 
  4484  0617                     	;# 
  4485  0618                     	;# 
  4486  0619                     	;# 
  4487  061A                     	;# 
  4488  061B                     	;# 
  4489  061C                     	;# 
  4490  061D                     	;# 
  4491  061E                     	;# 
  4492  070C                     	;# 
  4493  070D                     	;# 
  4494  070E                     	;# 
  4495  070F                     	;# 
  4496  0710                     	;# 
  4497  0711                     	;# 
  4498  0712                     	;# 
  4499  0713                     	;# 
  4500  0714                     	;# 
  4501  0716                     	;# 
  4502  0717                     	;# 
  4503  0718                     	;# 
  4504  0719                     	;# 
  4505  071A                     	;# 
  4506  071B                     	;# 
  4507  071C                     	;# 
  4508  071D                     	;# 
  4509  071E                     	;# 
  4510  0796                     	;# 
  4511  0797                     	;# 
  4512  0798                     	;# 
  4513  0799                     	;# 
  4514  079A                     	;# 
  4515  079B                     	;# 
  4516  079C                     	;# 
  4517  079D                     	;# 
  4518  080C                     	;# 
  4519  080D                     	;# 
  4520  080E                     	;# 
  4521  080F                     	;# 
  4522  0810                     	;# 
  4523  0811                     	;# 
  4524  0812                     	;# 
  4525  0813                     	;# 
  4526  0814                     	;# 
  4527  081A                     	;# 
  4528  081A                     	;# 
  4529  081B                     	;# 
  4530  081C                     	;# 
  4531  081C                     	;# 
  4532  081D                     	;# 
  4533  081E                     	;# 
  4534  081F                     	;# 
  4535  088C                     	;# 
  4536  088D                     	;# 
  4537  088E                     	;# 
  4538  088F                     	;# 
  4539  0890                     	;# 
  4540  0891                     	;# 
  4541  0892                     	;# 
  4542  0893                     	;# 
  4543  0895                     	;# 
  4544  0896                     	;# 
  4545  0897                     	;# 
  4546  0898                     	;# 
  4547  0899                     	;# 
  4548  089A                     	;# 
  4549  089B                     	;# 
  4550  090C                     	;# 
  4551  090E                     	;# 
  4552  090F                     	;# 
  4553  091F                     	;# 
  4554  098F                     	;# 
  4555  098F                     	;# 
  4556  0990                     	;# 
  4557  0991                     	;# 
  4558  0992                     	;# 
  4559  0993                     	;# 
  4560  0994                     	;# 
  4561  0995                     	;# 
  4562  0996                     	;# 
  4563  0997                     	;# 
  4564  1E0F                     	;# 
  4565  1E10                     	;# 
  4566  1E11                     	;# 
  4567  1E12                     	;# 
  4568  1E13                     	;# 
  4569  1E14                     	;# 
  4570  1E15                     	;# 
  4571  1E16                     	;# 
  4572  1E17                     	;# 
  4573  1E18                     	;# 
  4574  1E19                     	;# 
  4575  1E1A                     	;# 
  4576  1E1B                     	;# 
  4577  1E1C                     	;# 
  4578  1E1D                     	;# 
  4579  1E1E                     	;# 
  4580  1E1F                     	;# 
  4581  1E20                     	;# 
  4582  1E21                     	;# 
  4583  1E22                     	;# 
  4584  1E23                     	;# 
  4585  1E24                     	;# 
  4586  1E25                     	;# 
  4587  1E26                     	;# 
  4588  1E27                     	;# 
  4589  1E28                     	;# 
  4590  1E29                     	;# 
  4591  1E2A                     	;# 
  4592  1E2B                     	;# 
  4593  1E2C                     	;# 
  4594  1E2D                     	;# 
  4595  1E2E                     	;# 
  4596  1E2F                     	;# 
  4597  1E30                     	;# 
  4598  1E31                     	;# 
  4599  1E32                     	;# 
  4600  1E33                     	;# 
  4601  1E34                     	;# 
  4602  1E35                     	;# 
  4603  1E36                     	;# 
  4604  1E37                     	;# 
  4605  1E8F                     	;# 
  4606  1E90                     	;# 
  4607  1E91                     	;# 
  4608  1E92                     	;# 
  4609  1E93                     	;# 
  4610  1E94                     	;# 
  4611  1E95                     	;# 
  4612  1E96                     	;# 
  4613  1E97                     	;# 
  4614  1E9C                     	;# 
  4615  1E9D                     	;# 
  4616  1E9E                     	;# 
  4617  1EA1                     	;# 
  4618  1EA2                     	;# 
  4619  1EA3                     	;# 
  4620  1EA4                     	;# 
  4621  1EA9                     	;# 
  4622  1EAA                     	;# 
  4623  1EB1                     	;# 
  4624  1EB2                     	;# 
  4625  1EB8                     	;# 
  4626  1EB9                     	;# 
  4627  1EBA                     	;# 
  4628  1EBB                     	;# 
  4629  1EBC                     	;# 
  4630  1EBD                     	;# 
  4631  1EBE                     	;# 
  4632  1EC3                     	;# 
  4633  1EC5                     	;# 
  4634  1EC6                     	;# 
  4635  1EC7                     	;# 
  4636  1EC8                     	;# 
  4637  1EC9                     	;# 
  4638  1ECA                     	;# 
  4639  1ECB                     	;# 
  4640  1ECB                     	;# 
  4641  1ECB                     	;# 
  4642  1ECC                     	;# 
  4643  1ECC                     	;# 
  4644  1ECC                     	;# 
  4645  1F10                     	;# 
  4646  1F11                     	;# 
  4647  1F12                     	;# 
  4648  1F14                     	;# 
  4649  1F15                     	;# 
  4650  1F1C                     	;# 
  4651  1F1D                     	;# 
  4652  1F1E                     	;# 
  4653  1F1F                     	;# 
  4654  1F20                     	;# 
  4655  1F21                     	;# 
  4656  1F22                     	;# 
  4657  1F23                     	;# 
  4658  1F24                     	;# 
  4659  1F25                     	;# 
  4660  1F26                     	;# 
  4661  1F27                     	;# 
  4662  1F38                     	;# 
  4663  1F39                     	;# 
  4664  1F3A                     	;# 
  4665  1F3B                     	;# 
  4666  1F3C                     	;# 
  4667  1F3D                     	;# 
  4668  1F3E                     	;# 
  4669  1F3F                     	;# 
  4670  1F43                     	;# 
  4671  1F44                     	;# 
  4672  1F45                     	;# 
  4673  1F46                     	;# 
  4674  1F47                     	;# 
  4675  1F48                     	;# 
  4676  1F49                     	;# 
  4677  1F4A                     	;# 
  4678  1F4E                     	;# 
  4679  1F4F                     	;# 
  4680  1F50                     	;# 
  4681  1F51                     	;# 
  4682  1F52                     	;# 
  4683  1F53                     	;# 
  4684  1F54                     	;# 
  4685  1F55                     	;# 
  4686  1FE4                     	;# 
  4687  1FE5                     	;# 
  4688  1FE6                     	;# 
  4689  1FE7                     	;# 
  4690  1FE8                     	;# 
  4691  1FE8                     	;# 
  4692  1FE9                     	;# 
  4693  1FEA                     	;# 
  4694  1FEB                     	;# 
  4695  1FED                     	;# 
  4696  1FEE                     	;# 
  4697  1FEF                     	;# 
  4698  0000                     	;# 
  4699  0001                     	;# 
  4700  0002                     	;# 
  4701  0003                     	;# 
  4702  0004                     	;# 
  4703  0005                     	;# 
  4704  0006                     	;# 
  4705  0007                     	;# 
  4706  0008                     	;# 
  4707  0009                     	;# 
  4708  000A                     	;# 
  4709  000B                     	;# 
  4710  000C                     	;# 
  4711  000D                     	;# 
  4712  000E                     	;# 
  4713  0012                     	;# 
  4714  0013                     	;# 
  4715  0014                     	;# 
  4716  0018                     	;# 
  4717  0019                     	;# 
  4718  001A                     	;# 
  4719  008C                     	;# 
  4720  008C                     	;# 
  4721  008D                     	;# 
  4722  008E                     	;# 
  4723  008E                     	;# 
  4724  008F                     	;# 
  4725  0090                     	;# 
  4726  0090                     	;# 
  4727  0091                     	;# 
  4728  0092                     	;# 
  4729  0092                     	;# 
  4730  0093                     	;# 
  4731  0094                     	;# 
  4732  0094                     	;# 
  4733  0095                     	;# 
  4734  0096                     	;# 
  4735  0096                     	;# 
  4736  0097                     	;# 
  4737  0098                     	;# 
  4738  0099                     	;# 
  4739  009A                     	;# 
  4740  009B                     	;# 
  4741  009B                     	;# 
  4742  009C                     	;# 
  4743  009D                     	;# 
  4744  009D                     	;# 
  4745  009E                     	;# 
  4746  009F                     	;# 
  4747  010C                     	;# 
  4748  010C                     	;# 
  4749  010D                     	;# 
  4750  010E                     	;# 
  4751  010F                     	;# 
  4752  010F                     	;# 
  4753  0110                     	;# 
  4754  0111                     	;# 
  4755  0112                     	;# 
  4756  0113                     	;# 
  4757  0114                     	;# 
  4758  0115                     	;# 
  4759  0116                     	;# 
  4760  0117                     	;# 
  4761  0118                     	;# 
  4762  0119                     	;# 
  4763  0119                     	;# 
  4764  0119                     	;# 
  4765  011A                     	;# 
  4766  011A                     	;# 
  4767  011A                     	;# 
  4768  011B                     	;# 
  4769  011B                     	;# 
  4770  011B                     	;# 
  4771  011B                     	;# 
  4772  011B                     	;# 
  4773  011C                     	;# 
  4774  011C                     	;# 
  4775  011C                     	;# 
  4776  011D                     	;# 
  4777  011D                     	;# 
  4778  011D                     	;# 
  4779  011E                     	;# 
  4780  011E                     	;# 
  4781  011E                     	;# 
  4782  011F                     	;# 
  4783  011F                     	;# 
  4784  011F                     	;# 
  4785  011F                     	;# 
  4786  011F                     	;# 
  4787  018C                     	;# 
  4788  018D                     	;# 
  4789  018E                     	;# 
  4790  018F                     	;# 
  4791  0190                     	;# 
  4792  0191                     	;# 
  4793  0192                     	;# 
  4794  0196                     	;# 
  4795  0197                     	;# 
  4796  0198                     	;# 
  4797  0199                     	;# 
  4798  019A                     	;# 
  4799  019B                     	;# 
  4800  019C                     	;# 
  4801  020C                     	;# 
  4802  020D                     	;# 
  4803  020E                     	;# 
  4804  020E                     	;# 
  4805  020F                     	;# 
  4806  020F                     	;# 
  4807  0210                     	;# 
  4808  0210                     	;# 
  4809  0211                     	;# 
  4810  0211                     	;# 
  4811  0212                     	;# 
  4812  0213                     	;# 
  4813  0214                     	;# 
  4814  0214                     	;# 
  4815  0215                     	;# 
  4816  0215                     	;# 
  4817  0216                     	;# 
  4818  0216                     	;# 
  4819  0217                     	;# 
  4820  0217                     	;# 
  4821  0218                     	;# 
  4822  0219                     	;# 
  4823  021A                     	;# 
  4824  021A                     	;# 
  4825  021B                     	;# 
  4826  021B                     	;# 
  4827  021C                     	;# 
  4828  021C                     	;# 
  4829  021D                     	;# 
  4830  021D                     	;# 
  4831  021E                     	;# 
  4832  021F                     	;# 
  4833  028C                     	;# 
  4834  028C                     	;# 
  4835  028D                     	;# 
  4836  028D                     	;# 
  4837  028E                     	;# 
  4838  028F                     	;# 
  4839  0290                     	;# 
  4840  0291                     	;# 
  4841  0292                     	;# 
  4842  0292                     	;# 
  4843  0293                     	;# 
  4844  0293                     	;# 
  4845  0294                     	;# 
  4846  0295                     	;# 
  4847  0296                     	;# 
  4848  0297                     	;# 
  4849  0298                     	;# 
  4850  0298                     	;# 
  4851  0299                     	;# 
  4852  0299                     	;# 
  4853  029A                     	;# 
  4854  029B                     	;# 
  4855  029C                     	;# 
  4856  029D                     	;# 
  4857  029F                     	;# 
  4858  030C                     	;# 
  4859  030C                     	;# 
  4860  030D                     	;# 
  4861  030E                     	;# 
  4862  030F                     	;# 
  4863  0310                     	;# 
  4864  0310                     	;# 
  4865  0311                     	;# 
  4866  0312                     	;# 
  4867  0313                     	;# 
  4868  0314                     	;# 
  4869  0314                     	;# 
  4870  0315                     	;# 
  4871  0316                     	;# 
  4872  0317                     	;# 
  4873  0318                     	;# 
  4874  0318                     	;# 
  4875  0319                     	;# 
  4876  031A                     	;# 
  4877  031B                     	;# 
  4878  038C                     	;# 
  4879  038C                     	;# 
  4880  038D                     	;# 
  4881  038E                     	;# 
  4882  0390                     	;# 
  4883  0390                     	;# 
  4884  0391                     	;# 
  4885  0392                     	;# 
  4886  048C                     	;# 
  4887  048C                     	;# 
  4888  048D                     	;# 
  4889  048E                     	;# 
  4890  048F                     	;# 
  4891  048F                     	;# 
  4892  0490                     	;# 
  4893  0491                     	;# 
  4894  0492                     	;# 
  4895  0492                     	;# 
  4896  0493                     	;# 
  4897  0494                     	;# 
  4898  0495                     	;# 
  4899  0495                     	;# 
  4900  0496                     	;# 
  4901  0497                     	;# 
  4902  0498                     	;# 
  4903  0499                     	;# 
  4904  049A                     	;# 
  4905  049B                     	;# 
  4906  049C                     	;# 
  4907  049D                     	;# 
  4908  058C                     	;# 
  4909  058C                     	;# 
  4910  058D                     	;# 
  4911  058E                     	;# 
  4912  058F                     	;# 
  4913  058F                     	;# 
  4914  0590                     	;# 
  4915  0591                     	;# 
  4916  0592                     	;# 
  4917  0593                     	;# 
  4918  059C                     	;# 
  4919  059C                     	;# 
  4920  059D                     	;# 
  4921  059D                     	;# 
  4922  059E                     	;# 
  4923  059F                     	;# 
  4924  060C                     	;# 
  4925  060C                     	;# 
  4926  060D                     	;# 
  4927  060D                     	;# 
  4928  060E                     	;# 
  4929  060F                     	;# 
  4930  0610                     	;# 
  4931  0611                     	;# 
  4932  0612                     	;# 
  4933  0613                     	;# 
  4934  0614                     	;# 
  4935  0616                     	;# 
  4936  0616                     	;# 
  4937  0617                     	;# 
  4938  0617                     	;# 
  4939  0618                     	;# 
  4940  0619                     	;# 
  4941  061A                     	;# 
  4942  061B                     	;# 
  4943  061C                     	;# 
  4944  061D                     	;# 
  4945  061E                     	;# 
  4946  070C                     	;# 
  4947  070D                     	;# 
  4948  070E                     	;# 
  4949  070F                     	;# 
  4950  0710                     	;# 
  4951  0711                     	;# 
  4952  0712                     	;# 
  4953  0713                     	;# 
  4954  0714                     	;# 
  4955  0716                     	;# 
  4956  0717                     	;# 
  4957  0718                     	;# 
  4958  0719                     	;# 
  4959  071A                     	;# 
  4960  071B                     	;# 
  4961  071C                     	;# 
  4962  071D                     	;# 
  4963  071E                     	;# 
  4964  0796                     	;# 
  4965  0797                     	;# 
  4966  0798                     	;# 
  4967  0799                     	;# 
  4968  079A                     	;# 
  4969  079B                     	;# 
  4970  079C                     	;# 
  4971  079D                     	;# 
  4972  080C                     	;# 
  4973  080D                     	;# 
  4974  080E                     	;# 
  4975  080F                     	;# 
  4976  0810                     	;# 
  4977  0811                     	;# 
  4978  0812                     	;# 
  4979  0813                     	;# 
  4980  0814                     	;# 
  4981  081A                     	;# 
  4982  081A                     	;# 
  4983  081B                     	;# 
  4984  081C                     	;# 
  4985  081C                     	;# 
  4986  081D                     	;# 
  4987  081E                     	;# 
  4988  081F                     	;# 
  4989  088C                     	;# 
  4990  088D                     	;# 
  4991  088E                     	;# 
  4992  088F                     	;# 
  4993  0890                     	;# 
  4994  0891                     	;# 
  4995  0892                     	;# 
  4996  0893                     	;# 
  4997  0895                     	;# 
  4998  0896                     	;# 
  4999  0897                     	;# 
  5000  0898                     	;# 
  5001  0899                     	;# 
  5002  089A                     	;# 
  5003  089B                     	;# 
  5004  090C                     	;# 
  5005  090E                     	;# 
  5006  090F                     	;# 
  5007  091F                     	;# 
  5008  098F                     	;# 
  5009  098F                     	;# 
  5010  0990                     	;# 
  5011  0991                     	;# 
  5012  0992                     	;# 
  5013  0993                     	;# 
  5014  0994                     	;# 
  5015  0995                     	;# 
  5016  0996                     	;# 
  5017  0997                     	;# 
  5018  1E0F                     	;# 
  5019  1E10                     	;# 
  5020  1E11                     	;# 
  5021  1E12                     	;# 
  5022  1E13                     	;# 
  5023  1E14                     	;# 
  5024  1E15                     	;# 
  5025  1E16                     	;# 
  5026  1E17                     	;# 
  5027  1E18                     	;# 
  5028  1E19                     	;# 
  5029  1E1A                     	;# 
  5030  1E1B                     	;# 
  5031  1E1C                     	;# 
  5032  1E1D                     	;# 
  5033  1E1E                     	;# 
  5034  1E1F                     	;# 
  5035  1E20                     	;# 
  5036  1E21                     	;# 
  5037  1E22                     	;# 
  5038  1E23                     	;# 
  5039  1E24                     	;# 
  5040  1E25                     	;# 
  5041  1E26                     	;# 
  5042  1E27                     	;# 
  5043  1E28                     	;# 
  5044  1E29                     	;# 
  5045  1E2A                     	;# 
  5046  1E2B                     	;# 
  5047  1E2C                     	;# 
  5048  1E2D                     	;# 
  5049  1E2E                     	;# 
  5050  1E2F                     	;# 
  5051  1E30                     	;# 
  5052  1E31                     	;# 
  5053  1E32                     	;# 
  5054  1E33                     	;# 
  5055  1E34                     	;# 
  5056  1E35                     	;# 
  5057  1E36                     	;# 
  5058  1E37                     	;# 
  5059  1E8F                     	;# 
  5060  1E90                     	;# 
  5061  1E91                     	;# 
  5062  1E92                     	;# 
  5063  1E93                     	;# 
  5064  1E94                     	;# 
  5065  1E95                     	;# 
  5066  1E96                     	;# 
  5067  1E97                     	;# 
  5068  1E9C                     	;# 
  5069  1E9D                     	;# 
  5070  1E9E                     	;# 
  5071  1EA1                     	;# 
  5072  1EA2                     	;# 
  5073  1EA3                     	;# 
  5074  1EA4                     	;# 
  5075  1EA9                     	;# 
  5076  1EAA                     	;# 
  5077  1EB1                     	;# 
  5078  1EB2                     	;# 
  5079  1EB8                     	;# 
  5080  1EB9                     	;# 
  5081  1EBA                     	;# 
  5082  1EBB                     	;# 
  5083  1EBC                     	;# 
  5084  1EBD                     	;# 
  5085  1EBE                     	;# 
  5086  1EC3                     	;# 
  5087  1EC5                     	;# 
  5088  1EC6                     	;# 
  5089  1EC7                     	;# 
  5090  1EC8                     	;# 
  5091  1EC9                     	;# 
  5092  1ECA                     	;# 
  5093  1ECB                     	;# 
  5094  1ECB                     	;# 
  5095  1ECB                     	;# 
  5096  1ECC                     	;# 
  5097  1ECC                     	;# 
  5098  1ECC                     	;# 
  5099  1F10                     	;# 
  5100  1F11                     	;# 
  5101  1F12                     	;# 
  5102  1F14                     	;# 
  5103  1F15                     	;# 
  5104  1F1C                     	;# 
  5105  1F1D                     	;# 
  5106  1F1E                     	;# 
  5107  1F1F                     	;# 
  5108  1F20                     	;# 
  5109  1F21                     	;# 
  5110  1F22                     	;# 
  5111  1F23                     	;# 
  5112  1F24                     	;# 
  5113  1F25                     	;# 
  5114  1F26                     	;# 
  5115  1F27                     	;# 
  5116  1F38                     	;# 
  5117  1F39                     	;# 
  5118  1F3A                     	;# 
  5119  1F3B                     	;# 
  5120  1F3C                     	;# 
  5121  1F3D                     	;# 
  5122  1F3E                     	;# 
  5123  1F3F                     	;# 
  5124  1F43                     	;# 
  5125  1F44                     	;# 
  5126  1F45                     	;# 
  5127  1F46                     	;# 
  5128  1F47                     	;# 
  5129  1F48                     	;# 
  5130  1F49                     	;# 
  5131  1F4A                     	;# 
  5132  1F4E                     	;# 
  5133  1F4F                     	;# 
  5134  1F50                     	;# 
  5135  1F51                     	;# 
  5136  1F52                     	;# 
  5137  1F53                     	;# 
  5138  1F54                     	;# 
  5139  1F55                     	;# 
  5140  1FE4                     	;# 
  5141  1FE5                     	;# 
  5142  1FE6                     	;# 
  5143  1FE7                     	;# 
  5144  1FE8                     	;# 
  5145  1FE8                     	;# 
  5146  1FE9                     	;# 
  5147  1FEA                     	;# 
  5148  1FEB                     	;# 
  5149  1FED                     	;# 
  5150  1FEE                     	;# 
  5151  1FEF                     	;_nmea_data
  5152                           
  5153 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  5154  0000                     
  5155 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  5156  0000                     
  5157 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  5158  0000                     
  5159                           	psect	idataBANK4
  5160  1605                     __pidataBANK4:	
  5161                           
  5162                           ;initializer for _setNavFlightMode
  5163  1605  34B5               	retlw	181
  5164  1606  3462               	retlw	98
  5165  1607  3406               	retlw	6
  5166  1608  3424               	retlw	36
  5167  1609  3424               	retlw	36
  5168  160A  3400               	retlw	0
  5169  160B  34FF               	retlw	255
  5170  160C  34FF               	retlw	255
  5171  160D  3406               	retlw	6
  5172  160E  3403               	retlw	3
  5173  160F  3400               	retlw	0
  5174  1610  3400               	retlw	0
  5175  1611  3400               	retlw	0
  5176  1612  3400               	retlw	0
  5177  1613  3410               	retlw	16
  5178  1614  3427               	retlw	39
  5179  1615  3400               	retlw	0
  5180  1616  3400               	retlw	0
  5181  1617  3405               	retlw	5
  5182  1618  3400               	retlw	0
  5183  1619  34FA               	retlw	250
  5184  161A  3400               	retlw	0
  5185  161B  34FA               	retlw	250
  5186  161C  3400               	retlw	0
  5187  161D  3464               	retlw	100
  5188  161E  3400               	retlw	0
  5189  161F  342C               	retlw	44
  5190  1620  3401               	retlw	1
  5191  1621  3400               	retlw	0
  5192  1622  3400               	retlw	0
  5193  1623  3400               	retlw	0
  5194  1624  3400               	retlw	0
  5195  1625  3400               	retlw	0
  5196  1626  3400               	retlw	0
  5197  1627  3400               	retlw	0
  5198  1628  3400               	retlw	0
  5199  1629  3400               	retlw	0
  5200  162A  3400               	retlw	0
  5201  162B  3400               	retlw	0
  5202  162C  3400               	retlw	0
  5203  162D  3400               	retlw	0
  5204  162E  3400               	retlw	0
  5205  162F  3416               	retlw	22
  5206  1630  34DC               	retlw	220
  5207                           
  5208                           	psect	stringtext1
  5209  18B4                     __pstringtext1:	
  5210  18B4                     _HALF_BAUD_DELAY:	
  5211  18B4  340A               	retlw	10
  5212  18B5  3400               	retlw	0
  5213  18B6                     __end_of_HALF_BAUD_DELAY:	
  5214                           
  5215                           	psect	nvBANK1
  5216  00D1                     __pnvBANK1:	
  5217  00D1                     _TMR0_InterruptHandler:	
  5218  00D1                     	ds	2
  5219                           
  5220                           	psect	nvBANK3
  5221  01CE                     __pnvBANK3:	
  5222  01CE                     _EUSART1_ErrorHandler:	
  5223  01CE                     	ds	2
  5224  01D0                     _EUSART1_OverrunErrorHandler:	
  5225  01D0                     	ds	2
  5226  01D2                     _EUSART1_FramingErrorHandler:	
  5227  01D2                     	ds	2
  5228  000B                     _INTCONbits	set	11
  5229  0018                     _LATAbits	set	24
  5230  001A                     _LATCbits	set	26
  5231  0014                     _TRISC	set	20
  5232  0013                     _TRISB	set	19
  5233  0012                     _TRISA	set	18
  5234  001A                     _LATC	set	26
  5235  0019                     _LATB	set	25
  5236  0018                     _LATA	set	24
  5237  011A                     _TX1REG	set	282
  5238  0119                     _RC1REG	set	281
  5239  011D                     _RC1STAbits	set	285
  5240  011E                     _TX1STAbits	set	286
  5241  011C                     _SP1BRGH	set	284
  5242  011B                     _SP1BRGL	set	283
  5243  011E                     _TX1STA	set	286
  5244  011D                     _RC1STA	set	285
  5245  011F                     _BAUD1CON	set	287
  5246  0191                     _SSP1CON2bits	set	401
  5247  018C                     _SSP1BUF	set	396
  5248  0190                     _SSP1CON1bits	set	400
  5249  018D                     _SSP1ADD	set	397
  5250  0192                     _SSP1CON3	set	402
  5251  0190                     _SSP1CON1	set	400
  5252  018F                     _SSP1STAT	set	399
  5253  059E                     _T0CON0bits	set	1438
  5254  059E                     _T0CON0	set	1438
  5255  059C                     _TMR0L	set	1436
  5256  059D                     _TMR0H	set	1437
  5257  059F                     _T0CON1	set	1439
  5258  070F                     _PIR3bits	set	1807
  5259  0716                     _PIE0bits	set	1814
  5260  070C                     _PIR0bits	set	1804
  5261  079D                     _PMD7	set	1949
  5262  079C                     _PMD6	set	1948
  5263  079B                     _PMD5	set	1947
  5264  079A                     _PMD4	set	1946
  5265  0799                     _PMD3	set	1945
  5266  0798                     _PMD2	set	1944
  5267  0797                     _PMD1	set	1943
  5268  0796                     _PMD0	set	1942
  5269  0892                     _OSCTUNE	set	2194
  5270  0893                     _OSCFRQ	set	2195
  5271  0891                     _OSCEN	set	2193
  5272  088F                     _OSCCON3	set	2191
  5273  088D                     _OSCCON1	set	2189
  5274  1EC6                     _SSP1DATPPS	set	7878
  5275  1EC5                     _SSP1CLKPPS	set	7877
  5276  1ECB                     _RX1DTPPS	set	7883
  5277  1F1C                     _RB4PPS	set	7964
  5278  1F1E                     _RB6PPS	set	7966
  5279  1F1F                     _RB7PPS	set	7967
  5280  1F52                     _INLVLC	set	8018
  5281  1F47                     _INLVLB	set	8007
  5282  1F3C                     _INLVLA	set	7996
  5283  1F51                     _SLRCONC	set	8017
  5284  1F46                     _SLRCONB	set	8006
  5285  1F3B                     _SLRCONA	set	7995
  5286  1F50                     _ODCONC	set	8016
  5287  1F45                     _ODCONB	set	8005
  5288  1F3A                     _ODCONA	set	7994
  5289  1F4F                     _WPUC	set	8015
  5290  1F39                     _WPUA	set	7993
  5291  1F44                     _WPUB	set	8004
  5292  1F38                     _ANSELA	set	7992
  5293  1F43                     _ANSELB	set	8003
  5294  1F4E                     _ANSELC	set	8014
  5295                           
  5296                           	psect	stringtext2
  5297  1800                     __pstringtext2:	
  5298  1800                     STR_6:	
  5299  1800  3424               	retlw	36	;'$'
  5300  1801  3450               	retlw	80	;'P'
  5301  1802  3455               	retlw	85	;'U'
  5302  1803  3442               	retlw	66	;'B'
  5303  1804  3458               	retlw	88	;'X'
  5304  1805  342C               	retlw	44	;','
  5305  1806  3434               	retlw	52	;'4'
  5306  1807  3430               	retlw	48	;'0'
  5307  1808  342C               	retlw	44	;','
  5308  1809  3452               	retlw	82	;'R'
  5309  180A  344D               	retlw	77	;'M'
  5310  180B  3443               	retlw	67	;'C'
  5311  180C  342C               	retlw	44	;','
  5312  180D  3430               	retlw	48	;'0'
  5313  180E  342C               	retlw	44	;','
  5314  180F  3430               	retlw	48	;'0'
  5315  1810  342C               	retlw	44	;','
  5316  1811  3430               	retlw	48	;'0'
  5317  1812  342C               	retlw	44	;','
  5318  1813  3430               	retlw	48	;'0'
  5319  1814  342A               	retlw	42	;'*'
  5320  1815  3434               	retlw	52	;'4'
  5321  1816  3437               	retlw	55	;'7'
  5322  1817  340D               	retlw	13
  5323  1818  340A               	retlw	10
  5324  1819  3400               	retlw	0
  5325                           
  5326                           	psect	stringtext3
  5327  181A                     __pstringtext3:	
  5328  181A                     STR_4:	
  5329  181A  3424               	retlw	36	;'$'
  5330  181B  3450               	retlw	80	;'P'
  5331  181C  3455               	retlw	85	;'U'
  5332  181D  3442               	retlw	66	;'B'
  5333  181E  3458               	retlw	88	;'X'
  5334  181F  342C               	retlw	44	;','
  5335  1820  3434               	retlw	52	;'4'
  5336  1821  3430               	retlw	48	;'0'
  5337  1822  342C               	retlw	44	;','
  5338  1823  3447               	retlw	71	;'G'
  5339  1824  3453               	retlw	83	;'S'
  5340  1825  3456               	retlw	86	;'V'
  5341  1826  342C               	retlw	44	;','
  5342  1827  3430               	retlw	48	;'0'
  5343  1828  342C               	retlw	44	;','
  5344  1829  3430               	retlw	48	;'0'
  5345  182A  342C               	retlw	44	;','
  5346  182B  3430               	retlw	48	;'0'
  5347  182C  342C               	retlw	44	;','
  5348  182D  3430               	retlw	48	;'0'
  5349  182E  342A               	retlw	42	;'*'
  5350  182F  3435               	retlw	53	;'5'
  5351  1830  3439               	retlw	57	;'9'
  5352  1831  340D               	retlw	13
  5353  1832  340A               	retlw	10
  5354  1833  3400               	retlw	0
  5355                           
  5356                           	psect	stringtext4
  5357  1834                     __pstringtext4:	
  5358  1834                     STR_2:	
  5359  1834  3424               	retlw	36	;'$'
  5360  1835  3450               	retlw	80	;'P'
  5361  1836  3455               	retlw	85	;'U'
  5362  1837  3442               	retlw	66	;'B'
  5363  1838  3458               	retlw	88	;'X'
  5364  1839  342C               	retlw	44	;','
  5365  183A  3434               	retlw	52	;'4'
  5366  183B  3430               	retlw	48	;'0'
  5367  183C  342C               	retlw	44	;','
  5368  183D  3447               	retlw	71	;'G'
  5369  183E  3447               	retlw	71	;'G'
  5370  183F  3441               	retlw	65	;'A'
  5371  1840  342C               	retlw	44	;','
  5372  1841  3430               	retlw	48	;'0'
  5373  1842  342C               	retlw	44	;','
  5374  1843  3430               	retlw	48	;'0'
  5375  1844  342C               	retlw	44	;','
  5376  1845  3430               	retlw	48	;'0'
  5377  1846  342C               	retlw	44	;','
  5378  1847  3430               	retlw	48	;'0'
  5379  1848  342A               	retlw	42	;'*'
  5380  1849  3435               	retlw	53	;'5'
  5381  184A  3441               	retlw	65	;'A'
  5382  184B  340D               	retlw	13
  5383  184C  340A               	retlw	10
  5384  184D  3400               	retlw	0
  5385                           
  5386                           	psect	stringtext5
  5387  184E                     __pstringtext5:	
  5388  184E                     STR_1:	
  5389  184E  3424               	retlw	36	;'$'
  5390  184F  3450               	retlw	80	;'P'
  5391  1850  3455               	retlw	85	;'U'
  5392  1851  3442               	retlw	66	;'B'
  5393  1852  3458               	retlw	88	;'X'
  5394  1853  342C               	retlw	44	;','
  5395  1854  3434               	retlw	52	;'4'
  5396  1855  3430               	retlw	48	;'0'
  5397  1856  342C               	retlw	44	;','
  5398  1857  3447               	retlw	71	;'G'
  5399  1858  344C               	retlw	76	;'L'
  5400  1859  344C               	retlw	76	;'L'
  5401  185A  342C               	retlw	44	;','
  5402  185B  3430               	retlw	48	;'0'
  5403  185C  342C               	retlw	44	;','
  5404  185D  3430               	retlw	48	;'0'
  5405  185E  342C               	retlw	44	;','
  5406  185F  3430               	retlw	48	;'0'
  5407  1860  342C               	retlw	44	;','
  5408  1861  3430               	retlw	48	;'0'
  5409  1862  342A               	retlw	42	;'*'
  5410  1863  3435               	retlw	53	;'5'
  5411  1864  3443               	retlw	67	;'C'
  5412  1865  340D               	retlw	13
  5413  1866  340A               	retlw	10
  5414  1867  3400               	retlw	0
  5415                           
  5416                           	psect	stringtext6
  5417  1868                     __pstringtext6:	
  5418  1868                     STR_5:	
  5419  1868  3424               	retlw	36	;'$'
  5420  1869  3450               	retlw	80	;'P'
  5421  186A  3455               	retlw	85	;'U'
  5422  186B  3442               	retlw	66	;'B'
  5423  186C  3458               	retlw	88	;'X'
  5424  186D  342C               	retlw	44	;','
  5425  186E  3434               	retlw	52	;'4'
  5426  186F  3430               	retlw	48	;'0'
  5427  1870  342C               	retlw	44	;','
  5428  1871  3447               	retlw	71	;'G'
  5429  1872  3453               	retlw	83	;'S'
  5430  1873  3441               	retlw	65	;'A'
  5431  1874  342C               	retlw	44	;','
  5432  1875  3430               	retlw	48	;'0'
  5433  1876  342C               	retlw	44	;','
  5434  1877  3430               	retlw	48	;'0'
  5435  1878  342C               	retlw	44	;','
  5436  1879  3430               	retlw	48	;'0'
  5437  187A  342C               	retlw	44	;','
  5438  187B  3430               	retlw	48	;'0'
  5439  187C  342A               	retlw	42	;'*'
  5440  187D  3434               	retlw	52	;'4'
  5441  187E  3445               	retlw	69	;'E'
  5442  187F  340D               	retlw	13
  5443  1880  340A               	retlw	10
  5444  1881  3400               	retlw	0
  5445                           
  5446                           	psect	stringtext7
  5447  1882                     __pstringtext7:	
  5448  1882                     STR_3:	
  5449  1882  3424               	retlw	36	;'$'
  5450  1883  3450               	retlw	80	;'P'
  5451  1884  3455               	retlw	85	;'U'
  5452  1885  3442               	retlw	66	;'B'
  5453  1886  3458               	retlw	88	;'X'
  5454  1887  342C               	retlw	44	;','
  5455  1888  3434               	retlw	52	;'4'
  5456  1889  3430               	retlw	48	;'0'
  5457  188A  342C               	retlw	44	;','
  5458  188B  3456               	retlw	86	;'V'
  5459  188C  3454               	retlw	84	;'T'
  5460  188D  3447               	retlw	71	;'G'
  5461  188E  342C               	retlw	44	;','
  5462  188F  3430               	retlw	48	;'0'
  5463  1890  342C               	retlw	44	;','
  5464  1891  3430               	retlw	48	;'0'
  5465  1892  342C               	retlw	44	;','
  5466  1893  3430               	retlw	48	;'0'
  5467  1894  342C               	retlw	44	;','
  5468  1895  3430               	retlw	48	;'0'
  5469  1896  342A               	retlw	42	;'*'
  5470  1897  3435               	retlw	53	;'5'
  5471  1898  3445               	retlw	69	;'E'
  5472  1899  340D               	retlw	13
  5473  189A  340A               	retlw	10
  5474  189B  3400               	retlw	0
  5475                           
  5476                           	psect	stringtext8
  5477  189C                     __pstringtext8:	
  5478  189C                     STR_7:	
  5479  189C  3424               	retlw	36	;'$'
  5480  189D  3450               	retlw	80	;'P'
  5481  189E  3455               	retlw	85	;'U'
  5482  189F  3442               	retlw	66	;'B'
  5483  18A0  3458               	retlw	88	;'X'
  5484  18A1  342C               	retlw	44	;','
  5485  18A2  3430               	retlw	48	;'0'
  5486  18A3  3430               	retlw	48	;'0'
  5487  18A4  342A               	retlw	42	;'*'
  5488  18A5  3433               	retlw	51	;'3'
  5489  18A6  3433               	retlw	51	;'3'
  5490  18A7  340D               	retlw	13
  5491  18A8  340A               	retlw	10
  5492  18A9  3400               	retlw	0
  5493                           
  5494                           	psect	stringtext9
  5495  18AA                     __pstringtext9:	
  5496  18AA                     STR_8:	
  5497  18AA  3457               	retlw	87	;'W'
  5498  18AB  3469               	retlw	105	;'i'
  5499  18AC  3473               	retlw	115	;'s'
  5500  18AD  3470               	retlw	112	;'p'
  5501  18AE  342D               	retlw	45	;'-'
  5502  18AF  3431               	retlw	49	;'1'
  5503  18B0  3400               	retlw	0
  5504                           
  5505                           	psect	stringtext10
  5506  18B1                     __pstringtext10:	
  5507  18B1                     STR_9:	
  5508  18B1  3424               	retlw	36	;'$'
  5509  18B2  3424               	retlw	36	;'$'
  5510  18B3  3400               	retlw	0
  5511                           
  5512                           	psect	stringtext11
  5513  0000                     __pstringtext11:	
  5514                           
  5515                           ; #config settings
  5516  0000                     
  5517                           	psect	cinit
  5518  0010                     start_initialization:	
  5519  0010                     __initialization:		;BIGRAM
  5520                           
  5521                           ; Initialize objects allocated to BANK4
  5522  0010  3005               	movlw	low __pidataBANK4
  5523  0011  0084               	movwf	4
  5524  0012  3096               	movlw	(high __pidataBANK4)| (0+128)
  5525  0013  0085               	movwf	5
  5526  0014  3020               	movlw	low __pdataBANK4
  5527  0015  0086               	movwf	6
  5528  0016  3002               	movlw	high __pdataBANK4
  5529  0017  0087               	movwf	7
  5530  0018  3000               	movlw	0
  5531  0019  00FF               	movwf	btemp+1
  5532  001A  302C               	movlw	44
  5533  001B  3192  229A  3180   	fcall	init_ram
  5534                           
  5535                           ; Clear objects allocated to BIGRAM
  5536  001E  30D8               	movlw	low (0+9944)
  5537  001F  0084               	movwf	4
  5538  0020  3026               	movlw	high (0+9944)
  5539  0021  0085               	movwf	5
  5540  0022  3018               	movlw	24
  5541  0023  00FE               	movwf	btemp
  5542  0024  3001               	movlw	1
  5543  0025  00FF               	movwf	btemp+1
  5544  0026  3192  228E  3180   	fcall	clear_ram0
  5545                           
  5546                           ; Clear objects allocated to BANK1
  5547  0029  30A0               	movlw	low __pbssBANK1
  5548  002A  0084               	movwf	4
  5549  002B  3000               	movlw	high __pbssBANK1
  5550  002C  0085               	movwf	5
  5551  002D  301A               	movlw	26
  5552  002E  00FE               	movwf	btemp
  5553  002F  3000               	movlw	0
  5554  0030  00FF               	movwf	btemp+1
  5555  0031  3192  228E  3180   	fcall	clear_ram0
  5556                           
  5557                           ; Clear objects allocated to BANK2
  5558  0034  3020               	movlw	low __pbssBANK2
  5559  0035  0084               	movwf	4
  5560  0036  3001               	movlw	high __pbssBANK2
  5561  0037  0085               	movwf	5
  5562  0038  304F               	movlw	79
  5563  0039  00FE               	movwf	btemp
  5564  003A  3000               	movlw	0
  5565  003B  00FF               	movwf	btemp+1
  5566  003C  3192  228E  3180   	fcall	clear_ram0
  5567                           
  5568                           ; Clear objects allocated to BANK3
  5569  003F  30A0               	movlw	low __pbssBANK3
  5570  0040  0084               	movwf	4
  5571  0041  3001               	movlw	high __pbssBANK3
  5572  0042  0085               	movwf	5
  5573  0043  302E               	movlw	46
  5574  0044  00FE               	movwf	btemp
  5575  0045  3000               	movlw	0
  5576  0046  00FF               	movwf	btemp+1
  5577  0047  3192  228E         	fcall	clear_ram0
  5578  0049                     end_of_initialization:	
  5579                           ;End of C runtime variable initialization code
  5580                           
  5581  0049                     __end_of__initialization:	
  5582  0049  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5583  004A  0140               	movlb	0
  5584  004B  3180  284D         	ljmp	_main	;jump to C main() function
  5585                           
  5586                           	psect	bssBANK1
  5587  00A0                     __pbssBANK1:	
  5588  00A0                     bme280_get_sensor_data@F271:	
  5589  00A0                     	ds	8
  5590  00A8                     _ticks:	
  5591  00A8                     	ds	4
  5592  00AC                     ___g_timeout_start:	
  5593  00AC                     	ds	4
  5594  00B0                     _id:	
  5595  00B0                     	ds	2
  5596  00B2                     _gps_configured:	
  5597  00B2                     	ds	1
  5598  00B3                     _eusart1RxLastError:	
  5599  00B3                     	ds	1
  5600  00B4                     _checksum:	
  5601  00B4                     	ds	6
  5602                           
  5603                           	psect	bssBANK2
  5604  0120                     __pbssBANK2:	
  5605  0120                     main@F11370:	
  5606  0120                     	ds	16
  5607  0130                     bme280_get_sensor_data@F273:	
  5608  0130                     	ds	12
  5609  013C                     _EnvSensor:	
  5610  013C                     	ds	51
  5611                           
  5612                           	psect	bssBANK3
  5613  01A0                     __pbssBANK3:	
  5614  01A0                     get_calib_data@F376:	
  5615  01A0                     	ds	26
  5616  01BA                     _csvField:	
  5617  01BA                     	ds	20
  5618                           
  5619                           	psect	dataBANK4
  5620  0220                     __pdataBANK4:	
  5621  0220                     _setNavFlightMode:	
  5622  0220                     	ds	44
  5623                           
  5624                           	psect	inittext
  5625  129A                     init_ram:	
  5626  129A  00FE               	movwf	126
  5627  129B                     initloop:	
  5628  129B  0012               	moviw fsr0++
  5629  129C  001E               	movwi fsr1++
  5630  129D  3001               	movlw	1
  5631  129E  02FE               	subwf	126,f
  5632  129F  3000               	movlw	0
  5633  12A0  3BFF               	subwfb	127,f
  5634  12A1  087F               	movf	127,w
  5635  12A2  047E               	iorwf	126,w
  5636  12A3  1903               	btfsc	3,2
  5637  12A4  3400               	retlw	0
  5638  12A5  2A9B               	goto	initloop
  5639                           
  5640                           	psect	clrtext
  5641  128E                     clear_ram0:	
  5642                           ;	Called with FSR0 containing the base address, and
  5643                           ;	btemp/btemp+1 has the size to clear
  5644                           
  5645  128E  0064               	clrwdt	;clear the watchdog before getting into this loop
  5646  128F                     clrloop0:	
  5647  128F  0180               	clrf	0	;clear RAM location pointed to by FSR
  5648  1290  3101               	addfsr 0,1
  5649  1291  3001               	movlw	1
  5650  1292  02FE               	subwf	126,f
  5651  1293  3000               	movlw	0
  5652  1294  3BFF               	subwfb	127,f
  5653  1295  087F               	movf	127,w
  5654  1296  047E               	iorwf	126,w
  5655  1297  1903               	btfsc	3,2
  5656  1298  3400               	retlw	0	;all done for this memory range, return
  5657  1299  2A8F               	goto	clrloop0	;have we reached the end yet?
  5658                           
  5659                           	psect	cstackBANK4
  5660  024C                     __pcstackBANK4:	
  5661  024C                     main@convertedNumber:	
  5662                           
  5663                           ; 16 bytes @ 0x0
  5664  024C                     	ds	16
  5665  025C                     main@end:	
  5666                           
  5667                           ; 2 bytes @ 0x10
  5668  025C                     	ds	2
  5669  025E                     main@sensor_data:	
  5670                           
  5671                           ; 12 bytes @ 0x12
  5672  025E                     	ds	12
  5673  026A                     main@index:	
  5674                           
  5675                           ; 2 bytes @ 0x1E
  5676  026A                     	ds	2
  5677                           
  5678                           	psect	cstackBANK1
  5679  00BA                     __pcstackBANK1:	
  5680  00BA                     put_device_to_sleep@reg_data:	
  5681                           
  5682                           ; 4 bytes @ 0x0
  5683  00BA                     	ds	4
  5684  00BE                     put_device_to_sleep@dev:	
  5685                           
  5686                           ; 1 bytes @ 0x4
  5687  00BE                     	ds	1
  5688  00BF                     put_device_to_sleep@rslt:	
  5689                           
  5690                           ; 1 bytes @ 0x5
  5691  00BF                     	ds	1
  5692  00C0                     put_device_to_sleep@settings:	
  5693                           
  5694                           ; 5 bytes @ 0x6
  5695  00C0                     	ds	5
  5696  00C5                     bme280_set_sensor_settings@desired_settings:	
  5697  00C5                     bme280_set_sensor_mode@sensor_mode:	
  5698                           ; 1 bytes @ 0xB
  5699                           
  5700                           
  5701                           ; 1 bytes @ 0xB
  5702  00C5                     	ds	1
  5703  00C6                     bme280_set_sensor_settings@sensor_mode:	
  5704  00C6                     bme280_set_sensor_mode@last_set_mode:	
  5705                           ; 1 bytes @ 0xC
  5706                           
  5707                           
  5708                           ; 1 bytes @ 0xC
  5709  00C6                     	ds	1
  5710  00C7                     bme280_set_sensor_settings@rslt:	
  5711  00C7                     bme280_set_sensor_mode@rslt:	
  5712                           ; 1 bytes @ 0xD
  5713                           
  5714                           
  5715                           ; 1 bytes @ 0xD
  5716  00C7                     	ds	1
  5717  00C8                     ??_BME280_Init:	
  5718                           
  5719                           ; 1 bytes @ 0xE
  5720  00C8                     	ds	2
  5721  00CA                     BME280_Init@settings_sel:	
  5722                           
  5723                           ; 1 bytes @ 0x10
  5724  00CA                     	ds	1
  5725  00CB                     BME280_Init@rslt:	
  5726                           
  5727                           ; 1 bytes @ 0x11
  5728  00CB                     	ds	1
  5729  00CC                     ??_main:	
  5730                           
  5731                           ; 1 bytes @ 0x12
  5732  00CC                     	ds	5
  5733                           
  5734                           	psect	cstackCOMMON
  5735  0070                     __pcstackCOMMON:	
  5736  0070                     ?_null_ptr_check:	
  5737  0070                     ??_null_ptr_check:	
  5738                           ; 1 bytes @ 0x0
  5739                           
  5740  0070                     ?_bme280_soft_reset:	
  5741                           ; 1 bytes @ 0x0
  5742                           
  5743  0070                     ?_get_calib_data:	
  5744                           ; 1 bytes @ 0x0
  5745                           
  5746  0070                     ?_interleave_reg_addr:	
  5747                           ; 1 bytes @ 0x0
  5748                           
  5749  0070                     ?_put_device_to_sleep:	
  5750                           ; 1 bytes @ 0x0
  5751                           
  5752  0070                     ?_are_settings_changed:	
  5753                           ; 1 bytes @ 0x0
  5754                           
  5755  0070                     ?_parse_device_settings:	
  5756                           ; 1 bytes @ 0x0
  5757                           
  5758  0070                     ?_fill_osr_press_settings:	
  5759                           ; 1 bytes @ 0x0
  5760                           
  5761  0070                     ?_fill_osr_temp_settings:	
  5762                           ; 1 bytes @ 0x0
  5763                           
  5764  0070                     ?_fill_filter_settings:	
  5765                           ; 1 bytes @ 0x0
  5766                           
  5767  0070                     ?_fill_standby_settings:	
  5768                           ; 1 bytes @ 0x0
  5769                           
  5770  0070                     ?_parse_temp_press_calib_data:	
  5771                           ; 1 bytes @ 0x0
  5772                           
  5773  0070                     ?_parse_humidity_calib_data:	
  5774                           ; 1 bytes @ 0x0
  5775                           
  5776  0070                     ?_TMR0_SetInterruptHandler:	
  5777                           ; 1 bytes @ 0x0
  5778                           
  5779  0070                     ?_TMR0_DefaultInterruptHandler:	
  5780                           ; 1 bytes @ 0x0
  5781                           
  5782  0070                     ??_TMR0_DefaultInterruptHandler:	
  5783                           ; 1 bytes @ 0x0
  5784                           
  5785  0070                     ?_EUSART1_SetFramingErrorHandler:	
  5786                           ; 1 bytes @ 0x0
  5787                           
  5788  0070                     ?_EUSART1_SetOverrunErrorHandler:	
  5789                           ; 1 bytes @ 0x0
  5790                           
  5791  0070                     ?_EUSART1_SetErrorHandler:	
  5792                           ; 1 bytes @ 0x0
  5793                           
  5794  0070                     ?_PMD_Initialize:	
  5795                           ; 1 bytes @ 0x0
  5796                           
  5797  0070                     ??_PMD_Initialize:	
  5798                           ; 1 bytes @ 0x0
  5799                           
  5800  0070                     ?_PIN_MANAGER_Initialize:	
  5801                           ; 1 bytes @ 0x0
  5802                           
  5803  0070                     ??_PIN_MANAGER_Initialize:	
  5804                           ; 1 bytes @ 0x0
  5805                           
  5806  0070                     ?_OSCILLATOR_Initialize:	
  5807                           ; 1 bytes @ 0x0
  5808                           
  5809  0070                     ??_OSCILLATOR_Initialize:	
  5810                           ; 1 bytes @ 0x0
  5811                           
  5812  0070                     ?_I2C_UserAlert:	
  5813                           ; 1 bytes @ 0x0
  5814                           
  5815  0070                     ?_Sleep:	
  5816                           ; 1 bytes @ 0x0
  5817                           
  5818  0070                     ?_InitTiming:	
  5819                           ; 1 bytes @ 0x0
  5820                           
  5821  0070                     ?_bme280_init:	
  5822                           ; 1 bytes @ 0x0
  5823                           
  5824  0070                     ?_TMR0_Initialize:	
  5825                           ; 1 bytes @ 0x0
  5826                           
  5827  0070                     ?_TMR0_ISR:	
  5828                           ; 1 bytes @ 0x0
  5829                           
  5830  0070                     ??_TMR0_ISR:	
  5831                           ; 1 bytes @ 0x0
  5832                           
  5833  0070                     ?_EUSART1_Initialize:	
  5834                           ; 1 bytes @ 0x0
  5835                           
  5836  0070                     ?_EUSART1_is_rx_ready:	
  5837                           ; 1 bytes @ 0x0
  5838                           
  5839  0070                     ??_EUSART1_is_rx_ready:	
  5840                           ; 1 bytes @ 0x0
  5841                           
  5842  0070                     ?_EUSART1_Read:	
  5843                           ; 1 bytes @ 0x0
  5844                           
  5845  0070                     ??_EUSART1_Read:	
  5846                           ; 1 bytes @ 0x0
  5847                           
  5848  0070                     ?_EUSART1_Write:	
  5849                           ; 1 bytes @ 0x0
  5850                           
  5851  0070                     ??_EUSART1_Write:	
  5852                           ; 1 bytes @ 0x0
  5853                           
  5854  0070                     ?_INTERRUPT_InterruptManager:	
  5855                           ; 1 bytes @ 0x0
  5856                           
  5857  0070                     ??_INTERRUPT_InterruptManager:	
  5858                           ; 1 bytes @ 0x0
  5859                           
  5860  0070                     ?_SYSTEM_Initialize:	
  5861                           ; 1 bytes @ 0x0
  5862                           
  5863  0070                     ?_I2C_Wait_SSPIF:	
  5864                           ; 1 bytes @ 0x0
  5865                           
  5866  0070                     ?_I2C_Init:	
  5867                           ; 1 bytes @ 0x0
  5868                           
  5869  0070                     ??_I2C_Init:	
  5870                           ; 1 bytes @ 0x0
  5871                           
  5872  0070                     ?_I2C_WriteByte:	
  5873                           ; 1 bytes @ 0x0
  5874                           
  5875  0070                     ?_I2C_ReadByte:	
  5876                           ; 1 bytes @ 0x0
  5877                           
  5878  0070                     ?_I2C_Stop:	
  5879                           ; 1 bytes @ 0x0
  5880                           
  5881  0070                     ?_BME280_Init:	
  5882                           ; 1 bytes @ 0x0
  5883                           
  5884  0070                     ?_ClearString:	
  5885                           ; 1 bytes @ 0x0
  5886                           
  5887  0070                     ?_ClearStringn:	
  5888                           ; 1 bytes @ 0x0
  5889                           
  5890  0070                     ?_ClearTxData:	
  5891                           ; 1 bytes @ 0x0
  5892                           
  5893  0070                     ??_ClearTxData:	
  5894                           ; 1 bytes @ 0x0
  5895                           
  5896  0070                     ?_GPS_SendUBX:	
  5897                           ; 1 bytes @ 0x0
  5898                           
  5899  0070                     ?_GPS_HasAcknowledged:	
  5900                           ; 1 bytes @ 0x0
  5901                           
  5902  0070                     ??_GPS_HasAcknowledged:	
  5903                           ; 1 bytes @ 0x0
  5904                           
  5905  0070                     ?_SetupGPS:	
  5906                           ; 1 bytes @ 0x0
  5907                           
  5908  0070                     ?_ClearNMEA:	
  5909                           ; 1 bytes @ 0x0
  5910                           
  5911  0070                     ??_ClearNMEA:	
  5912                           ; 1 bytes @ 0x0
  5913                           
  5914  0070                     ?_PollGPS:	
  5915                           ; 1 bytes @ 0x0
  5916                           
  5917  0070                     ?_main:	
  5918                           ; 1 bytes @ 0x0
  5919                           
  5920  0070                     ?_TransmitBit:	
  5921                           ; 1 bytes @ 0x0
  5922                           
  5923  0070                     ?_TransmitChar:	
  5924                           ; 1 bytes @ 0x0
  5925                           
  5926  0070                     ?_TimerISR:	
  5927                           ; 1 bytes @ 0x0
  5928                           
  5929  0070                     ??_TimerISR:	
  5930                           ; 1 bytes @ 0x0
  5931                           
  5932  0070                     ?_strlen:	
  5933                           ; 1 bytes @ 0x0
  5934                           
  5935  0070                     ?_GetLengthUBX:	
  5936                           ; 2 bytes @ 0x0
  5937                           
  5938  0070                     ?___awdiv:	
  5939                           ; 2 bytes @ 0x0
  5940                           
  5941  0070                     ?___awmod:	
  5942                           ; 2 bytes @ 0x0
  5943                           
  5944  0070                     ?___lldiv:	
  5945                           ; 2 bytes @ 0x0
  5946                           
  5947  0070                     ?___llmod:	
  5948                           ; 4 bytes @ 0x0
  5949                           
  5950  0070                     parse_device_settings@settings:	
  5951                           ; 4 bytes @ 0x0
  5952                           
  5953  0070                     interleave_reg_addr@temp_buff:	
  5954                           ; 1 bytes @ 0x0
  5955                           
  5956  0070                     parse_temp_press_calib_data@dev:	
  5957                           ; 1 bytes @ 0x0
  5958                           
  5959  0070                     parse_humidity_calib_data@dev:	
  5960                           ; 1 bytes @ 0x0
  5961                           
  5962  0070                     are_settings_changed@desired_settings:	
  5963                           ; 1 bytes @ 0x0
  5964                           
  5965  0070                     EUSART1_Write@txData:	
  5966                           ; 1 bytes @ 0x0
  5967                           
  5968  0070                     I2C_UserAlert@status:	
  5969                           ; 1 bytes @ 0x0
  5970                           
  5971  0070                     fill_filter_settings@settings:	
  5972                           ; 1 bytes @ 0x0
  5973                           
  5974  0070                     fill_standby_settings@settings:	
  5975                           ; 2 bytes @ 0x0
  5976                           
  5977  0070                     fill_osr_press_settings@settings:	
  5978                           ; 2 bytes @ 0x0
  5979                           
  5980  0070                     fill_osr_temp_settings@settings:	
  5981                           ; 2 bytes @ 0x0
  5982                           
  5983  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  5984                           ; 2 bytes @ 0x0
  5985                           
  5986  0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  5987                           ; 2 bytes @ 0x0
  5988                           
  5989  0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  5990                           ; 2 bytes @ 0x0
  5991                           
  5992  0070                     EUSART1_SetErrorHandler@interruptHandler:	
  5993                           ; 2 bytes @ 0x0
  5994                           
  5995  0070                     ClearStringn@length:	
  5996                           ; 2 bytes @ 0x0
  5997                           
  5998  0070                     ___awdiv@divisor:	
  5999                           ; 2 bytes @ 0x0
  6000                           
  6001  0070                     ___awmod@divisor:	
  6002                           ; 2 bytes @ 0x0
  6003                           
  6004  0070                     strlen@s:	
  6005                           ; 2 bytes @ 0x0
  6006                           
  6007  0070                     Sleep@ms:	
  6008                           ; 2 bytes @ 0x0
  6009                           
  6010  0070                     ___lldiv@divisor:	
  6011                           ; 4 bytes @ 0x0
  6012                           
  6013  0070                     ___llmod@divisor:	
  6014                           ; 4 bytes @ 0x0
  6015                           
  6016                           
  6017                           ; 4 bytes @ 0x0
  6018  0070                     	ds	1
  6019  0071                     ??_are_settings_changed:	
  6020  0071                     ??_parse_device_settings:	
  6021                           ; 1 bytes @ 0x1
  6022                           
  6023  0071                     ??_parse_temp_press_calib_data:	
  6024                           ; 1 bytes @ 0x1
  6025                           
  6026  0071                     ??_parse_humidity_calib_data:	
  6027                           ; 1 bytes @ 0x1
  6028                           
  6029  0071                     interleave_reg_addr@reg_data:	
  6030                           ; 1 bytes @ 0x1
  6031                           
  6032  0071                     are_settings_changed@sub_settings:	
  6033                           ; 1 bytes @ 0x1
  6034                           
  6035                           
  6036                           ; 1 bytes @ 0x1
  6037  0071                     	ds	1
  6038  0072                     ??_fill_osr_press_settings:	
  6039  0072                     ??_fill_osr_temp_settings:	
  6040                           ; 1 bytes @ 0x2
  6041                           
  6042  0072                     ??_fill_filter_settings:	
  6043                           ; 1 bytes @ 0x2
  6044                           
  6045  0072                     ??_fill_standby_settings:	
  6046                           ; 1 bytes @ 0x2
  6047                           
  6048  0072                     ??_TMR0_SetInterruptHandler:	
  6049                           ; 1 bytes @ 0x2
  6050                           
  6051  0072                     ??_EUSART1_SetFramingErrorHandler:	
  6052                           ; 1 bytes @ 0x2
  6053                           
  6054  0072                     ??_EUSART1_SetOverrunErrorHandler:	
  6055                           ; 1 bytes @ 0x2
  6056                           
  6057  0072                     ??_EUSART1_SetErrorHandler:	
  6058                           ; 1 bytes @ 0x2
  6059                           
  6060  0072                     ??_strlen:	
  6061                           ; 1 bytes @ 0x2
  6062                           
  6063  0072                     ??_InitTiming:	
  6064                           ; 1 bytes @ 0x2
  6065                           
  6066  0072                     ??_TMR0_Initialize:	
  6067                           ; 1 bytes @ 0x2
  6068                           
  6069  0072                     ??_EUSART1_Initialize:	
  6070                           ; 1 bytes @ 0x2
  6071                           
  6072  0072                     ??_SYSTEM_Initialize:	
  6073                           ; 1 bytes @ 0x2
  6074                           
  6075  0072                     ??_ClearStringn:	
  6076                           ; 1 bytes @ 0x2
  6077                           
  6078  0072                     interleave_reg_addr@len:	
  6079                           ; 1 bytes @ 0x2
  6080                           
  6081  0072                     parse_temp_press_calib_data@calib_data:	
  6082                           ; 1 bytes @ 0x2
  6083                           
  6084  0072                     are_settings_changed@settings_changed:	
  6085                           ; 1 bytes @ 0x2
  6086                           
  6087  0072                     null_ptr_check@rslt:	
  6088                           ; 1 bytes @ 0x2
  6089                           
  6090  0072                     ClearTxData@i:	
  6091                           ; 1 bytes @ 0x2
  6092                           
  6093  0072                     ClearNMEA@i:	
  6094                           ; 2 bytes @ 0x2
  6095                           
  6096  0072                     ___awdiv@dividend:	
  6097                           ; 2 bytes @ 0x2
  6098                           
  6099  0072                     ___awmod@dividend:	
  6100                           ; 2 bytes @ 0x2
  6101                           
  6102                           
  6103                           ; 2 bytes @ 0x2
  6104  0072                     	ds	1
  6105  0073                     ??_interleave_reg_addr:	
  6106  0073                     ??_GetLengthUBX:	
  6107                           ; 1 bytes @ 0x3
  6108                           
  6109  0073                     parse_device_settings@reg_data:	
  6110                           ; 1 bytes @ 0x3
  6111                           
  6112  0073                     parse_temp_press_calib_data@reg_data:	
  6113                           ; 1 bytes @ 0x3
  6114                           
  6115  0073                     null_ptr_check@dev:	
  6116                           ; 1 bytes @ 0x3
  6117                           
  6118  0073                     ClearStringn@str:	
  6119                           ; 1 bytes @ 0x3
  6120                           
  6121  0073                     GetLengthUBX@data:	
  6122                           ; 1 bytes @ 0x3
  6123                           
  6124  0073                     strlen@a:	
  6125                           ; 1 bytes @ 0x3
  6126                           
  6127                           
  6128                           ; 2 bytes @ 0x3
  6129  0073                     	ds	1
  6130  0074                     ??_Sleep:	
  6131  0074                     ??_GPS_SendUBX:	
  6132                           ; 1 bytes @ 0x4
  6133                           
  6134  0074                     ??___awdiv:	
  6135                           ; 1 bytes @ 0x4
  6136                           
  6137  0074                     ??___awmod:	
  6138                           ; 1 bytes @ 0x4
  6139                           
  6140  0074                     parse_humidity_calib_data@dig_H4_lsb:	
  6141                           ; 1 bytes @ 0x4
  6142                           
  6143  0074                     ClearStringn@i:	
  6144                           ; 2 bytes @ 0x4
  6145                           
  6146  0074                     ___lldiv@dividend:	
  6147                           ; 2 bytes @ 0x4
  6148                           
  6149  0074                     ___llmod@dividend:	
  6150                           ; 4 bytes @ 0x4
  6151                           
  6152                           
  6153                           ; 4 bytes @ 0x4
  6154  0074                     	ds	1
  6155  0075                     ??_ClearString:	
  6156  0075                     ?_WriteGPS:	
  6157                           ; 1 bytes @ 0x5
  6158                           
  6159  0075                     ?_Insert:	
  6160                           ; 1 bytes @ 0x5
  6161                           
  6162  0075                     ?_crc16_update:	
  6163                           ; 2 bytes @ 0x5
  6164                           
  6165  0075                     fill_filter_settings@reg_data:	
  6166                           ; 2 bytes @ 0x5
  6167                           
  6168  0075                     fill_standby_settings@reg_data:	
  6169                           ; 1 bytes @ 0x5
  6170                           
  6171  0075                     fill_osr_press_settings@reg_data:	
  6172                           ; 1 bytes @ 0x5
  6173                           
  6174  0075                     fill_osr_temp_settings@reg_data:	
  6175                           ; 1 bytes @ 0x5
  6176                           
  6177  0075                     ___awdiv@counter:	
  6178                           ; 1 bytes @ 0x5
  6179                           
  6180  0075                     ___awmod@counter:	
  6181                           ; 1 bytes @ 0x5
  6182                           
  6183  0075                     Insert@dest:	
  6184                           ; 1 bytes @ 0x5
  6185                           
  6186  0075                     WriteGPS@message:	
  6187                           ; 2 bytes @ 0x5
  6188                           
  6189  0075                     GPS_SendUBX@length:	
  6190                           ; 2 bytes @ 0x5
  6191                           
  6192  0075                     crc16_update@pData:	
  6193                           ; 2 bytes @ 0x5
  6194                           
  6195                           
  6196                           ; 2 bytes @ 0x5
  6197  0075                     	ds	1
  6198  0076                     ?_GetAtRowCSV:	
  6199  0076                     interleave_reg_addr@reg_addr:	
  6200                           ; 1 bytes @ 0x6
  6201                           
  6202  0076                     ___awdiv@sign:	
  6203                           ; 1 bytes @ 0x6
  6204                           
  6205  0076                     ___awmod@sign:	
  6206                           ; 1 bytes @ 0x6
  6207                           
  6208  0076                     parse_humidity_calib_data@dig_H4_msb:	
  6209                           ; 1 bytes @ 0x6
  6210                           
  6211  0076                     ClearString@counti:	
  6212                           ; 2 bytes @ 0x6
  6213                           
  6214  0076                     GetAtRowCSV@src:	
  6215                           ; 2 bytes @ 0x6
  6216                           
  6217                           
  6218                           ; 2 bytes @ 0x6
  6219  0076                     	ds	1
  6220  0077                     ??_WriteGPS:	
  6221  0077                     interleave_reg_addr@index:	
  6222                           ; 1 bytes @ 0x7
  6223                           
  6224  0077                     Insert@src:	
  6225                           ; 1 bytes @ 0x7
  6226                           
  6227  0077                     GPS_SendUBX@data:	
  6228                           ; 1 bytes @ 0x7
  6229                           
  6230  0077                     crc16_update@length:	
  6231                           ; 1 bytes @ 0x7
  6232                           
  6233  0077                     ___awdiv@quotient:	
  6234                           ; 2 bytes @ 0x7
  6235                           
  6236                           
  6237                           ; 2 bytes @ 0x7
  6238  0077                     	ds	1
  6239  0078                     ??___lldiv:	
  6240  0078                     ??___llmod:	
  6241                           ; 1 bytes @ 0x8
  6242                           
  6243  0078                     parse_humidity_calib_data@dig_H5_lsb:	
  6244                           ; 1 bytes @ 0x8
  6245                           
  6246  0078                     ClearString@i:	
  6247                           ; 2 bytes @ 0x8
  6248                           
  6249  0078                     GetAtRowCSV@column:	
  6250                           ; 2 bytes @ 0x8
  6251                           
  6252  0078                     Insert@index:	
  6253                           ; 2 bytes @ 0x8
  6254                           
  6255  0078                     WriteGPS@counti:	
  6256                           ; 2 bytes @ 0x8
  6257                           
  6258  0078                     GPS_SendUBX@i:	
  6259                           ; 2 bytes @ 0x8
  6260                           
  6261  0078                     Sleep@start:	
  6262                           ; 2 bytes @ 0x8
  6263                           
  6264                           
  6265                           ; 4 bytes @ 0x8
  6266  0078                     	ds	1
  6267  0079                     ?_ReverseString:	
  6268  0079                     ___llmod@counter:	
  6269                           ; 1 bytes @ 0x9
  6270                           
  6271  0079                     ReverseString@str:	
  6272                           ; 1 bytes @ 0x9
  6273                           
  6274  0079                     crc16_update@wCrc:	
  6275                           ; 2 bytes @ 0x9
  6276                           
  6277  0079                     ___lldiv@quotient:	
  6278                           ; 2 bytes @ 0x9
  6279                           
  6280                           
  6281                           ; 4 bytes @ 0x9
  6282  0079                     	ds	1
  6283  007A                     ??_GetAtRowCSV:	
  6284  007A                     ClearString@str:	
  6285                           ; 1 bytes @ 0xA
  6286                           
  6287  007A                     parse_humidity_calib_data@dig_H5_msb:	
  6288                           ; 1 bytes @ 0xA
  6289                           
  6290  007A                     Insert@destLimit:	
  6291                           ; 2 bytes @ 0xA
  6292                           
  6293  007A                     WriteGPS@i:	
  6294                           ; 2 bytes @ 0xA
  6295                           
  6296                           
  6297                           ; 2 bytes @ 0xA
  6298  007A                     	ds	1
  6299  007B                     ?_IntToString:	
  6300  007B                     ??_crc16_update:	
  6301                           ; 1 bytes @ 0xB
  6302                           
  6303  007B                     ?_strcmp:	
  6304                           ; 1 bytes @ 0xB
  6305                           
  6306  007B                     IntToString@n:	
  6307                           ; 2 bytes @ 0xB
  6308                           
  6309  007B                     strcmp@r:	
  6310                           ; 2 bytes @ 0xB
  6311                           
  6312                           
  6313                           ; 2 bytes @ 0xB
  6314  007B                     	ds	1
  6315  007C                     ??_DebugAlert:	
  6316  007C                     ??_InsertString:	
  6317                           ; 1 bytes @ 0xC
  6318                           
  6319  007C                     ??_SetupGPS:	
  6320                           ; 1 bytes @ 0xC
  6321                           
  6322  007C                     ??_TransmitBit:	
  6323                           ; 1 bytes @ 0xC
  6324                           
  6325  007C                     ?_InsertTxDataSep:	
  6326                           ; 1 bytes @ 0xC
  6327                           
  6328  007C                     parse_humidity_calib_data@calib_data:	
  6329                           ; 2 bytes @ 0xC
  6330                           
  6331  007C                     TransmitBit@b:	
  6332                           ; 1 bytes @ 0xC
  6333                           
  6334  007C                     InsertTxDataSep@index:	
  6335                           ; 1 bytes @ 0xC
  6336                           
  6337                           
  6338                           ; 2 bytes @ 0xC
  6339  007C                     	ds	1
  6340  007D                     ??_I2C_UserAlert:	
  6341  007D                     ??_strcmp:	
  6342                           ; 1 bytes @ 0xD
  6343                           
  6344  007D                     ??_I2C_WriteByte:	
  6345                           ; 1 bytes @ 0xD
  6346                           
  6347  007D                     ??_I2C_ReadByte:	
  6348                           ; 1 bytes @ 0xD
  6349                           
  6350  007D                     ??_I2C_Stop:	
  6351                           ; 1 bytes @ 0xD
  6352                           
  6353  007D                     ??_TransmitChar:	
  6354                           ; 1 bytes @ 0xD
  6355                           
  6356  007D                     parse_humidity_calib_data@reg_data:	
  6357                           ; 1 bytes @ 0xD
  6358                           
  6359  007D                     I2C_WriteByte@data:	
  6360                           ; 1 bytes @ 0xD
  6361                           
  6362  007D                     IntToString@dest:	
  6363                           ; 1 bytes @ 0xD
  6364                           
  6365  007D                     ___lldiv@counter:	
  6366                           ; 1 bytes @ 0xD
  6367                           
  6368                           
  6369                           ; 1 bytes @ 0xD
  6370  007D                     	ds	1
  6371  007E                     ??_crc16:	
  6372  007E                     ??_InsertTxData:	
  6373                           ; 1 bytes @ 0xE
  6374                           
  6375                           
  6376                           	psect	cstackBANK0
  6377  0020                     __pcstackBANK0:	
  6378                           ; 1 bytes @ 0xE
  6379                           
  6380  0020                     ?_DebugAlert:	
  6381  0020                     ??_Insert:	
  6382                           ; 1 bytes @ 0x0
  6383                           
  6384  0020                     ??_ReverseString:	
  6385                           ; 1 bytes @ 0x0
  6386                           
  6387  0020                     crc16_update@i:	
  6388                           ; 1 bytes @ 0x0
  6389                           
  6390  0020                     TransmitChar@byte:	
  6391                           ; 1 bytes @ 0x0
  6392                           
  6393  0020                     DebugAlert@delay_high:	
  6394                           ; 1 bytes @ 0x0
  6395                           
  6396  0020                     GetAtRowCSV@counti:	
  6397                           ; 2 bytes @ 0x0
  6398                           
  6399  0020                     GPS_HasAcknowledged@startTime:	
  6400                           ; 2 bytes @ 0x0
  6401                           
  6402                           
  6403                           ; 4 bytes @ 0x0
  6404  0020                     	ds	1
  6405  0021                     ?_crc16:	
  6406  0021                     crc16@data:	
  6407                           ; 2 bytes @ 0x1
  6408                           
  6409  0021                     TransmitChar@i:	
  6410                           ; 2 bytes @ 0x1
  6411                           
  6412                           
  6413                           ; 2 bytes @ 0x1
  6414  0021                     	ds	1
  6415  0022                     DebugAlert@delay_low:	
  6416  0022                     GetAtRowCSV@col:	
  6417                           ; 2 bytes @ 0x2
  6418                           
  6419                           
  6420                           ; 2 bytes @ 0x2
  6421  0022                     	ds	1
  6422  0023                     ?_TransmitString:	
  6423  0023                     crc16@crc:	
  6424                           ; 1 bytes @ 0x3
  6425                           
  6426  0023                     TransmitString@message:	
  6427                           ; 2 bytes @ 0x3
  6428                           
  6429                           
  6430                           ; 2 bytes @ 0x3
  6431  0023                     	ds	1
  6432  0024                     DebugAlert@num_flashes:	
  6433  0024                     GPS_HasAcknowledged@ackByte:	
  6434                           ; 1 bytes @ 0x4
  6435                           
  6436  0024                     GetAtRowCSV@index:	
  6437                           ; 1 bytes @ 0x4
  6438                           
  6439  0024                     ReverseString@halfway:	
  6440                           ; 2 bytes @ 0x4
  6441                           
  6442                           
  6443                           ; 2 bytes @ 0x4
  6444  0024                     	ds	1
  6445  0025                     ??_TransmitString:	
  6446  0025                     DebugAlert@i:	
  6447                           ; 1 bytes @ 0x5
  6448                           
  6449  0025                     Insert@length:	
  6450                           ; 2 bytes @ 0x5
  6451                           
  6452  0025                     GPS_HasAcknowledged@ackPacket:	
  6453                           ; 2 bytes @ 0x5
  6454                           
  6455                           
  6456                           ; 10 bytes @ 0x5
  6457  0025                     	ds	1
  6458  0026                     ReverseString@temp:	
  6459  0026                     GetAtRowCSV@i:	
  6460                           ; 1 bytes @ 0x6
  6461                           
  6462  0026                     TransmitString@counti:	
  6463                           ; 2 bytes @ 0x6
  6464                           
  6465                           
  6466                           ; 2 bytes @ 0x6
  6467  0026                     	ds	1
  6468  0027                     ??_I2C_Wait_SSPIF:	
  6469  0027                     Insert@i:	
  6470                           ; 1 bytes @ 0x7
  6471                           
  6472  0027                     ReverseString@opposite:	
  6473                           ; 2 bytes @ 0x7
  6474                           
  6475                           
  6476                           ; 2 bytes @ 0x7
  6477  0027                     	ds	1
  6478  0028                     strcmp@l:	
  6479  0028                     TransmitString@i:	
  6480                           ; 1 bytes @ 0x8
  6481                           
  6482                           
  6483                           ; 2 bytes @ 0x8
  6484  0028                     	ds	1
  6485  0029                     ??_InsertTxDataSep:	
  6486  0029                     ?_InsertString:	
  6487                           ; 1 bytes @ 0x9
  6488                           
  6489  0029                     InsertString@dest:	
  6490                           ; 2 bytes @ 0x9
  6491                           
  6492  0029                     ReverseString@counti:	
  6493                           ; 2 bytes @ 0x9
  6494                           
  6495                           
  6496                           ; 2 bytes @ 0x9
  6497  0029                     	ds	2
  6498  002B                     ?_WriteEnvSensor:	
  6499  002B                     I2C_ReadByte@ackbit:	
  6500                           ; 1 bytes @ 0xB
  6501                           
  6502  002B                     WriteEnvSensor@dev_id:	
  6503                           ; 1 bytes @ 0xB
  6504                           
  6505  002B                     InsertString@src:	
  6506                           ; 1 bytes @ 0xB
  6507                           
  6508  002B                     ReverseString@i:	
  6509                           ; 2 bytes @ 0xB
  6510                           
  6511                           
  6512                           ; 2 bytes @ 0xB
  6513  002B                     	ds	1
  6514  002C                     I2C_ReadByte@rcvdata:	
  6515  002C                     WriteEnvSensor@reg_addr:	
  6516                           ; 1 bytes @ 0xC
  6517                           
  6518                           
  6519                           ; 1 bytes @ 0xC
  6520  002C                     	ds	1
  6521  002D                     ?_ReadEnvSensor:	
  6522  002D                     ?_UIntToHexString:	
  6523                           ; 1 bytes @ 0xD
  6524                           
  6525  002D                     ??_IntToString:	
  6526                           ; 1 bytes @ 0xD
  6527                           
  6528  002D                     ?_UIntToString:	
  6529                           ; 1 bytes @ 0xD
  6530                           
  6531  002D                     ReadEnvSensor@dev_id:	
  6532                           ; 1 bytes @ 0xD
  6533                           
  6534  002D                     WriteEnvSensor@reg_data:	
  6535                           ; 1 bytes @ 0xD
  6536                           
  6537  002D                     InsertString@index:	
  6538                           ; 1 bytes @ 0xD
  6539                           
  6540  002D                     UIntToHexString@n:	
  6541                           ; 2 bytes @ 0xD
  6542                           
  6543  002D                     UIntToString@n:	
  6544                           ; 4 bytes @ 0xD
  6545                           
  6546                           
  6547                           ; 4 bytes @ 0xD
  6548  002D                     	ds	1
  6549  002E                     ReadEnvSensor@reg_addr:	
  6550  002E                     WriteEnvSensor@len:	
  6551                           ; 1 bytes @ 0xE
  6552                           
  6553                           
  6554                           ; 2 bytes @ 0xE
  6555  002E                     	ds	1
  6556  002F                     ReadEnvSensor@reg_data:	
  6557  002F                     IntToString@sign:	
  6558                           ; 1 bytes @ 0xF
  6559                           
  6560  002F                     GPS_HasAcknowledged@data:	
  6561                           ; 1 bytes @ 0xF
  6562                           
  6563  002F                     InsertString@destLimit:	
  6564                           ; 1 bytes @ 0xF
  6565                           
  6566                           
  6567                           ; 2 bytes @ 0xF
  6568  002F                     	ds	1
  6569  0030                     ??_WriteEnvSensor:	
  6570  0030                     GPS_HasAcknowledged@ackByteID:	
  6571                           ; 1 bytes @ 0x10
  6572                           
  6573  0030                     ReadEnvSensor@len:	
  6574                           ; 1 bytes @ 0x10
  6575                           
  6576  0030                     IntToString@i:	
  6577                           ; 2 bytes @ 0x10
  6578                           
  6579                           
  6580                           ; 2 bytes @ 0x10
  6581  0030                     	ds	1
  6582  0031                     WriteEnvSensor@rslt:	
  6583  0031                     UIntToHexString@dest:	
  6584                           ; 1 bytes @ 0x11
  6585                           
  6586  0031                     UIntToString@dest:	
  6587                           ; 1 bytes @ 0x11
  6588                           
  6589  0031                     GPS_HasAcknowledged@i:	
  6590                           ; 1 bytes @ 0x11
  6591                           
  6592  0031                     InsertString@counti:	
  6593                           ; 1 bytes @ 0x11
  6594                           
  6595                           
  6596                           ; 2 bytes @ 0x11
  6597  0031                     	ds	1
  6598  0032                     ??_ReadEnvSensor:	
  6599  0032                     ??_UIntToHexString:	
  6600                           ; 1 bytes @ 0x12
  6601                           
  6602  0032                     ??_UIntToString:	
  6603                           ; 1 bytes @ 0x12
  6604                           
  6605  0032                     WriteEnvSensor@i:	
  6606                           ; 1 bytes @ 0x12
  6607                           
  6608                           
  6609                           ; 2 bytes @ 0x12
  6610  0032                     	ds	1
  6611  0033                     InsertString@i:	
  6612                           
  6613                           ; 2 bytes @ 0x13
  6614  0033                     	ds	1
  6615  0034                     ?_bme280_set_regs:	
  6616  0034                     bme280_set_regs@reg_data:	
  6617                           ; 1 bytes @ 0x14
  6618                           
  6619  0034                     ReadEnvSensor@rslt:	
  6620                           ; 1 bytes @ 0x14
  6621                           
  6622  0034                     UIntToString@i:	
  6623                           ; 1 bytes @ 0x14
  6624                           
  6625  0034                     _UIntToHexString$1753:	
  6626                           ; 2 bytes @ 0x14
  6627                           
  6628                           
  6629                           ; 4 bytes @ 0x14
  6630  0034                     	ds	1
  6631  0035                     ?_InsertTxData:	
  6632  0035                     bme280_set_regs@len:	
  6633                           ; 2 bytes @ 0x15
  6634                           
  6635  0035                     ReadEnvSensor@i:	
  6636                           ; 1 bytes @ 0x15
  6637                           
  6638  0035                     InsertTxData@index:	
  6639                           ; 2 bytes @ 0x15
  6640                           
  6641                           
  6642                           ; 2 bytes @ 0x15
  6643  0035                     	ds	1
  6644  0036                     bme280_set_regs@dev:	
  6645                           
  6646                           ; 1 bytes @ 0x16
  6647  0036                     	ds	1
  6648  0037                     ?_bme280_get_regs:	
  6649  0037                     ??_bme280_set_regs:	
  6650                           ; 1 bytes @ 0x17
  6651                           
  6652  0037                     bme280_get_regs@reg_data:	
  6653                           ; 1 bytes @ 0x17
  6654                           
  6655  0037                     InsertTxData@field:	
  6656                           ; 1 bytes @ 0x17
  6657                           
  6658                           
  6659                           ; 2 bytes @ 0x17
  6660  0037                     	ds	1
  6661  0038                     bme280_get_regs@len:	
  6662  0038                     UIntToHexString@remainder:	
  6663                           ; 2 bytes @ 0x18
  6664                           
  6665                           
  6666                           ; 4 bytes @ 0x18
  6667  0038                     	ds	1
  6668  0039                     ??_PollGPS:	
  6669                           
  6670                           ; 1 bytes @ 0x19
  6671  0039                     	ds	1
  6672  003A                     bme280_get_regs@dev:	
  6673  003A                     bme280_set_regs@temp_buff:	
  6674                           ; 1 bytes @ 0x1A
  6675                           
  6676                           
  6677                           ; 20 bytes @ 0x1A
  6678  003A                     	ds	1
  6679  003B                     ??_bme280_get_regs:	
  6680                           
  6681                           ; 1 bytes @ 0x1B
  6682  003B                     	ds	1
  6683  003C                     UIntToHexString@i:	
  6684                           
  6685                           ; 4 bytes @ 0x1C
  6686  003C                     	ds	1
  6687  003D                     PollGPS@startTime:	
  6688                           
  6689                           ; 4 bytes @ 0x1D
  6690  003D                     	ds	1
  6691  003E                     bme280_get_regs@reg_addr:	
  6692                           
  6693                           ; 1 bytes @ 0x1E
  6694  003E                     	ds	1
  6695  003F                     bme280_get_regs@rslt:	
  6696                           
  6697                           ; 1 bytes @ 0x1F
  6698  003F                     	ds	1
  6699  0040                     ??_get_calib_data:	
  6700  0040                     ?_bme280_get_sensor_mode:	
  6701                           ; 1 bytes @ 0x20
  6702                           
  6703  0040                     bme280_get_sensor_mode@dev:	
  6704                           ; 1 bytes @ 0x20
  6705                           
  6706                           
  6707                           ; 1 bytes @ 0x20
  6708  0040                     	ds	1
  6709  0041                     ??_bme280_get_sensor_mode:	
  6710  0041                     PollGPS@counti:	
  6711                           ; 1 bytes @ 0x21
  6712                           
  6713                           
  6714                           ; 2 bytes @ 0x21
  6715  0041                     	ds	2
  6716  0043                     PollGPS@success:	
  6717  0043                     get_calib_data@calib_data:	
  6718                           ; 1 bytes @ 0x23
  6719                           
  6720                           
  6721                           ; 26 bytes @ 0x23
  6722  0043                     	ds	1
  6723  0044                     bme280_get_sensor_mode@rslt:	
  6724  0044                     _PollGPS$2658:	
  6725                           ; 1 bytes @ 0x24
  6726                           
  6727                           
  6728                           ; 1 bytes @ 0x24
  6729  0044                     	ds	1
  6730  0045                     bme280_get_sensor_mode@sensor_mode:	
  6731  0045                     PollGPS@eusart_complete:	
  6732                           ; 1 bytes @ 0x25
  6733                           
  6734                           
  6735                           ; 1 bytes @ 0x25
  6736  0045                     	ds	1
  6737  0046                     PollGPS@byte:	
  6738                           
  6739                           ; 1 bytes @ 0x26
  6740  0046                     	ds	1
  6741  0047                     PollGPS@i:	
  6742                           
  6743                           ; 2 bytes @ 0x27
  6744  0047                     	ds	2
  6745  0049                     PollGPS@index:	
  6746                           
  6747                           ; 2 bytes @ 0x29
  6748  0049                     	ds	5
  6749  004E                     bme280_set_regs@temp_len:	
  6750                           
  6751                           ; 2 bytes @ 0x2E
  6752  004E                     	ds	2
  6753  0050                     bme280_set_regs@reg_addr_cnt:	
  6754                           
  6755                           ; 1 bytes @ 0x30
  6756  0050                     	ds	1
  6757  0051                     bme280_set_regs@rslt:	
  6758                           
  6759                           ; 1 bytes @ 0x31
  6760  0051                     	ds	1
  6761  0052                     bme280_set_regs@reg_addr:	
  6762                           
  6763                           ; 1 bytes @ 0x32
  6764  0052                     	ds	1
  6765  0053                     ??_bme280_soft_reset:	
  6766  0053                     ?_set_filter_standby_settings:	
  6767                           ; 1 bytes @ 0x33
  6768                           
  6769  0053                     ?_write_power_mode:	
  6770                           ; 1 bytes @ 0x33
  6771                           
  6772  0053                     ?_set_osr_humidity_settings:	
  6773                           ; 1 bytes @ 0x33
  6774                           
  6775  0053                     ?_set_osr_press_temp_settings:	
  6776                           ; 1 bytes @ 0x33
  6777                           
  6778  0053                     write_power_mode@dev:	
  6779                           ; 1 bytes @ 0x33
  6780                           
  6781  0053                     set_osr_humidity_settings@settings:	
  6782                           ; 1 bytes @ 0x33
  6783                           
  6784  0053                     set_osr_press_temp_settings@settings:	
  6785                           ; 2 bytes @ 0x33
  6786                           
  6787  0053                     set_filter_standby_settings@settings:	
  6788                           ; 2 bytes @ 0x33
  6789                           
  6790                           
  6791                           ; 2 bytes @ 0x33
  6792  0053                     	ds	1
  6793  0054                     ??_write_power_mode:	
  6794                           
  6795                           ; 1 bytes @ 0x34
  6796  0054                     	ds	1
  6797  0055                     set_osr_humidity_settings@dev:	
  6798  0055                     set_osr_press_temp_settings@dev:	
  6799                           ; 1 bytes @ 0x35
  6800                           
  6801  0055                     set_filter_standby_settings@dev:	
  6802                           ; 1 bytes @ 0x35
  6803                           
  6804                           
  6805                           ; 1 bytes @ 0x35
  6806  0055                     	ds	1
  6807  0056                     ??_set_filter_standby_settings:	
  6808  0056                     ??_set_osr_humidity_settings:	
  6809                           ; 1 bytes @ 0x36
  6810                           
  6811  0056                     ??_set_osr_press_temp_settings:	
  6812                           ; 1 bytes @ 0x36
  6813                           
  6814  0056                     bme280_soft_reset@soft_rst_cmd:	
  6815                           ; 1 bytes @ 0x36
  6816                           
  6817                           
  6818                           ; 1 bytes @ 0x36
  6819  0056                     	ds	1
  6820  0057                     bme280_soft_reset@rslt:	
  6821  0057                     write_power_mode@sensor_mode:	
  6822                           ; 1 bytes @ 0x37
  6823                           
  6824                           
  6825                           ; 1 bytes @ 0x37
  6826  0057                     	ds	1
  6827  0058                     bme280_soft_reset@reg_addr:	
  6828  0058                     write_power_mode@rslt:	
  6829                           ; 1 bytes @ 0x38
  6830                           
  6831                           
  6832                           ; 1 bytes @ 0x38
  6833  0058                     	ds	1
  6834  0059                     bme280_soft_reset@dev:	
  6835  0059                     set_osr_humidity_settings@ctrl_hum:	
  6836                           ; 1 bytes @ 0x39
  6837                           
  6838  0059                     set_osr_press_temp_settings@desired_settings:	
  6839                           ; 1 bytes @ 0x39
  6840                           
  6841  0059                     set_filter_standby_settings@desired_settings:	
  6842                           ; 1 bytes @ 0x39
  6843                           
  6844  0059                     write_power_mode@reg_addr:	
  6845                           ; 1 bytes @ 0x39
  6846                           
  6847                           
  6848                           ; 1 bytes @ 0x39
  6849  0059                     	ds	1
  6850  005A                     set_osr_humidity_settings@ctrl_meas:	
  6851  005A                     set_osr_press_temp_settings@rslt:	
  6852                           ; 1 bytes @ 0x3A
  6853                           
  6854  005A                     set_filter_standby_settings@rslt:	
  6855                           ; 1 bytes @ 0x3A
  6856                           
  6857  005A                     write_power_mode@sensor_mode_reg_val:	
  6858                           ; 1 bytes @ 0x3A
  6859                           
  6860                           
  6861                           ; 1 bytes @ 0x3A
  6862  005A                     	ds	1
  6863  005B                     set_osr_humidity_settings@rslt:	
  6864  005B                     set_osr_press_temp_settings@reg_addr:	
  6865                           ; 1 bytes @ 0x3B
  6866                           
  6867  005B                     set_filter_standby_settings@reg_addr:	
  6868                           ; 1 bytes @ 0x3B
  6869                           
  6870                           
  6871                           ; 1 bytes @ 0x3B
  6872  005B                     	ds	1
  6873  005C                     set_osr_humidity_settings@reg_addr:	
  6874  005C                     set_osr_press_temp_settings@reg_data:	
  6875                           ; 1 bytes @ 0x3C
  6876                           
  6877  005C                     set_filter_standby_settings@reg_data:	
  6878                           ; 1 bytes @ 0x3C
  6879                           
  6880                           
  6881                           ; 1 bytes @ 0x3C
  6882  005C                     	ds	1
  6883  005D                     ?_set_osr_settings:	
  6884  005D                     set_osr_settings@settings:	
  6885                           ; 1 bytes @ 0x3D
  6886                           
  6887                           
  6888                           ; 2 bytes @ 0x3D
  6889  005D                     	ds	1
  6890  005E                     get_calib_data@rslt:	
  6891                           
  6892                           ; 1 bytes @ 0x3E
  6893  005E                     	ds	1
  6894  005F                     set_osr_settings@dev:	
  6895  005F                     get_calib_data@dev:	
  6896                           ; 1 bytes @ 0x3F
  6897                           
  6898                           
  6899                           ; 1 bytes @ 0x3F
  6900  005F                     	ds	1
  6901  0060                     ??_set_osr_settings:	
  6902  0060                     ??_bme280_init:	
  6903                           ; 1 bytes @ 0x40
  6904                           
  6905                           
  6906                           ; 1 bytes @ 0x40
  6907  0060                     	ds	2
  6908  0062                     set_osr_settings@rslt:	
  6909                           
  6910                           ; 1 bytes @ 0x42
  6911  0062                     	ds	1
  6912  0063                     bme280_init@try_count:	
  6913  0063                     set_osr_settings@desired_settings:	
  6914                           ; 1 bytes @ 0x43
  6915                           
  6916                           
  6917                           ; 1 bytes @ 0x43
  6918  0063                     	ds	1
  6919  0064                     ?_reload_device_settings:	
  6920  0064                     bme280_init@chip_id:	
  6921                           ; 1 bytes @ 0x44
  6922                           
  6923  0064                     reload_device_settings@dev:	
  6924                           ; 1 bytes @ 0x44
  6925                           
  6926                           
  6927                           ; 1 bytes @ 0x44
  6928  0064                     	ds	1
  6929  0065                     ??_reload_device_settings:	
  6930  0065                     bme280_init@rslt:	
  6931                           ; 1 bytes @ 0x45
  6932                           
  6933                           
  6934                           ; 1 bytes @ 0x45
  6935  0065                     	ds	1
  6936  0066                     bme280_init@dev:	
  6937                           
  6938                           ; 1 bytes @ 0x46
  6939  0066                     	ds	1
  6940  0067                     reload_device_settings@settings:	
  6941                           
  6942                           ; 1 bytes @ 0x47
  6943  0067                     	ds	1
  6944  0068                     reload_device_settings@rslt:	
  6945                           
  6946                           ; 1 bytes @ 0x48
  6947  0068                     	ds	1
  6948  0069                     ??_put_device_to_sleep:	
  6949                           
  6950                           ; 1 bytes @ 0x49
  6951  0069                     	ds	3
  6952  006C                     ?_bme280_set_sensor_settings:	
  6953  006C                     ?_bme280_set_sensor_mode:	
  6954                           ; 1 bytes @ 0x4C
  6955                           
  6956  006C                     bme280_set_sensor_settings@dev:	
  6957                           ; 1 bytes @ 0x4C
  6958                           
  6959  006C                     bme280_set_sensor_mode@dev:	
  6960                           ; 1 bytes @ 0x4C
  6961                           
  6962                           
  6963                           ; 1 bytes @ 0x4C
  6964  006C                     	ds	1
  6965  006D                     ??_bme280_set_sensor_settings:	
  6966  006D                     ??_bme280_set_sensor_mode:	
  6967                           ; 1 bytes @ 0x4D
  6968                           
  6969                           
  6970                           ; 1 bytes @ 0x4D
  6971  006D                     	ds	2
  6972                           
  6973                           	psect	maintext
  6974  004D                     __pmaintext:	
  6975 ;;
  6976 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  6977 ;;
  6978 ;; *************** function _main *****************
  6979 ;; Defined at:
  6980 ;;		line 602 in file "main.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  sensor_data    12   18[BANK4 ] struct bme280_data
  6985 ;;  end             2   16[BANK4 ] int 
  6986 ;;  convertedNum   16    0[BANK4 ] unsigned char [16]
  6987 ;;  index           2   30[BANK4 ] int 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : B3F/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6998 ;;      Locals:         0       0       0       0       0      32       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6999 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7000 ;;      Totals:         0       0       5       0       0      32       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7001 ;;Total ram usage:       37 bytes
  7002 ;; Hardware stack levels required when called:   17
  7003 ;; This function calls:
  7004 ;;		_BME280_Init
  7005 ;;		_ClearString
  7006 ;;		_ClearTxData
  7007 ;;		_DebugAlert
  7008 ;;		_InitTiming
  7009 ;;		_Insert
  7010 ;;		_InsertString
  7011 ;;		_IntToString
  7012 ;;		_PollGPS
  7013 ;;		_SYSTEM_Initialize
  7014 ;;		_SetupGPS
  7015 ;;		_Sleep
  7016 ;;		_TransmitString
  7017 ;;		_UIntToHexString
  7018 ;;		_UIntToString
  7019 ;;		_crc16
  7020 ;;		_strlen
  7021 ;; This function is called by:
  7022 ;;		Startup code after reset
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           
  7027                           ;psect for function _main
  7028  004D                     _main:	
  7029                           
  7030                           ;main.c: 605:     SYSTEM_Initialize();
  7031                           
  7032                           ;incstack = 0
  7033 ;; hardware stack exceeded
  7034                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7035  004D  3192  22C1  3180   	fcall	_SYSTEM_Initialize
  7036                           
  7037                           ;main.c: 606:     InitTiming();
  7038  0050  3192  2255  3180   	fcall	_InitTiming
  7039                           
  7040                           ;main.c: 609:     BME280_Init();
  7041  0053  318E  263B  3180   	fcall	_BME280_Init
  7042                           
  7043                           ;main.c: 612:     SetupGPS();
  7044  0056  318A  2221  3180   	fcall	_SetupGPS
  7045  0059                     l6464:	
  7046                           
  7047                           ;main.c: 616:     {;main.c: 617:         int index = 0;
  7048  0059  0144               	movlb	4	; select bank4
  7049  005A  01EA               	clrf	main@index^(0+512)
  7050  005B  01EB               	clrf	(main@index+1)^(0+512)
  7051                           
  7052                           ;main.c: 618:         char convertedNumber[16] = {'\0'};
  7053  005C  304C               	movlw	low main@convertedNumber
  7054  005D  0086               	movwf	6
  7055  005E  3002               	movlw	high main@convertedNumber
  7056  005F  0087               	movwf	7
  7057  0060  3010               	movlw	16
  7058  0061  0141               	movlb	1	; select bank1
  7059  0062  00CC               	movwf	??_main^(0+128)
  7060  0063  3000               	movlw	0
  7061  0064                     u6730:	
  7062  0064  001E               	movwi fsr1++
  7063  0065  0BCC               	decfsz	??_main^(0+128),f
  7064  0066  2864               	goto	u6730
  7065                           
  7066                           ;main.c: 621:         ClearTxData();
  7067  0067  3193  23F0  3180   	fcall	_ClearTxData
  7068                           
  7069                           ;main.c: 624:         index = InsertString(txdata, "Wisp-1", index, 140);
  7070  006A  3064               	movlw	100
  7071  006B  0140               	movlb	0	; select bank0
  7072  006C  00A9               	movwf	InsertString@dest
  7073  006D  3027               	movlw	39
  7074  006E  00AA               	movwf	InsertString@dest+1
  7075  006F  30AA               	movlw	low (STR_8| (0+32768))
  7076  0070  00AB               	movwf	InsertString@src
  7077  0071  3098               	movlw	high (STR_8| (0+32768))
  7078  0072  00AC               	movwf	InsertString@src+1
  7079  0073  0144               	movlb	4	; select bank4
  7080  0074  086B               	movf	(main@index+1)^(0+512),w
  7081  0075  0140               	movlb	0	; select bank0
  7082  0076  00AE               	movwf	InsertString@index+1
  7083  0077  0144               	movlb	4	; select bank4
  7084  0078  086A               	movf	main@index^(0+512),w
  7085  0079  0140               	movlb	0	; select bank0
  7086  007A  00AD               	movwf	InsertString@index
  7087  007B  308C               	movlw	140
  7088  007C  00AF               	movwf	InsertString@destLimit
  7089  007D  3000               	movlw	0
  7090  007E  00B0               	movwf	InsertString@destLimit+1
  7091  007F  318B  23AE  3180   	fcall	_InsertString
  7092  0082  0140               	movlb	0	; select bank0
  7093  0083  082A               	movf	?_InsertString+1,w
  7094  0084  0144               	movlb	4	; select bank4
  7095  0085  00EB               	movwf	(main@index+1)^(0+512)
  7096  0086  0140               	movlb	0	; select bank0
  7097  0087  0829               	movf	?_InsertString,w
  7098  0088  0144               	movlb	4	; select bank4
  7099  0089  00EA               	movwf	main@index^(0+512)
  7100                           
  7101                           ;main.c: 625:         index = Insert(txdata, ',', index, 140);
  7102  008A  3064               	movlw	100
  7103  008B  00F5               	movwf	Insert@dest
  7104  008C  3027               	movlw	39
  7105  008D  00F6               	movwf	Insert@dest+1
  7106  008E  302C               	movlw	44
  7107  008F  0141               	movlb	1	; select bank1
  7108  0090  00CC               	movwf	??_main^(0+128)
  7109  0091  084C               	movf	??_main^(0+128),w
  7110  0092  00F7               	movwf	Insert@src
  7111  0093  0144               	movlb	4	; select bank4
  7112  0094  086B               	movf	(main@index+1)^(0+512),w
  7113  0095  00F9               	movwf	Insert@index+1
  7114  0096  086A               	movf	main@index^(0+512),w
  7115  0097  00F8               	movwf	Insert@index
  7116  0098  308C               	movlw	140
  7117  0099  00FA               	movwf	Insert@destLimit
  7118  009A  3000               	movlw	0
  7119  009B  00FB               	movwf	Insert@destLimit+1
  7120  009C  318F  2715  3180   	fcall	_Insert
  7121  009F  0876               	movf	?_Insert+1,w
  7122  00A0  0144               	movlb	4	; select bank4
  7123  00A1  00EB               	movwf	(main@index+1)^(0+512)
  7124  00A2  0875               	movf	?_Insert,w
  7125  00A3  00EA               	movwf	main@index^(0+512)
  7126                           
  7127                           ;main.c: 626:         ClearString(convertedNumber);
  7128  00A4  304C               	movlw	(low (main@convertedNumber| (0+512)))& (0+255)
  7129  00A5  3194  24BB  3180   	fcall	_ClearString
  7130                           
  7131                           ;main.c: 627:         IntToString(id, convertedNumber);
  7132  00A8  0141               	movlb	1	; select bank1
  7133  00A9  0831               	movf	(_id+1)^(0+128),w
  7134  00AA  00FC               	movwf	IntToString@n+1
  7135  00AB  0830               	movf	_id^(0+128),w
  7136  00AC  00FB               	movwf	IntToString@n
  7137  00AD  304C               	movlw	(low (main@convertedNumber| (0+512)))& (0+255)
  7138  00AE  00CC               	movwf	??_main^(0+128)
  7139  00AF  084C               	movf	??_main^(0+128),w
  7140  00B0  00FD               	movwf	IntToString@dest
  7141  00B1  318D  25CF  3180   	fcall	_IntToString
  7142                           
  7143                           ;main.c: 628:         index = InsertString(txdata, convertedNumber, index, 140);
  7144  00B4  3064               	movlw	100
  7145  00B5  0140               	movlb	0	; select bank0
  7146  00B6  00A9               	movwf	InsertString@dest
  7147  00B7  3027               	movlw	39
  7148  00B8  00AA               	movwf	InsertString@dest+1
  7149  00B9  304C               	movlw	low main@convertedNumber
  7150  00BA  00AB               	movwf	InsertString@src
  7151  00BB  3002               	movlw	high main@convertedNumber
  7152  00BC  00AC               	movwf	InsertString@src+1
  7153  00BD  0144               	movlb	4	; select bank4
  7154  00BE  086B               	movf	(main@index+1)^(0+512),w
  7155  00BF  0140               	movlb	0	; select bank0
  7156  00C0  00AE               	movwf	InsertString@index+1
  7157  00C1  0144               	movlb	4	; select bank4
  7158  00C2  086A               	movf	main@index^(0+512),w
  7159  00C3  0140               	movlb	0	; select bank0
  7160  00C4  00AD               	movwf	InsertString@index
  7161  00C5  308C               	movlw	140
  7162  00C6  00AF               	movwf	InsertString@destLimit
  7163  00C7  3000               	movlw	0
  7164  00C8  00B0               	movwf	InsertString@destLimit+1
  7165  00C9  318B  23AE  3180   	fcall	_InsertString
  7166  00CC  0140               	movlb	0	; select bank0
  7167  00CD  082A               	movf	?_InsertString+1,w
  7168  00CE  0144               	movlb	4	; select bank4
  7169  00CF  00EB               	movwf	(main@index+1)^(0+512)
  7170  00D0  0140               	movlb	0	; select bank0
  7171  00D1  0829               	movf	?_InsertString,w
  7172  00D2  0144               	movlb	4	; select bank4
  7173  00D3  00EA               	movwf	main@index^(0+512)
  7174                           
  7175                           ;main.c: 629:         index = Insert(txdata, ',', index, 140);
  7176  00D4  3064               	movlw	100
  7177  00D5  00F5               	movwf	Insert@dest
  7178  00D6  3027               	movlw	39
  7179  00D7  00F6               	movwf	Insert@dest+1
  7180  00D8  302C               	movlw	44
  7181  00D9  0141               	movlb	1	; select bank1
  7182  00DA  00CC               	movwf	??_main^(0+128)
  7183  00DB  084C               	movf	??_main^(0+128),w
  7184  00DC  00F7               	movwf	Insert@src
  7185  00DD  0144               	movlb	4	; select bank4
  7186  00DE  086B               	movf	(main@index+1)^(0+512),w
  7187  00DF  00F9               	movwf	Insert@index+1
  7188  00E0  086A               	movf	main@index^(0+512),w
  7189  00E1  00F8               	movwf	Insert@index
  7190  00E2  308C               	movlw	140
  7191  00E3  00FA               	movwf	Insert@destLimit
  7192  00E4  3000               	movlw	0
  7193  00E5  00FB               	movwf	Insert@destLimit+1
  7194  00E6  318F  2715  3180   	fcall	_Insert
  7195  00E9  0876               	movf	?_Insert+1,w
  7196  00EA  0144               	movlb	4	; select bank4
  7197  00EB  00EB               	movwf	(main@index+1)^(0+512)
  7198  00EC  0875               	movf	?_Insert,w
  7199  00ED  00EA               	movwf	main@index^(0+512)
  7200                           
  7201                           ;main.c: 633:         if (PollGPS())
  7202  00EE  3182  2291  3180   	fcall	_PollGPS
  7203  00F1  3A00               	xorlw	0
  7204  00F2  1903               	skipnz
  7205  00F3  2A73               	goto	l6522
  7206                           
  7207                           ;main.c: 637:         {;main.c: 638:             struct bme280_data sensor_data;;main.c:
      +                           642:             index = strlen(txdata);
  7208  00F4  3064               	movlw	100
  7209  00F5  00F0               	movwf	strlen@s
  7210  00F6  3027               	movlw	39
  7211  00F7  00F1               	movwf	strlen@s+1
  7212  00F8  3193  231D  3180   	fcall	_strlen
  7213  00FB  0871               	movf	?_strlen+1,w
  7214  00FC  0144               	movlb	4	; select bank4
  7215  00FD  00EB               	movwf	(main@index+1)^(0+512)
  7216  00FE  0870               	movf	?_strlen,w
  7217  00FF  00EA               	movwf	main@index^(0+512)
  7218                           
  7219                           ;main.c: 645:             IntToString(sensor_data.temperature, convertedNumber);
  7220  0100  0863               	movf	((main@sensor_data+1)^(0+512)+4),w
  7221  0101  00FC               	movwf	IntToString@n+1
  7222  0102  0862               	movf	(main@sensor_data^(0+512)+4),w
  7223  0103  00FB               	movwf	IntToString@n
  7224  0104  304C               	movlw	(low (main@convertedNumber| (0+512)))& (0+255)
  7225  0105  0141               	movlb	1	; select bank1
  7226  0106  00CC               	movwf	??_main^(0+128)
  7227  0107  084C               	movf	??_main^(0+128),w
  7228  0108  00FD               	movwf	IntToString@dest
  7229  0109  318D  25CF  3180   	fcall	_IntToString
  7230                           
  7231                           ;main.c: 646:             index = InsertString(txdata, convertedNumber, index, 140);
  7232  010C  3064               	movlw	100
  7233  010D  0140               	movlb	0	; select bank0
  7234  010E  00A9               	movwf	InsertString@dest
  7235  010F  3027               	movlw	39
  7236  0110  00AA               	movwf	InsertString@dest+1
  7237  0111  304C               	movlw	low main@convertedNumber
  7238  0112  00AB               	movwf	InsertString@src
  7239  0113  3002               	movlw	high main@convertedNumber
  7240  0114  00AC               	movwf	InsertString@src+1
  7241  0115  0144               	movlb	4	; select bank4
  7242  0116  086B               	movf	(main@index+1)^(0+512),w
  7243  0117  0140               	movlb	0	; select bank0
  7244  0118  00AE               	movwf	InsertString@index+1
  7245  0119  0144               	movlb	4	; select bank4
  7246  011A  086A               	movf	main@index^(0+512),w
  7247  011B  0140               	movlb	0	; select bank0
  7248  011C  00AD               	movwf	InsertString@index
  7249  011D  308C               	movlw	140
  7250  011E  00AF               	movwf	InsertString@destLimit
  7251  011F  3000               	movlw	0
  7252  0120  00B0               	movwf	InsertString@destLimit+1
  7253  0121  318B  23AE  3180   	fcall	_InsertString
  7254  0124  0140               	movlb	0	; select bank0
  7255  0125  082A               	movf	?_InsertString+1,w
  7256  0126  0144               	movlb	4	; select bank4
  7257  0127  00EB               	movwf	(main@index+1)^(0+512)
  7258  0128  0140               	movlb	0	; select bank0
  7259  0129  0829               	movf	?_InsertString,w
  7260  012A  0144               	movlb	4	; select bank4
  7261  012B  00EA               	movwf	main@index^(0+512)
  7262                           
  7263                           ;main.c: 647:             index = Insert(txdata, ',', index, 140);
  7264  012C  3064               	movlw	100
  7265  012D  00F5               	movwf	Insert@dest
  7266  012E  3027               	movlw	39
  7267  012F  00F6               	movwf	Insert@dest+1
  7268  0130  302C               	movlw	44
  7269  0131  0141               	movlb	1	; select bank1
  7270  0132  00CC               	movwf	??_main^(0+128)
  7271  0133  084C               	movf	??_main^(0+128),w
  7272  0134  00F7               	movwf	Insert@src
  7273  0135  0144               	movlb	4	; select bank4
  7274  0136  086B               	movf	(main@index+1)^(0+512),w
  7275  0137  00F9               	movwf	Insert@index+1
  7276  0138  086A               	movf	main@index^(0+512),w
  7277  0139  00F8               	movwf	Insert@index
  7278  013A  308C               	movlw	140
  7279  013B  00FA               	movwf	Insert@destLimit
  7280  013C  3000               	movlw	0
  7281  013D  00FB               	movwf	Insert@destLimit+1
  7282  013E  318F  2715  3180   	fcall	_Insert
  7283  0141  0876               	movf	?_Insert+1,w
  7284  0142  0144               	movlb	4	; select bank4
  7285  0143  00EB               	movwf	(main@index+1)^(0+512)
  7286  0144  0875               	movf	?_Insert,w
  7287  0145  00EA               	movwf	main@index^(0+512)
  7288                           
  7289                           ;main.c: 648:             ClearString(convertedNumber);
  7290  0146  304C               	movlw	(low (main@convertedNumber| (0+512)))& (0+255)
  7291  0147  3194  24BB  3180   	fcall	_ClearString
  7292                           
  7293                           ;main.c: 650:             UIntToString(sensor_data.pressure, convertedNumber);
  7294  014A  0144               	movlb	4	; select bank4
  7295  014B  0861               	movf	(main@sensor_data+3)^(0+512),w
  7296  014C  0140               	movlb	0	; select bank0
  7297  014D  00B0               	movwf	UIntToString@n+3
  7298  014E  0144               	movlb	4	; select bank4
  7299  014F  0860               	movf	(main@sensor_data+2)^(0+512),w
  7300  0150  0140               	movlb	0	; select bank0
  7301  0151  00AF               	movwf	UIntToString@n+2
  7302  0152  0144               	movlb	4	; select bank4
  7303  0153  085F               	movf	(main@sensor_data+1)^(0+512),w
  7304  0154  0140               	movlb	0	; select bank0
  7305  0155  00AE               	movwf	UIntToString@n+1
  7306  0156  0144               	movlb	4	; select bank4
  7307  0157  085E               	movf	main@sensor_data^(0+512),w
  7308  0158  0140               	movlb	0	; select bank0
  7309  0159  00AD               	movwf	UIntToString@n
  7310  015A  304C               	movlw	(low (main@convertedNumber| (0+512)))& (0+255)
  7311  015B  0141               	movlb	1	; select bank1
  7312  015C  00CC               	movwf	??_main^(0+128)
  7313  015D  084C               	movf	??_main^(0+128),w
  7314  015E  0140               	movlb	0	; select bank0
  7315  015F  00B1               	movwf	UIntToString@dest
  7316  0160  318C  24AA  3180   	fcall	_UIntToString
  7317                           
  7318                           ;main.c: 651:             index = InsertString(txdata, convertedNumber, index, 140);
  7319  0163  3064               	movlw	100
  7320  0164  0140               	movlb	0	; select bank0
  7321  0165  00A9               	movwf	InsertString@dest
  7322  0166  3027               	movlw	39
  7323  0167  00AA               	movwf	InsertString@dest+1
  7324  0168  304C               	movlw	low main@convertedNumber
  7325  0169  00AB               	movwf	InsertString@src
  7326  016A  3002               	movlw	high main@convertedNumber
  7327  016B  00AC               	movwf	InsertString@src+1
  7328  016C  0144               	movlb	4	; select bank4
  7329  016D  086B               	movf	(main@index+1)^(0+512),w
  7330  016E  0140               	movlb	0	; select bank0
  7331  016F  00AE               	movwf	InsertString@index+1
  7332  0170  0144               	movlb	4	; select bank4
  7333  0171  086A               	movf	main@index^(0+512),w
  7334  0172  0140               	movlb	0	; select bank0
  7335  0173  00AD               	movwf	InsertString@index
  7336  0174  308C               	movlw	140
  7337  0175  00AF               	movwf	InsertString@destLimit
  7338  0176  3000               	movlw	0
  7339  0177  00B0               	movwf	InsertString@destLimit+1
  7340  0178  318B  23AE  3180   	fcall	_InsertString
  7341  017B  0140               	movlb	0	; select bank0
  7342  017C  082A               	movf	?_InsertString+1,w
  7343  017D  0144               	movlb	4	; select bank4
  7344  017E  00EB               	movwf	(main@index+1)^(0+512)
  7345  017F  0140               	movlb	0	; select bank0
  7346  0180  0829               	movf	?_InsertString,w
  7347  0181  0144               	movlb	4	; select bank4
  7348  0182  00EA               	movwf	main@index^(0+512)
  7349                           
  7350                           ;main.c: 652:             index = Insert(txdata, ',', index, 140);
  7351  0183  3064               	movlw	100
  7352  0184  00F5               	movwf	Insert@dest
  7353  0185  3027               	movlw	39
  7354  0186  00F6               	movwf	Insert@dest+1
  7355  0187  302C               	movlw	44
  7356  0188  0141               	movlb	1	; select bank1
  7357  0189  00CC               	movwf	??_main^(0+128)
  7358  018A  084C               	movf	??_main^(0+128),w
  7359  018B  00F7               	movwf	Insert@src
  7360  018C  0144               	movlb	4	; select bank4
  7361  018D  086B               	movf	(main@index+1)^(0+512),w
  7362  018E  00F9               	movwf	Insert@index+1
  7363  018F  086A               	movf	main@index^(0+512),w
  7364  0190  00F8               	movwf	Insert@index
  7365  0191  308C               	movlw	140
  7366  0192  00FA               	movwf	Insert@destLimit
  7367  0193  3000               	movlw	0
  7368  0194  00FB               	movwf	Insert@destLimit+1
  7369  0195  318F  2715  3180   	fcall	_Insert
  7370  0198  0876               	movf	?_Insert+1,w
  7371  0199  0144               	movlb	4	; select bank4
  7372  019A  00EB               	movwf	(main@index+1)^(0+512)
  7373  019B  0875               	movf	?_Insert,w
  7374  019C  00EA               	movwf	main@index^(0+512)
  7375                           
  7376                           ;main.c: 653:             ClearString(convertedNumber);
  7377  019D  304C               	movlw	(low (main@convertedNumber| (0+512)))& (0+255)
  7378  019E  3194  24BB  3180   	fcall	_ClearString
  7379                           
  7380                           ;main.c: 655:             UIntToString(sensor_data.humidity, convertedNumber);
  7381  01A1  3008               	movlw	8
  7382  01A2  3E5E               	addlw	(low (main@sensor_data| (0+512)))& (0+255)
  7383  01A3  0086               	movwf	6
  7384  01A4  3002               	movlw	2	; select bank4/5
  7385  01A5  0087               	movwf	7
  7386  01A6  3F40               	moviw [0]fsr1
  7387  01A7  0140               	movlb	0	; select bank0
  7388  01A8  00AD               	movwf	UIntToString@n
  7389  01A9  3F41               	moviw [1]fsr1
  7390  01AA  00AE               	movwf	UIntToString@n+1
  7391  01AB  3F42               	moviw [2]fsr1
  7392  01AC  00AF               	movwf	UIntToString@n+2
  7393  01AD  3F43               	moviw [3]fsr1
  7394  01AE  00B0               	movwf	UIntToString@n+3
  7395  01AF  304C               	movlw	(low (main@convertedNumber| (0+512)))& (0+255)
  7396  01B0  0141               	movlb	1	; select bank1
  7397  01B1  00CC               	movwf	??_main^(0+128)
  7398  01B2  084C               	movf	??_main^(0+128),w
  7399  01B3  0140               	movlb	0	; select bank0
  7400  01B4  00B1               	movwf	UIntToString@dest
  7401  01B5  318C  24AA  3180   	fcall	_UIntToString
  7402                           
  7403                           ;main.c: 656:             index = InsertString(txdata, convertedNumber, index, 140);
  7404  01B8  3064               	movlw	100
  7405  01B9  0140               	movlb	0	; select bank0
  7406  01BA  00A9               	movwf	InsertString@dest
  7407  01BB  3027               	movlw	39
  7408  01BC  00AA               	movwf	InsertString@dest+1
  7409  01BD  304C               	movlw	low main@convertedNumber
  7410  01BE  00AB               	movwf	InsertString@src
  7411  01BF  3002               	movlw	high main@convertedNumber
  7412  01C0  00AC               	movwf	InsertString@src+1
  7413  01C1  0144               	movlb	4	; select bank4
  7414  01C2  086B               	movf	(main@index+1)^(0+512),w
  7415  01C3  0140               	movlb	0	; select bank0
  7416  01C4  00AE               	movwf	InsertString@index+1
  7417  01C5  0144               	movlb	4	; select bank4
  7418  01C6  086A               	movf	main@index^(0+512),w
  7419  01C7  0140               	movlb	0	; select bank0
  7420  01C8  00AD               	movwf	InsertString@index
  7421  01C9  308C               	movlw	140
  7422  01CA  00AF               	movwf	InsertString@destLimit
  7423  01CB  3000               	movlw	0
  7424  01CC  00B0               	movwf	InsertString@destLimit+1
  7425  01CD  318B  23AE  3180   	fcall	_InsertString
  7426  01D0  0140               	movlb	0	; select bank0
  7427  01D1  082A               	movf	?_InsertString+1,w
  7428  01D2  0144               	movlb	4	; select bank4
  7429  01D3  00EB               	movwf	(main@index+1)^(0+512)
  7430  01D4  0140               	movlb	0	; select bank0
  7431  01D5  0829               	movf	?_InsertString,w
  7432  01D6  0144               	movlb	4	; select bank4
  7433  01D7  00EA               	movwf	main@index^(0+512)
  7434                           
  7435                           ;main.c: 658:             int end = index;
  7436  01D8  086B               	movf	(main@index+1)^(0+512),w
  7437  01D9  00DD               	movwf	(main@end+1)^(0+512)
  7438  01DA  086A               	movf	main@index^(0+512),w
  7439  01DB  00DC               	movwf	main@end^(0+512)
  7440                           
  7441                           ;main.c: 661:             UIntToHexString(crc16(txdata), checksum);
  7442  01DC  3064               	movlw	100
  7443  01DD  0140               	movlb	0	; select bank0
  7444  01DE  00A1               	movwf	crc16@data
  7445  01DF  3027               	movlw	39
  7446  01E0  00A2               	movwf	crc16@data+1
  7447  01E1  3194  2470  3180   	fcall	_crc16
  7448  01E4  0140               	movlb	0	; select bank0
  7449  01E5  0821               	movf	?_crc16,w
  7450  01E6  0141               	movlb	1	; select bank1
  7451  01E7  00CC               	movwf	??_main^(0+128)
  7452  01E8  0140               	movlb	0	; select bank0
  7453  01E9  0822               	movf	?_crc16+1,w
  7454  01EA  0141               	movlb	1	; select bank1
  7455  01EB  00CD               	movwf	(??_main^(0+128)+1)
  7456  01EC  01CE               	clrf	(??_main^(0+128)+2)
  7457  01ED  01CF               	clrf	(??_main^(0+128)+3)
  7458  01EE  084F               	movf	(??_main+3)^(0+128),w
  7459  01EF  0140               	movlb	0	; select bank0
  7460  01F0  00B0               	movwf	UIntToHexString@n+3
  7461  01F1  0141               	movlb	1	; select bank1
  7462  01F2  084E               	movf	(??_main+2)^(0+128),w
  7463  01F3  0140               	movlb	0	; select bank0
  7464  01F4  00AF               	movwf	UIntToHexString@n+2
  7465  01F5  0141               	movlb	1	; select bank1
  7466  01F6  084D               	movf	(??_main+1)^(0+128),w
  7467  01F7  0140               	movlb	0	; select bank0
  7468  01F8  00AE               	movwf	UIntToHexString@n+1
  7469  01F9  0141               	movlb	1	; select bank1
  7470  01FA  084C               	movf	??_main^(0+128),w
  7471  01FB  0140               	movlb	0	; select bank0
  7472  01FC  00AD               	movwf	UIntToHexString@n
  7473  01FD  30B4               	movlw	(low (_checksum| 0))& (0+255)
  7474  01FE  0141               	movlb	1	; select bank1
  7475  01FF  00D0               	movwf	(??_main+4)^(0+128)
  7476  0200  0850               	movf	(??_main+4)^(0+128),w
  7477  0201  0140               	movlb	0	; select bank0
  7478  0202  00B1               	movwf	UIntToHexString@dest
  7479  0203  3187  2783  3180   	fcall	_UIntToHexString
  7480                           
  7481                           ;main.c: 663:             index = Insert(txdata, '*', end, 140);
  7482  0206  3064               	movlw	100
  7483  0207  00F5               	movwf	Insert@dest
  7484  0208  3027               	movlw	39
  7485  0209  00F6               	movwf	Insert@dest+1
  7486  020A  302A               	movlw	42
  7487  020B  0141               	movlb	1	; select bank1
  7488  020C  00CC               	movwf	??_main^(0+128)
  7489  020D  084C               	movf	??_main^(0+128),w
  7490  020E  00F7               	movwf	Insert@src
  7491  020F  0144               	movlb	4	; select bank4
  7492  0210  085D               	movf	(main@end+1)^(0+512),w
  7493  0211  00F9               	movwf	Insert@index+1
  7494  0212  085C               	movf	main@end^(0+512),w
  7495  0213  00F8               	movwf	Insert@index
  7496  0214  308C               	movlw	140
  7497  0215  00FA               	movwf	Insert@destLimit
  7498  0216  3000               	movlw	0
  7499  0217  00FB               	movwf	Insert@destLimit+1
  7500  0218  318F  2715  3180   	fcall	_Insert
  7501  021B  0876               	movf	?_Insert+1,w
  7502  021C  0144               	movlb	4	; select bank4
  7503  021D  00EB               	movwf	(main@index+1)^(0+512)
  7504  021E  0875               	movf	?_Insert,w
  7505  021F  00EA               	movwf	main@index^(0+512)
  7506                           
  7507                           ;main.c: 664:             index = InsertString(txdata, checksum, index, 140);
  7508  0220  3064               	movlw	100
  7509  0221  0140               	movlb	0	; select bank0
  7510  0222  00A9               	movwf	InsertString@dest
  7511  0223  3027               	movlw	39
  7512  0224  00AA               	movwf	InsertString@dest+1
  7513  0225  30B4               	movlw	low _checksum
  7514  0226  00AB               	movwf	InsertString@src
  7515  0227  3000               	movlw	high _checksum
  7516  0228  00AC               	movwf	InsertString@src+1
  7517  0229  0144               	movlb	4	; select bank4
  7518  022A  086B               	movf	(main@index+1)^(0+512),w
  7519  022B  0140               	movlb	0	; select bank0
  7520  022C  00AE               	movwf	InsertString@index+1
  7521  022D  0144               	movlb	4	; select bank4
  7522  022E  086A               	movf	main@index^(0+512),w
  7523  022F  0140               	movlb	0	; select bank0
  7524  0230  00AD               	movwf	InsertString@index
  7525  0231  308C               	movlw	140
  7526  0232  00AF               	movwf	InsertString@destLimit
  7527  0233  3000               	movlw	0
  7528  0234  00B0               	movwf	InsertString@destLimit+1
  7529  0235  318B  23AE  3180   	fcall	_InsertString
  7530  0238  0140               	movlb	0	; select bank0
  7531  0239  082A               	movf	?_InsertString+1,w
  7532  023A  0144               	movlb	4	; select bank4
  7533  023B  00EB               	movwf	(main@index+1)^(0+512)
  7534  023C  0140               	movlb	0	; select bank0
  7535  023D  0829               	movf	?_InsertString,w
  7536  023E  0144               	movlb	4	; select bank4
  7537  023F  00EA               	movwf	main@index^(0+512)
  7538                           
  7539                           ;main.c: 665:             index = Insert(txdata, '\n', index, 140);
  7540  0240  3064               	movlw	100
  7541  0241  00F5               	movwf	Insert@dest
  7542  0242  3027               	movlw	39
  7543  0243  00F6               	movwf	Insert@dest+1
  7544  0244  300A               	movlw	10
  7545  0245  0141               	movlb	1	; select bank1
  7546  0246  00CC               	movwf	??_main^(0+128)
  7547  0247  084C               	movf	??_main^(0+128),w
  7548  0248  00F7               	movwf	Insert@src
  7549  0249  0144               	movlb	4	; select bank4
  7550  024A  086B               	movf	(main@index+1)^(0+512),w
  7551  024B  00F9               	movwf	Insert@index+1
  7552  024C  086A               	movf	main@index^(0+512),w
  7553  024D  00F8               	movwf	Insert@index
  7554  024E  308C               	movlw	140
  7555  024F  00FA               	movwf	Insert@destLimit
  7556  0250  3000               	movlw	0
  7557  0251  00FB               	movwf	Insert@destLimit+1
  7558  0252  318F  2715  3180   	fcall	_Insert
  7559  0255  0876               	movf	?_Insert+1,w
  7560  0256  0144               	movlb	4	; select bank4
  7561  0257  00EB               	movwf	(main@index+1)^(0+512)
  7562  0258  0875               	movf	?_Insert,w
  7563  0259  00EA               	movwf	main@index^(0+512)
  7564                           
  7565                           ;main.c: 668:             id++;
  7566  025A  3001               	movlw	1
  7567  025B  0141               	movlb	1	; select bank1
  7568  025C  07B0               	addwf	_id^(0+128),f
  7569  025D  3000               	movlw	0
  7570  025E  3DB1               	addwfc	(_id+1)^(0+128),f
  7571  025F  0140               	movlb	0	; select bank0
  7572  0260  1518               	bsf	24,2	;volatile
  7573                           
  7574                           ;main.c: 670:             TransmitString("$$");
  7575  0261  30B1               	movlw	low (STR_9| (0+32768))
  7576  0262  00A3               	movwf	TransmitString@message
  7577  0263  3098               	movlw	high (STR_9| (0+32768))
  7578  0264  00A4               	movwf	TransmitString@message+1
  7579  0265  3195  25D9  3180   	fcall	_TransmitString
  7580                           
  7581                           ;main.c: 671:             TransmitString(txdata);
  7582  0268  3064               	movlw	100
  7583  0269  0140               	movlb	0	; select bank0
  7584  026A  00A3               	movwf	TransmitString@message
  7585  026B  3027               	movlw	39
  7586  026C  00A4               	movwf	TransmitString@message+1
  7587  026D  3195  25D9  3180   	fcall	_TransmitString
  7588  0270  0140               	movlb	0	; select bank0
  7589  0271  1118               	bcf	24,2	;volatile
  7590  0272  2A85               	goto	l828
  7591  0273                     l6522:	
  7592                           
  7593                           ;main.c: 676:         {;main.c: 678:             DebugAlert(400, 200, 3);
  7594  0273  3090               	movlw	144
  7595  0274  0140               	movlb	0	; select bank0
  7596  0275  00A0               	movwf	DebugAlert@delay_high
  7597  0276  3001               	movlw	1
  7598  0277  00A1               	movwf	DebugAlert@delay_high+1
  7599  0278  30C8               	movlw	200
  7600  0279  00A2               	movwf	DebugAlert@delay_low
  7601  027A  3000               	movlw	0
  7602  027B  00A3               	movwf	DebugAlert@delay_low+1
  7603  027C  3003               	movlw	3
  7604  027D  0141               	movlb	1	; select bank1
  7605  027E  00CC               	movwf	??_main^(0+128)
  7606  027F  084C               	movf	??_main^(0+128),w
  7607  0280  0140               	movlb	0	; select bank0
  7608  0281  00A4               	movwf	DebugAlert@num_flashes
  7609  0282  3195  255A  3180   	fcall	_DebugAlert
  7610  0285                     l828:	
  7611                           ;main.c: 679:         }
  7612                           
  7613                           
  7614                           ;main.c: 681:         Sleep(5000);
  7615  0285  3000               	movlw	0
  7616  0286  00F3               	movwf	Sleep@ms+3
  7617  0287  3000               	movlw	0
  7618  0288  00F2               	movwf	Sleep@ms+2
  7619  0289  3013               	movlw	19
  7620  028A  00F1               	movwf	Sleep@ms+1
  7621  028B  3088               	movlw	136
  7622  028C  00F0               	movwf	Sleep@ms
  7623  028D  3195  25AE  3180   	fcall	_Sleep
  7624  0290  2859               	goto	l6464
  7625  0291                     __end_of_main:	
  7626                           
  7627                           	psect	text1
  7628  1470                     __ptext1:	
  7629 ;; *************** function _crc16 *****************
  7630 ;; Defined at:
  7631 ;;		line 22 in file "rtty.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  data            2    1[BANK0 ] PTR unsigned char 
  7634 ;;		 -> txdata(140), 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  crc             2    3[BANK0 ] unsigned short 
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  2    1[BANK0 ] unsigned short 
  7639 ;; Registers used:
  7640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7647 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7649 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7650 ;;Total ram usage:        4 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    4
  7653 ;; This function calls:
  7654 ;;		_crc16_update
  7655 ;;		_strlen
  7656 ;; This function is called by:
  7657 ;;		_main
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           
  7662                           ;psect for function _crc16
  7663  1470                     _crc16:	
  7664                           
  7665                           ;rtty.c: 22: uint16_t crc16(char* data);rtty.c: 23: {;rtty.c: 24:     uint16_t crc = 0xF
      +                          FFF;
  7666                           
  7667                           ;incstack = 0
  7668                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7669  1470  30FF               	movlw	255
  7670  1471  0140               	movlb	0	; select bank0
  7671  1472  00A3               	movwf	crc16@crc
  7672  1473  30FF               	movlw	255
  7673  1474  00A4               	movwf	crc16@crc+1
  7674                           
  7675                           ;rtty.c: 25:     crc = crc16_update(data, strlen(data), crc);
  7676  1475  0822               	movf	crc16@data+1,w
  7677  1476  00F6               	movwf	crc16_update@pData+1
  7678  1477  0821               	movf	crc16@data,w
  7679  1478  00F5               	movwf	crc16_update@pData
  7680  1479  0822               	movf	crc16@data+1,w
  7681  147A  00F1               	movwf	strlen@s+1
  7682  147B  0821               	movf	crc16@data,w
  7683  147C  00F0               	movwf	strlen@s
  7684  147D  3193  231D  3194   	fcall	_strlen
  7685  1480  0871               	movf	?_strlen+1,w
  7686  1481  00F8               	movwf	crc16_update@length+1
  7687  1482  0870               	movf	?_strlen,w
  7688  1483  00F7               	movwf	crc16_update@length
  7689  1484  0140               	movlb	0	; select bank0
  7690  1485  0824               	movf	crc16@crc+1,w
  7691  1486  00FA               	movwf	crc16_update@wCrc+1
  7692  1487  0823               	movf	crc16@crc,w
  7693  1488  00F9               	movwf	crc16_update@wCrc
  7694  1489  3188  200B         	fcall	_crc16_update
  7695  148B  0876               	movf	?_crc16_update+1,w
  7696  148C  0140               	movlb	0	; select bank0
  7697  148D  00A4               	movwf	crc16@crc+1
  7698  148E  0875               	movf	?_crc16_update,w
  7699  148F  00A3               	movwf	crc16@crc
  7700                           
  7701                           ;rtty.c: 26:     return crc & 0xFFFF;
  7702  1490  0824               	movf	crc16@crc+1,w
  7703  1491  00A2               	movwf	?_crc16+1
  7704  1492  0823               	movf	crc16@crc,w
  7705  1493  00A1               	movwf	?_crc16
  7706  1494  0008               	return
  7707  1495                     __end_of_crc16:	
  7708                           
  7709                           	psect	text2
  7710  080B                     __ptext2:	
  7711 ;; *************** function _crc16_update *****************
  7712 ;; Defined at:
  7713 ;;		line 11 in file "rtty.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;  pData           2    5[COMMON] PTR unsigned char 
  7716 ;;		 -> txdata(140), 
  7717 ;;  length          2    7[COMMON] int 
  7718 ;;  wCrc            2    9[COMMON] unsigned short 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  i               1    0[BANK0 ] unsigned char 
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  2    5[COMMON] unsigned short 
  7723 ;; Registers used:
  7724 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7730 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7732 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7733 ;;      Totals:         9       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7734 ;;Total ram usage:       10 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:    3
  7737 ;; This function calls:
  7738 ;;		Nothing
  7739 ;; This function is called by:
  7740 ;;		_crc16
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           
  7745                           ;psect for function _crc16_update
  7746  080B                     _crc16_update:	
  7747  080B                     l5680:	
  7748                           ;rtty.c: 11: uint16_t crc16_update(char* pData, int length, uint16_t wCrc);rtty.c: 12: {
      +                          ;rtty.c: 13:     uint8_t i;;rtty.c: 14:     while (length--) {
  7749                           
  7750                           ;incstack = 0
  7751                           ; Regs used in _crc16_update: [wreg+fsr1l+fsr1h+status,2+status,0]
  7752                           
  7753                           
  7754                           ;rtty.c: 14:     while (length--) {
  7755  080B  30FF               	movlw	255
  7756  080C  07F7               	addwf	crc16_update@length,f
  7757  080D  30FF               	movlw	255
  7758  080E  3DF8               	addwfc	crc16_update@length+1,f
  7759  080F  0A77               	incf	crc16_update@length,w
  7760  0810  1903               	btfsc	3,2
  7761  0811  0A78               	incf	crc16_update@length+1,w
  7762  0812  1903               	btfsc	3,2
  7763  0813  2843               	goto	l5682
  7764                           
  7765                           ;rtty.c: 15:         wCrc ^= *(unsigned char *)pData++ << 8;
  7766  0814  0875               	movf	crc16_update@pData,w
  7767  0815  0086               	movwf	6
  7768  0816  0876               	movf	crc16_update@pData+1,w
  7769  0817  0087               	movwf	7
  7770  0818  0801               	movf	1,w
  7771  0819  00FB               	movwf	??_crc16_update
  7772  081A  01FC               	clrf	??_crc16_update+1
  7773  081B  087B               	movf	??_crc16_update,w
  7774  081C  00FC               	movwf	??_crc16_update+1
  7775  081D  01FB               	clrf	??_crc16_update
  7776  081E  087B               	movf	??_crc16_update,w
  7777  081F  06F9               	xorwf	crc16_update@wCrc,f
  7778  0820  087C               	movf	??_crc16_update+1,w
  7779  0821  06FA               	xorwf	crc16_update@wCrc+1,f
  7780  0822  3001               	movlw	1
  7781  0823  07F5               	addwf	crc16_update@pData,f
  7782  0824  3000               	movlw	0
  7783  0825  3DF6               	addwfc	crc16_update@pData+1,f
  7784                           
  7785                           ;rtty.c: 16:         for (i=0; i < 8; i++)
  7786  0826  0140               	movlb	0	; select bank0
  7787  0827  01A0               	clrf	crc16_update@i
  7788  0828                     l844:	
  7789                           
  7790                           ;rtty.c: 17:             wCrc = wCrc & 0x8000 ? (wCrc << 1) ^ 0x1021 : wCrc << 1;
  7791  0828  1BFA               	btfsc	crc16_update@wCrc+1,7
  7792  0829  282E               	goto	l5676
  7793  082A  3579               	lslf	crc16_update@wCrc,w
  7794  082B  00F9               	movwf	crc16_update@wCrc
  7795  082C  0D7A               	rlf	crc16_update@wCrc+1,w
  7796  082D  2839               	goto	L1
  7797  082E                     l5676:	
  7798  082E  087A               	movf	crc16_update@wCrc+1,w
  7799  082F  00FC               	movwf	??_crc16_update+1
  7800  0830  0879               	movf	crc16_update@wCrc,w
  7801  0831  00FB               	movwf	??_crc16_update
  7802  0832  35FB               	lslf	??_crc16_update,f
  7803  0833  0DFC               	rlf	??_crc16_update+1,f
  7804  0834  3021               	movlw	33
  7805  0835  067B               	xorwf	??_crc16_update,w
  7806  0836  00F9               	movwf	crc16_update@wCrc
  7807  0837  3010               	movlw	16
  7808  0838  067C               	xorwf	??_crc16_update+1,w
  7809  0839                     L1:	
  7810  0839  00FA               	movwf	crc16_update@wCrc+1
  7811  083A  3001               	movlw	1
  7812  083B  00FB               	movwf	??_crc16_update
  7813  083C  087B               	movf	??_crc16_update,w
  7814  083D  07A0               	addwf	crc16_update@i,f
  7815  083E  3008               	movlw	8
  7816  083F  0220               	subwf	crc16_update@i,w
  7817  0840  1803               	btfsc	3,0
  7818  0841  280B               	goto	l5680
  7819  0842  2828               	goto	l844
  7820  0843                     l5682:	
  7821                           
  7822                           ;rtty.c: 19:     return wCrc;
  7823  0843  087A               	movf	crc16_update@wCrc+1,w
  7824  0844  00F6               	movwf	?_crc16_update+1
  7825  0845  0879               	movf	crc16_update@wCrc,w
  7826  0846  00F5               	movwf	?_crc16_update
  7827  0847  0008               	return
  7828  0848                     __end_of_crc16_update:	
  7829                           
  7830                           	psect	text3
  7831  0CAA                     __ptext3:	
  7832 ;; *************** function _UIntToString *****************
  7833 ;; Defined at:
  7834 ;;		line 207 in file "main.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  n               4   13[BANK0 ] unsigned long 
  7837 ;;  dest            1   17[BANK0 ] PTR unsigned char 
  7838 ;;		 -> main@convertedNumber(16), 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  i               2   20[BANK0 ] int 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7850 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7852 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7853 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7854 ;;Total ram usage:        9 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    5
  7857 ;; This function calls:
  7858 ;;		_ReverseString
  7859 ;;		___lldiv
  7860 ;;		___llmod
  7861 ;; This function is called by:
  7862 ;;		_main
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           
  7867                           ;psect for function _UIntToString
  7868  0CAA                     _UIntToString:	
  7869                           
  7870                           ;main.c: 207: void UIntToString(uint32_t n, char* dest);main.c: 208: {;main.c: 209:     
      +                          int i = 0;
  7871                           
  7872                           ;incstack = 0
  7873                           ; Regs used in _UIntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7874  0CAA  0140               	movlb	0	; select bank0
  7875  0CAB  01B4               	clrf	UIntToString@i
  7876  0CAC  01B5               	clrf	UIntToString@i+1
  7877  0CAD                     l6358:	
  7878                           
  7879                           ;main.c: 214:         dest[i++] = n % 10 + '0';
  7880  0CAD  3000               	movlw	0
  7881  0CAE  00F3               	movwf	___llmod@divisor+3
  7882  0CAF  3000               	movlw	0
  7883  0CB0  00F2               	movwf	___llmod@divisor+2
  7884  0CB1  3000               	movlw	0
  7885  0CB2  00F1               	movwf	___llmod@divisor+1
  7886  0CB3  300A               	movlw	10
  7887  0CB4  00F0               	movwf	___llmod@divisor
  7888  0CB5  0830               	movf	UIntToString@n+3,w
  7889  0CB6  00F7               	movwf	___llmod@dividend+3
  7890  0CB7  082F               	movf	UIntToString@n+2,w
  7891  0CB8  00F6               	movwf	___llmod@dividend+2
  7892  0CB9  082E               	movf	UIntToString@n+1,w
  7893  0CBA  00F5               	movwf	___llmod@dividend+1
  7894  0CBB  082D               	movf	UIntToString@n,w
  7895  0CBC  00F4               	movwf	___llmod@dividend
  7896  0CBD  3188  20CA  318C   	fcall	___llmod
  7897  0CC0  0870               	movf	?___llmod,w
  7898  0CC1  3E30               	addlw	48
  7899  0CC2  0140               	movlb	0	; select bank0
  7900  0CC3  00B2               	movwf	??_UIntToString
  7901  0CC4  0834               	movf	UIntToString@i,w
  7902  0CC5  0731               	addwf	UIntToString@dest,w
  7903  0CC6  00B3               	movwf	??_UIntToString+1
  7904  0CC7  0833               	movf	??_UIntToString+1,w
  7905  0CC8  0086               	movwf	6
  7906  0CC9  3002               	movlw	2	; select bank4/5
  7907  0CCA  0087               	movwf	7
  7908  0CCB  0832               	movf	??_UIntToString,w
  7909  0CCC  0081               	movwf	1
  7910  0CCD  3001               	movlw	1
  7911  0CCE  07B4               	addwf	UIntToString@i,f
  7912  0CCF  3000               	movlw	0
  7913  0CD0  3DB5               	addwfc	UIntToString@i+1,f
  7914                           
  7915                           ;main.c: 216:     } while ((n /= 10) > 0);
  7916  0CD1  3000               	movlw	0
  7917  0CD2  00F3               	movwf	___lldiv@divisor+3
  7918  0CD3  3000               	movlw	0
  7919  0CD4  00F2               	movwf	___lldiv@divisor+2
  7920  0CD5  3000               	movlw	0
  7921  0CD6  00F1               	movwf	___lldiv@divisor+1
  7922  0CD7  300A               	movlw	10
  7923  0CD8  00F0               	movwf	___lldiv@divisor
  7924  0CD9  0830               	movf	UIntToString@n+3,w
  7925  0CDA  00F7               	movwf	___lldiv@dividend+3
  7926  0CDB  082F               	movf	UIntToString@n+2,w
  7927  0CDC  00F6               	movwf	___lldiv@dividend+2
  7928  0CDD  082E               	movf	UIntToString@n+1,w
  7929  0CDE  00F5               	movwf	___lldiv@dividend+1
  7930  0CDF  082D               	movf	UIntToString@n,w
  7931  0CE0  00F4               	movwf	___lldiv@dividend
  7932  0CE1  318C  2400  318C   	fcall	___lldiv
  7933  0CE4  0873               	movf	?___lldiv+3,w
  7934  0CE5  0140               	movlb	0	; select bank0
  7935  0CE6  00B0               	movwf	UIntToString@n+3
  7936  0CE7  0872               	movf	?___lldiv+2,w
  7937  0CE8  00AF               	movwf	UIntToString@n+2
  7938  0CE9  0871               	movf	?___lldiv+1,w
  7939  0CEA  00AE               	movwf	UIntToString@n+1
  7940  0CEB  0870               	movf	?___lldiv,w
  7941  0CEC  00AD               	movwf	UIntToString@n
  7942  0CED  0830               	movf	UIntToString@n+3,w
  7943  0CEE  042F               	iorwf	UIntToString@n+2,w
  7944  0CEF  042E               	iorwf	UIntToString@n+1,w
  7945  0CF0  042D               	iorwf	UIntToString@n,w
  7946  0CF1  1D03               	skipz
  7947  0CF2  2CAD               	goto	l6358
  7948                           
  7949                           ;main.c: 217:     dest[i] = '\0';
  7950  0CF3  0834               	movf	UIntToString@i,w
  7951  0CF4  0731               	addwf	UIntToString@dest,w
  7952  0CF5  00B2               	movwf	??_UIntToString
  7953  0CF6  0832               	movf	??_UIntToString,w
  7954  0CF7  0086               	movwf	6
  7955  0CF8  3002               	movlw	2	; select bank4/5
  7956  0CF9  0087               	movwf	7
  7957  0CFA  0181               	clrf	1
  7958                           
  7959                           ;main.c: 219:     ReverseString(dest);
  7960  0CFB  0831               	movf	UIntToString@dest,w
  7961  0CFC  00F9               	movwf	ReverseString@str
  7962  0CFD  3002               	movlw	2
  7963  0CFE  00FA               	movwf	ReverseString@str+1
  7964  0CFF  318E  26A8         	fcall	_ReverseString
  7965  0D01  0008               	return
  7966  0D02                     __end_of_UIntToString:	
  7967                           
  7968                           	psect	text4
  7969  08CA                     __ptext4:	
  7970 ;; *************** function ___llmod *****************
  7971 ;; Defined at:
  7972 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\llmod.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;  divisor         4    0[COMMON] unsigned long 
  7975 ;;  dividend        4    4[COMMON] unsigned long 
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;  counter         1    9[COMMON] unsigned char 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  4    0[COMMON] unsigned long 
  7980 ;; Registers used:
  7981 ;;		wreg, status,2, status,0
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7987 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7990 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7991 ;;Total ram usage:       10 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:    3
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_UIntToString
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           
  8002                           ;psect for function ___llmod
  8003  08CA                     ___llmod:	
  8004                           
  8005                           ;incstack = 0
  8006                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8007  08CA  0873               	movf	___llmod@divisor+3,w
  8008  08CB  0472               	iorwf	___llmod@divisor+2,w
  8009  08CC  0471               	iorwf	___llmod@divisor+1,w
  8010  08CD  0470               	iorwf	___llmod@divisor,w
  8011  08CE  1903               	skipnz
  8012  08CF  2903               	goto	l5780
  8013  08D0  01F9               	clrf	___llmod@counter
  8014  08D1  0AF9               	incf	___llmod@counter,f
  8015  08D2                     l5770:	
  8016  08D2  1BF3               	btfsc	___llmod@divisor+3,7
  8017  08D3  28E0               	goto	l5772
  8018  08D4  3001               	movlw	1
  8019  08D5                     u5825:	
  8020  08D5  35F0               	lslf	___llmod@divisor,f
  8021  08D6  0DF1               	rlf	___llmod@divisor+1,f
  8022  08D7  0DF2               	rlf	___llmod@divisor+2,f
  8023  08D8  0DF3               	rlf	___llmod@divisor+3,f
  8024  08D9  0B89               	decfsz	9,f
  8025  08DA  28D5               	goto	u5825
  8026  08DB  3001               	movlw	1
  8027  08DC  00F8               	movwf	??___llmod
  8028  08DD  0878               	movf	??___llmod,w
  8029  08DE  07F9               	addwf	___llmod@counter,f
  8030  08DF  28D2               	goto	l5770
  8031  08E0                     l5772:	
  8032  08E0  0873               	movf	___llmod@divisor+3,w
  8033  08E1  0277               	subwf	___llmod@dividend+3,w
  8034  08E2  1D03               	skipz
  8035  08E3  28EE               	goto	u5845
  8036  08E4  0872               	movf	___llmod@divisor+2,w
  8037  08E5  0276               	subwf	___llmod@dividend+2,w
  8038  08E6  1D03               	skipz
  8039  08E7  28EE               	goto	u5845
  8040  08E8  0871               	movf	___llmod@divisor+1,w
  8041  08E9  0275               	subwf	___llmod@dividend+1,w
  8042  08EA  1D03               	skipz
  8043  08EB  28EE               	goto	u5845
  8044  08EC  0870               	movf	___llmod@divisor,w
  8045  08ED  0274               	subwf	___llmod@dividend,w
  8046  08EE                     u5845:	
  8047  08EE  1C03               	skipc
  8048  08EF  28F8               	goto	l5776
  8049  08F0  0870               	movf	___llmod@divisor,w
  8050  08F1  02F4               	subwf	___llmod@dividend,f
  8051  08F2  0871               	movf	___llmod@divisor+1,w
  8052  08F3  3BF5               	subwfb	___llmod@dividend+1,f
  8053  08F4  0872               	movf	___llmod@divisor+2,w
  8054  08F5  3BF6               	subwfb	___llmod@dividend+2,f
  8055  08F6  0873               	movf	___llmod@divisor+3,w
  8056  08F7  3BF7               	subwfb	___llmod@dividend+3,f
  8057  08F8                     l5776:	
  8058  08F8  3001               	movlw	1
  8059  08F9                     u5855:	
  8060  08F9  36F3               	lsrf	___llmod@divisor+3,f
  8061  08FA  0CF2               	rrf	___llmod@divisor+2,f
  8062  08FB  0CF1               	rrf	___llmod@divisor+1,f
  8063  08FC  0CF0               	rrf	___llmod@divisor,f
  8064  08FD  0B89               	decfsz	9,f
  8065  08FE  28F9               	goto	u5855
  8066  08FF  3001               	movlw	1
  8067  0900  02F9               	subwf	___llmod@counter,f
  8068  0901  1D03               	btfss	3,2
  8069  0902  28E0               	goto	l5772
  8070  0903                     l5780:	
  8071  0903  0877               	movf	___llmod@dividend+3,w
  8072  0904  00F3               	movwf	?___llmod+3
  8073  0905  0876               	movf	___llmod@dividend+2,w
  8074  0906  00F2               	movwf	?___llmod+2
  8075  0907  0875               	movf	___llmod@dividend+1,w
  8076  0908  00F1               	movwf	?___llmod+1
  8077  0909  0874               	movf	___llmod@dividend,w
  8078  090A  00F0               	movwf	?___llmod
  8079  090B  0008               	return
  8080  090C                     __end_of___llmod:	
  8081                           
  8082                           	psect	text5
  8083  0C00                     __ptext5:	
  8084 ;; *************** function ___lldiv *****************
  8085 ;; Defined at:
  8086 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\__lldiv.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  divisor         4    0[COMMON] unsigned long 
  8089 ;;  dividend        4    4[COMMON] unsigned long 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  quotient        4    9[COMMON] unsigned long 
  8092 ;;  counter         1   13[COMMON] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  4    0[COMMON] unsigned long 
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, status,0
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8102 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8103 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8105 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8106 ;;Total ram usage:       14 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    3
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_UIntToString
  8113 ;;		_compensate_pressure
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           
  8118                           ;psect for function ___lldiv
  8119  0C00                     ___lldiv:	
  8120                           
  8121                           ;incstack = 0
  8122                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8123  0C00  3000               	movlw	0
  8124  0C01  00FC               	movwf	___lldiv@quotient+3
  8125  0C02  3000               	movlw	0
  8126  0C03  00FB               	movwf	___lldiv@quotient+2
  8127  0C04  3000               	movlw	0
  8128  0C05  00FA               	movwf	___lldiv@quotient+1
  8129  0C06  3000               	movlw	0
  8130  0C07  00F9               	movwf	___lldiv@quotient
  8131  0C08  0873               	movf	___lldiv@divisor+3,w
  8132  0C09  0472               	iorwf	___lldiv@divisor+2,w
  8133  0C0A  0471               	iorwf	___lldiv@divisor+1,w
  8134  0C0B  0470               	iorwf	___lldiv@divisor,w
  8135  0C0C  1903               	skipnz
  8136  0C0D  2C49               	goto	l5722
  8137  0C0E  01FD               	clrf	___lldiv@counter
  8138  0C0F  0AFD               	incf	___lldiv@counter,f
  8139  0C10                     l5708:	
  8140  0C10  1BF3               	btfsc	___lldiv@divisor+3,7
  8141  0C11  2C1E               	goto	l5710
  8142  0C12  3001               	movlw	1
  8143  0C13                     u5665:	
  8144  0C13  35F0               	lslf	___lldiv@divisor,f
  8145  0C14  0DF1               	rlf	___lldiv@divisor+1,f
  8146  0C15  0DF2               	rlf	___lldiv@divisor+2,f
  8147  0C16  0DF3               	rlf	___lldiv@divisor+3,f
  8148  0C17  0B89               	decfsz	9,f
  8149  0C18  2C13               	goto	u5665
  8150  0C19  3001               	movlw	1
  8151  0C1A  00F8               	movwf	??___lldiv
  8152  0C1B  0878               	movf	??___lldiv,w
  8153  0C1C  07FD               	addwf	___lldiv@counter,f
  8154  0C1D  2C10               	goto	l5708
  8155  0C1E                     l5710:	
  8156  0C1E  3001               	movlw	1
  8157  0C1F                     u5685:	
  8158  0C1F  35F9               	lslf	___lldiv@quotient,f
  8159  0C20  0DFA               	rlf	___lldiv@quotient+1,f
  8160  0C21  0DFB               	rlf	___lldiv@quotient+2,f
  8161  0C22  0DFC               	rlf	___lldiv@quotient+3,f
  8162  0C23  0B89               	decfsz	9,f
  8163  0C24  2C1F               	goto	u5685
  8164  0C25  0873               	movf	___lldiv@divisor+3,w
  8165  0C26  0277               	subwf	___lldiv@dividend+3,w
  8166  0C27  1D03               	skipz
  8167  0C28  2C33               	goto	u5695
  8168  0C29  0872               	movf	___lldiv@divisor+2,w
  8169  0C2A  0276               	subwf	___lldiv@dividend+2,w
  8170  0C2B  1D03               	skipz
  8171  0C2C  2C33               	goto	u5695
  8172  0C2D  0871               	movf	___lldiv@divisor+1,w
  8173  0C2E  0275               	subwf	___lldiv@dividend+1,w
  8174  0C2F  1D03               	skipz
  8175  0C30  2C33               	goto	u5695
  8176  0C31  0870               	movf	___lldiv@divisor,w
  8177  0C32  0274               	subwf	___lldiv@dividend,w
  8178  0C33                     u5695:	
  8179  0C33  1C03               	skipc
  8180  0C34  2C3E               	goto	l5718
  8181  0C35  0870               	movf	___lldiv@divisor,w
  8182  0C36  02F4               	subwf	___lldiv@dividend,f
  8183  0C37  0871               	movf	___lldiv@divisor+1,w
  8184  0C38  3BF5               	subwfb	___lldiv@dividend+1,f
  8185  0C39  0872               	movf	___lldiv@divisor+2,w
  8186  0C3A  3BF6               	subwfb	___lldiv@dividend+2,f
  8187  0C3B  0873               	movf	___lldiv@divisor+3,w
  8188  0C3C  3BF7               	subwfb	___lldiv@dividend+3,f
  8189  0C3D  1479               	bsf	___lldiv@quotient,0
  8190  0C3E                     l5718:	
  8191  0C3E  3001               	movlw	1
  8192  0C3F                     u5705:	
  8193  0C3F  36F3               	lsrf	___lldiv@divisor+3,f
  8194  0C40  0CF2               	rrf	___lldiv@divisor+2,f
  8195  0C41  0CF1               	rrf	___lldiv@divisor+1,f
  8196  0C42  0CF0               	rrf	___lldiv@divisor,f
  8197  0C43  0B89               	decfsz	9,f
  8198  0C44  2C3F               	goto	u5705
  8199  0C45  3001               	movlw	1
  8200  0C46  02FD               	subwf	___lldiv@counter,f
  8201  0C47  1D03               	btfss	3,2
  8202  0C48  2C1E               	goto	l5710
  8203  0C49                     l5722:	
  8204  0C49  087C               	movf	___lldiv@quotient+3,w
  8205  0C4A  00F3               	movwf	?___lldiv+3
  8206  0C4B  087B               	movf	___lldiv@quotient+2,w
  8207  0C4C  00F2               	movwf	?___lldiv+2
  8208  0C4D  087A               	movf	___lldiv@quotient+1,w
  8209  0C4E  00F1               	movwf	?___lldiv+1
  8210  0C4F  0879               	movf	___lldiv@quotient,w
  8211  0C50  00F0               	movwf	?___lldiv
  8212  0C51  0008               	return
  8213  0C52                     __end_of___lldiv:	
  8214                           
  8215                           	psect	text6
  8216  0783                     __ptext6:	
  8217 ;; *************** function _UIntToHexString *****************
  8218 ;; Defined at:
  8219 ;;		line 138 in file "main.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;  n               4   13[BANK0 ] unsigned long 
  8222 ;;  dest            1   17[BANK0 ] PTR unsigned char 
  8223 ;;		 -> checksum(6), 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  remainder       4   24[BANK0 ] unsigned long 
  8226 ;;  i               4   28[BANK0 ] unsigned long 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  1    wreg      void 
  8229 ;; Registers used:
  8230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8236 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8237 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8238 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8239 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8240 ;;Total ram usage:       19 bytes
  8241 ;; Hardware stack levels used:    1
  8242 ;; Hardware stack levels required when called:    5
  8243 ;; This function calls:
  8244 ;;		_ReverseString
  8245 ;; This function is called by:
  8246 ;;		_main
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           
  8251                           ;psect for function _UIntToHexString
  8252  0783                     _UIntToHexString:	
  8253                           
  8254                           ;main.c: 138: void UIntToHexString(uint32_t n, char* dest);main.c: 139: {;main.c: 140:  
      +                             uint32_t i = 0;
  8255                           
  8256                           ;incstack = 0
  8257                           ; Regs used in _UIntToHexString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8258  0783  3000               	movlw	0
  8259  0784  0140               	movlb	0	; select bank0
  8260  0785  00BF               	movwf	UIntToHexString@i+3
  8261  0786  3000               	movlw	0
  8262  0787  00BE               	movwf	UIntToHexString@i+2
  8263  0788  3000               	movlw	0
  8264  0789  00BD               	movwf	UIntToHexString@i+1
  8265  078A  3000               	movlw	0
  8266  078B  00BC               	movwf	UIntToHexString@i
  8267  078C                     l679:	
  8268                           ;main.c: 141:     do {
  8269                           
  8270                           
  8271                           ;main.c: 144:         uint32_t remainder = n % 16;
  8272  078C  300F               	movlw	15
  8273  078D  052D               	andwf	UIntToHexString@n,w
  8274  078E  00B8               	movwf	UIntToHexString@remainder
  8275  078F  3000               	movlw	0
  8276  0790  052E               	andwf	UIntToHexString@n+1,w
  8277  0791  00B9               	movwf	UIntToHexString@remainder+1
  8278  0792  3000               	movlw	0
  8279  0793  052F               	andwf	UIntToHexString@n+2,w
  8280  0794  00BA               	movwf	UIntToHexString@remainder+2
  8281  0795  3000               	movlw	0
  8282  0796  0530               	andwf	UIntToHexString@n+3,w
  8283  0797  00BB               	movwf	UIntToHexString@remainder+3
  8284                           
  8285                           ;main.c: 146:         dest[i++] = remainder + (remainder >= 10 ? 55 : '0');
  8286  0798  083B               	movf	UIntToHexString@remainder+3,w
  8287  0799  1D03               	btfss	3,2
  8288  079A  2FAD               	goto	l6316
  8289  079B  083A               	movf	UIntToHexString@remainder+2,w
  8290  079C  1D03               	btfss	3,2
  8291  079D  2FAD               	goto	l6316
  8292  079E  0839               	movf	UIntToHexString@remainder+1,w
  8293  079F  1D03               	btfss	3,2
  8294  07A0  2FAD               	goto	l6316
  8295  07A1  300A               	movlw	10
  8296  07A2  0238               	subwf	UIntToHexString@remainder,w
  8297  07A3  1803               	btfsc	3,0
  8298  07A4  2FAD               	goto	l6316
  8299  07A5  3000               	movlw	0
  8300  07A6  00B7               	movwf	_UIntToHexString$1753+3
  8301  07A7  3000               	movlw	0
  8302  07A8  00B6               	movwf	_UIntToHexString$1753+2
  8303  07A9  3000               	movlw	0
  8304  07AA  00B5               	movwf	_UIntToHexString$1753+1
  8305  07AB  3030               	movlw	48
  8306  07AC  2FB4               	goto	L2
  8307  07AD                     l6316:	
  8308  07AD  3000               	movlw	0
  8309  07AE  00B7               	movwf	_UIntToHexString$1753+3
  8310  07AF  3000               	movlw	0
  8311  07B0  00B6               	movwf	_UIntToHexString$1753+2
  8312  07B1  3000               	movlw	0
  8313  07B2  00B5               	movwf	_UIntToHexString$1753+1
  8314  07B3  3037               	movlw	55
  8315  07B4                     L2:	
  8316  07B4  00B4               	movwf	_UIntToHexString$1753
  8317  07B5  0834               	movf	_UIntToHexString$1753,w
  8318  07B6  0738               	addwf	UIntToHexString@remainder,w
  8319  07B7  00B2               	movwf	??_UIntToHexString
  8320  07B8  083C               	movf	UIntToHexString@i,w
  8321  07B9  0731               	addwf	UIntToHexString@dest,w
  8322  07BA  00B3               	movwf	??_UIntToHexString+1
  8323  07BB  0833               	movf	??_UIntToHexString+1,w
  8324  07BC  0086               	movwf	6
  8325  07BD  0187               	clrf	7
  8326  07BE  0832               	movf	??_UIntToHexString,w
  8327  07BF  0081               	movwf	1
  8328  07C0  3001               	movlw	1
  8329  07C1  07BC               	addwf	UIntToHexString@i,f
  8330  07C2  3000               	movlw	0
  8331  07C3  3DBD               	addwfc	UIntToHexString@i+1,f
  8332  07C4  3000               	movlw	0
  8333  07C5  3DBE               	addwfc	UIntToHexString@i+2,f
  8334  07C6  3000               	movlw	0
  8335  07C7  3DBF               	addwfc	UIntToHexString@i+3,f
  8336                           
  8337                           ;main.c: 148:     } while ((n /= 16) > 0);
  8338  07C8  3004               	movlw	4
  8339  07C9                     u6525:	
  8340  07C9  36B0               	lsrf	UIntToHexString@n+3,f
  8341  07CA  0CAF               	rrf	UIntToHexString@n+2,f
  8342  07CB  0CAE               	rrf	UIntToHexString@n+1,f
  8343  07CC  0CAD               	rrf	UIntToHexString@n,f
  8344  07CD  0B89               	decfsz	9,f
  8345  07CE  2FC9               	goto	u6525
  8346  07CF  0830               	movf	UIntToHexString@n+3,w
  8347  07D0  042F               	iorwf	UIntToHexString@n+2,w
  8348  07D1  042E               	iorwf	UIntToHexString@n+1,w
  8349  07D2  042D               	iorwf	UIntToHexString@n,w
  8350  07D3  1903               	btfsc	3,2
  8351  07D4  2FE8               	goto	l6328
  8352  07D5  2F8C               	goto	l679
  8353  07D6                     l6324:	
  8354                           
  8355                           ;main.c: 150:     {;main.c: 151:         dest[i] = '0';
  8356  07D6  3030               	movlw	48
  8357  07D7  00B2               	movwf	??_UIntToHexString
  8358  07D8  083C               	movf	UIntToHexString@i,w
  8359  07D9  0731               	addwf	UIntToHexString@dest,w
  8360  07DA  00B3               	movwf	??_UIntToHexString+1
  8361  07DB  0833               	movf	??_UIntToHexString+1,w
  8362  07DC  0086               	movwf	6
  8363  07DD  0187               	clrf	7
  8364  07DE  0832               	movf	??_UIntToHexString,w
  8365  07DF  0081               	movwf	1
  8366                           
  8367                           ;main.c: 152:         i++;
  8368  07E0  3001               	movlw	1
  8369  07E1  07BC               	addwf	UIntToHexString@i,f
  8370  07E2  3000               	movlw	0
  8371  07E3  3DBD               	addwfc	UIntToHexString@i+1,f
  8372  07E4  3000               	movlw	0
  8373  07E5  3DBE               	addwfc	UIntToHexString@i+2,f
  8374  07E6  3000               	movlw	0
  8375  07E7  3DBF               	addwfc	UIntToHexString@i+3,f
  8376  07E8                     l6328:	
  8377                           
  8378                           ;main.c: 149:     while (i < 4)
  8379  07E8  083F               	movf	UIntToHexString@i+3,w
  8380  07E9  1D03               	btfss	3,2
  8381  07EA  2FF5               	goto	l6330
  8382  07EB  083E               	movf	UIntToHexString@i+2,w
  8383  07EC  1D03               	btfss	3,2
  8384  07ED  2FF5               	goto	l6330
  8385  07EE  083D               	movf	UIntToHexString@i+1,w
  8386  07EF  1D03               	btfss	3,2
  8387  07F0  2FF5               	goto	l6330
  8388  07F1  3004               	movlw	4
  8389  07F2  023C               	subwf	UIntToHexString@i,w
  8390  07F3  1C03               	btfss	3,0
  8391  07F4  2FD6               	goto	l6324
  8392  07F5                     l6330:	
  8393                           
  8394                           ;main.c: 154:     ReverseString(dest);
  8395  07F5  0831               	movf	UIntToHexString@dest,w
  8396  07F6  00F9               	movwf	ReverseString@str
  8397  07F7  3000               	movlw	0
  8398  07F8  00FA               	movwf	ReverseString@str+1
  8399  07F9  318E  26A8         	fcall	_ReverseString
  8400  07FB  0008               	return
  8401  07FC                     __end_of_UIntToHexString:	
  8402                           
  8403                           	psect	text7
  8404  15D9                     __ptext7:	
  8405 ;; *************** function _TransmitString *****************
  8406 ;; Defined at:
  8407 ;;		line 71 in file "rtty.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  message         2    3[BANK0 ] PTR unsigned char 
  8410 ;;		 -> STR_9(3), txdata(140), 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  i               2    8[BANK0 ] int 
  8413 ;;  counti          2    6[BANK0 ] int 
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  1    wreg      void 
  8416 ;; Registers used:
  8417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8426 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8427 ;;Total ram usage:        7 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    6
  8430 ;; This function calls:
  8431 ;;		_TransmitChar
  8432 ;;		_strlen
  8433 ;; This function is called by:
  8434 ;;		_main
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           
  8439                           ;psect for function _TransmitString
  8440  15D9                     _TransmitString:	
  8441                           
  8442                           ;rtty.c: 71: void TransmitString(char* message);rtty.c: 72: {;rtty.c: 76:  for (int i = 
      +                          0, counti = strlen(message); i < counti; i++)
  8443                           
  8444                           ;incstack = 0
  8445                           ; Regs used in _TransmitString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8446  15D9  0140               	movlb	0	; select bank0
  8447  15DA  01A8               	clrf	TransmitString@i
  8448  15DB  01A9               	clrf	TransmitString@i+1
  8449  15DC  0824               	movf	TransmitString@message+1,w
  8450  15DD  00F1               	movwf	strlen@s+1
  8451  15DE  0823               	movf	TransmitString@message,w
  8452  15DF  00F0               	movwf	strlen@s
  8453  15E0  3193  231D  3195   	fcall	_strlen
  8454  15E3  0871               	movf	?_strlen+1,w
  8455  15E4  0140               	movlb	0	; select bank0
  8456  15E5  00A7               	movwf	TransmitString@counti+1
  8457  15E6  0870               	movf	?_strlen,w
  8458  15E7  00A6               	movwf	TransmitString@counti
  8459  15E8                     l6024:	
  8460  15E8  0829               	movf	TransmitString@i+1,w
  8461  15E9  3A80               	xorlw	128
  8462  15EA  00A5               	movwf	??_TransmitString
  8463  15EB  0827               	movf	TransmitString@counti+1,w
  8464  15EC  3A80               	xorlw	128
  8465  15ED  0225               	subwf	??_TransmitString,w
  8466  15EE  1D03               	skipz
  8467  15EF  2DF2               	goto	u6125
  8468  15F0  0826               	movf	TransmitString@counti,w
  8469  15F1  0228               	subwf	TransmitString@i,w
  8470  15F2                     u6125:	
  8471  15F2  1803               	btfsc	3,0
  8472  15F3  0008               	return
  8473                           
  8474                           ;rtty.c: 77:  {;rtty.c: 78:   TransmitChar(message[i]);
  8475  15F4  0140               	movlb	0	; select bank0
  8476  15F5  0823               	movf	TransmitString@message,w
  8477  15F6  0728               	addwf	TransmitString@i,w
  8478  15F7  0084               	movwf	4
  8479  15F8  0824               	movf	TransmitString@message+1,w
  8480  15F9  3D29               	addwfc	TransmitString@i+1,w
  8481  15FA  0085               	movwf	5
  8482  15FB  0800               	movf	0,w	;code access
  8483  15FC  3196  26EA  3195   	fcall	_TransmitChar
  8484                           
  8485                           ;rtty.c: 79:  }
  8486  15FF  3001               	movlw	1
  8487  1600  0140               	movlb	0	; select bank0
  8488  1601  07A8               	addwf	TransmitString@i,f
  8489  1602  3000               	movlw	0
  8490  1603  3DA9               	addwfc	TransmitString@i+1,f
  8491  1604  2DE8               	goto	l6024
  8492  1605                     __end_of_TransmitString:	
  8493                           
  8494                           	psect	text8
  8495  16EA                     __ptext8:	
  8496 ;; *************** function _TransmitChar *****************
  8497 ;; Defined at:
  8498 ;;		line 49 in file "rtty.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  byte            1    wreg     unsigned char 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;  byte            1    0[BANK0 ] unsigned char 
  8503 ;;  i               2    1[BANK0 ] int 
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  1    wreg      void 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0, pclath, cstack
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8514 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8516 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8517 ;;Total ram usage:        4 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    5
  8520 ;; This function calls:
  8521 ;;		_TransmitBit
  8522 ;; This function is called by:
  8523 ;;		_TransmitString
  8524 ;; This function uses a non-reentrant model
  8525 ;;
  8526                           
  8527                           
  8528                           ;psect for function _TransmitChar
  8529  16EA                     _TransmitChar:	
  8530                           
  8531                           ;incstack = 0
  8532                           ; Regs used in _TransmitChar: [wreg+status,2+status,0+pclath+cstack]
  8533                           ;TransmitChar@byte stored from wreg
  8534  16EA  0140               	movlb	0	; select bank0
  8535  16EB  00A0               	movwf	TransmitChar@byte
  8536                           
  8537                           ;rtty.c: 49: void TransmitChar(char byte);rtty.c: 50: {;rtty.c: 60:     TransmitBit(0);
  8538  16EC  3000               	movlw	0
  8539  16ED  3193  2309  3196   	fcall	_TransmitBit
  8540                           
  8541                           ;rtty.c: 62:  for (int i = 0; i < 7; i++)
  8542  16F0  0140               	movlb	0	; select bank0
  8543  16F1  01A1               	clrf	TransmitChar@i
  8544  16F2  01A2               	clrf	TransmitChar@i+1
  8545  16F3                     l5694:	
  8546                           
  8547                           ;rtty.c: 63:  {;rtty.c: 64:   TransmitBit((byte >> i) & 1);
  8548  16F3  0140               	movlb	0	; select bank0
  8549  16F4  0820               	movf	TransmitChar@byte,w
  8550  16F5  00FD               	movwf	??_TransmitChar
  8551  16F6  0A21               	incf	TransmitChar@i,w
  8552  16F7  2EF9               	goto	u5614
  8553  16F8                     u5615:	
  8554  16F8  36FD               	lsrf	??_TransmitChar,f
  8555  16F9                     u5614:	
  8556  16F9  0B89               	decfsz	9,f
  8557  16FA  2EF8               	goto	u5615
  8558  16FB  1C7D               	btfss	??_TransmitChar,0
  8559  16FC  2EFF               	goto	u5620
  8560  16FD  3001               	movlw	1
  8561  16FE  2F00               	goto	u5630
  8562  16FF                     u5620:	
  8563  16FF  3000               	movlw	0
  8564  1700                     u5630:	
  8565  1700  3193  2309  3196   	fcall	_TransmitBit
  8566                           
  8567                           ;rtty.c: 65:  }
  8568  1703  3001               	movlw	1
  8569  1704  0140               	movlb	0	; select bank0
  8570  1705  07A1               	addwf	TransmitChar@i,f
  8571  1706  3000               	movlw	0
  8572  1707  3DA2               	addwfc	TransmitChar@i+1,f
  8573  1708  0822               	movf	TransmitChar@i+1,w
  8574  1709  3A80               	xorlw	128
  8575  170A  00FD               	movwf	??_TransmitChar
  8576  170B  3080               	movlw	128
  8577  170C  027D               	subwf	??_TransmitChar,w
  8578  170D  1D03               	skipz
  8579  170E  2F11               	goto	u5645
  8580  170F  3007               	movlw	7
  8581  1710  0221               	subwf	TransmitChar@i,w
  8582  1711                     u5645:	
  8583  1711  1C03               	skipc
  8584  1712  2EF3               	goto	l5694
  8585                           
  8586                           ;rtty.c: 67:  TransmitBit(1);
  8587  1713  3001               	movlw	1
  8588  1714  3193  2309  3196   	fcall	_TransmitBit
  8589                           
  8590                           ;rtty.c: 68:  TransmitBit(1);
  8591  1717  3001               	movlw	1
  8592  1718  3193  2309         	fcall	_TransmitBit
  8593  171A  0008               	return
  8594  171B                     __end_of_TransmitChar:	
  8595                           
  8596                           	psect	text9
  8597  1309                     __ptext9:	
  8598 ;; *************** function _TransmitBit *****************
  8599 ;; Defined at:
  8600 ;;		line 29 in file "rtty.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  b               1    wreg     _Bool 
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;  b               1   12[COMMON] _Bool 
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1    wreg      void 
  8607 ;; Registers used:
  8608 ;;		wreg, status,2, status,0, pclath, cstack
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8618 ;;Total ram usage:        1 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:    4
  8621 ;; This function calls:
  8622 ;;		_Sleep
  8623 ;; This function is called by:
  8624 ;;		_TransmitChar
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           
  8629                           ;psect for function _TransmitBit
  8630  1309                     _TransmitBit:	
  8631                           
  8632                           ;incstack = 0
  8633                           ; Regs used in _TransmitBit: [wreg+status,2+status,0+pclath+cstack]
  8634                           ;TransmitBit@b stored from wreg
  8635  1309  00FC               	movwf	TransmitBit@b
  8636                           
  8637                           ;rtty.c: 29: void TransmitBit(_Bool b);rtty.c: 30: {;rtty.c: 31:  if (b)
  8638  130A  087C               	movf	TransmitBit@b,w
  8639  130B  1903               	btfsc	3,2
  8640  130C  2B10               	goto	l861
  8641                           
  8642                           ;rtty.c: 32:  {;rtty.c: 33:   do { LATAbits.LATA4 = 1; } while(0);
  8643  130D  0140               	movlb	0	; select bank0
  8644  130E  1618               	bsf	24,4	;volatile
  8645  130F  2B12               	goto	l5336
  8646  1310                     l861:	
  8647                           ;rtty.c: 36:  {;rtty.c: 37:   do { LATAbits.LATA4 = 0; } while(0);
  8648                           
  8649  1310  0140               	movlb	0	; select bank0
  8650  1311  1218               	bcf	24,4	;volatile
  8651  1312                     l5336:	
  8652  1312  3000               	movlw	0
  8653  1313  00F3               	movwf	Sleep@ms+3
  8654  1314  3000               	movlw	0
  8655  1315  00F2               	movwf	Sleep@ms+2
  8656  1316  3000               	movlw	0
  8657  1317  00F1               	movwf	Sleep@ms+1
  8658  1318  3014               	movlw	20
  8659  1319  00F0               	movwf	Sleep@ms
  8660  131A  3195  25AE         	fcall	_Sleep
  8661  131C  0008               	return
  8662  131D                     __end_of_TransmitBit:	
  8663                           
  8664                           	psect	text10
  8665  0A21                     __ptext10:	
  8666 ;; *************** function _SetupGPS *****************
  8667 ;; Defined at:
  8668 ;;		line 429 in file "main.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;		None
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;		None
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      void 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8686 ;;Total ram usage:        1 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    5
  8689 ;; This function calls:
  8690 ;;		_GPS_HasAcknowledged
  8691 ;;		_GPS_SendUBX
  8692 ;;		_Sleep
  8693 ;;		_WriteGPS
  8694 ;; This function is called by:
  8695 ;;		_main
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           
  8700                           ;psect for function _SetupGPS
  8701  0A21                     _SetupGPS:	
  8702                           
  8703                           ;incstack = 0
  8704                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8705                           ;main.c: 431:     do { LATAbits.LATA5 = 0; } while(0);
  8706  0A21  0140               	movlb	0	; select bank0
  8707  0A22  1298               	bcf	24,5	;volatile
  8708  0A23                     l5924:	
  8709                           
  8710                           ;main.c: 432:     while (!gps_configured)
  8711  0A23  0141               	movlb	1	; select bank1
  8712  0A24  0832               	movf	_gps_configured^(0+128),w
  8713  0A25  1D03               	btfss	3,2
  8714  0A26  2A3F               	goto	l779
  8715                           
  8716                           ;main.c: 433:     {;main.c: 434:         GPS_SendUBX(setNavFlightMode);
  8717  0A27  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  8718  0A28  3194  24E2  318A   	fcall	_GPS_SendUBX
  8719                           
  8720                           ;main.c: 435:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
  8721  0A2B  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  8722  0A2C  3186  26F1  318A   	fcall	_GPS_HasAcknowledged
  8723  0A2F  00FC               	movwf	??_SetupGPS
  8724  0A30  087C               	movf	??_SetupGPS,w
  8725  0A31  0141               	movlb	1	; select bank1
  8726  0A32  00B2               	movwf	_gps_configured^(0+128)
  8727                           
  8728                           ;main.c: 436:         Sleep(500);
  8729  0A33  3000               	movlw	0
  8730  0A34  00F3               	movwf	Sleep@ms+3
  8731  0A35  3000               	movlw	0
  8732  0A36  00F2               	movwf	Sleep@ms+2
  8733  0A37  3001               	movlw	1
  8734  0A38  00F1               	movwf	Sleep@ms+1
  8735  0A39  30F4               	movlw	244
  8736  0A3A  00F0               	movwf	Sleep@ms
  8737  0A3B  3195  25AE  318A   	fcall	_Sleep
  8738  0A3E  2A23               	goto	l5924
  8739  0A3F                     l779:	
  8740                           ;main.c: 438:     do { LATAbits.LATA5 = 1; } while(0);
  8741                           
  8742  0A3F  0140               	movlb	0	; select bank0
  8743  0A40  1698               	bsf	24,5	;volatile
  8744                           
  8745                           ;main.c: 439:     gps_configured = 0;
  8746  0A41  0141               	movlb	1	; select bank1
  8747  0A42  01B2               	clrf	_gps_configured^(0+128)
  8748                           
  8749                           ;main.c: 441:     WriteGPS("$PUBX,40,GLL,0,0,0,0*5C\r\n");
  8750  0A43  304E               	movlw	low (STR_1| (0+32768))
  8751  0A44  00F5               	movwf	WriteGPS@message
  8752  0A45  3098               	movlw	high (STR_1| (0+32768))
  8753  0A46  00F6               	movwf	WriteGPS@message+1
  8754  0A47  3195  2509  318A   	fcall	_WriteGPS
  8755                           
  8756                           ;main.c: 442:     WriteGPS("$PUBX,40,GGA,0,0,0,0*5A\r\n");
  8757  0A4A  3034               	movlw	low (STR_2| (0+32768))
  8758  0A4B  00F5               	movwf	WriteGPS@message
  8759  0A4C  3098               	movlw	high (STR_2| (0+32768))
  8760  0A4D  00F6               	movwf	WriteGPS@message+1
  8761  0A4E  3195  2509  318A   	fcall	_WriteGPS
  8762                           
  8763                           ;main.c: 443:     WriteGPS("$PUBX,40,VTG,0,0,0,0*5E\r\n");
  8764  0A51  3082               	movlw	low (STR_3| (0+32768))
  8765  0A52  00F5               	movwf	WriteGPS@message
  8766  0A53  3098               	movlw	high (STR_3| (0+32768))
  8767  0A54  00F6               	movwf	WriteGPS@message+1
  8768  0A55  3195  2509  318A   	fcall	_WriteGPS
  8769                           
  8770                           ;main.c: 444:     WriteGPS("$PUBX,40,GSV,0,0,0,0*59\r\n");
  8771  0A58  301A               	movlw	low (STR_4| (0+32768))
  8772  0A59  00F5               	movwf	WriteGPS@message
  8773  0A5A  3098               	movlw	high (STR_4| (0+32768))
  8774  0A5B  00F6               	movwf	WriteGPS@message+1
  8775  0A5C  3195  2509  318A   	fcall	_WriteGPS
  8776                           
  8777                           ;main.c: 445:     WriteGPS("$PUBX,40,GSA,0,0,0,0*4E\r\n");
  8778  0A5F  3068               	movlw	low (STR_5| (0+32768))
  8779  0A60  00F5               	movwf	WriteGPS@message
  8780  0A61  3098               	movlw	high (STR_5| (0+32768))
  8781  0A62  00F6               	movwf	WriteGPS@message+1
  8782  0A63  3195  2509  318A   	fcall	_WriteGPS
  8783                           
  8784                           ;main.c: 446:     WriteGPS("$PUBX,40,RMC,0,0,0,0*47\r\n");
  8785  0A66  3000               	movlw	low (STR_6| (0+32768))
  8786  0A67  00F5               	movwf	WriteGPS@message
  8787  0A68  3098               	movlw	high (STR_6| (0+32768))
  8788  0A69  00F6               	movwf	WriteGPS@message+1
  8789  0A6A  3195  2509         	fcall	_WriteGPS
  8790  0A6C  0008               	return
  8791  0A6D                     __end_of_SetupGPS:	
  8792                           
  8793                           	psect	text11
  8794  14E2                     __ptext11:	
  8795 ;; *************** function _GPS_SendUBX *****************
  8796 ;; Defined at:
  8797 ;;		line 345 in file "main.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  data            1    wreg     PTR unsigned char 
  8800 ;;		 -> setNavFlightMode(44), 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;  data            1    7[COMMON] PTR unsigned char 
  8803 ;;		 -> setNavFlightMode(44), 
  8804 ;;  i               2    8[COMMON] int 
  8805 ;;  length          2    5[COMMON] int 
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8816 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8818 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8819 ;;Total ram usage:        6 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:    4
  8822 ;; This function calls:
  8823 ;;		_EUSART1_Write
  8824 ;;		_GetLengthUBX
  8825 ;; This function is called by:
  8826 ;;		_SetupGPS
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           
  8831                           ;psect for function _GPS_SendUBX
  8832  14E2                     _GPS_SendUBX:	
  8833                           
  8834                           ;incstack = 0
  8835                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8836                           ;GPS_SendUBX@data stored from wreg
  8837  14E2  00F7               	movwf	GPS_SendUBX@data
  8838                           
  8839                           ;main.c: 345: void GPS_SendUBX(uint8_t* data);main.c: 346: {;main.c: 347:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
  8840  14E3  01F8               	clrf	GPS_SendUBX@i
  8841  14E4  01F9               	clrf	GPS_SendUBX@i+1
  8842  14E5  0877               	movf	GPS_SendUBX@data,w
  8843  14E6  3192  22D0  3194   	fcall	_GetLengthUBX
  8844  14E9  0871               	movf	?_GetLengthUBX+1,w
  8845  14EA  00F6               	movwf	GPS_SendUBX@length+1
  8846  14EB  0870               	movf	?_GetLengthUBX,w
  8847  14EC  00F5               	movwf	GPS_SendUBX@length
  8848  14ED                     l5576:	
  8849  14ED  0879               	movf	GPS_SendUBX@i+1,w
  8850  14EE  3A80               	xorlw	128
  8851  14EF  00F4               	movwf	??_GPS_SendUBX
  8852  14F0  0876               	movf	GPS_SendUBX@length+1,w
  8853  14F1  3A80               	xorlw	128
  8854  14F2  0274               	subwf	??_GPS_SendUBX,w
  8855  14F3  1D03               	skipz
  8856  14F4  2CF7               	goto	u5495
  8857  14F5  0875               	movf	GPS_SendUBX@length,w
  8858  14F6  0278               	subwf	GPS_SendUBX@i,w
  8859  14F7                     u5495:	
  8860  14F7  1803               	btfsc	3,0
  8861  14F8  0008               	return
  8862                           
  8863                           ;main.c: 348:     {;main.c: 349:         EUSART1_Write(data[i]);
  8864  14F9  0878               	movf	GPS_SendUBX@i,w
  8865  14FA  0777               	addwf	GPS_SendUBX@data,w
  8866  14FB  00F4               	movwf	??_GPS_SendUBX
  8867  14FC  0874               	movf	??_GPS_SendUBX,w
  8868  14FD  0086               	movwf	6
  8869  14FE  3002               	movlw	2	; select bank4/5
  8870  14FF  0087               	movwf	7
  8871  1500  0801               	movf	1,w
  8872  1501  3192  225D  3194   	fcall	_EUSART1_Write
  8873                           
  8874                           ;main.c: 350:     }
  8875  1504  3001               	movlw	1
  8876  1505  07F8               	addwf	GPS_SendUBX@i,f
  8877  1506  3000               	movlw	0
  8878  1507  3DF9               	addwfc	GPS_SendUBX@i+1,f
  8879  1508  2CED               	goto	l5576
  8880  1509                     __end_of_GPS_SendUBX:	
  8881                           
  8882                           	psect	text12
  8883  12D0                     __ptext12:	
  8884 ;; *************** function _GetLengthUBX *****************
  8885 ;; Defined at:
  8886 ;;		line 339 in file "main.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  data            1    wreg     PTR unsigned char 
  8889 ;;		 -> setNavFlightMode(44), 
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;  data            1    3[COMMON] PTR unsigned char 
  8892 ;;		 -> setNavFlightMode(44), 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  2    0[COMMON] unsigned int 
  8895 ;; Registers used:
  8896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8902 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8905 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8906 ;;Total ram usage:        4 bytes
  8907 ;; Hardware stack levels used:    1
  8908 ;; Hardware stack levels required when called:    3
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		_GPS_SendUBX
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           
  8917                           ;psect for function _GetLengthUBX
  8918  12D0                     _GetLengthUBX:	
  8919                           
  8920                           ;incstack = 0
  8921                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
  8922                           ;GetLengthUBX@data stored from wreg
  8923  12D0  00F3               	movwf	GetLengthUBX@data
  8924                           
  8925                           ;main.c: 339: size_t GetLengthUBX(uint8_t* data);main.c: 340: {;main.c: 341:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
  8926  12D1  0873               	movf	GetLengthUBX@data,w
  8927  12D2  3E05               	addlw	5
  8928  12D3  0086               	movwf	6
  8929  12D4  3002               	movlw	2	; select bank4/5
  8930  12D5  0087               	movwf	7
  8931  12D6  0873               	movf	GetLengthUBX@data,w
  8932  12D7  3E04               	addlw	4
  8933  12D8  0084               	movwf	4
  8934  12D9  3002               	movlw	2	; select bank4/5
  8935  12DA  0085               	movwf	5
  8936  12DB  0800               	movf	0,w
  8937  12DC  3E08               	addlw	8
  8938  12DD  00F0               	movwf	?_GetLengthUBX
  8939  12DE  3000               	movlw	0
  8940  12DF  3D01               	addwfc	1,w
  8941  12E0  00F1               	movwf	?_GetLengthUBX+1
  8942  12E1  0008               	return
  8943  12E2                     __end_of_GetLengthUBX:	
  8944                           
  8945                           	psect	text13
  8946  06F1                     __ptext13:	
  8947 ;; *************** function _GPS_HasAcknowledged *****************
  8948 ;; Defined at:
  8949 ;;		line 357 in file "main.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;  data            1    wreg     PTR unsigned char 
  8952 ;;		 -> setNavFlightMode(44), 
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;  data            1   15[BANK0 ] PTR unsigned char 
  8955 ;;		 -> setNavFlightMode(44), 
  8956 ;;  i               1   17[BANK0 ] unsigned char 
  8957 ;;  ackPacket      10    5[BANK0 ] unsigned char [10]
  8958 ;;  startTime       4    0[BANK0 ] unsigned long 
  8959 ;;  ackByteID       1   16[BANK0 ] unsigned char 
  8960 ;;  ackByte         1    4[BANK0 ] unsigned char 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      _Bool 
  8963 ;; Registers used:
  8964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8971 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8973 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8974 ;;Total ram usage:       22 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:    4
  8977 ;; This function calls:
  8978 ;;		_EUSART1_Read
  8979 ;;		_EUSART1_is_rx_ready
  8980 ;; This function is called by:
  8981 ;;		_SetupGPS
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           
  8986                           ;psect for function _GPS_HasAcknowledged
  8987  06F1                     _GPS_HasAcknowledged:	
  8988                           
  8989                           ;incstack = 0
  8990                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8991                           ;GPS_HasAcknowledged@data stored from wreg
  8992  06F1  0140               	movlb	0	; select bank0
  8993  06F2  00AF               	movwf	GPS_HasAcknowledged@data
  8994                           
  8995                           ;main.c: 357: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 358: {;main.c: 359:     u
      +                          int8_t ackPacket[10];;main.c: 360:     uint32_t startTime = ticks;
  8996  06F3  0141               	movlb	1	; select bank1
  8997  06F4  082B               	movf	(_ticks+3)^(0+128),w
  8998  06F5  0140               	movlb	0	; select bank0
  8999  06F6  00A3               	movwf	GPS_HasAcknowledged@startTime+3
  9000  06F7  0141               	movlb	1	; select bank1
  9001  06F8  082A               	movf	(_ticks+2)^(0+128),w
  9002  06F9  0140               	movlb	0	; select bank0
  9003  06FA  00A2               	movwf	GPS_HasAcknowledged@startTime+2
  9004  06FB  0141               	movlb	1	; select bank1
  9005  06FC  0829               	movf	(_ticks+1)^(0+128),w
  9006  06FD  0140               	movlb	0	; select bank0
  9007  06FE  00A1               	movwf	GPS_HasAcknowledged@startTime+1
  9008  06FF  0141               	movlb	1	; select bank1
  9009  0700  0828               	movf	_ticks^(0+128),w
  9010  0701  0140               	movlb	0	; select bank0
  9011  0702  00A0               	movwf	GPS_HasAcknowledged@startTime
  9012                           
  9013                           ;main.c: 363:     ackPacket[0] = 0xB5;
  9014  0703  30B5               	movlw	181
  9015  0704  00F0               	movwf	??_GPS_HasAcknowledged
  9016  0705  0870               	movf	??_GPS_HasAcknowledged,w
  9017  0706  00A5               	movwf	GPS_HasAcknowledged@ackPacket
  9018                           
  9019                           ;main.c: 364:     ackPacket[1] = 0x62;
  9020  0707  3062               	movlw	98
  9021  0708  00F0               	movwf	??_GPS_HasAcknowledged
  9022  0709  0870               	movf	??_GPS_HasAcknowledged,w
  9023  070A  00A6               	movwf	GPS_HasAcknowledged@ackPacket+1
  9024                           
  9025                           ;main.c: 365:     ackPacket[2] = 0x05;
  9026  070B  3005               	movlw	5
  9027  070C  00F0               	movwf	??_GPS_HasAcknowledged
  9028  070D  0870               	movf	??_GPS_HasAcknowledged,w
  9029  070E  00A7               	movwf	GPS_HasAcknowledged@ackPacket+2
  9030                           
  9031                           ;main.c: 366:     ackPacket[3] = 0x01;
  9032  070F  01A8               	clrf	GPS_HasAcknowledged@ackPacket+3
  9033  0710  0AA8               	incf	GPS_HasAcknowledged@ackPacket+3,f
  9034                           
  9035                           ;main.c: 367:     ackPacket[4] = 0x02;
  9036  0711  3002               	movlw	2
  9037  0712  00F0               	movwf	??_GPS_HasAcknowledged
  9038  0713  0870               	movf	??_GPS_HasAcknowledged,w
  9039  0714  00A9               	movwf	GPS_HasAcknowledged@ackPacket+4
  9040                           
  9041                           ;main.c: 368:     ackPacket[5] = 0x00;
  9042  0715  01AA               	clrf	GPS_HasAcknowledged@ackPacket+5
  9043                           
  9044                           ;main.c: 369:     ackPacket[6] = data[2];
  9045  0716  082F               	movf	GPS_HasAcknowledged@data,w
  9046  0717  0086               	movwf	6
  9047  0718  3002               	movlw	2	; select bank4/5
  9048  0719  0087               	movwf	7
  9049  071A  3002               	movlw	2	; select bank4/5
  9050  071B  3F42               	moviw [2]fsr1
  9051  071C  00AB               	movwf	GPS_HasAcknowledged@ackPacket+6
  9052                           
  9053                           ;main.c: 370:     ackPacket[7] = data[3];
  9054  071D  082F               	movf	GPS_HasAcknowledged@data,w
  9055  071E  0086               	movwf	6
  9056  071F  3002               	movlw	2	; select bank4/5
  9057  0720  0087               	movwf	7
  9058  0721  3002               	movlw	2	; select bank4/5
  9059  0722  3F43               	moviw [3]fsr1
  9060  0723  00AC               	movwf	GPS_HasAcknowledged@ackPacket+7
  9061                           
  9062                           ;main.c: 371:     ackPacket[8] = 0;
  9063  0724  01AD               	clrf	GPS_HasAcknowledged@ackPacket+8
  9064                           
  9065                           ;main.c: 372:     ackPacket[9] = 0;
  9066  0725  01AE               	clrf	GPS_HasAcknowledged@ackPacket+9
  9067                           
  9068                           ;main.c: 375:     for (uint8_t i = 2; i < 8; i++)
  9069  0726  3002               	movlw	2
  9070  0727  00F0               	movwf	??_GPS_HasAcknowledged
  9071  0728  0870               	movf	??_GPS_HasAcknowledged,w
  9072  0729  00B1               	movwf	GPS_HasAcknowledged@i
  9073  072A                     l5598:	
  9074                           
  9075                           ;main.c: 376:     {;main.c: 377:         ackPacket[8] = ackPacket[8] + ackPacket[i];
  9076  072A  0831               	movf	GPS_HasAcknowledged@i,w
  9077  072B  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  9078  072C  0086               	movwf	6
  9079  072D  0187               	clrf	7
  9080  072E  082D               	movf	GPS_HasAcknowledged@ackPacket+8,w
  9081  072F  0701               	addwf	1,w
  9082  0730  00F0               	movwf	??_GPS_HasAcknowledged
  9083  0731  0870               	movf	??_GPS_HasAcknowledged,w
  9084  0732  00AD               	movwf	GPS_HasAcknowledged@ackPacket+8
  9085                           
  9086                           ;main.c: 378:         ackPacket[9] = ackPacket[9] + ackPacket[8];
  9087  0733  082E               	movf	GPS_HasAcknowledged@ackPacket+9,w
  9088  0734  072D               	addwf	GPS_HasAcknowledged@ackPacket+8,w
  9089  0735  00F0               	movwf	??_GPS_HasAcknowledged
  9090  0736  0870               	movf	??_GPS_HasAcknowledged,w
  9091  0737  00AE               	movwf	GPS_HasAcknowledged@ackPacket+9
  9092                           
  9093                           ;main.c: 379:     }
  9094  0738  3001               	movlw	1
  9095  0739  00F0               	movwf	??_GPS_HasAcknowledged
  9096  073A  0870               	movf	??_GPS_HasAcknowledged,w
  9097  073B  07B1               	addwf	GPS_HasAcknowledged@i,f
  9098  073C  3008               	movlw	8
  9099  073D  0231               	subwf	GPS_HasAcknowledged@i,w
  9100  073E  1C03               	skipc
  9101  073F  2F2A               	goto	l5598
  9102  0740                     l5606:	
  9103                           
  9104                           ;main.c: 382:     uint8_t ackByte;;main.c: 385:     uint8_t ackByteID = 0;
  9105  0740  01B0               	clrf	GPS_HasAcknowledged@ackByteID
  9106  0741                     l5608:	
  9107                           
  9108                           ;main.c: 389:     {;main.c: 392:         if (ackByteID > 9)
  9109  0741  300A               	movlw	10
  9110  0742  0140               	movlb	0	; select bank0
  9111  0743  0230               	subwf	GPS_HasAcknowledged@ackByteID,w
  9112  0744  1C03               	skipc
  9113  0745  2F48               	goto	l5614
  9114                           
  9115                           ;main.c: 393:         {;main.c: 396:             return 1;
  9116  0746  3001               	movlw	1
  9117  0747  0008               	return
  9118  0748                     l5614:	
  9119                           
  9120                           ;main.c: 400:         if (ticks - startTime > 3000)
  9121  0748  0820               	movf	GPS_HasAcknowledged@startTime,w
  9122  0749  0141               	movlb	1	; select bank1
  9123  074A  0228               	subwf	_ticks^(0+128),w
  9124  074B  00F0               	movwf	??_GPS_HasAcknowledged
  9125  074C  0140               	movlb	0	; select bank0
  9126  074D  0821               	movf	GPS_HasAcknowledged@startTime+1,w
  9127  074E  0141               	movlb	1	; select bank1
  9128  074F  3B29               	subwfb	(_ticks+1)^(0+128),w
  9129  0750  00F1               	movwf	??_GPS_HasAcknowledged+1
  9130  0751  0140               	movlb	0	; select bank0
  9131  0752  0822               	movf	GPS_HasAcknowledged@startTime+2,w
  9132  0753  0141               	movlb	1	; select bank1
  9133  0754  3B2A               	subwfb	(_ticks+2)^(0+128),w
  9134  0755  00F2               	movwf	??_GPS_HasAcknowledged+2
  9135  0756  0140               	movlb	0	; select bank0
  9136  0757  0823               	movf	GPS_HasAcknowledged@startTime+3,w
  9137  0758  0141               	movlb	1	; select bank1
  9138  0759  3B2B               	subwfb	(_ticks+3)^(0+128),w
  9139  075A  00F3               	movwf	??_GPS_HasAcknowledged+3
  9140  075B  0873               	movf	??_GPS_HasAcknowledged+3,w
  9141  075C  1D03               	btfss	3,2
  9142  075D  2F67               	goto	l5616
  9143  075E  0872               	movf	??_GPS_HasAcknowledged+2,w
  9144  075F  1D03               	btfss	3,2
  9145  0760  2F67               	goto	l5616
  9146  0761  30B9               	movlw	185
  9147  0762  0270               	subwf	??_GPS_HasAcknowledged,w
  9148  0763  300B               	movlw	11
  9149  0764  3B71               	subwfb	??_GPS_HasAcknowledged+1,w
  9150  0765  1C03               	btfss	3,0
  9151  0766  2F69               	goto	l5620
  9152  0767                     l5616:	
  9153                           
  9154                           ;main.c: 401:         {;main.c: 402:             return 0;
  9155  0767  3000               	movlw	0
  9156  0768  0008               	return
  9157  0769                     l5620:	
  9158                           
  9159                           ;main.c: 406:         if (EUSART1_is_rx_ready())
  9160  0769  3192  2238  3186   	fcall	_EUSART1_is_rx_ready
  9161  076C  3A00               	xorlw	0
  9162  076D  1903               	skipnz
  9163  076E  2F41               	goto	l5608
  9164                           
  9165                           ;main.c: 407:         {;main.c: 408:             ackByte = EUSART1_Read();
  9166  076F  3192  2282  3186   	fcall	_EUSART1_Read
  9167  0772  00F0               	movwf	??_GPS_HasAcknowledged
  9168  0773  0870               	movf	??_GPS_HasAcknowledged,w
  9169  0774  0140               	movlb	0	; select bank0
  9170  0775  00A4               	movwf	GPS_HasAcknowledged@ackByte
  9171                           
  9172                           ;main.c: 411:             if (ackByte == ackPacket[ackByteID]) {
  9173  0776  0830               	movf	GPS_HasAcknowledged@ackByteID,w
  9174  0777  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  9175  0778  0086               	movwf	6
  9176  0779  0187               	clrf	7
  9177  077A  0801               	movf	1,w
  9178  077B  0624               	xorwf	GPS_HasAcknowledged@ackByte,w
  9179  077C  1D03               	skipz
  9180  077D  2F40               	goto	l5606
  9181                           
  9182                           ;main.c: 412:                 ackByteID++;
  9183  077E  3001               	movlw	1
  9184  077F  00F0               	movwf	??_GPS_HasAcknowledged
  9185  0780  0870               	movf	??_GPS_HasAcknowledged,w
  9186  0781  07B0               	addwf	GPS_HasAcknowledged@ackByteID,f
  9187                           
  9188                           ;main.c: 413:             }
  9189  0782  2F41               	goto	l5608
  9190  0783                     __end_of_GPS_HasAcknowledged:	
  9191                           
  9192                           	psect	text14
  9193  12C1                     __ptext14:	
  9194 ;; *************** function _SYSTEM_Initialize *****************
  9195 ;; Defined at:
  9196 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, status,2, status,0, pclath, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9214 ;;Total ram usage:        0 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:    5
  9217 ;; This function calls:
  9218 ;;		_EUSART1_Initialize
  9219 ;;		_OSCILLATOR_Initialize
  9220 ;;		_PIN_MANAGER_Initialize
  9221 ;;		_PMD_Initialize
  9222 ;;		_TMR0_Initialize
  9223 ;; This function is called by:
  9224 ;;		_main
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           
  9229                           ;psect for function _SYSTEM_Initialize
  9230  12C1                     _SYSTEM_Initialize:	
  9231                           
  9232                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  9233                           
  9234                           ;incstack = 0
  9235                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9236  12C1  3192  2278  3192   	fcall	_PMD_Initialize
  9237                           
  9238                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  9239  12C4  3195  2531  3192   	fcall	_PIN_MANAGER_Initialize
  9240                           
  9241                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  9242  12C7  3192  2265  3192   	fcall	_OSCILLATOR_Initialize
  9243                           
  9244                           ;mcc_generated_files/mcc.c: 55:     TMR0_Initialize();
  9245  12CA  3192  22E2  3192   	fcall	_TMR0_Initialize
  9246                           
  9247                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  9248  12CD  3194  242A         	fcall	_EUSART1_Initialize
  9249  12CF  0008               	return
  9250  12D0                     __end_of_SYSTEM_Initialize:	
  9251                           
  9252                           	psect	text15
  9253  12E2                     __ptext15:	
  9254 ;; *************** function _TMR0_Initialize *****************
  9255 ;; Defined at:
  9256 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;		None
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;		None
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1    wreg      void 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0, pclath, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9274 ;;Total ram usage:        0 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    4
  9277 ;; This function calls:
  9278 ;;		_TMR0_SetInterruptHandler
  9279 ;; This function is called by:
  9280 ;;		_SYSTEM_Initialize
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function _TMR0_Initialize
  9286  12E2                     _TMR0_Initialize:	
  9287                           
  9288                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x40;
  9289                           
  9290                           ;incstack = 0
  9291                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9292  12E2  3040               	movlw	64
  9293  12E3  014B               	movlb	11	; select bank11
  9294  12E4  009F               	movwf	31	;volatile
  9295                           
  9296                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  9297  12E5  30F9               	movlw	249
  9298  12E6  009D               	movwf	29	;volatile
  9299                           
  9300                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  9301  12E7  019C               	clrf	28	;volatile
  9302                           
  9303                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  9304  12E8  014E               	movlb	14	; select bank14
  9305  12E9  128C               	bcf	12,5	;volatile
  9306                           
  9307                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  9308  12EA  1696               	bsf	22,5	;volatile
  9309                           
  9310                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  9311  12EB  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  9312  12EC  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9313  12ED  3007               	movlw	high _TMR0_DefaultInterruptHandler
  9314  12EE  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9315  12EF  3192  223D         	fcall	_TMR0_SetInterruptHandler
  9316                           
  9317                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  9318  12F1  3080               	movlw	128
  9319  12F2  014B               	movlb	11	; select bank11
  9320  12F3  009E               	movwf	30	;volatile
  9321  12F4  0008               	return
  9322  12F5                     __end_of_TMR0_Initialize:	
  9323                           
  9324                           	psect	text16
  9325  1278                     __ptext16:	
  9326 ;; *************** function _PMD_Initialize *****************
  9327 ;; Defined at:
  9328 ;;		line 73 in file "mcc_generated_files/mcc.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      void 
  9335 ;; Registers used:
  9336 ;;		status,2
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9346 ;;Total ram usage:        0 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:    3
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_SYSTEM_Initialize
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           
  9357                           ;psect for function _PMD_Initialize
  9358  1278                     _PMD_Initialize:	
  9359                           
  9360                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  9361                           
  9362                           ;incstack = 0
  9363                           ; Regs used in _PMD_Initialize: [status,2]
  9364  1278  014F               	movlb	15	; select bank15
  9365  1279  0196               	clrf	22	;volatile
  9366                           
  9367                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  9368  127A  0197               	clrf	23	;volatile
  9369                           
  9370                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  9371  127B  0198               	clrf	24	;volatile
  9372                           
  9373                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  9374  127C  0199               	clrf	25	;volatile
  9375                           
  9376                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  9377  127D  019A               	clrf	26	;volatile
  9378                           
  9379                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  9380  127E  019B               	clrf	27	;volatile
  9381                           
  9382                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
  9383  127F  019C               	clrf	28	;volatile
  9384                           
  9385                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
  9386  1280  019D               	clrf	29	;volatile
  9387  1281  0008               	return
  9388  1282                     __end_of_PMD_Initialize:	
  9389                           
  9390                           	psect	text17
  9391  1531                     __ptext17:	
  9392 ;; *************** function _PIN_MANAGER_Initialize *****************
  9393 ;; Defined at:
  9394 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;		None
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;		None
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1    wreg      void 
  9401 ;; Registers used:
  9402 ;;		wreg, status,2
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9412 ;;Total ram usage:        0 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:    3
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		_SYSTEM_Initialize
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           
  9423                           ;psect for function _PIN_MANAGER_Initialize
  9424  1531                     _PIN_MANAGER_Initialize:	
  9425                           
  9426                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  9427                           
  9428                           ;incstack = 0
  9429                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9430  1531  0140               	movlb	0	; select bank0
  9431  1532  0198               	clrf	24	;volatile
  9432                           
  9433                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  9434  1533  0199               	clrf	25	;volatile
  9435                           
  9436                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  9437  1534  019A               	clrf	26	;volatile
  9438                           
  9439                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x0B;
  9440  1535  300B               	movlw	11
  9441  1536  0092               	movwf	18	;volatile
  9442                           
  9443                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
  9444  1537  3030               	movlw	48
  9445  1538  0093               	movwf	19	;volatile
  9446                           
  9447                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xDF;
  9448  1539  30DF               	movlw	223
  9449  153A  0094               	movwf	20	;volatile
  9450                           
  9451                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  9452  153B  30FF               	movlw	255
  9453  153C  017E               	movlb	62	; select bank62
  9454  153D  00CE               	movwf	78	;volatile
  9455                           
  9456                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xD0;
  9457  153E  30D0               	movlw	208
  9458  153F  00C3               	movwf	67	;volatile
  9459                           
  9460                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  9461  1540  3037               	movlw	55
  9462  1541  00B8               	movwf	56	;volatile
  9463                           
  9464                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  9465  1542  01C4               	clrf	68	;volatile
  9466                           
  9467                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  9468  1543  01B9               	clrf	57	;volatile
  9469                           
  9470                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  9471  1544  01CF               	clrf	79	;volatile
  9472                           
  9473                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  9474  1545  01BA               	clrf	58	;volatile
  9475                           
  9476                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  9477  1546  01C5               	clrf	69	;volatile
  9478                           
  9479                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  9480  1547  01D0               	clrf	80	;volatile
  9481                           
  9482                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  9483  1548  3037               	movlw	55
  9484  1549  00BB               	movwf	59	;volatile
  9485                           
  9486                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  9487  154A  30F0               	movlw	240
  9488  154B  00C6               	movwf	70	;volatile
  9489                           
  9490                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  9491  154C  30FF               	movlw	255
  9492  154D  00D1               	movwf	81	;volatile
  9493                           
  9494                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  9495  154E  303F               	movlw	63
  9496  154F  00BC               	movwf	60	;volatile
  9497                           
  9498                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  9499  1550  30F0               	movlw	240
  9500  1551  00C7               	movwf	71	;volatile
  9501                           
  9502                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  9503  1552  30FF               	movlw	255
  9504  1553  00D2               	movwf	82	;volatile
  9505                           
  9506                           ;mcc_generated_files/pin_manager.c: 113:     RB7PPS = 0x0F;
  9507  1554  300F               	movlw	15
  9508  1555  009F               	movwf	31	;volatile
  9509                           
  9510                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0D;
  9511  1556  300D               	movlw	13
  9512  1557  017D               	movlb	61	; select bank61
  9513  1558  00CB               	movwf	75	;volatile
  9514  1559  0008               	return
  9515  155A                     __end_of_PIN_MANAGER_Initialize:	
  9516                           
  9517                           	psect	text18
  9518  1265                     __ptext18:	
  9519 ;; *************** function _OSCILLATOR_Initialize *****************
  9520 ;; Defined at:
  9521 ;;		line 59 in file "mcc_generated_files/mcc.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;		None
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;		None
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  1    wreg      void 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9539 ;;Total ram usage:        0 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; Hardware stack levels required when called:    3
  9542 ;; This function calls:
  9543 ;;		Nothing
  9544 ;; This function is called by:
  9545 ;;		_SYSTEM_Initialize
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           
  9550                           ;psect for function _OSCILLATOR_Initialize
  9551  1265                     _OSCILLATOR_Initialize:	
  9552                           
  9553                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  9554                           
  9555                           ;incstack = 0
  9556                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9557  1265  3062               	movlw	98
  9558  1266  0151               	movlb	17	; select bank17
  9559  1267  008D               	movwf	13	;volatile
  9560                           
  9561                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  9562  1268  018F               	clrf	15	;volatile
  9563                           
  9564                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  9565  1269  0191               	clrf	17	;volatile
  9566                           
  9567                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x02;
  9568  126A  3002               	movlw	2
  9569  126B  0093               	movwf	19	;volatile
  9570                           
  9571                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  9572  126C  0192               	clrf	18	;volatile
  9573  126D  0008               	return
  9574  126E                     __end_of_OSCILLATOR_Initialize:	
  9575                           
  9576                           	psect	text19
  9577  142A                     __ptext19:	
  9578 ;; *************** function _EUSART1_Initialize *****************
  9579 ;; Defined at:
  9580 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;		None
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      void 
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0, pclath, cstack
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9598 ;;Total ram usage:        0 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    4
  9601 ;; This function calls:
  9602 ;;		_EUSART1_SetErrorHandler
  9603 ;;		_EUSART1_SetFramingErrorHandler
  9604 ;;		_EUSART1_SetOverrunErrorHandler
  9605 ;; This function is called by:
  9606 ;;		_SYSTEM_Initialize
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           
  9611                           ;psect for function _EUSART1_Initialize
  9612  142A                     _EUSART1_Initialize:	
  9613                           
  9614                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  9615                           
  9616                           ;incstack = 0
  9617                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9618  142A  3008               	movlw	8
  9619  142B  0142               	movlb	2	; select bank2
  9620  142C  009F               	movwf	31	;volatile
  9621                           
  9622                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  9623  142D  3090               	movlw	144
  9624  142E  009D               	movwf	29	;volatile
  9625                           
  9626                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  9627  142F  3024               	movlw	36
  9628  1430  009E               	movwf	30	;volatile
  9629                           
  9630                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x19;
  9631  1431  3019               	movlw	25
  9632  1432  009B               	movwf	27	;volatile
  9633                           
  9634                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  9635  1433  019C               	clrf	28	;volatile
  9636                           
  9637                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  9638  1434  3000               	movlw	0
  9639  1435  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  9640  1436  3000               	movlw	0
  9641  1437  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  9642  1438  3192  2249  3194   	fcall	_EUSART1_SetFramingErrorHandler
  9643                           
  9644                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  9645  143B  3000               	movlw	0
  9646  143C  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  9647  143D  3000               	movlw	0
  9648  143E  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  9649  143F  3192  224F  3194   	fcall	_EUSART1_SetOverrunErrorHandler
  9650                           
  9651                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  9652  1442  3000               	movlw	0
  9653  1443  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  9654  1444  3000               	movlw	0
  9655  1445  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  9656  1446  3192  2243         	fcall	_EUSART1_SetErrorHandler
  9657                           
  9658                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  9659  1448  0141               	movlb	1	; select bank1
  9660  1449  01B3               	clrf	_eusart1RxLastError^(0+128)	;volatile
  9661  144A  0008               	return
  9662  144B                     __end_of_EUSART1_Initialize:	
  9663                           
  9664                           	psect	text20
  9665  124F                     __ptext20:	
  9666 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9667 ;; Defined at:
  9668 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  9671 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9687 ;;Total ram usage:        2 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    3
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_EUSART1_Initialize
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           
  9698                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9699  124F                     _EUSART1_SetOverrunErrorHandler:	
  9700                           
  9701                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  9702                           
  9703                           ;incstack = 0
  9704                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9705  124F  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9706  1250  0143               	movlb	3	; select bank3
  9707  1251  00D1               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
  9708  1252  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9709  1253  00D0               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
  9710  1254  0008               	return
  9711  1255                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9712                           
  9713                           	psect	text21
  9714  1249                     __ptext21:	
  9715 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9716 ;; Defined at:
  9717 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  9720 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9736 ;;Total ram usage:        2 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    3
  9739 ;; This function calls:
  9740 ;;		Nothing
  9741 ;; This function is called by:
  9742 ;;		_EUSART1_Initialize
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           
  9747                           ;psect for function _EUSART1_SetFramingErrorHandler
  9748  1249                     _EUSART1_SetFramingErrorHandler:	
  9749                           
  9750                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  9751                           
  9752                           ;incstack = 0
  9753                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9754  1249  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9755  124A  0143               	movlb	3	; select bank3
  9756  124B  00D3               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
  9757  124C  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9758  124D  00D2               	movwf	_EUSART1_FramingErrorHandler^(0+384)
  9759  124E  0008               	return
  9760  124F                     __end_of_EUSART1_SetFramingErrorHandler:	
  9761                           
  9762                           	psect	text22
  9763  1243                     __ptext22:	
  9764 ;; *************** function _EUSART1_SetErrorHandler *****************
  9765 ;; Defined at:
  9766 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  9769 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;		None
  9772 ;; Return value:  Size  Location     Type
  9773 ;;                  1    wreg      void 
  9774 ;; Registers used:
  9775 ;;		wreg
  9776 ;; Tracked objects:
  9777 ;;		On entry : 0/0
  9778 ;;		On exit  : 0/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9785 ;;Total ram usage:        2 bytes
  9786 ;; Hardware stack levels used:    1
  9787 ;; Hardware stack levels required when called:    3
  9788 ;; This function calls:
  9789 ;;		Nothing
  9790 ;; This function is called by:
  9791 ;;		_EUSART1_Initialize
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           
  9796                           ;psect for function _EUSART1_SetErrorHandler
  9797  1243                     _EUSART1_SetErrorHandler:	
  9798                           
  9799                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  9800                           
  9801                           ;incstack = 0
  9802                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9803  1243  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9804  1244  0143               	movlb	3	; select bank3
  9805  1245  00CF               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
  9806  1246  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9807  1247  00CE               	movwf	_EUSART1_ErrorHandler^(0+384)
  9808  1248  0008               	return
  9809  1249                     __end_of_EUSART1_SetErrorHandler:	
  9810                           
  9811                           	psect	text23
  9812  0291                     __ptext23:	
  9813 ;; *************** function _PollGPS *****************
  9814 ;; Defined at:
  9815 ;;		line 509 in file "main.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;		None
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  byte            1   38[BANK0 ] unsigned char 
  9820 ;;  i               2   39[BANK0 ] int 
  9821 ;;  counti          2   33[BANK0 ] int 
  9822 ;;  startTime       4   29[BANK0 ] unsigned long 
  9823 ;;  index           2   41[BANK0 ] int 
  9824 ;;  eusart_compl    1   37[BANK0 ] _Bool 
  9825 ;;  success         1   35[BANK0 ] _Bool 
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1    wreg      _Bool 
  9828 ;; Registers used:
  9829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9836 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9837 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9838 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9839 ;;Total ram usage:       18 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:    7
  9842 ;; This function calls:
  9843 ;;		_ClearNMEA
  9844 ;;		_EUSART1_Read
  9845 ;;		_EUSART1_is_rx_ready
  9846 ;;		_GetAtRowCSV
  9847 ;;		_Insert
  9848 ;;		_InsertString
  9849 ;;		_InsertTxData
  9850 ;;		_InsertTxDataSep
  9851 ;;		_WriteGPS
  9852 ;;		_strcmp
  9853 ;;		_strlen
  9854 ;; This function is called by:
  9855 ;;		_main
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           
  9860                           ;psect for function _PollGPS
  9861  0291                     _PollGPS:	
  9862                           
  9863                           ;main.c: 511:     _Bool success = 0;
  9864                           
  9865                           ;incstack = 0
  9866                           ; Regs used in _PollGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9867  0291  0140               	movlb	0	; select bank0
  9868  0292  01C3               	clrf	PollGPS@success
  9869                           
  9870                           ;main.c: 512:     uint32_t startTime = ticks;
  9871  0293  0141               	movlb	1	; select bank1
  9872  0294  082B               	movf	(_ticks+3)^(0+128),w
  9873  0295  0140               	movlb	0	; select bank0
  9874  0296  00C0               	movwf	PollGPS@startTime+3
  9875  0297  0141               	movlb	1	; select bank1
  9876  0298  082A               	movf	(_ticks+2)^(0+128),w
  9877  0299  0140               	movlb	0	; select bank0
  9878  029A  00BF               	movwf	PollGPS@startTime+2
  9879  029B  0141               	movlb	1	; select bank1
  9880  029C  0829               	movf	(_ticks+1)^(0+128),w
  9881  029D  0140               	movlb	0	; select bank0
  9882  029E  00BE               	movwf	PollGPS@startTime+1
  9883  029F  0141               	movlb	1	; select bank1
  9884  02A0  0828               	movf	_ticks^(0+128),w
  9885  02A1  0140               	movlb	0	; select bank0
  9886  02A2  00BD               	movwf	PollGPS@startTime
  9887                           
  9888                           ;main.c: 515:     ClearNMEA();
  9889  02A3  3194  240D  3182   	fcall	_ClearNMEA
  9890                           
  9891                           ;main.c: 518:     int index = 0;
  9892  02A6  0140               	movlb	0	; select bank0
  9893  02A7  01C9               	clrf	PollGPS@index
  9894  02A8  01CA               	clrf	PollGPS@index+1
  9895                           
  9896                           ;main.c: 521:     _Bool eusart_complete = 0;
  9897  02A9  01C5               	clrf	PollGPS@eusart_complete
  9898                           
  9899                           ;main.c: 524:     WriteGPS("$PUBX,00*33\r\n");
  9900  02AA  309C               	movlw	low (STR_7| (0+32768))
  9901  02AB  00F5               	movwf	WriteGPS@message
  9902  02AC  3098               	movlw	high (STR_7| (0+32768))
  9903  02AD  00F6               	movwf	WriteGPS@message+1
  9904  02AE  3195  2509  3182   	fcall	_WriteGPS
  9905  02B1                     l5998:	
  9906                           ;main.c: 527:     while (ticks - startTime < 3000)
  9907                           
  9908                           
  9909                           ;main.c: 527:     while (ticks - startTime < 3000)
  9910  02B1  0140               	movlb	0	; select bank0
  9911  02B2  083D               	movf	PollGPS@startTime,w
  9912  02B3  0141               	movlb	1	; select bank1
  9913  02B4  0228               	subwf	_ticks^(0+128),w
  9914  02B5  0140               	movlb	0	; select bank0
  9915  02B6  00B9               	movwf	??_PollGPS
  9916  02B7  083E               	movf	PollGPS@startTime+1,w
  9917  02B8  0141               	movlb	1	; select bank1
  9918  02B9  3B29               	subwfb	(_ticks+1)^(0+128),w
  9919  02BA  0140               	movlb	0	; select bank0
  9920  02BB  00BA               	movwf	??_PollGPS+1
  9921  02BC  083F               	movf	PollGPS@startTime+2,w
  9922  02BD  0141               	movlb	1	; select bank1
  9923  02BE  3B2A               	subwfb	(_ticks+2)^(0+128),w
  9924  02BF  0140               	movlb	0	; select bank0
  9925  02C0  00BB               	movwf	??_PollGPS+2
  9926  02C1  0840               	movf	PollGPS@startTime+3,w
  9927  02C2  0141               	movlb	1	; select bank1
  9928  02C3  3B2B               	subwfb	(_ticks+3)^(0+128),w
  9929  02C4  0140               	movlb	0	; select bank0
  9930  02C5  00BC               	movwf	??_PollGPS+3
  9931  02C6  083C               	movf	??_PollGPS+3,w
  9932  02C7  1D03               	btfss	3,2
  9933  02C8  2CC0               	goto	l6000
  9934  02C9  083B               	movf	??_PollGPS+2,w
  9935  02CA  1D03               	btfss	3,2
  9936  02CB  2CC0               	goto	l6000
  9937  02CC  30B8               	movlw	184
  9938  02CD  0239               	subwf	??_PollGPS,w
  9939  02CE  300B               	movlw	11
  9940  02CF  3B3A               	subwfb	??_PollGPS+1,w
  9941  02D0  1803               	btfsc	3,0
  9942  02D1  2CC0               	goto	l6000
  9943                           
  9944                           ;main.c: 528:     {;main.c: 530:         if (eusart_complete)
  9945  02D2  0845               	movf	PollGPS@eusart_complete,w
  9946  02D3  1903               	btfsc	3,2
  9947  02D4  2C98               	goto	l5986
  9948                           
  9949                           ;main.c: 531:         {;main.c: 532:             index = strlen(txdata);
  9950  02D5  3064               	movlw	100
  9951  02D6  00F0               	movwf	strlen@s
  9952  02D7  3027               	movlw	39
  9953  02D8  00F1               	movwf	strlen@s+1
  9954  02D9  3193  231D  3182   	fcall	_strlen
  9955  02DC  0871               	movf	?_strlen+1,w
  9956  02DD  0140               	movlb	0	; select bank0
  9957  02DE  00CA               	movwf	PollGPS@index+1
  9958  02DF  0870               	movf	?_strlen,w
  9959  02E0  00C9               	movwf	PollGPS@index
  9960                           
  9961                           ;main.c: 534:             for (int i = 0, counti = strlen(GetAtRowCSV(nmea_data, PUBX_TI
      +                          ME)); i < counti; i++)
  9962  02E1  01C7               	clrf	PollGPS@i
  9963  02E2  01C8               	clrf	PollGPS@i+1
  9964  02E3  30D8               	movlw	216
  9965  02E4  00F6               	movwf	GetAtRowCSV@src
  9966  02E5  3026               	movlw	38
  9967  02E6  00F7               	movwf	GetAtRowCSV@src+1
  9968  02E7  3000               	movlw	0
  9969  02E8  00F9               	movwf	GetAtRowCSV@column+1
  9970  02E9  3002               	movlw	2
  9971  02EA  00F8               	movwf	GetAtRowCSV@column
  9972  02EB  318D  2502  3182   	fcall	_GetAtRowCSV
  9973  02EE  0140               	movlb	0	; select bank0
  9974  02EF  00B9               	movwf	??_PollGPS
  9975  02F0  0839               	movf	??_PollGPS,w
  9976  02F1  00C4               	movwf	_PollGPS$2658
  9977  02F2  0844               	movf	_PollGPS$2658,w
  9978  02F3  00F0               	movwf	strlen@s
  9979  02F4  3001               	movlw	1
  9980  02F5  00F1               	movwf	strlen@s+1
  9981  02F6  3193  231D  3182   	fcall	_strlen
  9982  02F9  0871               	movf	?_strlen+1,w
  9983  02FA  0140               	movlb	0	; select bank0
  9984  02FB  00C2               	movwf	PollGPS@counti+1
  9985  02FC  0870               	movf	?_strlen,w
  9986  02FD  00C1               	movwf	PollGPS@counti
  9987  02FE                     l5972:	
  9988  02FE  0848               	movf	PollGPS@i+1,w
  9989  02FF  3A80               	xorlw	128
  9990  0300  00B9               	movwf	??_PollGPS
  9991  0301  0842               	movf	PollGPS@counti+1,w
  9992  0302  3A80               	xorlw	128
  9993  0303  0239               	subwf	??_PollGPS,w
  9994  0304  1D03               	skipz
  9995  0305  2B08               	goto	u6065
  9996  0306  0841               	movf	PollGPS@counti,w
  9997  0307  0247               	subwf	PollGPS@i,w
  9998  0308                     u6065:	
  9999  0308  1803               	btfsc	3,0
 10000  0309  2B5C               	goto	l5974
 10001                           
 10002                           ;main.c: 535:             {;main.c: 536:                 if (i < 6)
 10003  030A  0140               	movlb	0	; select bank0
 10004  030B  0848               	movf	PollGPS@i+1,w
 10005  030C  3A80               	xorlw	128
 10006  030D  00B9               	movwf	??_PollGPS
 10007  030E  3080               	movlw	128
 10008  030F  0239               	subwf	??_PollGPS,w
 10009  0310  1D03               	skipz
 10010  0311  2B14               	goto	u6035
 10011  0312  3006               	movlw	6
 10012  0313  0247               	subwf	PollGPS@i,w
 10013  0314                     u6035:	
 10014  0314  1803               	skipnc
 10015  0315  2B56               	goto	l5970
 10016                           
 10017                           ;main.c: 537:                 {;main.c: 538:                     if (i == 2 || i == 4)
 10018  0316  3002               	movlw	2
 10019  0317  0140               	movlb	0	; select bank0
 10020  0318  0647               	xorwf	PollGPS@i,w
 10021  0319  0448               	iorwf	PollGPS@i+1,w
 10022  031A  1903               	btfsc	3,2
 10023  031B  2B21               	goto	l5968
 10024  031C  3004               	movlw	4
 10025  031D  0647               	xorwf	PollGPS@i,w
 10026  031E  0448               	iorwf	PollGPS@i+1,w
 10027  031F  1D03               	btfss	3,2
 10028  0320  2B39               	goto	l803
 10029  0321                     l5968:	
 10030                           
 10031                           ;main.c: 539:                     {;main.c: 540:                         index = Insert(
      +                          txdata, ':', index, 140);
 10032  0321  3064               	movlw	100
 10033  0322  00F5               	movwf	Insert@dest
 10034  0323  3027               	movlw	39
 10035  0324  00F6               	movwf	Insert@dest+1
 10036  0325  303A               	movlw	58
 10037  0326  00B9               	movwf	??_PollGPS
 10038  0327  0839               	movf	??_PollGPS,w
 10039  0328  00F7               	movwf	Insert@src
 10040  0329  084A               	movf	PollGPS@index+1,w
 10041  032A  00F9               	movwf	Insert@index+1
 10042  032B  0849               	movf	PollGPS@index,w
 10043  032C  00F8               	movwf	Insert@index
 10044  032D  308C               	movlw	140
 10045  032E  00FA               	movwf	Insert@destLimit
 10046  032F  3000               	movlw	0
 10047  0330  00FB               	movwf	Insert@destLimit+1
 10048  0331  318F  2715  3182   	fcall	_Insert
 10049  0334  0876               	movf	?_Insert+1,w
 10050  0335  0140               	movlb	0	; select bank0
 10051  0336  00CA               	movwf	PollGPS@index+1
 10052  0337  0875               	movf	?_Insert,w
 10053  0338  00C9               	movwf	PollGPS@index
 10054  0339                     l803:	
 10055                           ;main.c: 541:                     }
 10056                           
 10057                           
 10058                           ;main.c: 542:                     index = Insert(txdata, csvField[i], index, 140);
 10059  0339  3064               	movlw	100
 10060  033A  00F5               	movwf	Insert@dest
 10061  033B  3027               	movlw	39
 10062  033C  00F6               	movwf	Insert@dest+1
 10063  033D  0847               	movf	PollGPS@i,w
 10064  033E  3EBA               	addlw	(low (_csvField| (0+256)))& (0+255)
 10065  033F  0086               	movwf	6
 10066  0340  3001               	movlw	1	; select bank3/4
 10067  0341  0087               	movwf	7
 10068  0342  0801               	movf	1,w
 10069  0343  00B9               	movwf	??_PollGPS
 10070  0344  0839               	movf	??_PollGPS,w
 10071  0345  00F7               	movwf	Insert@src
 10072  0346  084A               	movf	PollGPS@index+1,w
 10073  0347  00F9               	movwf	Insert@index+1
 10074  0348  0849               	movf	PollGPS@index,w
 10075  0349  00F8               	movwf	Insert@index
 10076  034A  308C               	movlw	140
 10077  034B  00FA               	movwf	Insert@destLimit
 10078  034C  3000               	movlw	0
 10079  034D  00FB               	movwf	Insert@destLimit+1
 10080  034E  318F  2715  3182   	fcall	_Insert
 10081  0351  0876               	movf	?_Insert+1,w
 10082  0352  0140               	movlb	0	; select bank0
 10083  0353  00CA               	movwf	PollGPS@index+1
 10084  0354  0875               	movf	?_Insert,w
 10085  0355  00C9               	movwf	PollGPS@index
 10086  0356                     l5970:	
 10087                           
 10088                           ;main.c: 544:             }
 10089  0356  3001               	movlw	1
 10090  0357  0140               	movlb	0	; select bank0
 10091  0358  07C7               	addwf	PollGPS@i,f
 10092  0359  3000               	movlw	0
 10093  035A  3DC8               	addwfc	PollGPS@i+1,f
 10094  035B  2AFE               	goto	l5972
 10095  035C                     l5974:	
 10096                           
 10097                           ;main.c: 545:             index = InsertTxDataSep(index);
 10098  035C  0140               	movlb	0	; select bank0
 10099  035D  084A               	movf	PollGPS@index+1,w
 10100  035E  00FD               	movwf	InsertTxDataSep@index+1
 10101  035F  0849               	movf	PollGPS@index,w
 10102  0360  00FC               	movwf	InsertTxDataSep@index
 10103  0361  3193  2334  3182   	fcall	_InsertTxDataSep
 10104  0364  087D               	movf	?_InsertTxDataSep+1,w
 10105  0365  0140               	movlb	0	; select bank0
 10106  0366  00CA               	movwf	PollGPS@index+1
 10107  0367  087C               	movf	?_InsertTxDataSep,w
 10108  0368  00C9               	movwf	PollGPS@index
 10109                           
 10110                           ;main.c: 547:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_NS), 'S') == 0)
 10111  0369  3053               	movlw	83
 10112  036A  00FB               	movwf	strcmp@r
 10113  036B  3080               	movlw	128
 10114  036C  00FC               	movwf	strcmp@r+1
 10115  036D  30D8               	movlw	216
 10116  036E  00F6               	movwf	GetAtRowCSV@src
 10117  036F  3026               	movlw	38
 10118  0370  00F7               	movwf	GetAtRowCSV@src+1
 10119  0371  3000               	movlw	0
 10120  0372  00F9               	movwf	GetAtRowCSV@column+1
 10121  0373  3004               	movlw	4
 10122  0374  00F8               	movwf	GetAtRowCSV@column
 10123  0375  318D  2502  3182   	fcall	_GetAtRowCSV
 10124  0378  3196  268B  3182   	fcall	_strcmp
 10125  037B  087B               	movf	?_strcmp,w
 10126  037C  047C               	iorwf	?_strcmp+1,w
 10127  037D  1D03               	btfss	3,2
 10128  037E  2B98               	goto	l807
 10129                           
 10130                           ;main.c: 548:             {;main.c: 549:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
 10131  037F  3064               	movlw	100
 10132  0380  00F5               	movwf	Insert@dest
 10133  0381  3027               	movlw	39
 10134  0382  00F6               	movwf	Insert@dest+1
 10135  0383  302D               	movlw	45
 10136  0384  0140               	movlb	0	; select bank0
 10137  0385  00B9               	movwf	??_PollGPS
 10138  0386  0839               	movf	??_PollGPS,w
 10139  0387  00F7               	movwf	Insert@src
 10140  0388  084A               	movf	PollGPS@index+1,w
 10141  0389  00F9               	movwf	Insert@index+1
 10142  038A  0849               	movf	PollGPS@index,w
 10143  038B  00F8               	movwf	Insert@index
 10144  038C  308C               	movlw	140
 10145  038D  00FA               	movwf	Insert@destLimit
 10146  038E  3000               	movlw	0
 10147  038F  00FB               	movwf	Insert@destLimit+1
 10148  0390  318F  2715  3182   	fcall	_Insert
 10149  0393  0876               	movf	?_Insert+1,w
 10150  0394  0140               	movlb	0	; select bank0
 10151  0395  00CA               	movwf	PollGPS@index+1
 10152  0396  0875               	movf	?_Insert,w
 10153  0397  00C9               	movwf	PollGPS@index
 10154  0398                     l807:	
 10155                           ;main.c: 550:             }
 10156                           
 10157                           
 10158                           ;main.c: 551:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LAT),
      +                           index, 140);
 10159  0398  3064               	movlw	100
 10160  0399  0140               	movlb	0	; select bank0
 10161  039A  00A9               	movwf	InsertString@dest
 10162  039B  3027               	movlw	39
 10163  039C  00AA               	movwf	InsertString@dest+1
 10164  039D  30D8               	movlw	216
 10165  039E  00F6               	movwf	GetAtRowCSV@src
 10166  039F  3026               	movlw	38
 10167  03A0  00F7               	movwf	GetAtRowCSV@src+1
 10168  03A1  3000               	movlw	0
 10169  03A2  00F9               	movwf	GetAtRowCSV@column+1
 10170  03A3  3003               	movlw	3
 10171  03A4  00F8               	movwf	GetAtRowCSV@column
 10172  03A5  318D  2502  3182   	fcall	_GetAtRowCSV
 10173  03A8  0140               	movlb	0	; select bank0
 10174  03A9  00AB               	movwf	InsertString@src
 10175  03AA  3001               	movlw	1
 10176  03AB  00AC               	movwf	InsertString@src+1
 10177  03AC  084A               	movf	PollGPS@index+1,w
 10178  03AD  00AE               	movwf	InsertString@index+1
 10179  03AE  0849               	movf	PollGPS@index,w
 10180  03AF  00AD               	movwf	InsertString@index
 10181  03B0  308C               	movlw	140
 10182  03B1  00AF               	movwf	InsertString@destLimit
 10183  03B2  3000               	movlw	0
 10184  03B3  00B0               	movwf	InsertString@destLimit+1
 10185  03B4  318B  23AE  3182   	fcall	_InsertString
 10186  03B7  0140               	movlb	0	; select bank0
 10187  03B8  082A               	movf	?_InsertString+1,w
 10188  03B9  00CA               	movwf	PollGPS@index+1
 10189  03BA  0829               	movf	?_InsertString,w
 10190  03BB  00C9               	movwf	PollGPS@index
 10191                           
 10192                           ;main.c: 552:             index = InsertTxDataSep(index);
 10193  03BC  084A               	movf	PollGPS@index+1,w
 10194  03BD  00FD               	movwf	InsertTxDataSep@index+1
 10195  03BE  0849               	movf	PollGPS@index,w
 10196  03BF  00FC               	movwf	InsertTxDataSep@index
 10197  03C0  3193  2334  3182   	fcall	_InsertTxDataSep
 10198  03C3  087D               	movf	?_InsertTxDataSep+1,w
 10199  03C4  0140               	movlb	0	; select bank0
 10200  03C5  00CA               	movwf	PollGPS@index+1
 10201  03C6  087C               	movf	?_InsertTxDataSep,w
 10202  03C7  00C9               	movwf	PollGPS@index
 10203                           
 10204                           ;main.c: 554:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_EW), 'S') == 0)
 10205  03C8  3053               	movlw	83
 10206  03C9  00FB               	movwf	strcmp@r
 10207  03CA  3080               	movlw	128
 10208  03CB  00FC               	movwf	strcmp@r+1
 10209  03CC  30D8               	movlw	216
 10210  03CD  00F6               	movwf	GetAtRowCSV@src
 10211  03CE  3026               	movlw	38
 10212  03CF  00F7               	movwf	GetAtRowCSV@src+1
 10213  03D0  3000               	movlw	0
 10214  03D1  00F9               	movwf	GetAtRowCSV@column+1
 10215  03D2  3006               	movlw	6
 10216  03D3  00F8               	movwf	GetAtRowCSV@column
 10217  03D4  318D  2502  3182   	fcall	_GetAtRowCSV
 10218  03D7  3196  268B  3182   	fcall	_strcmp
 10219  03DA  087B               	movf	?_strcmp,w
 10220  03DB  047C               	iorwf	?_strcmp+1,w
 10221  03DC  1D03               	btfss	3,2
 10222  03DD  2BF7               	goto	l808
 10223                           
 10224                           ;main.c: 555:             {;main.c: 556:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
 10225  03DE  3064               	movlw	100
 10226  03DF  00F5               	movwf	Insert@dest
 10227  03E0  3027               	movlw	39
 10228  03E1  00F6               	movwf	Insert@dest+1
 10229  03E2  302D               	movlw	45
 10230  03E3  0140               	movlb	0	; select bank0
 10231  03E4  00B9               	movwf	??_PollGPS
 10232  03E5  0839               	movf	??_PollGPS,w
 10233  03E6  00F7               	movwf	Insert@src
 10234  03E7  084A               	movf	PollGPS@index+1,w
 10235  03E8  00F9               	movwf	Insert@index+1
 10236  03E9  0849               	movf	PollGPS@index,w
 10237  03EA  00F8               	movwf	Insert@index
 10238  03EB  308C               	movlw	140
 10239  03EC  00FA               	movwf	Insert@destLimit
 10240  03ED  3000               	movlw	0
 10241  03EE  00FB               	movwf	Insert@destLimit+1
 10242  03EF  318F  2715  3182   	fcall	_Insert
 10243  03F2  0876               	movf	?_Insert+1,w
 10244  03F3  0140               	movlb	0	; select bank0
 10245  03F4  00CA               	movwf	PollGPS@index+1
 10246  03F5  0875               	movf	?_Insert,w
 10247  03F6  00C9               	movwf	PollGPS@index
 10248  03F7                     l808:	
 10249                           ;main.c: 557:             }
 10250                           
 10251                           
 10252                           ;main.c: 558:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LONG)
      +                          , index, 140);
 10253  03F7  3064               	movlw	100
 10254  03F8  0140               	movlb	0	; select bank0
 10255  03F9  00A9               	movwf	InsertString@dest
 10256  03FA  3027               	movlw	39
 10257  03FB  00AA               	movwf	InsertString@dest+1
 10258  03FC  30D8               	movlw	216
 10259  03FD  00F6               	movwf	GetAtRowCSV@src
 10260  03FE  3026               	movlw	38
 10261  03FF  00F7               	movwf	GetAtRowCSV@src+1
 10262  0400  3000               	movlw	0
 10263  0401  00F9               	movwf	GetAtRowCSV@column+1
 10264  0402  3005               	movlw	5
 10265  0403  00F8               	movwf	GetAtRowCSV@column
 10266  0404  318D  2502  3182   	fcall	_GetAtRowCSV
 10267  0407  0140               	movlb	0	; select bank0
 10268  0408  00AB               	movwf	InsertString@src
 10269  0409  3001               	movlw	1
 10270  040A  00AC               	movwf	InsertString@src+1
 10271  040B  084A               	movf	PollGPS@index+1,w
 10272  040C  00AE               	movwf	InsertString@index+1
 10273  040D  0849               	movf	PollGPS@index,w
 10274  040E  00AD               	movwf	InsertString@index
 10275  040F  308C               	movlw	140
 10276  0410  00AF               	movwf	InsertString@destLimit
 10277  0411  3000               	movlw	0
 10278  0412  00B0               	movwf	InsertString@destLimit+1
 10279  0413  318B  23AE  3182   	fcall	_InsertString
 10280  0416  0140               	movlb	0	; select bank0
 10281  0417  082A               	movf	?_InsertString+1,w
 10282  0418  00CA               	movwf	PollGPS@index+1
 10283  0419  0829               	movf	?_InsertString,w
 10284  041A  00C9               	movwf	PollGPS@index
 10285                           
 10286                           ;main.c: 559:             index = InsertTxDataSep(index);
 10287  041B  084A               	movf	PollGPS@index+1,w
 10288  041C  00FD               	movwf	InsertTxDataSep@index+1
 10289  041D  0849               	movf	PollGPS@index,w
 10290  041E  00FC               	movwf	InsertTxDataSep@index
 10291  041F  3193  2334  3182   	fcall	_InsertTxDataSep
 10292  0422  087D               	movf	?_InsertTxDataSep+1,w
 10293  0423  0140               	movlb	0	; select bank0
 10294  0424  00CA               	movwf	PollGPS@index+1
 10295  0425  087C               	movf	?_InsertTxDataSep,w
 10296  0426  00C9               	movwf	PollGPS@index
 10297                           
 10298                           ;main.c: 561:             index = InsertTxData(index, PUBX_ALT);
 10299  0427  084A               	movf	PollGPS@index+1,w
 10300  0428  00B6               	movwf	InsertTxData@index+1
 10301  0429  0849               	movf	PollGPS@index,w
 10302  042A  00B5               	movwf	InsertTxData@index
 10303  042B  3000               	movlw	0
 10304  042C  00B8               	movwf	InsertTxData@field+1
 10305  042D  3007               	movlw	7
 10306  042E  00B7               	movwf	InsertTxData@field
 10307  042F  3196  26BA  3182   	fcall	_InsertTxData
 10308  0432  0140               	movlb	0	; select bank0
 10309  0433  0836               	movf	?_InsertTxData+1,w
 10310  0434  00CA               	movwf	PollGPS@index+1
 10311  0435  0835               	movf	?_InsertTxData,w
 10312  0436  00C9               	movwf	PollGPS@index
 10313                           
 10314                           ;main.c: 562:             index = InsertTxData(index, PUBX_HDOP);
 10315  0437  084A               	movf	PollGPS@index+1,w
 10316  0438  00B6               	movwf	InsertTxData@index+1
 10317  0439  0849               	movf	PollGPS@index,w
 10318  043A  00B5               	movwf	InsertTxData@index
 10319  043B  3000               	movlw	0
 10320  043C  00B8               	movwf	InsertTxData@field+1
 10321  043D  3009               	movlw	9
 10322  043E  00B7               	movwf	InsertTxData@field
 10323  043F  3196  26BA  3182   	fcall	_InsertTxData
 10324  0442  0140               	movlb	0	; select bank0
 10325  0443  0836               	movf	?_InsertTxData+1,w
 10326  0444  00CA               	movwf	PollGPS@index+1
 10327  0445  0835               	movf	?_InsertTxData,w
 10328  0446  00C9               	movwf	PollGPS@index
 10329                           
 10330                           ;main.c: 563:             index = InsertTxData(index, PUBX_VDOP);
 10331  0447  084A               	movf	PollGPS@index+1,w
 10332  0448  00B6               	movwf	InsertTxData@index+1
 10333  0449  0849               	movf	PollGPS@index,w
 10334  044A  00B5               	movwf	InsertTxData@index
 10335  044B  3000               	movlw	0
 10336  044C  00B8               	movwf	InsertTxData@field+1
 10337  044D  300A               	movlw	10
 10338  044E  00B7               	movwf	InsertTxData@field
 10339  044F  3196  26BA  3182   	fcall	_InsertTxData
 10340  0452  0140               	movlb	0	; select bank0
 10341  0453  0836               	movf	?_InsertTxData+1,w
 10342  0454  00CA               	movwf	PollGPS@index+1
 10343  0455  0835               	movf	?_InsertTxData,w
 10344  0456  00C9               	movwf	PollGPS@index
 10345                           
 10346                           ;main.c: 564:             index = InsertTxData(index, PUBX_SOG);
 10347  0457  084A               	movf	PollGPS@index+1,w
 10348  0458  00B6               	movwf	InsertTxData@index+1
 10349  0459  0849               	movf	PollGPS@index,w
 10350  045A  00B5               	movwf	InsertTxData@index
 10351  045B  3000               	movlw	0
 10352  045C  00B8               	movwf	InsertTxData@field+1
 10353  045D  300B               	movlw	11
 10354  045E  00B7               	movwf	InsertTxData@field
 10355  045F  3196  26BA  3182   	fcall	_InsertTxData
 10356  0462  0140               	movlb	0	; select bank0
 10357  0463  0836               	movf	?_InsertTxData+1,w
 10358  0464  00CA               	movwf	PollGPS@index+1
 10359  0465  0835               	movf	?_InsertTxData,w
 10360  0466  00C9               	movwf	PollGPS@index
 10361                           
 10362                           ;main.c: 565:             index = InsertTxData(index, PUBX_COG);
 10363  0467  084A               	movf	PollGPS@index+1,w
 10364  0468  00B6               	movwf	InsertTxData@index+1
 10365  0469  0849               	movf	PollGPS@index,w
 10366  046A  00B5               	movwf	InsertTxData@index
 10367  046B  3000               	movlw	0
 10368  046C  00B8               	movwf	InsertTxData@field+1
 10369  046D  300C               	movlw	12
 10370  046E  00B7               	movwf	InsertTxData@field
 10371  046F  3196  26BA  3182   	fcall	_InsertTxData
 10372  0472  0140               	movlb	0	; select bank0
 10373  0473  0836               	movf	?_InsertTxData+1,w
 10374  0474  00CA               	movwf	PollGPS@index+1
 10375  0475  0835               	movf	?_InsertTxData,w
 10376  0476  00C9               	movwf	PollGPS@index
 10377                           
 10378                           ;main.c: 566:             index = InsertTxData(index, PUBX_VVEL);
 10379  0477  084A               	movf	PollGPS@index+1,w
 10380  0478  00B6               	movwf	InsertTxData@index+1
 10381  0479  0849               	movf	PollGPS@index,w
 10382  047A  00B5               	movwf	InsertTxData@index
 10383  047B  3000               	movlw	0
 10384  047C  00B8               	movwf	InsertTxData@field+1
 10385  047D  300D               	movlw	13
 10386  047E  00B7               	movwf	InsertTxData@field
 10387  047F  3196  26BA  3182   	fcall	_InsertTxData
 10388  0482  0140               	movlb	0	; select bank0
 10389  0483  0836               	movf	?_InsertTxData+1,w
 10390  0484  00CA               	movwf	PollGPS@index+1
 10391  0485  0835               	movf	?_InsertTxData,w
 10392  0486  00C9               	movwf	PollGPS@index
 10393                           
 10394                           ;main.c: 567:             index = InsertTxData(index, PUBX_NAVSTAT);
 10395  0487  084A               	movf	PollGPS@index+1,w
 10396  0488  00B6               	movwf	InsertTxData@index+1
 10397  0489  0849               	movf	PollGPS@index,w
 10398  048A  00B5               	movwf	InsertTxData@index
 10399  048B  3000               	movlw	0
 10400  048C  00B8               	movwf	InsertTxData@field+1
 10401  048D  3008               	movlw	8
 10402  048E  00B7               	movwf	InsertTxData@field
 10403  048F  3196  26BA         	fcall	_InsertTxData
 10404  0491  0140               	movlb	0	; select bank0
 10405  0492  0836               	movf	?_InsertTxData+1,w
 10406  0493  00CA               	movwf	PollGPS@index+1
 10407  0494  0835               	movf	?_InsertTxData,w
 10408  0495  00C9               	movwf	PollGPS@index
 10409                           
 10410                           ;main.c: 568:             return 1;
 10411  0496  3001               	movlw	1
 10412  0497  0008               	return
 10413  0498                     l5986:	
 10414                           
 10415                           ;main.c: 571:         {;main.c: 573:             if (EUSART1_is_rx_ready())
 10416  0498  3192  2238  3182   	fcall	_EUSART1_is_rx_ready
 10417  049B  3A00               	xorlw	0
 10418  049C  1903               	skipnz
 10419  049D  2AB1               	goto	l5998
 10420                           
 10421                           ;main.c: 574:             {;main.c: 575:                 char byte = EUSART1_Read();
 10422  049E  3192  2282  3182   	fcall	_EUSART1_Read
 10423  04A1  0140               	movlb	0	; select bank0
 10424  04A2  00B9               	movwf	??_PollGPS
 10425  04A3  0839               	movf	??_PollGPS,w
 10426  04A4  00C6               	movwf	PollGPS@byte
 10427                           
 10428                           ;main.c: 580:                 nmea_data[index] = byte;
 10429  04A5  30D8               	movlw	216
 10430  04A6  00B9               	movwf	??_PollGPS
 10431  04A7  3026               	movlw	38
 10432  04A8  00BA               	movwf	??_PollGPS+1
 10433  04A9  0849               	movf	PollGPS@index,w
 10434  04AA  0739               	addwf	??_PollGPS,w
 10435  04AB  00BB               	movwf	??_PollGPS+2
 10436  04AC  084A               	movf	PollGPS@index+1,w
 10437  04AD  3D3A               	addwfc	??_PollGPS+1,w
 10438  04AE  00BC               	movwf	??_PollGPS+3
 10439  04AF  083B               	movf	??_PollGPS+2,w
 10440  04B0  0086               	movwf	6
 10441  04B1  083C               	movf	??_PollGPS+3,w
 10442  04B2  0087               	movwf	7
 10443  04B3  0846               	movf	PollGPS@byte,w
 10444  04B4  0081               	movwf	1
 10445                           
 10446                           ;main.c: 582:                 if (byte == '\n')
 10447  04B5  300A               	movlw	10
 10448  04B6  0646               	xorwf	PollGPS@byte,w
 10449  04B7  1D03               	btfss	3,2
 10450  04B8  2CBB               	goto	l5996
 10451                           
 10452                           ;main.c: 583:                 {;main.c: 584:                     eusart_complete = 1;
 10453  04B9  01C5               	clrf	PollGPS@eusart_complete
 10454  04BA  0AC5               	incf	PollGPS@eusart_complete,f
 10455  04BB                     l5996:	
 10456                           
 10457                           ;main.c: 589:                 index++;
 10458  04BB  3001               	movlw	1
 10459  04BC  07C9               	addwf	PollGPS@index,f
 10460  04BD  3000               	movlw	0
 10461  04BE  3DCA               	addwfc	PollGPS@index+1,f
 10462  04BF  2AB1               	goto	l5998
 10463  04C0                     l6000:	
 10464                           
 10465                           ;main.c: 595:     return success;
 10466  04C0  0843               	movf	PollGPS@success,w
 10467  04C1  0008               	return
 10468  04C2                     __end_of_PollGPS:	
 10469                           
 10470                           	psect	text24
 10471  168B                     __ptext24:	
 10472 ;; *************** function _strcmp *****************
 10473 ;; Defined at:
 10474 ;;		line 3 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcmp.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;  l               1    wreg     PTR const unsigned char 
 10477 ;;		 -> csvField(20), 
 10478 ;;  r               2   11[COMMON] PTR const unsigned char 
 10479 ;;		 -> ROM(16384), 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  l               1    8[BANK0 ] PTR const unsigned char 
 10482 ;;		 -> csvField(20), 
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  2   11[COMMON] int 
 10485 ;; Registers used:
 10486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10495 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10496 ;;Total ram usage:        4 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    3
 10499 ;; This function calls:
 10500 ;;		Nothing
 10501 ;; This function is called by:
 10502 ;;		_PollGPS
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           
 10507                           ;psect for function _strcmp
 10508  168B                     _strcmp:	
 10509                           
 10510                           ;incstack = 0
 10511                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
 10512                           ;strcmp@l stored from wreg
 10513  168B  0140               	movlb	0	; select bank0
 10514  168C  00A8               	movwf	strcmp@l
 10515  168D  2E9D               	goto	l5654
 10516  168E                     l5656:	
 10517  168E  0828               	movf	strcmp@l,w
 10518  168F  0086               	movwf	6
 10519  1690  3001               	movlw	1	; select bank2/3
 10520  1691  0087               	movwf	7
 10521  1692  0801               	movf	1,w
 10522  1693  1903               	btfsc	3,2
 10523  1694  2EAB               	goto	l5658
 10524  1695  3001               	movlw	1
 10525  1696  00FD               	movwf	??_strcmp
 10526  1697  087D               	movf	??_strcmp,w
 10527  1698  07A8               	addwf	strcmp@l,f
 10528  1699  3001               	movlw	1
 10529  169A  07FB               	addwf	strcmp@r,f
 10530  169B  3000               	movlw	0
 10531  169C  3DFC               	addwfc	strcmp@r+1,f
 10532  169D                     l5654:	
 10533  169D  087B               	movf	strcmp@r,w
 10534  169E  0084               	movwf	4
 10535  169F  087C               	movf	strcmp@r+1,w
 10536  16A0  0085               	movwf	5
 10537  16A1  0800               	movf	0,w	;code access
 10538  16A2  00FD               	movwf	??_strcmp
 10539  16A3  0828               	movf	strcmp@l,w
 10540  16A4  0086               	movwf	6
 10541  16A5  3001               	movlw	1	; select bank2/3
 10542  16A6  0087               	movwf	7
 10543  16A7  0801               	movf	1,w
 10544  16A8  067D               	xorwf	??_strcmp,w
 10545  16A9  1903               	btfsc	3,2
 10546  16AA  2E8E               	goto	l5656
 10547  16AB                     l5658:	
 10548  16AB  0828               	movf	strcmp@l,w
 10549  16AC  0086               	movwf	6
 10550  16AD  3001               	movlw	1	; select bank2/3
 10551  16AE  0087               	movwf	7
 10552  16AF  087B               	movf	strcmp@r,w
 10553  16B0  0084               	movwf	4
 10554  16B1  087C               	movf	strcmp@r+1,w
 10555  16B2  0085               	movwf	5
 10556  16B3  0800               	movf	0,w	;code access
 10557  16B4  0201               	subwf	1,w
 10558  16B5  00FB               	movwf	?_strcmp
 10559  16B6  01FC               	clrf	?_strcmp+1
 10560  16B7  1C03               	skipc
 10561  16B8  03FC               	decf	?_strcmp+1,f
 10562  16B9  0008               	return
 10563  16BA                     __end_of_strcmp:	
 10564                           
 10565                           	psect	text25
 10566  1509                     __ptext25:	
 10567 ;; *************** function _WriteGPS *****************
 10568 ;; Defined at:
 10569 ;;		line 310 in file "main.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;  message         2    5[COMMON] PTR unsigned char 
 10572 ;;		 -> STR_7(14), STR_6(26), STR_5(26), STR_4(26), 
 10573 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
 10574 ;; Auto vars:     Size  Location     Type
 10575 ;;  i               2   10[COMMON] int 
 10576 ;;  counti          2    8[COMMON] int 
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  1    wreg      void 
 10579 ;; Registers used:
 10580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10587 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10589 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10590 ;;Total ram usage:        7 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:    4
 10593 ;; This function calls:
 10594 ;;		_EUSART1_Write
 10595 ;;		_strlen
 10596 ;; This function is called by:
 10597 ;;		_SetupGPS
 10598 ;;		_PollGPS
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           
 10603                           ;psect for function _WriteGPS
 10604  1509                     _WriteGPS:	
 10605                           
 10606                           ;main.c: 310: void WriteGPS(char* message);main.c: 311: {;main.c: 312:     for (int i = 
      +                          0, counti = strlen(message); i <= counti; i++)
 10607                           
 10608                           ;incstack = 0
 10609                           ; Regs used in _WriteGPS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10610  1509  01FA               	clrf	WriteGPS@i
 10611  150A  01FB               	clrf	WriteGPS@i+1
 10612  150B  0876               	movf	WriteGPS@message+1,w
 10613  150C  00F1               	movwf	strlen@s+1
 10614  150D  0875               	movf	WriteGPS@message,w
 10615  150E  00F0               	movwf	strlen@s
 10616  150F  3193  231D  3195   	fcall	_strlen
 10617  1512  0871               	movf	?_strlen+1,w
 10618  1513  00F9               	movwf	WriteGPS@counti+1
 10619  1514  0870               	movf	?_strlen,w
 10620  1515  00F8               	movwf	WriteGPS@counti
 10621  1516                     l5566:	
 10622  1516  0879               	movf	WriteGPS@counti+1,w
 10623  1517  3A80               	xorlw	128
 10624  1518  00F7               	movwf	??_WriteGPS
 10625  1519  087B               	movf	WriteGPS@i+1,w
 10626  151A  3A80               	xorlw	128
 10627  151B  0277               	subwf	??_WriteGPS,w
 10628  151C  1D03               	skipz
 10629  151D  2D20               	goto	u5485
 10630  151E  087A               	movf	WriteGPS@i,w
 10631  151F  0278               	subwf	WriteGPS@counti,w
 10632  1520                     u5485:	
 10633  1520  1C03               	btfss	3,0
 10634  1521  0008               	return
 10635                           
 10636                           ;main.c: 313:     {;main.c: 314:         EUSART1_Write((uint8_t)message[i]);
 10637  1522  0875               	movf	WriteGPS@message,w
 10638  1523  077A               	addwf	WriteGPS@i,w
 10639  1524  0084               	movwf	4
 10640  1525  0876               	movf	WriteGPS@message+1,w
 10641  1526  3D7B               	addwfc	WriteGPS@i+1,w
 10642  1527  0085               	movwf	5
 10643  1528  0800               	movf	0,w	;code access
 10644  1529  3192  225D  3195   	fcall	_EUSART1_Write
 10645                           
 10646                           ;main.c: 315:     }
 10647  152C  3001               	movlw	1
 10648  152D  07FA               	addwf	WriteGPS@i,f
 10649  152E  3000               	movlw	0
 10650  152F  3DFB               	addwfc	WriteGPS@i+1,f
 10651  1530  2D16               	goto	l5566
 10652  1531                     __end_of_WriteGPS:	
 10653                           
 10654                           	psect	text26
 10655  125D                     __ptext26:	
 10656 ;; *************** function _EUSART1_Write *****************
 10657 ;; Defined at:
 10658 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  txData          1    wreg     unsigned char 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  txData          1    0[COMMON] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      void 
 10665 ;; Registers used:
 10666 ;;		wreg
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10676 ;;Total ram usage:        1 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    3
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		_WriteGPS
 10683 ;;		_GPS_SendUBX
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           
 10688                           ;psect for function _EUSART1_Write
 10689  125D                     _EUSART1_Write:	
 10690                           
 10691                           ;incstack = 0
 10692                           ; Regs used in _EUSART1_Write: [wreg]
 10693                           ;EUSART1_Write@txData stored from wreg
 10694  125D  00F0               	movwf	EUSART1_Write@txData
 10695  125E                     l355:	
 10696                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
 10697                           
 10698                           
 10699                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
 10700  125E  014E               	movlb	14	; select bank14
 10701  125F  1E0F               	btfss	15,4	;volatile
 10702  1260  2A5E               	goto	l355
 10703                           
 10704                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
 10705  1261  0870               	movf	EUSART1_Write@txData,w
 10706  1262  0142               	movlb	2	; select bank2
 10707  1263  009A               	movwf	26	;volatile
 10708  1264  0008               	return
 10709  1265                     __end_of_EUSART1_Write:	
 10710                           
 10711                           	psect	text27
 10712  16BA                     __ptext27:	
 10713 ;; *************** function _InsertTxData *****************
 10714 ;; Defined at:
 10715 ;;		line 498 in file "main.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;  index           2   21[BANK0 ] int 
 10718 ;;  field           2   23[BANK0 ] int 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  2   21[BANK0 ] int 
 10723 ;; Registers used:
 10724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10730 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10733 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10734 ;;Total ram usage:        4 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; Hardware stack levels required when called:    6
 10737 ;; This function calls:
 10738 ;;		_GetAtRowCSV
 10739 ;;		_InsertString
 10740 ;;		_InsertTxDataSep
 10741 ;; This function is called by:
 10742 ;;		_PollGPS
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           
 10747                           ;psect for function _InsertTxData
 10748  16BA                     _InsertTxData:	
 10749                           
 10750                           ;main.c: 498: int InsertTxData(int index, int field);main.c: 499: {;main.c: 500:     ind
      +                          ex = InsertString(txdata, GetAtRowCSV(nmea_data, field), index, 140);
 10751                           
 10752                           ;incstack = 0
 10753                           ; Regs used in _InsertTxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10754  16BA  3064               	movlw	100
 10755  16BB  0140               	movlb	0	; select bank0
 10756  16BC  00A9               	movwf	InsertString@dest
 10757  16BD  3027               	movlw	39
 10758  16BE  00AA               	movwf	InsertString@dest+1
 10759  16BF  30D8               	movlw	216
 10760  16C0  00F6               	movwf	GetAtRowCSV@src
 10761  16C1  3026               	movlw	38
 10762  16C2  00F7               	movwf	GetAtRowCSV@src+1
 10763  16C3  0838               	movf	InsertTxData@field+1,w
 10764  16C4  00F9               	movwf	GetAtRowCSV@column+1
 10765  16C5  0837               	movf	InsertTxData@field,w
 10766  16C6  00F8               	movwf	GetAtRowCSV@column
 10767  16C7  318D  2502  3196   	fcall	_GetAtRowCSV
 10768  16CA  0140               	movlb	0	; select bank0
 10769  16CB  00AB               	movwf	InsertString@src
 10770  16CC  3001               	movlw	1
 10771  16CD  00AC               	movwf	InsertString@src+1
 10772  16CE  0836               	movf	InsertTxData@index+1,w
 10773  16CF  00AE               	movwf	InsertString@index+1
 10774  16D0  0835               	movf	InsertTxData@index,w
 10775  16D1  00AD               	movwf	InsertString@index
 10776  16D2  308C               	movlw	140
 10777  16D3  00AF               	movwf	InsertString@destLimit
 10778  16D4  3000               	movlw	0
 10779  16D5  00B0               	movwf	InsertString@destLimit+1
 10780  16D6  318B  23AE  3196   	fcall	_InsertString
 10781  16D9  0140               	movlb	0	; select bank0
 10782  16DA  082A               	movf	?_InsertString+1,w
 10783  16DB  00B6               	movwf	InsertTxData@index+1
 10784  16DC  0829               	movf	?_InsertString,w
 10785  16DD  00B5               	movwf	InsertTxData@index
 10786                           
 10787                           ;main.c: 501:     return InsertTxDataSep(index);
 10788  16DE  0836               	movf	InsertTxData@index+1,w
 10789  16DF  00FD               	movwf	InsertTxDataSep@index+1
 10790  16E0  0835               	movf	InsertTxData@index,w
 10791  16E1  00FC               	movwf	InsertTxDataSep@index
 10792  16E2  3193  2334         	fcall	_InsertTxDataSep
 10793  16E4  087D               	movf	?_InsertTxDataSep+1,w
 10794  16E5  0140               	movlb	0	; select bank0
 10795  16E6  00B6               	movwf	?_InsertTxData+1
 10796  16E7  087C               	movf	?_InsertTxDataSep,w
 10797  16E8  00B5               	movwf	?_InsertTxData
 10798  16E9  0008               	return
 10799  16EA                     __end_of_InsertTxData:	
 10800                           
 10801                           	psect	text28
 10802  1334                     __ptext28:	
 10803 ;; *************** function _InsertTxDataSep *****************
 10804 ;; Defined at:
 10805 ;;		line 504 in file "main.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;  index           2   12[COMMON] int 
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;		None
 10810 ;; Return value:  Size  Location     Type
 10811 ;;                  2   12[COMMON] int 
 10812 ;; Registers used:
 10813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10814 ;; Tracked objects:
 10815 ;;		On entry : 0/0
 10816 ;;		On exit  : 0/0
 10817 ;;		Unchanged: 0/0
 10818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10821 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10822 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10823 ;;Total ram usage:        3 bytes
 10824 ;; Hardware stack levels used:    1
 10825 ;; Hardware stack levels required when called:    5
 10826 ;; This function calls:
 10827 ;;		_Insert
 10828 ;; This function is called by:
 10829 ;;		_InsertTxData
 10830 ;;		_PollGPS
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           
 10835                           ;psect for function _InsertTxDataSep
 10836  1334                     _InsertTxDataSep:	
 10837                           
 10838                           ;main.c: 504: int InsertTxDataSep(int index);main.c: 505: {;main.c: 506:     return Inse
      +                          rt(txdata, ',', index, 140);
 10839                           
 10840                           ;incstack = 0
 10841                           ; Regs used in _InsertTxDataSep: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10842  1334  3064               	movlw	100
 10843  1335  00F5               	movwf	Insert@dest
 10844  1336  3027               	movlw	39
 10845  1337  00F6               	movwf	Insert@dest+1
 10846  1338  302C               	movlw	44
 10847  1339  0140               	movlb	0	; select bank0
 10848  133A  00A9               	movwf	??_InsertTxDataSep
 10849  133B  0829               	movf	??_InsertTxDataSep,w
 10850  133C  00F7               	movwf	Insert@src
 10851  133D  087D               	movf	InsertTxDataSep@index+1,w
 10852  133E  00F9               	movwf	Insert@index+1
 10853  133F  087C               	movf	InsertTxDataSep@index,w
 10854  1340  00F8               	movwf	Insert@index
 10855  1341  308C               	movlw	140
 10856  1342  00FA               	movwf	Insert@destLimit
 10857  1343  3000               	movlw	0
 10858  1344  00FB               	movwf	Insert@destLimit+1
 10859  1345  318F  2715         	fcall	_Insert
 10860  1347  0876               	movf	?_Insert+1,w
 10861  1348  00FD               	movwf	?_InsertTxDataSep+1
 10862  1349  0875               	movf	?_Insert,w
 10863  134A  00FC               	movwf	?_InsertTxDataSep
 10864  134B  0008               	return
 10865  134C                     __end_of_InsertTxDataSep:	
 10866                           
 10867                           	psect	text29
 10868  0BAE                     __ptext29:	
 10869 ;; *************** function _InsertString *****************
 10870 ;; Defined at:
 10871 ;;		line 112 in file "main.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  dest            2    9[BANK0 ] PTR unsigned char 
 10874 ;;		 -> txdata(140), 
 10875 ;;  src             2   11[BANK0 ] PTR unsigned char 
 10876 ;;		 -> checksum(6), STR_8(7), main@convertedNumber(16), csvField(20), 
 10877 ;;  index           2   13[BANK0 ] int 
 10878 ;;  destLimit       2   15[BANK0 ] int 
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;  i               2   19[BANK0 ] int 
 10881 ;;  counti          2   17[BANK0 ] int 
 10882 ;; Return value:  Size  Location     Type
 10883 ;;                  2    9[BANK0 ] int 
 10884 ;; Registers used:
 10885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10886 ;; Tracked objects:
 10887 ;;		On entry : 0/0
 10888 ;;		On exit  : 0/0
 10889 ;;		Unchanged: 0/0
 10890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10891 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10892 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10894 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10895 ;;Total ram usage:       13 bytes
 10896 ;; Hardware stack levels used:    1
 10897 ;; Hardware stack levels required when called:    5
 10898 ;; This function calls:
 10899 ;;		_Insert
 10900 ;;		_strlen
 10901 ;; This function is called by:
 10902 ;;		_InsertTxData
 10903 ;;		_PollGPS
 10904 ;;		_main
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           
 10909                           ;psect for function _InsertString
 10910  0BAE                     _InsertString:	
 10911                           
 10912                           ;main.c: 112: int InsertString(char* dest, char* src, int index, int destLimit);main.c: 
      +                          113: {;main.c: 114:     for (int i = 0, counti = strlen(src); i < counti && index < dest
      +                          Limit; i++)
 10913                           
 10914                           ;incstack = 0
 10915                           ; Regs used in _InsertString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10916  0BAE  0140               	movlb	0	; select bank0
 10917  0BAF  01B3               	clrf	InsertString@i
 10918  0BB0  01B4               	clrf	InsertString@i+1
 10919  0BB1  082C               	movf	InsertString@src+1,w
 10920  0BB2  00F1               	movwf	strlen@s+1
 10921  0BB3  082B               	movf	InsertString@src,w
 10922  0BB4  00F0               	movwf	strlen@s
 10923  0BB5  3193  231D  318B   	fcall	_strlen
 10924  0BB8  0871               	movf	?_strlen+1,w
 10925  0BB9  0140               	movlb	0	; select bank0
 10926  0BBA  00B2               	movwf	InsertString@counti+1
 10927  0BBB  0870               	movf	?_strlen,w
 10928  0BBC  00B1               	movwf	InsertString@counti
 10929  0BBD  2BEE               	goto	l5318
 10930  0BBE                     l5320:	
 10931  0BBE  0140               	movlb	0	; select bank0
 10932  0BBF  082E               	movf	InsertString@index+1,w
 10933  0BC0  3A80               	xorlw	128
 10934  0BC1  00FC               	movwf	??_InsertString
 10935  0BC2  0830               	movf	InsertString@destLimit+1,w
 10936  0BC3  3A80               	xorlw	128
 10937  0BC4  027C               	subwf	??_InsertString,w
 10938  0BC5  1D03               	skipz
 10939  0BC6  2BC9               	goto	u5185
 10940  0BC7  082F               	movf	InsertString@destLimit,w
 10941  0BC8  022D               	subwf	InsertString@index,w
 10942  0BC9                     u5185:	
 10943  0BC9  1803               	btfsc	3,0
 10944  0BCA  2BFA               	goto	l5322
 10945                           
 10946                           ;main.c: 115:     {;main.c: 117:         index = Insert(dest, src[i], index, destLimit);
 10947  0BCB  0140               	movlb	0	; select bank0
 10948  0BCC  082A               	movf	InsertString@dest+1,w
 10949  0BCD  00F6               	movwf	Insert@dest+1
 10950  0BCE  0829               	movf	InsertString@dest,w
 10951  0BCF  00F5               	movwf	Insert@dest
 10952  0BD0  082B               	movf	InsertString@src,w
 10953  0BD1  0733               	addwf	InsertString@i,w
 10954  0BD2  0084               	movwf	4
 10955  0BD3  082C               	movf	InsertString@src+1,w
 10956  0BD4  3D34               	addwfc	InsertString@i+1,w
 10957  0BD5  0085               	movwf	5
 10958  0BD6  0800               	movf	0,w	;code access
 10959  0BD7  00FC               	movwf	??_InsertString
 10960  0BD8  087C               	movf	??_InsertString,w
 10961  0BD9  00F7               	movwf	Insert@src
 10962  0BDA  082E               	movf	InsertString@index+1,w
 10963  0BDB  00F9               	movwf	Insert@index+1
 10964  0BDC  082D               	movf	InsertString@index,w
 10965  0BDD  00F8               	movwf	Insert@index
 10966  0BDE  0830               	movf	InsertString@destLimit+1,w
 10967  0BDF  00FB               	movwf	Insert@destLimit+1
 10968  0BE0  082F               	movf	InsertString@destLimit,w
 10969  0BE1  00FA               	movwf	Insert@destLimit
 10970  0BE2  318F  2715  318B   	fcall	_Insert
 10971  0BE5  0876               	movf	?_Insert+1,w
 10972  0BE6  0140               	movlb	0	; select bank0
 10973  0BE7  00AE               	movwf	InsertString@index+1
 10974  0BE8  0875               	movf	?_Insert,w
 10975  0BE9  00AD               	movwf	InsertString@index
 10976                           
 10977                           ;main.c: 118:     }
 10978  0BEA  3001               	movlw	1
 10979  0BEB  07B3               	addwf	InsertString@i,f
 10980  0BEC  3000               	movlw	0
 10981  0BED  3DB4               	addwfc	InsertString@i+1,f
 10982  0BEE                     l5318:	
 10983  0BEE  0834               	movf	InsertString@i+1,w
 10984  0BEF  3A80               	xorlw	128
 10985  0BF0  00FC               	movwf	??_InsertString
 10986  0BF1  0832               	movf	InsertString@counti+1,w
 10987  0BF2  3A80               	xorlw	128
 10988  0BF3  027C               	subwf	??_InsertString,w
 10989  0BF4  1D03               	skipz
 10990  0BF5  2BF8               	goto	u5175
 10991  0BF6  0831               	movf	InsertString@counti,w
 10992  0BF7  0233               	subwf	InsertString@i,w
 10993  0BF8                     u5175:	
 10994  0BF8  1C03               	btfss	3,0
 10995  0BF9  2BBE               	goto	l5320
 10996  0BFA                     l5322:	
 10997                           
 10998                           ;main.c: 119:     return index;
 10999  0BFA  0140               	movlb	0	; select bank0
 11000  0BFB  082E               	movf	InsertString@index+1,w
 11001  0BFC  00AA               	movwf	?_InsertString+1
 11002  0BFD  082D               	movf	InsertString@index,w
 11003  0BFE  00A9               	movwf	?_InsertString
 11004  0BFF  0008               	return
 11005  0C00                     __end_of_InsertString:	
 11006                           
 11007                           	psect	text30
 11008  0F15                     __ptext30:	
 11009 ;; *************** function _Insert *****************
 11010 ;; Defined at:
 11011 ;;		line 93 in file "main.c"
 11012 ;; Parameters:    Size  Location     Type
 11013 ;;  dest            2    5[COMMON] PTR unsigned char 
 11014 ;;		 -> txdata(140), 
 11015 ;;  src             1    7[COMMON] unsigned char 
 11016 ;;  index           2    8[COMMON] int 
 11017 ;;  destLimit       2   10[COMMON] int 
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;  i               2    7[BANK0 ] int 
 11020 ;;  length          2    5[BANK0 ] int 
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  2    5[COMMON] int 
 11023 ;; Registers used:
 11024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11030 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11031 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11032 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11033 ;;      Totals:         7       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11034 ;;Total ram usage:       16 bytes
 11035 ;; Hardware stack levels used:    1
 11036 ;; Hardware stack levels required when called:    4
 11037 ;; This function calls:
 11038 ;;		_strlen
 11039 ;; This function is called by:
 11040 ;;		_InsertString
 11041 ;;		_InsertTxDataSep
 11042 ;;		_PollGPS
 11043 ;;		_main
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           
 11048                           ;psect for function _Insert
 11049  0F15                     _Insert:	
 11050                           
 11051                           ;main.c: 93: int Insert(char* dest, char src, int index, int destLimit);main.c: 94: {;ma
      +                          in.c: 95:     int length = strlen(dest);
 11052                           
 11053                           ;incstack = 0
 11054                           ; Regs used in _Insert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11055  0F15  0876               	movf	Insert@dest+1,w
 11056  0F16  00F1               	movwf	strlen@s+1
 11057  0F17  0875               	movf	Insert@dest,w
 11058  0F18  00F0               	movwf	strlen@s
 11059  0F19  3193  231D  318F   	fcall	_strlen
 11060  0F1C  0871               	movf	?_strlen+1,w
 11061  0F1D  0140               	movlb	0	; select bank0
 11062  0F1E  00A6               	movwf	Insert@length+1
 11063  0F1F  0870               	movf	?_strlen,w
 11064  0F20  00A5               	movwf	Insert@length
 11065                           
 11066                           ;main.c: 96:     if (length < destLimit - 1)
 11067  0F21  087A               	movf	Insert@destLimit,w
 11068  0F22  3EFF               	addlw	255
 11069  0F23  00A0               	movwf	??_Insert
 11070  0F24  30FF               	movlw	255
 11071  0F25  3D7B               	addwfc	Insert@destLimit+1,w
 11072  0F26  00A1               	movwf	??_Insert+1
 11073  0F27  0826               	movf	Insert@length+1,w
 11074  0F28  3A80               	xorlw	128
 11075  0F29  00A2               	movwf	??_Insert+2
 11076  0F2A  0821               	movf	??_Insert+1,w
 11077  0F2B  3A80               	xorlw	128
 11078  0F2C  0222               	subwf	??_Insert+2,w
 11079  0F2D  1D03               	skipz
 11080  0F2E  2F31               	goto	u5005
 11081  0F2F  0820               	movf	??_Insert,w
 11082  0F30  0225               	subwf	Insert@length,w
 11083  0F31                     u5005:	
 11084  0F31  1803               	skipnc
 11085  0F32  2F7E               	goto	l5172
 11086                           
 11087                           ;main.c: 97:     {;main.c: 98:         dest[length + 1] = '\0';
 11088  0F33  0140               	movlb	0	; select bank0
 11089  0F34  0825               	movf	Insert@length,w
 11090  0F35  0775               	addwf	Insert@dest,w
 11091  0F36  00A0               	movwf	??_Insert
 11092  0F37  0826               	movf	Insert@length+1,w
 11093  0F38  3D76               	addwfc	Insert@dest+1,w
 11094  0F39  00A1               	movwf	??_Insert+1
 11095  0F3A  0820               	movf	??_Insert,w
 11096  0F3B  0086               	movwf	6
 11097  0F3C  0821               	movf	??_Insert+1,w
 11098  0F3D  0087               	movwf	7
 11099  0F3E  3141               	addfsr 1,1
 11100  0F3F  0181               	clrf	1
 11101                           
 11102                           ;main.c: 99:         for (int i = length; i > index; i--)
 11103  0F40  0826               	movf	Insert@length+1,w
 11104  0F41  00A8               	movwf	Insert@i+1
 11105  0F42  0825               	movf	Insert@length,w
 11106  0F43  00A7               	movwf	Insert@i
 11107  0F44                     l5168:	
 11108  0F44  0879               	movf	Insert@index+1,w
 11109  0F45  3A80               	xorlw	128
 11110  0F46  00A0               	movwf	??_Insert
 11111  0F47  0828               	movf	Insert@i+1,w
 11112  0F48  3A80               	xorlw	128
 11113  0F49  0220               	subwf	??_Insert,w
 11114  0F4A  1D03               	skipz
 11115  0F4B  2F4E               	goto	u5015
 11116  0F4C  0827               	movf	Insert@i,w
 11117  0F4D  0278               	subwf	Insert@index,w
 11118  0F4E                     u5015:	
 11119  0F4E  1803               	btfsc	3,0
 11120  0F4F  2F70               	goto	l5170
 11121                           
 11122                           ;main.c: 100:         {;main.c: 101:             dest[i] = dest[i - 1];
 11123  0F50  0140               	movlb	0	; select bank0
 11124  0F51  0827               	movf	Insert@i,w
 11125  0F52  0775               	addwf	Insert@dest,w
 11126  0F53  00A0               	movwf	??_Insert
 11127  0F54  0828               	movf	Insert@i+1,w
 11128  0F55  3D76               	addwfc	Insert@dest+1,w
 11129  0F56  00A1               	movwf	??_Insert+1
 11130  0F57  0820               	movf	??_Insert,w
 11131  0F58  3EFF               	addlw	255
 11132  0F59  0086               	movwf	6
 11133  0F5A  30FF               	movlw	255
 11134  0F5B  3D21               	addwfc	??_Insert+1,w
 11135  0F5C  0087               	movwf	7
 11136  0F5D  0801               	movf	1,w
 11137  0F5E  00A2               	movwf	??_Insert+2
 11138  0F5F  0827               	movf	Insert@i,w
 11139  0F60  0775               	addwf	Insert@dest,w
 11140  0F61  00A3               	movwf	??_Insert+3
 11141  0F62  0828               	movf	Insert@i+1,w
 11142  0F63  3D76               	addwfc	Insert@dest+1,w
 11143  0F64  00A4               	movwf	??_Insert+4
 11144  0F65  0823               	movf	??_Insert+3,w
 11145  0F66  0086               	movwf	6
 11146  0F67  0824               	movf	??_Insert+4,w
 11147  0F68  0087               	movwf	7
 11148  0F69  0822               	movf	??_Insert+2,w
 11149  0F6A  0081               	movwf	1
 11150                           
 11151                           ;main.c: 102:         }
 11152  0F6B  30FF               	movlw	255
 11153  0F6C  07A7               	addwf	Insert@i,f
 11154  0F6D  30FF               	movlw	255
 11155  0F6E  3DA8               	addwfc	Insert@i+1,f
 11156  0F6F  2F44               	goto	l5168
 11157  0F70                     l5170:	
 11158                           
 11159                           ;main.c: 103:         dest[index] = src;
 11160  0F70  0878               	movf	Insert@index,w
 11161  0F71  0775               	addwf	Insert@dest,w
 11162  0F72  0140               	movlb	0	; select bank0
 11163  0F73  00A0               	movwf	??_Insert
 11164  0F74  0879               	movf	Insert@index+1,w
 11165  0F75  3D76               	addwfc	Insert@dest+1,w
 11166  0F76  00A1               	movwf	??_Insert+1
 11167  0F77  0820               	movf	??_Insert,w
 11168  0F78  0086               	movwf	6
 11169  0F79  0821               	movf	??_Insert+1,w
 11170  0F7A  0087               	movwf	7
 11171  0F7B  0877               	movf	Insert@src,w
 11172  0F7C  0081               	movwf	1
 11173                           
 11174                           ;main.c: 104:     }
 11175  0F7D  2F83               	goto	l5176
 11176  0F7E                     l5172:	
 11177                           
 11178                           ;main.c: 106:     {;main.c: 107:         return index;
 11179  0F7E  0879               	movf	Insert@index+1,w
 11180  0F7F  00F6               	movwf	?_Insert+1
 11181  0F80  0878               	movf	Insert@index,w
 11182  0F81  00F5               	movwf	?_Insert
 11183  0F82  0008               	return
 11184  0F83                     l5176:	
 11185                           
 11186                           ;main.c: 109:     return index + 1;
 11187  0F83  0878               	movf	Insert@index,w
 11188  0F84  3E01               	addlw	1
 11189  0F85  00F5               	movwf	?_Insert
 11190  0F86  3000               	movlw	0
 11191  0F87  3D79               	addwfc	Insert@index+1,w
 11192  0F88  00F6               	movwf	?_Insert+1
 11193  0F89  0008               	return
 11194  0F8A                     __end_of_Insert:	
 11195                           
 11196                           	psect	text31
 11197  0D02                     __ptext31:	
 11198 ;; *************** function _GetAtRowCSV *****************
 11199 ;; Defined at:
 11200 ;;		line 67 in file "main.c"
 11201 ;; Parameters:    Size  Location     Type
 11202 ;;  src             2    6[COMMON] PTR unsigned char 
 11203 ;;		 -> nmea_data(140), 
 11204 ;;  column          2    8[COMMON] int 
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;  i               2    6[BANK0 ] int 
 11207 ;;  counti          2    0[BANK0 ] int 
 11208 ;;  index           2    4[BANK0 ] int 
 11209 ;;  col             2    2[BANK0 ] int 
 11210 ;; Return value:  Size  Location     Type
 11211 ;;                  1    wreg      PTR unsigned char 
 11212 ;; Registers used:
 11213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11214 ;; Tracked objects:
 11215 ;;		On entry : 0/0
 11216 ;;		On exit  : 0/0
 11217 ;;		Unchanged: 0/0
 11218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11220 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11222 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11223 ;;Total ram usage:       13 bytes
 11224 ;; Hardware stack levels used:    1
 11225 ;; Hardware stack levels required when called:    4
 11226 ;; This function calls:
 11227 ;;		_ClearStringn
 11228 ;;		_strlen
 11229 ;; This function is called by:
 11230 ;;		_InsertTxData
 11231 ;;		_PollGPS
 11232 ;; This function uses a non-reentrant model
 11233 ;;
 11234                           
 11235                           
 11236                           ;psect for function _GetAtRowCSV
 11237  0D02                     _GetAtRowCSV:	
 11238                           
 11239                           ;main.c: 67: char* GetAtRowCSV(char* src, int column);main.c: 68: {;main.c: 69:     Clea
      +                          rStringn(csvField, 20);
 11240                           
 11241                           ;incstack = 0
 11242                           ; Regs used in _GetAtRowCSV: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11243  0D02  3014               	movlw	20
 11244  0D03  00F0               	movwf	ClearStringn@length
 11245  0D04  3000               	movlw	0
 11246  0D05  00F1               	movwf	ClearStringn@length+1
 11247  0D06  30BA               	movlw	(low (_csvField| (0+256)))& (0+255)
 11248  0D07  3193  23D4  318D   	fcall	_ClearStringn
 11249                           
 11250                           ;main.c: 70:     int col = 0;
 11251  0D0A  0140               	movlb	0	; select bank0
 11252  0D0B  01A2               	clrf	GetAtRowCSV@col
 11253  0D0C  01A3               	clrf	GetAtRowCSV@col+1
 11254                           
 11255                           ;main.c: 71:     int index = 0;
 11256  0D0D  01A4               	clrf	GetAtRowCSV@index
 11257  0D0E  01A5               	clrf	GetAtRowCSV@index+1
 11258                           
 11259                           ;main.c: 72:     for (int i = 0, counti = strlen(src); i < counti; i++)
 11260  0D0F  01A6               	clrf	GetAtRowCSV@i
 11261  0D10  01A7               	clrf	GetAtRowCSV@i+1
 11262  0D11  0877               	movf	GetAtRowCSV@src+1,w
 11263  0D12  00F1               	movwf	strlen@s+1
 11264  0D13  0876               	movf	GetAtRowCSV@src,w
 11265  0D14  00F0               	movwf	strlen@s
 11266  0D15  3193  231D  318D   	fcall	_strlen
 11267  0D18  0871               	movf	?_strlen+1,w
 11268  0D19  0140               	movlb	0	; select bank0
 11269  0D1A  00A1               	movwf	GetAtRowCSV@counti+1
 11270  0D1B  0870               	movf	?_strlen,w
 11271  0D1C  00A0               	movwf	GetAtRowCSV@counti
 11272  0D1D                     l648:	
 11273  0D1D  0827               	movf	GetAtRowCSV@i+1,w
 11274  0D1E  3A80               	xorlw	128
 11275  0D1F  00FA               	movwf	??_GetAtRowCSV
 11276  0D20  0821               	movf	GetAtRowCSV@counti+1,w
 11277  0D21  3A80               	xorlw	128
 11278  0D22  027A               	subwf	??_GetAtRowCSV,w
 11279  0D23  1D03               	skipz
 11280  0D24  2D27               	goto	u5165
 11281  0D25  0820               	movf	GetAtRowCSV@counti,w
 11282  0D26  0226               	subwf	GetAtRowCSV@i,w
 11283  0D27                     u5165:	
 11284  0D27  1803               	btfsc	3,0
 11285  0D28  2D62               	goto	l5306
 11286                           
 11287                           ;main.c: 73:     {;main.c: 74:         if (col == column)
 11288  0D29  0879               	movf	GetAtRowCSV@column+1,w
 11289  0D2A  0140               	movlb	0	; select bank0
 11290  0D2B  0623               	xorwf	GetAtRowCSV@col+1,w
 11291  0D2C  1D03               	skipz
 11292  0D2D  2D30               	goto	u5135
 11293  0D2E  0878               	movf	GetAtRowCSV@column,w
 11294  0D2F  0622               	xorwf	GetAtRowCSV@col,w
 11295  0D30                     u5135:	
 11296  0D30  1D03               	skipz
 11297  0D31  2D4F               	goto	l5302
 11298                           
 11299                           ;main.c: 75:         {;main.c: 76:             if (src[i] == ',')
 11300  0D32  0826               	movf	GetAtRowCSV@i,w
 11301  0D33  0776               	addwf	GetAtRowCSV@src,w
 11302  0D34  0086               	movwf	6
 11303  0D35  0827               	movf	GetAtRowCSV@i+1,w
 11304  0D36  3D77               	addwfc	GetAtRowCSV@src+1,w
 11305  0D37  0087               	movwf	7
 11306  0D38  302C               	movlw	44
 11307  0D39  0601               	xorwf	1,w
 11308  0D3A  1903               	btfsc	3,2
 11309  0D3B  2D62               	goto	l5306
 11310                           
 11311                           ;main.c: 80:             csvField[index] = src[i];
 11312  0D3C  0826               	movf	GetAtRowCSV@i,w
 11313  0D3D  0776               	addwf	GetAtRowCSV@src,w
 11314  0D3E  0086               	movwf	6
 11315  0D3F  0827               	movf	GetAtRowCSV@i+1,w
 11316  0D40  3D77               	addwfc	GetAtRowCSV@src+1,w
 11317  0D41  0087               	movwf	7
 11318  0D42  0801               	movf	1,w
 11319  0D43  00FA               	movwf	??_GetAtRowCSV
 11320  0D44  0824               	movf	GetAtRowCSV@index,w
 11321  0D45  3EBA               	addlw	(low (_csvField| (0+256)))& (0+255)
 11322  0D46  0086               	movwf	6
 11323  0D47  3001               	movlw	1	; select bank3/4
 11324  0D48  0087               	movwf	7
 11325  0D49  087A               	movf	??_GetAtRowCSV,w
 11326  0D4A  0081               	movwf	1
 11327                           
 11328                           ;main.c: 81:             index++;
 11329  0D4B  3001               	movlw	1
 11330  0D4C  07A4               	addwf	GetAtRowCSV@index,f
 11331  0D4D  3000               	movlw	0
 11332  0D4E  3DA5               	addwfc	GetAtRowCSV@index+1,f
 11333  0D4F                     l5302:	
 11334                           
 11335                           ;main.c: 83:         if (src[i] == ',')
 11336  0D4F  0826               	movf	GetAtRowCSV@i,w
 11337  0D50  0776               	addwf	GetAtRowCSV@src,w
 11338  0D51  0086               	movwf	6
 11339  0D52  0827               	movf	GetAtRowCSV@i+1,w
 11340  0D53  3D77               	addwfc	GetAtRowCSV@src+1,w
 11341  0D54  0087               	movwf	7
 11342  0D55  302C               	movlw	44
 11343  0D56  0601               	xorwf	1,w
 11344  0D57  1D03               	btfss	3,2
 11345  0D58  2D5D               	goto	l653
 11346                           
 11347                           ;main.c: 84:         {;main.c: 85:             col++;
 11348  0D59  3001               	movlw	1
 11349  0D5A  07A2               	addwf	GetAtRowCSV@col,f
 11350  0D5B  3000               	movlw	0
 11351  0D5C  3DA3               	addwfc	GetAtRowCSV@col+1,f
 11352  0D5D                     l653:	
 11353                           ;main.c: 86:         }
 11354                           
 11355                           
 11356                           ;main.c: 87:     }
 11357  0D5D  3001               	movlw	1
 11358  0D5E  07A6               	addwf	GetAtRowCSV@i,f
 11359  0D5F  3000               	movlw	0
 11360  0D60  3DA7               	addwfc	GetAtRowCSV@i+1,f
 11361  0D61  2D1D               	goto	l648
 11362  0D62                     l5306:	
 11363                           
 11364                           ;main.c: 88:     return csvField;
 11365  0D62  30BA               	movlw	(low (_csvField| (0+256)))& (0+255)
 11366  0D63  0008               	return
 11367  0D64                     __end_of_GetAtRowCSV:	
 11368                           
 11369                           	psect	text32
 11370  13D4                     __ptext32:	
 11371 ;; *************** function _ClearStringn *****************
 11372 ;; Defined at:
 11373 ;;		line 56 in file "main.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  str             1    wreg     PTR unsigned char 
 11376 ;;		 -> csvField(20), 
 11377 ;;  length          2    0[COMMON] int 
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;  str             1    3[COMMON] PTR unsigned char 
 11380 ;;		 -> csvField(20), 
 11381 ;;  i               2    4[COMMON] int 
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11392 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11394 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11395 ;;Total ram usage:        6 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; Hardware stack levels required when called:    3
 11398 ;; This function calls:
 11399 ;;		Nothing
 11400 ;; This function is called by:
 11401 ;;		_GetAtRowCSV
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           
 11406                           ;psect for function _ClearStringn
 11407  13D4                     _ClearStringn:	
 11408                           
 11409                           ;incstack = 0
 11410                           ; Regs used in _ClearStringn: [wreg+fsr1l+fsr1h+status,2+status,0]
 11411                           ;ClearStringn@str stored from wreg
 11412  13D4  00F3               	movwf	ClearStringn@str
 11413                           
 11414                           ;main.c: 56: void ClearStringn(char* str, int length);main.c: 57: {;main.c: 58:     for 
      +                          (int i = 0; i < length; i++)
 11415  13D5  01F4               	clrf	ClearStringn@i
 11416  13D6  01F5               	clrf	ClearStringn@i+1
 11417  13D7                     l5154:	
 11418  13D7  0875               	movf	ClearStringn@i+1,w
 11419  13D8  3A80               	xorlw	128
 11420  13D9  00F2               	movwf	??_ClearStringn
 11421  13DA  0871               	movf	ClearStringn@length+1,w
 11422  13DB  3A80               	xorlw	128
 11423  13DC  0272               	subwf	??_ClearStringn,w
 11424  13DD  1D03               	skipz
 11425  13DE  2BE1               	goto	u4995
 11426  13DF  0870               	movf	ClearStringn@length,w
 11427  13E0  0274               	subwf	ClearStringn@i,w
 11428  13E1                     u4995:	
 11429  13E1  1803               	btfsc	3,0
 11430  13E2  0008               	return
 11431                           
 11432                           ;main.c: 59:     {;main.c: 60:         str[i] = '\0';
 11433  13E3  0874               	movf	ClearStringn@i,w
 11434  13E4  0773               	addwf	ClearStringn@str,w
 11435  13E5  00F2               	movwf	??_ClearStringn
 11436  13E6  0872               	movf	??_ClearStringn,w
 11437  13E7  0086               	movwf	6
 11438  13E8  3001               	movlw	1	; select bank2/3
 11439  13E9  0087               	movwf	7
 11440  13EA  0181               	clrf	1
 11441                           
 11442                           ;main.c: 61:     }
 11443  13EB  3001               	movlw	1
 11444  13EC  07F4               	addwf	ClearStringn@i,f
 11445  13ED  3000               	movlw	0
 11446  13EE  3DF5               	addwfc	ClearStringn@i+1,f
 11447  13EF  2BD7               	goto	l5154
 11448  13F0                     __end_of_ClearStringn:	
 11449                           
 11450                           	psect	text33
 11451  1238                     __ptext33:	
 11452 ;; *************** function _EUSART1_is_rx_ready *****************
 11453 ;; Defined at:
 11454 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;		None
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;		None
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  1    wreg      _Bool 
 11461 ;; Registers used:
 11462 ;;		wreg, status,2, status,0
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11472 ;;Total ram usage:        0 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    3
 11475 ;; This function calls:
 11476 ;;		Nothing
 11477 ;; This function is called by:
 11478 ;;		_GPS_HasAcknowledged
 11479 ;;		_PollGPS
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           
 11484                           ;psect for function _EUSART1_is_rx_ready
 11485  1238                     _EUSART1_is_rx_ready:	
 11486                           
 11487                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR3bits.RC1IF);
 11488                           
 11489                           ;incstack = 0
 11490                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 11491  1238  014E               	movlb	14	; select bank14
 11492  1239  0E0F               	swapf	15,w	;volatile
 11493  123A  0C89               	rrf	9,f
 11494  123B  3901               	andlw	1
 11495  123C  0008               	return
 11496  123D                     __end_of_EUSART1_is_rx_ready:	
 11497                           
 11498                           	psect	text34
 11499  1282                     __ptext34:	
 11500 ;; *************** function _EUSART1_Read *****************
 11501 ;; Defined at:
 11502 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 11503 ;; Parameters:    Size  Location     Type
 11504 ;;		None
 11505 ;; Auto vars:     Size  Location     Type
 11506 ;;		None
 11507 ;; Return value:  Size  Location     Type
 11508 ;;                  1    wreg      unsigned char 
 11509 ;; Registers used:
 11510 ;;		wreg, status,2
 11511 ;; Tracked objects:
 11512 ;;		On entry : 0/0
 11513 ;;		On exit  : 0/0
 11514 ;;		Unchanged: 0/0
 11515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11520 ;;Total ram usage:        0 bytes
 11521 ;; Hardware stack levels used:    1
 11522 ;; Hardware stack levels required when called:    3
 11523 ;; This function calls:
 11524 ;;		Nothing
 11525 ;; This function is called by:
 11526 ;;		_GPS_HasAcknowledged
 11527 ;;		_PollGPS
 11528 ;; This function uses a non-reentrant model
 11529 ;;
 11530                           
 11531                           
 11532                           ;psect for function _EUSART1_Read
 11533  1282                     _EUSART1_Read:	
 11534  1282                     l348:	
 11535                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
 11536                           
 11537                           ;incstack = 0
 11538                           ; Regs used in _EUSART1_Read: [wreg+status,2]
 11539                           
 11540                           
 11541                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
 11542  1282  014E               	movlb	14	; select bank14
 11543  1283  1E8F               	btfss	15,5	;volatile
 11544  1284  2A82               	goto	l348
 11545                           
 11546                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 11547  1285  0141               	movlb	1	; select bank1
 11548  1286  01B3               	clrf	_eusart1RxLastError^(0+128)	;volatile
 11549                           
 11550                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
 11551  1287  0142               	movlb	2	; select bank2
 11552  1288  1C9D               	btfss	29,1	;volatile
 11553  1289  2A8C               	goto	l5274
 11554                           
 11555                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
 11556  128A  121D               	bcf	29,4	;volatile
 11557                           
 11558                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
 11559  128B  161D               	bsf	29,4	;volatile
 11560  128C                     l5274:	
 11561                           
 11562                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
 11563  128C  0819               	movf	25,w	;volatile
 11564  128D  0008               	return
 11565  128E                     __end_of_EUSART1_Read:	
 11566                           
 11567                           	psect	text35
 11568  140D                     __ptext35:	
 11569 ;; *************** function _ClearNMEA *****************
 11570 ;; Defined at:
 11571 ;;		line 490 in file "main.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;		None
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;  i               2    2[COMMON] int 
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  1    wreg      void 
 11578 ;; Registers used:
 11579 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/0
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11588 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11589 ;;Total ram usage:        4 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:    3
 11592 ;; This function calls:
 11593 ;;		Nothing
 11594 ;; This function is called by:
 11595 ;;		_PollGPS
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           
 11600                           ;psect for function _ClearNMEA
 11601  140D                     _ClearNMEA:	
 11602                           
 11603                           ;main.c: 492:     for (int i = 0; i < 140; i++)
 11604                           
 11605                           ;incstack = 0
 11606                           ; Regs used in _ClearNMEA: [wreg+fsr1l+fsr1h+status,2+status,0]
 11607  140D  01F2               	clrf	ClearNMEA@i
 11608  140E  01F3               	clrf	ClearNMEA@i+1
 11609  140F                     l5640:	
 11610                           
 11611                           ;main.c: 493:     {;main.c: 494:         nmea_data[i] = '\0';
 11612  140F  30D8               	movlw	216
 11613  1410  00F0               	movwf	??_ClearNMEA
 11614  1411  3026               	movlw	38
 11615  1412  00F1               	movwf	??_ClearNMEA+1
 11616  1413  0872               	movf	ClearNMEA@i,w
 11617  1414  0770               	addwf	??_ClearNMEA,w
 11618  1415  0086               	movwf	6
 11619  1416  0873               	movf	ClearNMEA@i+1,w
 11620  1417  3D71               	addwfc	??_ClearNMEA+1,w
 11621  1418  0087               	movwf	7
 11622  1419  0181               	clrf	1
 11623                           
 11624                           ;main.c: 495:     }
 11625  141A  3001               	movlw	1
 11626  141B  07F2               	addwf	ClearNMEA@i,f
 11627  141C  3000               	movlw	0
 11628  141D  3DF3               	addwfc	ClearNMEA@i+1,f
 11629  141E  0873               	movf	ClearNMEA@i+1,w
 11630  141F  3A80               	xorlw	128
 11631  1420  00F0               	movwf	??_ClearNMEA
 11632  1421  3080               	movlw	128
 11633  1422  0270               	subwf	??_ClearNMEA,w
 11634  1423  1D03               	skipz
 11635  1424  2C27               	goto	u5555
 11636  1425  308C               	movlw	140
 11637  1426  0272               	subwf	ClearNMEA@i,w
 11638  1427                     u5555:	
 11639  1427  1803               	btfsc	3,0
 11640  1428  0008               	return
 11641  1429  2C0F               	goto	l5640
 11642  142A                     __end_of_ClearNMEA:	
 11643                           
 11644                           	psect	text36
 11645  0DCF                     __ptext36:	
 11646 ;; *************** function _IntToString *****************
 11647 ;; Defined at:
 11648 ;;		line 180 in file "main.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  n               2   11[COMMON] int 
 11651 ;;  dest            1   13[COMMON] PTR unsigned char 
 11652 ;;		 -> main@convertedNumber(16), 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;  i               2   16[BANK0 ] int 
 11655 ;;  sign            1   15[BANK0 ] _Bool 
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  1    wreg      void 
 11658 ;; Registers used:
 11659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 0/0
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11665 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11666 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11667 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11668 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11669 ;;Total ram usage:        8 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; Hardware stack levels required when called:    5
 11672 ;; This function calls:
 11673 ;;		_ReverseString
 11674 ;;		___awdiv
 11675 ;;		___awmod
 11676 ;; This function is called by:
 11677 ;;		_main
 11678 ;;		_FloatToString
 11679 ;; This function uses a non-reentrant model
 11680 ;;
 11681                           
 11682                           
 11683                           ;psect for function _IntToString
 11684  0DCF                     _IntToString:	
 11685                           
 11686                           ;main.c: 180: void IntToString(int n, char* dest);main.c: 181: {;main.c: 182:     int i 
      +                          = 0;
 11687                           
 11688                           ;incstack = 0
 11689                           ; Regs used in _IntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11690  0DCF  0140               	movlb	0	; select bank0
 11691  0DD0  01B0               	clrf	IntToString@i
 11692  0DD1  01B1               	clrf	IntToString@i+1
 11693                           
 11694                           ;main.c: 183:     _Bool sign = n < 0;
 11695  0DD2  1FFC               	btfss	IntToString@n+1,7
 11696  0DD3  2DD6               	goto	u6550
 11697  0DD4  3001               	movlw	1
 11698  0DD5  2DD7               	goto	u6560
 11699  0DD6                     u6550:	
 11700  0DD6  3000               	movlw	0
 11701  0DD7                     u6560:	
 11702  0DD7  00AD               	movwf	??_IntToString
 11703  0DD8  082D               	movf	??_IntToString,w
 11704  0DD9  00AF               	movwf	IntToString@sign
 11705                           
 11706                           ;main.c: 184:     if (sign)
 11707  0DDA  082F               	movf	IntToString@sign,w
 11708  0DDB  1903               	btfsc	3,2
 11709  0DDC  2DE2               	goto	l6340
 11710                           
 11711                           ;main.c: 185:     {;main.c: 187:         n = -n;
 11712  0DDD  09FB               	comf	IntToString@n,f
 11713  0DDE  09FC               	comf	IntToString@n+1,f
 11714  0DDF  0AFB               	incf	IntToString@n,f
 11715  0DE0  1903               	skipnz
 11716  0DE1  0AFC               	incf	IntToString@n+1,f
 11717  0DE2                     l6340:	
 11718                           
 11719                           ;main.c: 193:         dest[i++] = n % 10 + '0';
 11720  0DE2  300A               	movlw	10
 11721  0DE3  00F0               	movwf	___awmod@divisor
 11722  0DE4  3000               	movlw	0
 11723  0DE5  00F1               	movwf	___awmod@divisor+1
 11724  0DE6  087C               	movf	IntToString@n+1,w
 11725  0DE7  00F3               	movwf	___awmod@dividend+1
 11726  0DE8  087B               	movf	IntToString@n,w
 11727  0DE9  00F2               	movwf	___awmod@dividend
 11728  0DEA  3189  2150  318D   	fcall	___awmod
 11729  0DED  0870               	movf	?___awmod,w
 11730  0DEE  3E30               	addlw	48
 11731  0DEF  0140               	movlb	0	; select bank0
 11732  0DF0  00AD               	movwf	??_IntToString
 11733  0DF1  0830               	movf	IntToString@i,w
 11734  0DF2  077D               	addwf	IntToString@dest,w
 11735  0DF3  00AE               	movwf	??_IntToString+1
 11736  0DF4  082E               	movf	??_IntToString+1,w
 11737  0DF5  0086               	movwf	6
 11738  0DF6  3002               	movlw	2	; select bank4/5
 11739  0DF7  0087               	movwf	7
 11740  0DF8  082D               	movf	??_IntToString,w
 11741  0DF9  0081               	movwf	1
 11742  0DFA  3001               	movlw	1
 11743  0DFB  07B0               	addwf	IntToString@i,f
 11744  0DFC  3000               	movlw	0
 11745  0DFD  3DB1               	addwfc	IntToString@i+1,f
 11746                           
 11747                           ;main.c: 195:     } while ((n /= 10) > 0);
 11748  0DFE  300A               	movlw	10
 11749  0DFF  00F0               	movwf	___awdiv@divisor
 11750  0E00  3000               	movlw	0
 11751  0E01  00F1               	movwf	___awdiv@divisor+1
 11752  0E02  087C               	movf	IntToString@n+1,w
 11753  0E03  00F3               	movwf	___awdiv@dividend+1
 11754  0E04  087B               	movf	IntToString@n,w
 11755  0E05  00F2               	movwf	___awdiv@dividend
 11756  0E06  318B  230B  318D   	fcall	___awdiv
 11757  0E09  0871               	movf	?___awdiv+1,w
 11758  0E0A  00FC               	movwf	IntToString@n+1
 11759  0E0B  0870               	movf	?___awdiv,w
 11760  0E0C  00FB               	movwf	IntToString@n
 11761  0E0D  087C               	movf	IntToString@n+1,w
 11762  0E0E  3A80               	xorlw	128
 11763  0E0F  0140               	movlb	0	; select bank0
 11764  0E10  00AD               	movwf	??_IntToString
 11765  0E11  3080               	movlw	128
 11766  0E12  022D               	subwf	??_IntToString,w
 11767  0E13  1D03               	skipz
 11768  0E14  2E17               	goto	u6585
 11769  0E15  3001               	movlw	1
 11770  0E16  027B               	subwf	IntToString@n,w
 11771  0E17                     u6585:	
 11772  0E17  1803               	skipnc
 11773  0E18  2DE2               	goto	l6340
 11774                           
 11775                           ;main.c: 196:     if (sign)
 11776  0E19  0140               	movlb	0	; select bank0
 11777  0E1A  082F               	movf	IntToString@sign,w
 11778  0E1B  1903               	btfsc	3,2
 11779  0E1C  2E2C               	goto	l6352
 11780                           
 11781                           ;main.c: 197:     {;main.c: 198:         dest[i++] = '-';
 11782  0E1D  302D               	movlw	45
 11783  0E1E  00AD               	movwf	??_IntToString
 11784  0E1F  0830               	movf	IntToString@i,w
 11785  0E20  077D               	addwf	IntToString@dest,w
 11786  0E21  00AE               	movwf	??_IntToString+1
 11787  0E22  082E               	movf	??_IntToString+1,w
 11788  0E23  0086               	movwf	6
 11789  0E24  3002               	movlw	2	; select bank4/5
 11790  0E25  0087               	movwf	7
 11791  0E26  082D               	movf	??_IntToString,w
 11792  0E27  0081               	movwf	1
 11793  0E28  3001               	movlw	1
 11794  0E29  07B0               	addwf	IntToString@i,f
 11795  0E2A  3000               	movlw	0
 11796  0E2B  3DB1               	addwfc	IntToString@i+1,f
 11797  0E2C                     l6352:	
 11798                           
 11799                           ;main.c: 200:     dest[i] = '\0';
 11800  0E2C  0830               	movf	IntToString@i,w
 11801  0E2D  077D               	addwf	IntToString@dest,w
 11802  0E2E  00AD               	movwf	??_IntToString
 11803  0E2F  082D               	movf	??_IntToString,w
 11804  0E30  0086               	movwf	6
 11805  0E31  3002               	movlw	2	; select bank4/5
 11806  0E32  0087               	movwf	7
 11807  0E33  0181               	clrf	1
 11808                           
 11809                           ;main.c: 202:     ReverseString(dest);
 11810  0E34  087D               	movf	IntToString@dest,w
 11811  0E35  00F9               	movwf	ReverseString@str
 11812  0E36  3002               	movlw	2
 11813  0E37  00FA               	movwf	ReverseString@str+1
 11814  0E38  318E  26A8         	fcall	_ReverseString
 11815  0E3A  0008               	return
 11816  0E3B                     __end_of_IntToString:	
 11817                           
 11818                           	psect	text37
 11819  0950                     __ptext37:	
 11820 ;; *************** function ___awmod *****************
 11821 ;; Defined at:
 11822 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awmod.c"
 11823 ;; Parameters:    Size  Location     Type
 11824 ;;  divisor         2    0[COMMON] int 
 11825 ;;  dividend        2    2[COMMON] int 
 11826 ;; Auto vars:     Size  Location     Type
 11827 ;;  sign            1    6[COMMON] unsigned char 
 11828 ;;  counter         1    5[COMMON] unsigned char 
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  2    0[COMMON] int 
 11831 ;; Registers used:
 11832 ;;		wreg, status,2, status,0
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11838 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11841 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11842 ;;Total ram usage:        7 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:    3
 11845 ;; This function calls:
 11846 ;;		Nothing
 11847 ;; This function is called by:
 11848 ;;		_IntToString
 11849 ;; This function uses a non-reentrant model
 11850 ;;
 11851                           
 11852                           
 11853                           ;psect for function ___awmod
 11854  0950                     ___awmod:	
 11855                           
 11856                           ;incstack = 0
 11857                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11858  0950  01F6               	clrf	___awmod@sign
 11859  0951  1FF3               	btfss	___awmod@dividend+1,7
 11860  0952  295A               	goto	l5734
 11861  0953  09F2               	comf	___awmod@dividend,f
 11862  0954  09F3               	comf	___awmod@dividend+1,f
 11863  0955  0AF2               	incf	___awmod@dividend,f
 11864  0956  1903               	skipnz
 11865  0957  0AF3               	incf	___awmod@dividend+1,f
 11866  0958  01F6               	clrf	___awmod@sign
 11867  0959  0AF6               	incf	___awmod@sign,f
 11868  095A                     l5734:	
 11869  095A  1FF1               	btfss	___awmod@divisor+1,7
 11870  095B  2961               	goto	l5738
 11871  095C  09F0               	comf	___awmod@divisor,f
 11872  095D  09F1               	comf	___awmod@divisor+1,f
 11873  095E  0AF0               	incf	___awmod@divisor,f
 11874  095F  1903               	skipnz
 11875  0960  0AF1               	incf	___awmod@divisor+1,f
 11876  0961                     l5738:	
 11877  0961  0870               	movf	___awmod@divisor,w
 11878  0962  0471               	iorwf	___awmod@divisor+1,w
 11879  0963  1903               	btfsc	3,2
 11880  0964  2988               	goto	l5756
 11881  0965  01F5               	clrf	___awmod@counter
 11882  0966  0AF5               	incf	___awmod@counter,f
 11883  0967                     l5746:	
 11884  0967  1BF1               	btfsc	___awmod@divisor+1,7
 11885  0968  2973               	goto	l5748
 11886  0969  3001               	movlw	1
 11887  096A                     u5755:	
 11888  096A  35F0               	lslf	___awmod@divisor,f
 11889  096B  0DF1               	rlf	___awmod@divisor+1,f
 11890  096C  0B89               	decfsz	9,f
 11891  096D  296A               	goto	u5755
 11892  096E  3001               	movlw	1
 11893  096F  00F4               	movwf	??___awmod
 11894  0970  0874               	movf	??___awmod,w
 11895  0971  07F5               	addwf	___awmod@counter,f
 11896  0972  2967               	goto	l5746
 11897  0973                     l5748:	
 11898  0973  0871               	movf	___awmod@divisor+1,w
 11899  0974  0273               	subwf	___awmod@dividend+1,w
 11900  0975  1D03               	skipz
 11901  0976  2979               	goto	u5775
 11902  0977  0870               	movf	___awmod@divisor,w
 11903  0978  0272               	subwf	___awmod@dividend,w
 11904  0979                     u5775:	
 11905  0979  1C03               	skipc
 11906  097A  297F               	goto	l5752
 11907  097B  0870               	movf	___awmod@divisor,w
 11908  097C  02F2               	subwf	___awmod@dividend,f
 11909  097D  0871               	movf	___awmod@divisor+1,w
 11910  097E  3BF3               	subwfb	___awmod@dividend+1,f
 11911  097F                     l5752:	
 11912  097F  3001               	movlw	1
 11913  0980                     u5785:	
 11914  0980  36F1               	lsrf	___awmod@divisor+1,f
 11915  0981  0CF0               	rrf	___awmod@divisor,f
 11916  0982  0B89               	decfsz	9,f
 11917  0983  2980               	goto	u5785
 11918  0984  3001               	movlw	1
 11919  0985  02F5               	subwf	___awmod@counter,f
 11920  0986  1D03               	btfss	3,2
 11921  0987  2973               	goto	l5748
 11922  0988                     l5756:	
 11923  0988  0876               	movf	___awmod@sign,w
 11924  0989  1903               	btfsc	3,2
 11925  098A  2990               	goto	l5760
 11926  098B  09F2               	comf	___awmod@dividend,f
 11927  098C  09F3               	comf	___awmod@dividend+1,f
 11928  098D  0AF2               	incf	___awmod@dividend,f
 11929  098E  1903               	skipnz
 11930  098F  0AF3               	incf	___awmod@dividend+1,f
 11931  0990                     l5760:	
 11932  0990  0873               	movf	___awmod@dividend+1,w
 11933  0991  00F1               	movwf	?___awmod+1
 11934  0992  0872               	movf	___awmod@dividend,w
 11935  0993  00F0               	movwf	?___awmod
 11936  0994  0008               	return
 11937  0995                     __end_of___awmod:	
 11938                           
 11939                           	psect	text38
 11940  0EA8                     __ptext38:	
 11941 ;; *************** function _ReverseString *****************
 11942 ;; Defined at:
 11943 ;;		line 125 in file "main.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;  str             2    9[COMMON] PTR unsigned char 
 11946 ;;		 -> checksum(6), main@convertedNumber(16), 
 11947 ;; Auto vars:     Size  Location     Type
 11948 ;;  opposite        2    7[BANK0 ] PTR unsigned char 
 11949 ;;		 -> checksum(6), main@convertedNumber(16), 
 11950 ;;  temp            1    6[BANK0 ] unsigned char 
 11951 ;;  i               2   11[BANK0 ] int 
 11952 ;;  halfway         2    4[BANK0 ] int 
 11953 ;;  counti          2    9[BANK0 ] int 
 11954 ;; Return value:  Size  Location     Type
 11955 ;;                  1    wreg      void 
 11956 ;; Registers used:
 11957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11958 ;; Tracked objects:
 11959 ;;		On entry : 0/0
 11960 ;;		On exit  : 0/0
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11964 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11965 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11966 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11967 ;;Total ram usage:       15 bytes
 11968 ;; Hardware stack levels used:    1
 11969 ;; Hardware stack levels required when called:    4
 11970 ;; This function calls:
 11971 ;;		___awdiv
 11972 ;;		_strlen
 11973 ;; This function is called by:
 11974 ;;		_UIntToHexString
 11975 ;;		_IntToString
 11976 ;;		_UIntToString
 11977 ;;		_IntToHexString
 11978 ;; This function uses a non-reentrant model
 11979 ;;
 11980                           
 11981                           
 11982                           ;psect for function _ReverseString
 11983  0EA8                     _ReverseString:	
 11984                           
 11985                           ;main.c: 125: void ReverseString(char* str);main.c: 126: {;main.c: 127:     int counti =
      +                           strlen(str);
 11986                           
 11987                           ;incstack = 0
 11988                           ; Regs used in _ReverseString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11989  0EA8  087A               	movf	ReverseString@str+1,w
 11990  0EA9  00F1               	movwf	strlen@s+1
 11991  0EAA  0879               	movf	ReverseString@str,w
 11992  0EAB  00F0               	movwf	strlen@s
 11993  0EAC  3193  231D  318E   	fcall	_strlen
 11994  0EAF  0871               	movf	?_strlen+1,w
 11995  0EB0  0140               	movlb	0	; select bank0
 11996  0EB1  00AA               	movwf	ReverseString@counti+1
 11997  0EB2  0870               	movf	?_strlen,w
 11998  0EB3  00A9               	movwf	ReverseString@counti
 11999                           
 12000                           ;main.c: 128:     for (int i = 0, halfway = counti / 2; i < halfway; i++)
 12001  0EB4  01AB               	clrf	ReverseString@i
 12002  0EB5  01AC               	clrf	ReverseString@i+1
 12003  0EB6  3002               	movlw	2
 12004  0EB7  00F0               	movwf	___awdiv@divisor
 12005  0EB8  3000               	movlw	0
 12006  0EB9  00F1               	movwf	___awdiv@divisor+1
 12007  0EBA  082A               	movf	ReverseString@counti+1,w
 12008  0EBB  00F3               	movwf	___awdiv@dividend+1
 12009  0EBC  0829               	movf	ReverseString@counti,w
 12010  0EBD  00F2               	movwf	___awdiv@dividend
 12011  0EBE  318B  230B  318E   	fcall	___awdiv
 12012  0EC1  0871               	movf	?___awdiv+1,w
 12013  0EC2  0140               	movlb	0	; select bank0
 12014  0EC3  00A5               	movwf	ReverseString@halfway+1
 12015  0EC4  0870               	movf	?___awdiv,w
 12016  0EC5  00A4               	movwf	ReverseString@halfway
 12017  0EC6                     l6306:	
 12018  0EC6  082C               	movf	ReverseString@i+1,w
 12019  0EC7  3A80               	xorlw	128
 12020  0EC8  00A0               	movwf	??_ReverseString
 12021  0EC9  0825               	movf	ReverseString@halfway+1,w
 12022  0ECA  3A80               	xorlw	128
 12023  0ECB  0220               	subwf	??_ReverseString,w
 12024  0ECC  1D03               	skipz
 12025  0ECD  2ED0               	goto	u6505
 12026  0ECE  0824               	movf	ReverseString@halfway,w
 12027  0ECF  022B               	subwf	ReverseString@i,w
 12028  0ED0                     u6505:	
 12029  0ED0  1803               	btfsc	3,0
 12030  0ED1  2F0C               	goto	l6308
 12031                           
 12032                           ;main.c: 129:     {;main.c: 130:         char temp = str[i];
 12033  0ED2  0140               	movlb	0	; select bank0
 12034  0ED3  082B               	movf	ReverseString@i,w
 12035  0ED4  0779               	addwf	ReverseString@str,w
 12036  0ED5  0086               	movwf	6
 12037  0ED6  082C               	movf	ReverseString@i+1,w
 12038  0ED7  3D7A               	addwfc	ReverseString@str+1,w
 12039  0ED8  0087               	movwf	7
 12040  0ED9  0801               	movf	1,w
 12041  0EDA  00A0               	movwf	??_ReverseString
 12042  0EDB  0820               	movf	??_ReverseString,w
 12043  0EDC  00A6               	movwf	ReverseString@temp
 12044                           
 12045                           ;main.c: 131:         char* opposite = str + (counti - 1 - i);
 12046  0EDD  082B               	movf	ReverseString@i,w
 12047  0EDE  0279               	subwf	ReverseString@str,w
 12048  0EDF  00A0               	movwf	??_ReverseString
 12049  0EE0  082C               	movf	ReverseString@i+1,w
 12050  0EE1  3B7A               	subwfb	ReverseString@str+1,w
 12051  0EE2  00A1               	movwf	??_ReverseString+1
 12052  0EE3  0829               	movf	ReverseString@counti,w
 12053  0EE4  0720               	addwf	??_ReverseString,w
 12054  0EE5  00A2               	movwf	??_ReverseString+2
 12055  0EE6  082A               	movf	ReverseString@counti+1,w
 12056  0EE7  3D21               	addwfc	??_ReverseString+1,w
 12057  0EE8  00A3               	movwf	??_ReverseString+3
 12058  0EE9  0822               	movf	??_ReverseString+2,w
 12059  0EEA  3EFF               	addlw	255
 12060  0EEB  00A7               	movwf	ReverseString@opposite
 12061  0EEC  30FF               	movlw	255
 12062  0EED  3D23               	addwfc	??_ReverseString+3,w
 12063  0EEE  00A8               	movwf	ReverseString@opposite+1
 12064                           
 12065                           ;main.c: 132:         str[i] = *opposite;
 12066  0EEF  0827               	movf	ReverseString@opposite,w
 12067  0EF0  0086               	movwf	6
 12068  0EF1  0828               	movf	ReverseString@opposite+1,w
 12069  0EF2  0087               	movwf	7
 12070  0EF3  0801               	movf	1,w
 12071  0EF4  00A0               	movwf	??_ReverseString
 12072  0EF5  082B               	movf	ReverseString@i,w
 12073  0EF6  0779               	addwf	ReverseString@str,w
 12074  0EF7  00A1               	movwf	??_ReverseString+1
 12075  0EF8  082C               	movf	ReverseString@i+1,w
 12076  0EF9  3D7A               	addwfc	ReverseString@str+1,w
 12077  0EFA  00A2               	movwf	??_ReverseString+2
 12078  0EFB  0821               	movf	??_ReverseString+1,w
 12079  0EFC  0086               	movwf	6
 12080  0EFD  0822               	movf	??_ReverseString+2,w
 12081  0EFE  0087               	movwf	7
 12082  0EFF  0820               	movf	??_ReverseString,w
 12083  0F00  0081               	movwf	1
 12084                           
 12085                           ;main.c: 133:         *opposite = temp;
 12086  0F01  0827               	movf	ReverseString@opposite,w
 12087  0F02  0086               	movwf	6
 12088  0F03  0828               	movf	ReverseString@opposite+1,w
 12089  0F04  0087               	movwf	7
 12090  0F05  0826               	movf	ReverseString@temp,w
 12091  0F06  0081               	movwf	1
 12092                           
 12093                           ;main.c: 134:     }
 12094  0F07  3001               	movlw	1
 12095  0F08  07AB               	addwf	ReverseString@i,f
 12096  0F09  3000               	movlw	0
 12097  0F0A  3DAC               	addwfc	ReverseString@i+1,f
 12098  0F0B  2EC6               	goto	l6306
 12099  0F0C                     l6308:	
 12100                           
 12101                           ;main.c: 135:     str[counti] = '\0';
 12102  0F0C  0140               	movlb	0	; select bank0
 12103  0F0D  0829               	movf	ReverseString@counti,w
 12104  0F0E  0779               	addwf	ReverseString@str,w
 12105  0F0F  0086               	movwf	6
 12106  0F10  082A               	movf	ReverseString@counti+1,w
 12107  0F11  3D7A               	addwfc	ReverseString@str+1,w
 12108  0F12  0087               	movwf	7
 12109  0F13  0181               	clrf	1
 12110  0F14  0008               	return
 12111  0F15                     __end_of_ReverseString:	
 12112                           
 12113                           	psect	text39
 12114  0B0B                     __ptext39:	
 12115 ;; *************** function ___awdiv *****************
 12116 ;; Defined at:
 12117 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awdiv.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  divisor         2    0[COMMON] int 
 12120 ;;  dividend        2    2[COMMON] int 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  quotient        2    7[COMMON] int 
 12123 ;;  sign            1    6[COMMON] unsigned char 
 12124 ;;  counter         1    5[COMMON] unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  2    0[COMMON] int 
 12127 ;; Registers used:
 12128 ;;		wreg, status,2, status,0
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12135 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12137 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12138 ;;Total ram usage:        9 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:    3
 12141 ;; This function calls:
 12142 ;;		Nothing
 12143 ;; This function is called by:
 12144 ;;		_ReverseString
 12145 ;;		_IntToString
 12146 ;;		_IntToHexString
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           
 12151                           ;psect for function ___awdiv
 12152  0B0B                     ___awdiv:	
 12153                           
 12154                           ;incstack = 0
 12155                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12156  0B0B  01F6               	clrf	___awdiv@sign
 12157  0B0C  1FF1               	btfss	___awdiv@divisor+1,7
 12158  0B0D  2B15               	goto	l5346
 12159  0B0E  09F0               	comf	___awdiv@divisor,f
 12160  0B0F  09F1               	comf	___awdiv@divisor+1,f
 12161  0B10  0AF0               	incf	___awdiv@divisor,f
 12162  0B11  1903               	skipnz
 12163  0B12  0AF1               	incf	___awdiv@divisor+1,f
 12164  0B13  01F6               	clrf	___awdiv@sign
 12165  0B14  0AF6               	incf	___awdiv@sign,f
 12166  0B15                     l5346:	
 12167  0B15  1FF3               	btfss	___awdiv@dividend+1,7
 12168  0B16  2B20               	goto	l5352
 12169  0B17  09F2               	comf	___awdiv@dividend,f
 12170  0B18  09F3               	comf	___awdiv@dividend+1,f
 12171  0B19  0AF2               	incf	___awdiv@dividend,f
 12172  0B1A  1903               	skipnz
 12173  0B1B  0AF3               	incf	___awdiv@dividend+1,f
 12174  0B1C  3001               	movlw	1
 12175  0B1D  00F4               	movwf	??___awdiv
 12176  0B1E  0874               	movf	??___awdiv,w
 12177  0B1F  06F6               	xorwf	___awdiv@sign,f
 12178  0B20                     l5352:	
 12179  0B20  01F7               	clrf	___awdiv@quotient
 12180  0B21  01F8               	clrf	___awdiv@quotient+1
 12181  0B22  0870               	movf	___awdiv@divisor,w
 12182  0B23  0471               	iorwf	___awdiv@divisor+1,w
 12183  0B24  1903               	btfsc	3,2
 12184  0B25  2B4F               	goto	l5374
 12185  0B26  01F5               	clrf	___awdiv@counter
 12186  0B27  0AF5               	incf	___awdiv@counter,f
 12187  0B28                     l5362:	
 12188  0B28  1BF1               	btfsc	___awdiv@divisor+1,7
 12189  0B29  2B34               	goto	l5364
 12190  0B2A  3001               	movlw	1
 12191  0B2B                     u5235:	
 12192  0B2B  35F0               	lslf	___awdiv@divisor,f
 12193  0B2C  0DF1               	rlf	___awdiv@divisor+1,f
 12194  0B2D  0B89               	decfsz	9,f
 12195  0B2E  2B2B               	goto	u5235
 12196  0B2F  3001               	movlw	1
 12197  0B30  00F4               	movwf	??___awdiv
 12198  0B31  0874               	movf	??___awdiv,w
 12199  0B32  07F5               	addwf	___awdiv@counter,f
 12200  0B33  2B28               	goto	l5362
 12201  0B34                     l5364:	
 12202  0B34  3001               	movlw	1
 12203  0B35                     u5255:	
 12204  0B35  35F7               	lslf	___awdiv@quotient,f
 12205  0B36  0DF8               	rlf	___awdiv@quotient+1,f
 12206  0B37  0B89               	decfsz	9,f
 12207  0B38  2B35               	goto	u5255
 12208  0B39  0871               	movf	___awdiv@divisor+1,w
 12209  0B3A  0273               	subwf	___awdiv@dividend+1,w
 12210  0B3B  1D03               	skipz
 12211  0B3C  2B3F               	goto	u5265
 12212  0B3D  0870               	movf	___awdiv@divisor,w
 12213  0B3E  0272               	subwf	___awdiv@dividend,w
 12214  0B3F                     u5265:	
 12215  0B3F  1C03               	skipc
 12216  0B40  2B46               	goto	l5370
 12217  0B41  0870               	movf	___awdiv@divisor,w
 12218  0B42  02F2               	subwf	___awdiv@dividend,f
 12219  0B43  0871               	movf	___awdiv@divisor+1,w
 12220  0B44  3BF3               	subwfb	___awdiv@dividend+1,f
 12221  0B45  1477               	bsf	___awdiv@quotient,0
 12222  0B46                     l5370:	
 12223  0B46  3001               	movlw	1
 12224  0B47                     u5275:	
 12225  0B47  36F1               	lsrf	___awdiv@divisor+1,f
 12226  0B48  0CF0               	rrf	___awdiv@divisor,f
 12227  0B49  0B89               	decfsz	9,f
 12228  0B4A  2B47               	goto	u5275
 12229  0B4B  3001               	movlw	1
 12230  0B4C  02F5               	subwf	___awdiv@counter,f
 12231  0B4D  1D03               	btfss	3,2
 12232  0B4E  2B34               	goto	l5364
 12233  0B4F                     l5374:	
 12234  0B4F  0876               	movf	___awdiv@sign,w
 12235  0B50  1903               	btfsc	3,2
 12236  0B51  2B57               	goto	l5378
 12237  0B52  09F7               	comf	___awdiv@quotient,f
 12238  0B53  09F8               	comf	___awdiv@quotient+1,f
 12239  0B54  0AF7               	incf	___awdiv@quotient,f
 12240  0B55  1903               	skipnz
 12241  0B56  0AF8               	incf	___awdiv@quotient+1,f
 12242  0B57                     l5378:	
 12243  0B57  0878               	movf	___awdiv@quotient+1,w
 12244  0B58  00F1               	movwf	?___awdiv+1
 12245  0B59  0877               	movf	___awdiv@quotient,w
 12246  0B5A  00F0               	movwf	?___awdiv
 12247  0B5B  0008               	return
 12248  0B5C                     __end_of___awdiv:	
 12249                           
 12250                           	psect	text40
 12251  1255                     __ptext40:	
 12252 ;; *************** function _InitTiming *****************
 12253 ;; Defined at:
 12254 ;;		line 11 in file "timing.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;		None
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;		None
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  1    wreg      void 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2, status,0, pclath, cstack
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12272 ;;Total ram usage:        0 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:    4
 12275 ;; This function calls:
 12276 ;;		_TMR0_SetInterruptHandler
 12277 ;; This function is called by:
 12278 ;;		_main
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           
 12283                           ;psect for function _InitTiming
 12284  1255                     _InitTiming:	
 12285                           
 12286                           ;timing.c: 13:     (INTCONbits.GIE = 1);
 12287                           
 12288                           ;incstack = 0
 12289                           ; Regs used in _InitTiming: [wreg+status,2+status,0+pclath+cstack]
 12290  1255  178B               	bsf	11,7	;volatile
 12291                           
 12292                           ;timing.c: 14:     TMR0_SetInterruptHandler(TimerISR);
 12293  1256  306E               	movlw	low _TimerISR
 12294  1257  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12295  1258  3012               	movlw	high _TimerISR
 12296  1259  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12297  125A  3192  223D         	fcall	_TMR0_SetInterruptHandler
 12298  125C  0008               	return
 12299  125D                     __end_of_InitTiming:	
 12300                           
 12301                           	psect	text41
 12302  123D                     __ptext41:	
 12303 ;; *************** function _TMR0_SetInterruptHandler *****************
 12304 ;; Defined at:
 12305 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 12306 ;; Parameters:    Size  Location     Type
 12307 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12308 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		wreg
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12324 ;;Total ram usage:        2 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; Hardware stack levels required when called:    3
 12327 ;; This function calls:
 12328 ;;		Nothing
 12329 ;; This function is called by:
 12330 ;;		_TMR0_Initialize
 12331 ;;		_InitTiming
 12332 ;; This function uses a non-reentrant model
 12333 ;;
 12334                           
 12335                           
 12336                           ;psect for function _TMR0_SetInterruptHandler
 12337  123D                     _TMR0_SetInterruptHandler:	
 12338                           
 12339                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 12340                           
 12341                           ;incstack = 0
 12342                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 12343  123D  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 12344  123E  0141               	movlb	1	; select bank1
 12345  123F  00D2               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 12346  1240  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 12347  1241  00D1               	movwf	_TMR0_InterruptHandler^(0+128)
 12348  1242  0008               	return
 12349  1243                     __end_of_TMR0_SetInterruptHandler:	
 12350                           
 12351                           	psect	text42
 12352  13F0                     __ptext42:	
 12353 ;; *************** function _ClearTxData *****************
 12354 ;; Defined at:
 12355 ;;		line 300 in file "main.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;		None
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;  i               2    2[COMMON] int 
 12360 ;; Return value:  Size  Location     Type
 12361 ;;                  1    wreg      void 
 12362 ;; Registers used:
 12363 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12364 ;; Tracked objects:
 12365 ;;		On entry : 0/0
 12366 ;;		On exit  : 0/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12372 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12373 ;;Total ram usage:        4 bytes
 12374 ;; Hardware stack levels used:    1
 12375 ;; Hardware stack levels required when called:    3
 12376 ;; This function calls:
 12377 ;;		Nothing
 12378 ;; This function is called by:
 12379 ;;		_main
 12380 ;; This function uses a non-reentrant model
 12381 ;;
 12382                           
 12383                           
 12384                           ;psect for function _ClearTxData
 12385  13F0                     _ClearTxData:	
 12386                           
 12387                           ;main.c: 302:     for (int i = 0; i < 140; i++)
 12388                           
 12389                           ;incstack = 0
 12390                           ; Regs used in _ClearTxData: [wreg+fsr1l+fsr1h+status,2+status,0]
 12391  13F0  01F2               	clrf	ClearTxData@i
 12392  13F1  01F3               	clrf	ClearTxData@i+1
 12393  13F2                     l5912:	
 12394                           
 12395                           ;main.c: 303:     {;main.c: 304:         txdata[i] = '\0';
 12396  13F2  3064               	movlw	100
 12397  13F3  00F0               	movwf	??_ClearTxData
 12398  13F4  3027               	movlw	39
 12399  13F5  00F1               	movwf	??_ClearTxData+1
 12400  13F6  0872               	movf	ClearTxData@i,w
 12401  13F7  0770               	addwf	??_ClearTxData,w
 12402  13F8  0086               	movwf	6
 12403  13F9  0873               	movf	ClearTxData@i+1,w
 12404  13FA  3D71               	addwfc	??_ClearTxData+1,w
 12405  13FB  0087               	movwf	7
 12406  13FC  0181               	clrf	1
 12407                           
 12408                           ;main.c: 305:     }
 12409  13FD  3001               	movlw	1
 12410  13FE  07F2               	addwf	ClearTxData@i,f
 12411  13FF  3000               	movlw	0
 12412  1400  3DF3               	addwfc	ClearTxData@i+1,f
 12413  1401  0873               	movf	ClearTxData@i+1,w
 12414  1402  3A80               	xorlw	128
 12415  1403  00F0               	movwf	??_ClearTxData
 12416  1404  3080               	movlw	128
 12417  1405  0270               	subwf	??_ClearTxData,w
 12418  1406  1D03               	skipz
 12419  1407  2C0A               	goto	u6005
 12420  1408  308C               	movlw	140
 12421  1409  0272               	subwf	ClearTxData@i,w
 12422  140A                     u6005:	
 12423  140A  1803               	btfsc	3,0
 12424  140B  0008               	return
 12425  140C  2BF2               	goto	l5912
 12426  140D                     __end_of_ClearTxData:	
 12427                           
 12428                           	psect	text43
 12429  14BB                     __ptext43:	
 12430 ;; *************** function _ClearString *****************
 12431 ;; Defined at:
 12432 ;;		line 26 in file "main.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;  str             1    wreg     PTR unsigned char 
 12435 ;;		 -> main@convertedNumber(16), 
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;  str             1   10[COMMON] PTR unsigned char 
 12438 ;;		 -> main@convertedNumber(16), 
 12439 ;;  i               2    8[COMMON] int 
 12440 ;;  counti          2    6[COMMON] int 
 12441 ;; Return value:  Size  Location     Type
 12442 ;;                  1    wreg      void 
 12443 ;; Registers used:
 12444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12451 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12454 ;;Total ram usage:        6 bytes
 12455 ;; Hardware stack levels used:    1
 12456 ;; Hardware stack levels required when called:    4
 12457 ;; This function calls:
 12458 ;;		_strlen
 12459 ;; This function is called by:
 12460 ;;		_main
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           
 12465                           ;psect for function _ClearString
 12466  14BB                     _ClearString:	
 12467                           
 12468                           ;incstack = 0
 12469                           ; Regs used in _ClearString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12470                           ;ClearString@str stored from wreg
 12471  14BB  00FA               	movwf	ClearString@str
 12472                           
 12473                           ;main.c: 26: void ClearString(char* str);main.c: 27: {;main.c: 28:     for (int i = 0, c
      +                          ounti = strlen(str); i < counti; i++)
 12474  14BC  01F8               	clrf	ClearString@i
 12475  14BD  01F9               	clrf	ClearString@i+1
 12476  14BE  087A               	movf	ClearString@str,w
 12477  14BF  00F0               	movwf	strlen@s
 12478  14C0  3002               	movlw	2
 12479  14C1  00F1               	movwf	strlen@s+1
 12480  14C2  3193  231D  3194   	fcall	_strlen
 12481  14C5  0871               	movf	?_strlen+1,w
 12482  14C6  00F7               	movwf	ClearString@counti+1
 12483  14C7  0870               	movf	?_strlen,w
 12484  14C8  00F6               	movwf	ClearString@counti
 12485  14C9                     l5846:	
 12486  14C9  0879               	movf	ClearString@i+1,w
 12487  14CA  3A80               	xorlw	128
 12488  14CB  00F5               	movwf	??_ClearString
 12489  14CC  0877               	movf	ClearString@counti+1,w
 12490  14CD  3A80               	xorlw	128
 12491  14CE  0275               	subwf	??_ClearString,w
 12492  14CF  1D03               	skipz
 12493  14D0  2CD3               	goto	u5895
 12494  14D1  0876               	movf	ClearString@counti,w
 12495  14D2  0278               	subwf	ClearString@i,w
 12496  14D3                     u5895:	
 12497  14D3  1803               	btfsc	3,0
 12498  14D4  0008               	return
 12499                           
 12500                           ;main.c: 29:     {;main.c: 30:         str[i] = '\0';
 12501  14D5  0878               	movf	ClearString@i,w
 12502  14D6  077A               	addwf	ClearString@str,w
 12503  14D7  00F5               	movwf	??_ClearString
 12504  14D8  0875               	movf	??_ClearString,w
 12505  14D9  0086               	movwf	6
 12506  14DA  3002               	movlw	2	; select bank4/5
 12507  14DB  0087               	movwf	7
 12508  14DC  0181               	clrf	1
 12509                           
 12510                           ;main.c: 31:     }
 12511  14DD  3001               	movlw	1
 12512  14DE  07F8               	addwf	ClearString@i,f
 12513  14DF  3000               	movlw	0
 12514  14E0  3DF9               	addwfc	ClearString@i+1,f
 12515  14E1  2CC9               	goto	l5846
 12516  14E2                     __end_of_ClearString:	
 12517                           
 12518                           	psect	text44
 12519  131D                     __ptext44:	
 12520 ;; *************** function _strlen *****************
 12521 ;; Defined at:
 12522 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;  s               2    0[COMMON] PTR const unsigned char 
 12525 ;;		 -> STR_9(3), checksum(6), STR_8(7), main@convertedNumber(16), 
 12526 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 12527 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 12528 ;;		 -> txdata(140), csvField(20), 
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;  a               2    3[COMMON] PTR const unsigned char 
 12531 ;;		 -> STR_9(3), checksum(6), STR_8(7), main@convertedNumber(16), 
 12532 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 12533 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 12534 ;;		 -> txdata(140), csvField(20), 
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  2    0[COMMON] unsigned int 
 12537 ;; Registers used:
 12538 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12547 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12548 ;;Total ram usage:        5 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; Hardware stack levels required when called:    3
 12551 ;; This function calls:
 12552 ;;		Nothing
 12553 ;; This function is called by:
 12554 ;;		_ClearString
 12555 ;;		_GetAtRowCSV
 12556 ;;		_Insert
 12557 ;;		_InsertString
 12558 ;;		_ReverseString
 12559 ;;		_WriteGPS
 12560 ;;		_PollGPS
 12561 ;;		_main
 12562 ;;		_crc16
 12563 ;;		_TransmitString
 12564 ;; This function uses a non-reentrant model
 12565 ;;
 12566                           
 12567                           
 12568                           ;psect for function _strlen
 12569  131D                     _strlen:	
 12570                           
 12571                           ;incstack = 0
 12572                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 12573  131D  0871               	movf	strlen@s+1,w
 12574  131E  00F4               	movwf	strlen@a+1
 12575  131F  0870               	movf	strlen@s,w
 12576  1320  00F3               	movwf	strlen@a
 12577  1321                     l5070:	
 12578  1321  0870               	movf	strlen@s,w
 12579  1322  0084               	movwf	4
 12580  1323  0871               	movf	strlen@s+1,w
 12581  1324  0085               	movwf	5
 12582  1325  0012               	moviw fsr0++
 12583  1326  1903               	btfsc	3,2
 12584  1327  2B2D               	goto	l5072
 12585  1328  3001               	movlw	1
 12586  1329  07F0               	addwf	strlen@s,f
 12587  132A  3000               	movlw	0
 12588  132B  3DF1               	addwfc	strlen@s+1,f
 12589  132C  2B21               	goto	l5070
 12590  132D                     l5072:	
 12591  132D  0873               	movf	strlen@a,w
 12592  132E  0270               	subwf	strlen@s,w
 12593  132F  00F0               	movwf	?_strlen
 12594  1330  0874               	movf	strlen@a+1,w
 12595  1331  3B71               	subwfb	strlen@s+1,w
 12596  1332  00F1               	movwf	?_strlen+1
 12597  1333  0008               	return
 12598  1334                     __end_of_strlen:	
 12599                           
 12600                           	psect	text45
 12601  0E3B                     __ptext45:	
 12602 ;; *************** function _BME280_Init *****************
 12603 ;; Defined at:
 12604 ;;		line 85 in file "bme280_i2c.c"
 12605 ;; Parameters:    Size  Location     Type
 12606 ;;		None
 12607 ;; Auto vars:     Size  Location     Type
 12608 ;;  settings_sel    1   16[BANK1 ] unsigned char 
 12609 ;;  rslt            1   17[BANK1 ] char 
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  1    wreg      void 
 12612 ;; Registers used:
 12613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12620 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12621 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12622 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12623 ;;Total ram usage:        4 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:   16
 12626 ;; This function calls:
 12627 ;;		_DebugAlert
 12628 ;;		_I2C_Init
 12629 ;;		_bme280_init
 12630 ;;		_bme280_set_sensor_mode
 12631 ;;		_bme280_set_sensor_settings
 12632 ;; This function is called by:
 12633 ;;		_main
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           
 12638                           ;psect for function _BME280_Init
 12639  0E3B                     _BME280_Init:	
 12640                           
 12641                           ;bme280_i2c.c: 87:     I2C_Init();
 12642                           
 12643                           ;incstack = 0
 12644 ;; hardware stack exceeded
 12645                           ; Regs used in _BME280_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12646  0E3B  3192  22F5  318E   	fcall	_I2C_Init
 12647                           
 12648                           ;bme280_i2c.c: 91:     EnvSensor.dev_id = 0x76;
 12649  0E3E  3076               	movlw	118
 12650  0E3F  0141               	movlb	1	; select bank1
 12651  0E40  00C8               	movwf	??_BME280_Init^(0+128)
 12652  0E41  0848               	movf	??_BME280_Init^(0+128),w
 12653  0E42  0142               	movlb	2	; select bank2
 12654  0E43  00BD               	movwf	(_EnvSensor^(0+256)+1)
 12655                           
 12656                           ;bme280_i2c.c: 92:     EnvSensor.intf = BME280_I2C_INTF;
 12657  0E44  01BE               	clrf	(_EnvSensor^(0+256)+2)
 12658  0E45  0ABE               	incf	(_EnvSensor^(0+256)+2),f
 12659                           
 12660                           ;bme280_i2c.c: 93:     EnvSensor.read = ReadEnvSensor;
 12661  0E46  30BA               	movlw	low _ReadEnvSensor
 12662  0E47  00BF               	movwf	(low ((_EnvSensor| (0+256)+3)))^0
 12663  0E48  300A               	movlw	high _ReadEnvSensor
 12664  0E49  00C0               	movwf	((low ((_EnvSensor| (0+256)+3)))^0+1)
 12665                           
 12666                           ;bme280_i2c.c: 94:     EnvSensor.write = WriteEnvSensor;
 12667  0E4A  301B               	movlw	low _WriteEnvSensor
 12668  0E4B  00C1               	movwf	(low ((_EnvSensor| (0+256)+5)))^0
 12669  0E4C  3017               	movlw	high _WriteEnvSensor
 12670  0E4D  00C2               	movwf	((low ((_EnvSensor| (0+256)+5)))^0+1)
 12671                           
 12672                           ;bme280_i2c.c: 95:     EnvSensor.delay_ms = Sleep;
 12673  0E4E  30AE               	movlw	low _Sleep
 12674  0E4F  00C3               	movwf	(low ((_EnvSensor| (0+256)+7)))^0
 12675  0E50  3015               	movlw	high _Sleep
 12676  0E51  00C4               	movwf	((low ((_EnvSensor| (0+256)+7)))^0+1)
 12677                           
 12678                           ;bme280_i2c.c: 97:     rslt = bme280_init(&EnvSensor);
 12679  0E52  303C               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 12680  0E53  318D  2564  318E   	fcall	_bme280_init
 12681  0E56  0141               	movlb	1	; select bank1
 12682  0E57  00C8               	movwf	??_BME280_Init^(0+128)
 12683  0E58  0848               	movf	??_BME280_Init^(0+128),w
 12684  0E59  00CB               	movwf	BME280_Init@rslt^(0+128)
 12685                           
 12686                           ;bme280_i2c.c: 99:     if (rslt == 0)
 12687  0E5A  084B               	movf	BME280_Init@rslt^(0+128),w
 12688  0E5B  1D03               	btfss	3,2
 12689  0E5C  2E96               	goto	l5836
 12690                           
 12691                           ;bme280_i2c.c: 100:     {;bme280_i2c.c: 101:         uint8_t settings_sel;;bme280_i2c.c:
      +                           104:         EnvSensor.settings.osr_h = 0x01;
 12692  0E5D  0142               	movlb	2	; select bank2
 12693  0E5E  01EC               	clrf	(_EnvSensor^(0+256)+48)
 12694  0E5F  0AEC               	incf	(_EnvSensor^(0+256)+48),f
 12695                           
 12696                           ;bme280_i2c.c: 105:         EnvSensor.settings.osr_p = 0x05;
 12697  0E60  3005               	movlw	5
 12698  0E61  0141               	movlb	1	; select bank1
 12699  0E62  00C8               	movwf	??_BME280_Init^(0+128)
 12700  0E63  0848               	movf	??_BME280_Init^(0+128),w
 12701  0E64  0142               	movlb	2	; select bank2
 12702  0E65  00EA               	movwf	(_EnvSensor^(0+256)+46)
 12703                           
 12704                           ;bme280_i2c.c: 106:         EnvSensor.settings.osr_t = 0x02;
 12705  0E66  3002               	movlw	2
 12706  0E67  0141               	movlb	1	; select bank1
 12707  0E68  00C8               	movwf	??_BME280_Init^(0+128)
 12708  0E69  0848               	movf	??_BME280_Init^(0+128),w
 12709  0E6A  0142               	movlb	2	; select bank2
 12710  0E6B  00EB               	movwf	(_EnvSensor^(0+256)+47)
 12711                           
 12712                           ;bme280_i2c.c: 107:         EnvSensor.settings.filter = (0x04);
 12713  0E6C  3004               	movlw	4
 12714  0E6D  0141               	movlb	1	; select bank1
 12715  0E6E  00C8               	movwf	??_BME280_Init^(0+128)
 12716  0E6F  0848               	movf	??_BME280_Init^(0+128),w
 12717  0E70  0142               	movlb	2	; select bank2
 12718  0E71  00ED               	movwf	(_EnvSensor^(0+256)+49)
 12719                           
 12720                           ;bme280_i2c.c: 108:         EnvSensor.settings.standby_time = (0x01);
 12721  0E72  01EE               	clrf	(_EnvSensor^(0+256)+50)
 12722  0E73  0AEE               	incf	(_EnvSensor^(0+256)+50),f
 12723                           
 12724                           ;bme280_i2c.c: 110:         settings_sel = 1;
 12725  0E74  0141               	movlb	1	; select bank1
 12726  0E75  01CA               	clrf	BME280_Init@settings_sel^(0+128)
 12727  0E76  0ACA               	incf	BME280_Init@settings_sel^(0+128),f
 12728                           
 12729                           ;bme280_i2c.c: 111:         settings_sel |= 1 << 1;
 12730  0E77  14CA               	bsf	BME280_Init@settings_sel^(0+128),1
 12731                           
 12732                           ;bme280_i2c.c: 112:         settings_sel |= 1 << 2;
 12733  0E78  154A               	bsf	BME280_Init@settings_sel^(0+128),2
 12734                           
 12735                           ;bme280_i2c.c: 113:         settings_sel |= 1 << 4;
 12736  0E79  164A               	bsf	BME280_Init@settings_sel^(0+128),4
 12737                           
 12738                           ;bme280_i2c.c: 114:         settings_sel |= 1 << 3;
 12739  0E7A  15CA               	bsf	BME280_Init@settings_sel^(0+128),3
 12740  0E7B  303C               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 12741  0E7C  00C8               	movwf	??_BME280_Init^(0+128)
 12742  0E7D  0848               	movf	??_BME280_Init^(0+128),w
 12743  0E7E  0140               	movlb	0	; select bank0
 12744  0E7F  00EC               	movwf	bme280_set_sensor_settings@dev
 12745  0E80  0141               	movlb	1	; select bank1
 12746  0E81  084A               	movf	BME280_Init@settings_sel^(0+128),w
 12747  0E82  318F  278A  318E   	fcall	_bme280_set_sensor_settings
 12748                           
 12749                           ;bme280_i2c.c: 116:         rslt = bme280_set_sensor_mode(0x03, &EnvSensor);
 12750  0E85  303C               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 12751  0E86  0141               	movlb	1	; select bank1
 12752  0E87  00C8               	movwf	??_BME280_Init^(0+128)
 12753  0E88  0848               	movf	??_BME280_Init^(0+128),w
 12754  0E89  0140               	movlb	0	; select bank0
 12755  0E8A  00EC               	movwf	bme280_set_sensor_mode@dev
 12756  0E8B  3003               	movlw	3
 12757  0E8C  3188  2048  318E   	fcall	_bme280_set_sensor_mode
 12758  0E8F  0141               	movlb	1	; select bank1
 12759  0E90  00C9               	movwf	(??_BME280_Init+1)^(0+128)
 12760  0E91  0849               	movf	(??_BME280_Init+1)^(0+128),w
 12761  0E92  00CB               	movwf	BME280_Init@rslt^(0+128)
 12762                           
 12763                           ;bme280_i2c.c: 118:         if (rslt == 0)
 12764  0E93  084B               	movf	BME280_Init@rslt^(0+128),w
 12765  0E94  1903               	btfsc	3,2
 12766  0E95  0008               	return
 12767  0E96                     l5836:	
 12768                           
 12769                           ;bme280_i2c.c: 124:     DebugAlert(200, 200, 3);;
 12770  0E96  30C8               	movlw	200
 12771  0E97  0140               	movlb	0	; select bank0
 12772  0E98  00A0               	movwf	DebugAlert@delay_high
 12773  0E99  3000               	movlw	0
 12774  0E9A  00A1               	movwf	DebugAlert@delay_high+1
 12775  0E9B  30C8               	movlw	200
 12776  0E9C  00A2               	movwf	DebugAlert@delay_low
 12777  0E9D  3000               	movlw	0
 12778  0E9E  00A3               	movwf	DebugAlert@delay_low+1
 12779  0E9F  3003               	movlw	3
 12780  0EA0  0141               	movlb	1	; select bank1
 12781  0EA1  00C8               	movwf	??_BME280_Init^(0+128)
 12782  0EA2  0848               	movf	??_BME280_Init^(0+128),w
 12783  0EA3  0140               	movlb	0	; select bank0
 12784  0EA4  00A4               	movwf	DebugAlert@num_flashes
 12785  0EA5  3195  255A         	fcall	_DebugAlert
 12786  0EA7  0008               	return
 12787  0EA8                     __end_of_BME280_Init:	
 12788                           
 12789                           	psect	text46
 12790  0F8A                     __ptext46:	
 12791 ;; *************** function _bme280_set_sensor_settings *****************
 12792 ;; Defined at:
 12793 ;;		line 511 in file "BME280_driver/bme280.c"
 12794 ;; Parameters:    Size  Location     Type
 12795 ;;  desired_sett    1    wreg     unsigned char 
 12796 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 12797 ;;		 -> EnvSensor(51), 
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;  desired_sett    1   11[BANK1 ] unsigned char 
 12800 ;;  rslt            1   13[BANK1 ] char 
 12801 ;;  sensor_mode     1   12[BANK1 ] unsigned char 
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  1    wreg      char 
 12804 ;; Registers used:
 12805 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12806 ;; Tracked objects:
 12807 ;;		On entry : 0/0
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12811 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12812 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12813 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12814 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12815 ;;Total ram usage:        6 bytes
 12816 ;; Hardware stack levels used:    1
 12817 ;; Hardware stack levels required when called:   15
 12818 ;; This function calls:
 12819 ;;		_are_settings_changed
 12820 ;;		_bme280_get_sensor_mode
 12821 ;;		_null_ptr_check
 12822 ;;		_put_device_to_sleep
 12823 ;;		_set_filter_standby_settings
 12824 ;;		_set_osr_settings
 12825 ;; This function is called by:
 12826 ;;		_BME280_Init
 12827 ;; This function uses a non-reentrant model
 12828 ;;
 12829                           
 12830                           
 12831                           ;psect for function _bme280_set_sensor_settings
 12832  0F8A                     _bme280_set_sensor_settings:	
 12833                           
 12834                           ;incstack = 0
 12835 ;; hardware stack exceeded
 12836                           ; Regs used in _bme280_set_sensor_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12837                           ;bme280_set_sensor_settings@desired_settings stored from wreg
 12838  0F8A  0141               	movlb	1	; select bank1
 12839  0F8B  00C5               	movwf	bme280_set_sensor_settings@desired_settings^(0+128)
 12840                           
 12841                           ;BME280_driver/bme280.c: 511: int8_t bme280_set_sensor_settings(uint8_t desired_settings
      +                          , const struct bme280_dev *dev);BME280_driver/bme280.c: 512: {;BME280_driver/bme280.c: 5
      +                          13:     int8_t rslt;;BME280_driver/bme280.c: 514:     uint8_t sensor_mode;;BME280_driver
      +                          /bme280.c: 517:     rslt = null_ptr_check(dev);
 12842  0F8C  0140               	movlb	0	; select bank0
 12843  0F8D  086C               	movf	bme280_set_sensor_settings@dev,w
 12844  0F8E  3194  244B  318F   	fcall	_null_ptr_check
 12845  0F91  0140               	movlb	0	; select bank0
 12846  0F92  00ED               	movwf	??_bme280_set_sensor_settings
 12847  0F93  086D               	movf	??_bme280_set_sensor_settings,w
 12848  0F94  0141               	movlb	1	; select bank1
 12849  0F95  00C7               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 12850                           
 12851                           ;BME280_driver/bme280.c: 520:     if (rslt == 0)
 12852  0F96  0847               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 12853  0F97  1D03               	btfss	3,2
 12854  0F98  2FFD               	goto	l5442
 12855                           
 12856                           ;BME280_driver/bme280.c: 521:     {;BME280_driver/bme280.c: 522:         rslt = bme280_g
      +                          et_sensor_mode(&sensor_mode, dev);
 12857  0F99  0140               	movlb	0	; select bank0
 12858  0F9A  086C               	movf	bme280_set_sensor_settings@dev,w
 12859  0F9B  00ED               	movwf	??_bme280_set_sensor_settings
 12860  0F9C  086D               	movf	??_bme280_set_sensor_settings,w
 12861  0F9D  00C0               	movwf	bme280_get_sensor_mode@dev
 12862  0F9E  30C6               	movlw	(low (bme280_set_sensor_settings@sensor_mode| 0))& (0+255)
 12863  0F9F  3196  265E  318F   	fcall	_bme280_get_sensor_mode
 12864  0FA2  0140               	movlb	0	; select bank0
 12865  0FA3  00EE               	movwf	??_bme280_set_sensor_settings+1
 12866  0FA4  086E               	movf	??_bme280_set_sensor_settings+1,w
 12867  0FA5  0141               	movlb	1	; select bank1
 12868  0FA6  00C7               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 12869                           
 12870                           ;BME280_driver/bme280.c: 523:         if ((rslt == 0) && (sensor_mode != 0x00))
 12871  0FA7  0847               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 12872  0FA8  1D03               	btfss	3,2
 12873  0FA9  2FB7               	goto	l5430
 12874  0FAA  0846               	movf	bme280_set_sensor_settings@sensor_mode^(0+128),w
 12875  0FAB  1903               	btfsc	3,2
 12876  0FAC  2FB7               	goto	l5430
 12877                           
 12878                           ;BME280_driver/bme280.c: 524:         {;BME280_driver/bme280.c: 525:             rslt = 
      +                          put_device_to_sleep(dev);
 12879  0FAD  0140               	movlb	0	; select bank0
 12880  0FAE  086C               	movf	bme280_set_sensor_settings@dev,w
 12881  0FAF  3188  2088  318F   	fcall	_put_device_to_sleep
 12882  0FB2  0140               	movlb	0	; select bank0
 12883  0FB3  00ED               	movwf	??_bme280_set_sensor_settings
 12884  0FB4  086D               	movf	??_bme280_set_sensor_settings,w
 12885  0FB5  0141               	movlb	1	; select bank1
 12886  0FB6  00C7               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 12887  0FB7                     l5430:	
 12888                           
 12889                           ;BME280_driver/bme280.c: 527:         if (rslt == 0)
 12890  0FB7  0847               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 12891  0FB8  1D03               	btfss	3,2
 12892  0FB9  2FFD               	goto	l5442
 12893                           
 12894                           ;BME280_driver/bme280.c: 528:         {;BME280_driver/bme280.c: 532:             if (are
      +                          _settings_changed(0x07, desired_settings))
 12895  0FBA  0845               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 12896  0FBB  0140               	movlb	0	; select bank0
 12897  0FBC  00ED               	movwf	??_bme280_set_sensor_settings
 12898  0FBD  086D               	movf	??_bme280_set_sensor_settings,w
 12899  0FBE  00F0               	movwf	are_settings_changed@desired_settings
 12900  0FBF  3007               	movlw	7
 12901  0FC0  3188  2000  318F   	fcall	_are_settings_changed
 12902  0FC3  3A00               	xorlw	0
 12903  0FC4  1903               	skipnz
 12904  0FC5  2FDA               	goto	l5436
 12905                           
 12906                           ;BME280_driver/bme280.c: 533:             {;BME280_driver/bme280.c: 534:                
      +                           rslt = set_osr_settings(desired_settings, &dev->settings, dev);
 12907  0FC6  0140               	movlb	0	; select bank0
 12908  0FC7  086C               	movf	bme280_set_sensor_settings@dev,w
 12909  0FC8  3E2E               	addlw	46
 12910  0FC9  00DD               	movwf	set_osr_settings@settings
 12911  0FCA  3001               	movlw	1
 12912  0FCB  00DE               	movwf	set_osr_settings@settings+1
 12913  0FCC  086C               	movf	bme280_set_sensor_settings@dev,w
 12914  0FCD  00ED               	movwf	??_bme280_set_sensor_settings
 12915  0FCE  086D               	movf	??_bme280_set_sensor_settings,w
 12916  0FCF  00DF               	movwf	set_osr_settings@dev
 12917  0FD0  0141               	movlb	1	; select bank1
 12918  0FD1  0845               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 12919  0FD2  3195  2584  318F   	fcall	_set_osr_settings
 12920  0FD5  0140               	movlb	0	; select bank0
 12921  0FD6  00EE               	movwf	??_bme280_set_sensor_settings+1
 12922  0FD7  086E               	movf	??_bme280_set_sensor_settings+1,w
 12923  0FD8  0141               	movlb	1	; select bank1
 12924  0FD9  00C7               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 12925  0FDA                     l5436:	
 12926                           
 12927                           ;BME280_driver/bme280.c: 540:             if ((rslt == 0) && are_settings_changed(0x18, 
      +                          desired_settings))
 12928  0FDA  0141               	movlb	1	; select bank1
 12929  0FDB  0847               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 12930  0FDC  1D03               	btfss	3,2
 12931  0FDD  2FFD               	goto	l5442
 12932  0FDE  0845               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 12933  0FDF  0140               	movlb	0	; select bank0
 12934  0FE0  00ED               	movwf	??_bme280_set_sensor_settings
 12935  0FE1  086D               	movf	??_bme280_set_sensor_settings,w
 12936  0FE2  00F0               	movwf	are_settings_changed@desired_settings
 12937  0FE3  3018               	movlw	24
 12938  0FE4  3188  2000  318F   	fcall	_are_settings_changed
 12939  0FE7  3A00               	xorlw	0
 12940  0FE8  1903               	skipnz
 12941  0FE9  2FFD               	goto	l5442
 12942                           
 12943                           ;BME280_driver/bme280.c: 541:             {;BME280_driver/bme280.c: 542:                
      +                           rslt = set_filter_standby_settings(desired_settings, &dev->settings, dev);
 12944  0FEA  0140               	movlb	0	; select bank0
 12945  0FEB  086C               	movf	bme280_set_sensor_settings@dev,w
 12946  0FEC  3E2E               	addlw	46
 12947  0FED  00D3               	movwf	set_filter_standby_settings@settings
 12948  0FEE  3001               	movlw	1
 12949  0FEF  00D4               	movwf	set_filter_standby_settings@settings+1
 12950  0FF0  086C               	movf	bme280_set_sensor_settings@dev,w
 12951  0FF1  00ED               	movwf	??_bme280_set_sensor_settings
 12952  0FF2  086D               	movf	??_bme280_set_sensor_settings,w
 12953  0FF3  00D5               	movwf	set_filter_standby_settings@dev
 12954  0FF4  0141               	movlb	1	; select bank1
 12955  0FF5  0845               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 12956  0FF6  3189  2195         	fcall	_set_filter_standby_settings
 12957  0FF8  0140               	movlb	0	; select bank0
 12958  0FF9  00EE               	movwf	??_bme280_set_sensor_settings+1
 12959  0FFA  086E               	movf	??_bme280_set_sensor_settings+1,w
 12960  0FFB  0141               	movlb	1	; select bank1
 12961  0FFC  00C7               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 12962  0FFD                     l5442:	
 12963                           
 12964                           ;BME280_driver/bme280.c: 547:     return rslt;
 12965  0FFD  0141               	movlb	1	; select bank1
 12966  0FFE  0847               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 12967  0FFF  0008               	return
 12968  1000                     __end_of_bme280_set_sensor_settings:	
 12969                           
 12970                           	psect	text47
 12971  0800                     __ptext47:	
 12972 ;; *************** function _are_settings_changed *****************
 12973 ;; Defined at:
 12974 ;;		line 1404 in file "BME280_driver/bme280.c"
 12975 ;; Parameters:    Size  Location     Type
 12976 ;;  sub_settings    1    wreg     unsigned char 
 12977 ;;  desired_sett    1    0[COMMON] unsigned char 
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;  sub_settings    1    1[COMMON] unsigned char 
 12980 ;;  settings_cha    1    2[COMMON] unsigned char 
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  1    wreg      unsigned char 
 12983 ;; Registers used:
 12984 ;;		wreg, status,2, status,0
 12985 ;; Tracked objects:
 12986 ;;		On entry : 0/0
 12987 ;;		On exit  : 0/0
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12993 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12994 ;;Total ram usage:        3 bytes
 12995 ;; Hardware stack levels used:    1
 12996 ;; Hardware stack levels required when called:    3
 12997 ;; This function calls:
 12998 ;;		Nothing
 12999 ;; This function is called by:
 13000 ;;		_bme280_set_sensor_settings
 13001 ;; This function uses a non-reentrant model
 13002 ;;
 13003                           
 13004                           
 13005                           ;psect for function _are_settings_changed
 13006  0800                     _are_settings_changed:	
 13007                           
 13008                           ;incstack = 0
 13009                           ; Regs used in _are_settings_changed: [wreg+status,2+status,0]
 13010                           ;are_settings_changed@sub_settings stored from wreg
 13011  0800  00F1               	movwf	are_settings_changed@sub_settings
 13012                           
 13013                           ;BME280_driver/bme280.c: 1408:     if (sub_settings & desired_settings)
 13014  0801  0871               	movf	are_settings_changed@sub_settings,w
 13015  0802  0570               	andwf	are_settings_changed@desired_settings,w
 13016  0803  1903               	btfsc	3,2
 13017  0804  2808               	goto	l5234
 13018                           
 13019                           ;BME280_driver/bme280.c: 1409:     {;BME280_driver/bme280.c: 1411:         settings_chan
      +                          ged = 1;
 13020  0805  01F2               	clrf	are_settings_changed@settings_changed
 13021  0806  0AF2               	incf	are_settings_changed@settings_changed,f
 13022                           
 13023                           ;BME280_driver/bme280.c: 1412:     }
 13024  0807  2809               	goto	l5236
 13025  0808                     l5234:	
 13026                           
 13027                           ;BME280_driver/bme280.c: 1414:     {;BME280_driver/bme280.c: 1416:         settings_chan
      +                          ged = 0;
 13028  0808  01F2               	clrf	are_settings_changed@settings_changed
 13029  0809                     l5236:	
 13030                           
 13031                           ;BME280_driver/bme280.c: 1419:     return settings_changed;
 13032  0809  0872               	movf	are_settings_changed@settings_changed,w
 13033  080A  0008               	return
 13034  080B                     __end_of_are_settings_changed:	
 13035                           
 13036                           	psect	text48
 13037  0848                     __ptext48:	
 13038 ;; *************** function _bme280_set_sensor_mode *****************
 13039 ;; Defined at:
 13040 ;;		line 578 in file "BME280_driver/bme280.c"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  sensor_mode     1    wreg     unsigned char 
 13043 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 13044 ;;		 -> EnvSensor(51), 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  sensor_mode     1   11[BANK1 ] unsigned char 
 13047 ;;  rslt            1   13[BANK1 ] char 
 13048 ;;  last_set_mod    1   12[BANK1 ] unsigned char 
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      char 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13058 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13059 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13060 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13061 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13062 ;;Total ram usage:        6 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:   15
 13065 ;; This function calls:
 13066 ;;		_bme280_get_sensor_mode
 13067 ;;		_null_ptr_check
 13068 ;;		_put_device_to_sleep
 13069 ;;		_write_power_mode
 13070 ;; This function is called by:
 13071 ;;		_BME280_Init
 13072 ;; This function uses a non-reentrant model
 13073 ;;
 13074                           
 13075                           
 13076                           ;psect for function _bme280_set_sensor_mode
 13077  0848                     _bme280_set_sensor_mode:	
 13078                           
 13079                           ;incstack = 0
 13080 ;; hardware stack exceeded
 13081                           ; Regs used in _bme280_set_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13082                           ;bme280_set_sensor_mode@sensor_mode stored from wreg
 13083  0848  0141               	movlb	1	; select bank1
 13084  0849  00C5               	movwf	bme280_set_sensor_mode@sensor_mode^(0+128)
 13085                           
 13086                           ;BME280_driver/bme280.c: 578: int8_t bme280_set_sensor_mode(uint8_t sensor_mode, const s
      +                          truct bme280_dev *dev);BME280_driver/bme280.c: 579: {;BME280_driver/bme280.c: 580:     i
      +                          nt8_t rslt;;BME280_driver/bme280.c: 581:     uint8_t last_set_mode;;BME280_driver/bme280
      +                          .c: 584:     rslt = null_ptr_check(dev);
 13087  084A  0140               	movlb	0	; select bank0
 13088  084B  086C               	movf	bme280_set_sensor_mode@dev,w
 13089  084C  3194  244B  3188   	fcall	_null_ptr_check
 13090  084F  0140               	movlb	0	; select bank0
 13091  0850  00ED               	movwf	??_bme280_set_sensor_mode
 13092  0851  086D               	movf	??_bme280_set_sensor_mode,w
 13093  0852  0141               	movlb	1	; select bank1
 13094  0853  00C7               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 13095                           
 13096                           ;BME280_driver/bme280.c: 585:     if (rslt == 0)
 13097  0854  0847               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 13098  0855  1D03               	btfss	3,2
 13099  0856  2886               	goto	l5462
 13100                           
 13101                           ;BME280_driver/bme280.c: 586:     {;BME280_driver/bme280.c: 587:         rslt = bme280_g
      +                          et_sensor_mode(&last_set_mode, dev);
 13102  0857  0140               	movlb	0	; select bank0
 13103  0858  086C               	movf	bme280_set_sensor_mode@dev,w
 13104  0859  00ED               	movwf	??_bme280_set_sensor_mode
 13105  085A  086D               	movf	??_bme280_set_sensor_mode,w
 13106  085B  00C0               	movwf	bme280_get_sensor_mode@dev
 13107  085C  30C6               	movlw	(low (bme280_set_sensor_mode@last_set_mode| 0))& (0+255)
 13108  085D  3196  265E  3188   	fcall	_bme280_get_sensor_mode
 13109  0860  0140               	movlb	0	; select bank0
 13110  0861  00EE               	movwf	??_bme280_set_sensor_mode+1
 13111  0862  086E               	movf	??_bme280_set_sensor_mode+1,w
 13112  0863  0141               	movlb	1	; select bank1
 13113  0864  00C7               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 13114                           
 13115                           ;BME280_driver/bme280.c: 592:         if ((rslt == 0) && (last_set_mode != 0x00))
 13116  0865  0847               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 13117  0866  1D03               	btfss	3,2
 13118  0867  2875               	goto	l5458
 13119  0868  0846               	movf	bme280_set_sensor_mode@last_set_mode^(0+128),w
 13120  0869  1903               	btfsc	3,2
 13121  086A  2875               	goto	l5458
 13122                           
 13123                           ;BME280_driver/bme280.c: 593:         {;BME280_driver/bme280.c: 594:             rslt = 
      +                          put_device_to_sleep(dev);
 13124  086B  0140               	movlb	0	; select bank0
 13125  086C  086C               	movf	bme280_set_sensor_mode@dev,w
 13126  086D  3188  2088  3188   	fcall	_put_device_to_sleep
 13127  0870  0140               	movlb	0	; select bank0
 13128  0871  00ED               	movwf	??_bme280_set_sensor_mode
 13129  0872  086D               	movf	??_bme280_set_sensor_mode,w
 13130  0873  0141               	movlb	1	; select bank1
 13131  0874  00C7               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 13132  0875                     l5458:	
 13133                           
 13134                           ;BME280_driver/bme280.c: 598:         if (rslt == 0)
 13135  0875  0847               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 13136  0876  1D03               	btfss	3,2
 13137  0877  2886               	goto	l5462
 13138                           
 13139                           ;BME280_driver/bme280.c: 599:         {;BME280_driver/bme280.c: 600:             rslt = 
      +                          write_power_mode(sensor_mode, dev);
 13140  0878  0140               	movlb	0	; select bank0
 13141  0879  086C               	movf	bme280_set_sensor_mode@dev,w
 13142  087A  00ED               	movwf	??_bme280_set_sensor_mode
 13143  087B  086D               	movf	??_bme280_set_sensor_mode,w
 13144  087C  00D3               	movwf	write_power_mode@dev
 13145  087D  0141               	movlb	1	; select bank1
 13146  087E  0845               	movf	bme280_set_sensor_mode@sensor_mode^(0+128),w
 13147  087F  3197  274E         	fcall	_write_power_mode
 13148  0881  0140               	movlb	0	; select bank0
 13149  0882  00EE               	movwf	??_bme280_set_sensor_mode+1
 13150  0883  086E               	movf	??_bme280_set_sensor_mode+1,w
 13151  0884  0141               	movlb	1	; select bank1
 13152  0885  00C7               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 13153  0886                     l5462:	
 13154                           
 13155                           ;BME280_driver/bme280.c: 604:     return rslt;
 13156  0886  0847               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 13157  0887  0008               	return
 13158  0888                     __end_of_bme280_set_sensor_mode:	
 13159                           
 13160                           	psect	text49
 13161  174E                     __ptext49:	
 13162 ;; *************** function _write_power_mode *****************
 13163 ;; Defined at:
 13164 ;;		line 941 in file "BME280_driver/bme280.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  sensor_mode     1    wreg     unsigned char 
 13167 ;;  dev             1   51[BANK0 ] PTR const struct bme280_
 13168 ;;		 -> EnvSensor(51), 
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;  sensor_mode     1   55[BANK0 ] unsigned char 
 13171 ;;  sensor_mode_    1   58[BANK0 ] unsigned char 
 13172 ;;  reg_addr        1   57[BANK0 ] unsigned char 
 13173 ;;  rslt            1   56[BANK0 ] char 
 13174 ;; Return value:  Size  Location     Type
 13175 ;;                  1    wreg      char 
 13176 ;; Registers used:
 13177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13183 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13184 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13185 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13186 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13187 ;;Total ram usage:        8 bytes
 13188 ;; Hardware stack levels used:    1
 13189 ;; Hardware stack levels required when called:   11
 13190 ;; This function calls:
 13191 ;;		_bme280_get_regs
 13192 ;;		_bme280_set_regs
 13193 ;; This function is called by:
 13194 ;;		_bme280_set_sensor_mode
 13195 ;; This function uses a non-reentrant model
 13196 ;;
 13197                           
 13198                           
 13199                           ;psect for function _write_power_mode
 13200  174E                     _write_power_mode:	
 13201                           
 13202                           ;incstack = 0
 13203                           ; Regs used in _write_power_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13204                           ;write_power_mode@sensor_mode stored from wreg
 13205  174E  0140               	movlb	0	; select bank0
 13206  174F  00D7               	movwf	write_power_mode@sensor_mode
 13207                           
 13208                           ;BME280_driver/bme280.c: 941: static int8_t write_power_mode(uint8_t sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 942: {;BME280_driver/bme280.c: 943:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 944:     uint8_t reg_addr = 0xF4;
 13209  1750  30F4               	movlw	244
 13210  1751  00D4               	movwf	??_write_power_mode
 13211  1752  0854               	movf	??_write_power_mode,w
 13212  1753  00D9               	movwf	write_power_mode@reg_addr
 13213                           
 13214                           ;BME280_driver/bme280.c: 947:     uint8_t sensor_mode_reg_val;;BME280_driver/bme280.c: 9
      +                          50:     rslt = bme280_get_regs(reg_addr, &sensor_mode_reg_val, 1, dev);
 13215  1754  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 13216  1755  00D4               	movwf	??_write_power_mode
 13217  1756  0854               	movf	??_write_power_mode,w
 13218  1757  00B7               	movwf	bme280_get_regs@reg_data
 13219  1758  3001               	movlw	1
 13220  1759  00B8               	movwf	bme280_get_regs@len
 13221  175A  3000               	movlw	0
 13222  175B  00B9               	movwf	bme280_get_regs@len+1
 13223  175C  0853               	movf	write_power_mode@dev,w
 13224  175D  00D5               	movwf	??_write_power_mode+1
 13225  175E  0855               	movf	??_write_power_mode+1,w
 13226  175F  00BA               	movwf	bme280_get_regs@dev
 13227  1760  0859               	movf	write_power_mode@reg_addr,w
 13228  1761  3189  210C  3197   	fcall	_bme280_get_regs
 13229  1764  0140               	movlb	0	; select bank0
 13230  1765  00D6               	movwf	??_write_power_mode+2
 13231  1766  0856               	movf	??_write_power_mode+2,w
 13232  1767  00D8               	movwf	write_power_mode@rslt
 13233                           
 13234                           ;BME280_driver/bme280.c: 953:     if (rslt == 0)
 13235  1768  0858               	movf	write_power_mode@rslt,w
 13236  1769  1D03               	btfss	3,2
 13237  176A  2F85               	goto	l5250
 13238                           
 13239                           ;BME280_driver/bme280.c: 954:     {;BME280_driver/bme280.c: 955:         sensor_mode_reg
      +                          _val = ((sensor_mode_reg_val & ~( 0x03)) | (sensor_mode & 0x03));
 13240  176B  3003               	movlw	3
 13241  176C  0557               	andwf	write_power_mode@sensor_mode,w
 13242  176D  00D4               	movwf	??_write_power_mode
 13243  176E  085A               	movf	write_power_mode@sensor_mode_reg_val,w
 13244  176F  39FC               	andlw	252
 13245  1770  0454               	iorwf	??_write_power_mode,w
 13246  1771  00D5               	movwf	??_write_power_mode+1
 13247  1772  0855               	movf	??_write_power_mode+1,w
 13248  1773  00DA               	movwf	write_power_mode@sensor_mode_reg_val
 13249                           
 13250                           ;BME280_driver/bme280.c: 958:         rslt = bme280_set_regs(&reg_addr, &sensor_mode_reg
      +                          _val, 1, dev);
 13251  1774  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 13252  1775  00D4               	movwf	??_write_power_mode
 13253  1776  0854               	movf	??_write_power_mode,w
 13254  1777  00B4               	movwf	bme280_set_regs@reg_data
 13255  1778  01B5               	clrf	bme280_set_regs@len
 13256  1779  0AB5               	incf	bme280_set_regs@len,f
 13257  177A  0853               	movf	write_power_mode@dev,w
 13258  177B  00D5               	movwf	??_write_power_mode+1
 13259  177C  0855               	movf	??_write_power_mode+1,w
 13260  177D  00B6               	movwf	bme280_set_regs@dev
 13261  177E  3059               	movlw	(low (write_power_mode@reg_addr| 0))& (0+255)
 13262  177F  3185  25B7         	fcall	_bme280_set_regs
 13263  1781  0140               	movlb	0	; select bank0
 13264  1782  00D6               	movwf	??_write_power_mode+2
 13265  1783  0856               	movf	??_write_power_mode+2,w
 13266  1784  00D8               	movwf	write_power_mode@rslt
 13267  1785                     l5250:	
 13268                           
 13269                           ;BME280_driver/bme280.c: 961:     return rslt;
 13270  1785  0858               	movf	write_power_mode@rslt,w
 13271  1786  0008               	return
 13272  1787                     __end_of_write_power_mode:	
 13273                           
 13274                           	psect	text50
 13275  0888                     __ptext50:	
 13276 ;; *************** function _put_device_to_sleep *****************
 13277 ;; Defined at:
 13278 ;;		line 967 in file "BME280_driver/bme280.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;  dev             1    wreg     PTR const struct bme280_
 13281 ;;		 -> EnvSensor(51), 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;  dev             1    4[BANK1 ] PTR const struct bme280_
 13284 ;;		 -> EnvSensor(51), 
 13285 ;;  settings        5    6[BANK1 ] struct bme280_settings
 13286 ;;  reg_data        4    0[BANK1 ] unsigned char [4]
 13287 ;;  rslt            1    5[BANK1 ] char 
 13288 ;; Return value:  Size  Location     Type
 13289 ;;                  1    wreg      char 
 13290 ;; Registers used:
 13291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13292 ;; Tracked objects:
 13293 ;;		On entry : 0/0
 13294 ;;		On exit  : 0/0
 13295 ;;		Unchanged: 0/0
 13296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13298 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13299 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13300 ;;      Totals:         0       3      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13301 ;;Total ram usage:       14 bytes
 13302 ;; Hardware stack levels used:    1
 13303 ;; Hardware stack levels required when called:   14
 13304 ;; This function calls:
 13305 ;;		_bme280_get_regs
 13306 ;;		_bme280_soft_reset
 13307 ;;		_parse_device_settings
 13308 ;;		_reload_device_settings
 13309 ;; This function is called by:
 13310 ;;		_bme280_set_sensor_settings
 13311 ;;		_bme280_set_sensor_mode
 13312 ;; This function uses a non-reentrant model
 13313 ;;
 13314                           
 13315                           
 13316                           ;psect for function _put_device_to_sleep
 13317  0888                     _put_device_to_sleep:	
 13318                           
 13319                           ;incstack = 0
 13320 ;; hardware stack exceeded
 13321                           ; Regs used in _put_device_to_sleep: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13322                           ;put_device_to_sleep@dev stored from wreg
 13323  0888  0141               	movlb	1	; select bank1
 13324  0889  00BE               	movwf	put_device_to_sleep@dev^(0+128)
 13325                           
 13326                           ;BME280_driver/bme280.c: 967: static int8_t put_device_to_sleep(const struct bme280_dev 
      +                          *dev);BME280_driver/bme280.c: 968: {;BME280_driver/bme280.c: 969:     int8_t rslt;;BME28
      +                          0_driver/bme280.c: 970:     uint8_t reg_data[4];;BME280_driver/bme280.c: 971:     struct
      +                           bme280_settings settings;;BME280_driver/bme280.c: 973:     rslt = bme280_get_regs(0xF2,
      +                           reg_data, 4, dev);
 13327  088A  30BA               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 13328  088B  0140               	movlb	0	; select bank0
 13329  088C  00E9               	movwf	??_put_device_to_sleep
 13330  088D  0869               	movf	??_put_device_to_sleep,w
 13331  088E  00B7               	movwf	bme280_get_regs@reg_data
 13332  088F  3004               	movlw	4
 13333  0890  00B8               	movwf	bme280_get_regs@len
 13334  0891  3000               	movlw	0
 13335  0892  00B9               	movwf	bme280_get_regs@len+1
 13336  0893  0141               	movlb	1	; select bank1
 13337  0894  083E               	movf	put_device_to_sleep@dev^(0+128),w
 13338  0895  0140               	movlb	0	; select bank0
 13339  0896  00EA               	movwf	??_put_device_to_sleep+1
 13340  0897  086A               	movf	??_put_device_to_sleep+1,w
 13341  0898  00BA               	movwf	bme280_get_regs@dev
 13342  0899  30F2               	movlw	242
 13343  089A  3189  210C  3188   	fcall	_bme280_get_regs
 13344  089D  0140               	movlb	0	; select bank0
 13345  089E  00EB               	movwf	??_put_device_to_sleep+2
 13346  089F  086B               	movf	??_put_device_to_sleep+2,w
 13347  08A0  0141               	movlb	1	; select bank1
 13348  08A1  00BF               	movwf	put_device_to_sleep@rslt^(0+128)
 13349                           
 13350                           ;BME280_driver/bme280.c: 974:     if (rslt == 0)
 13351  08A2  083F               	movf	put_device_to_sleep@rslt^(0+128),w
 13352  08A3  1D03               	btfss	3,2
 13353  08A4  28C8               	goto	l5224
 13354                           
 13355                           ;BME280_driver/bme280.c: 975:     {;BME280_driver/bme280.c: 976:         parse_device_se
      +                          ttings(reg_data, &settings);
 13356  08A5  30C0               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 13357  08A6  0140               	movlb	0	; select bank0
 13358  08A7  00E9               	movwf	??_put_device_to_sleep
 13359  08A8  0869               	movf	??_put_device_to_sleep,w
 13360  08A9  00F0               	movwf	parse_device_settings@settings
 13361  08AA  30BA               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 13362  08AB  318C  2452  3188   	fcall	_parse_device_settings
 13363                           
 13364                           ;BME280_driver/bme280.c: 977:         rslt = bme280_soft_reset(dev);
 13365  08AE  0141               	movlb	1	; select bank1
 13366  08AF  083E               	movf	put_device_to_sleep@dev^(0+128),w
 13367  08B0  3197  2787  3188   	fcall	_bme280_soft_reset
 13368  08B3  0140               	movlb	0	; select bank0
 13369  08B4  00E9               	movwf	??_put_device_to_sleep
 13370  08B5  0869               	movf	??_put_device_to_sleep,w
 13371  08B6  0141               	movlb	1	; select bank1
 13372  08B7  00BF               	movwf	put_device_to_sleep@rslt^(0+128)
 13373                           
 13374                           ;BME280_driver/bme280.c: 978:         if (rslt == 0)
 13375  08B8  083F               	movf	put_device_to_sleep@rslt^(0+128),w
 13376  08B9  1D03               	btfss	3,2
 13377  08BA  28C8               	goto	l5224
 13378                           
 13379                           ;BME280_driver/bme280.c: 979:         {;BME280_driver/bme280.c: 980:             rslt = 
      +                          reload_device_settings(&settings, dev);
 13380  08BB  083E               	movf	put_device_to_sleep@dev^(0+128),w
 13381  08BC  0140               	movlb	0	; select bank0
 13382  08BD  00E9               	movwf	??_put_device_to_sleep
 13383  08BE  0869               	movf	??_put_device_to_sleep,w
 13384  08BF  00E4               	movwf	reload_device_settings@dev
 13385  08C0  30C0               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 13386  08C1  3194  2495         	fcall	_reload_device_settings
 13387  08C3  0140               	movlb	0	; select bank0
 13388  08C4  00EA               	movwf	??_put_device_to_sleep+1
 13389  08C5  086A               	movf	??_put_device_to_sleep+1,w
 13390  08C6  0141               	movlb	1	; select bank1
 13391  08C7  00BF               	movwf	put_device_to_sleep@rslt^(0+128)
 13392  08C8                     l5224:	
 13393                           
 13394                           ;BME280_driver/bme280.c: 984:     return rslt;
 13395  08C8  083F               	movf	put_device_to_sleep@rslt^(0+128),w
 13396  08C9  0008               	return
 13397  08CA                     __end_of_put_device_to_sleep:	
 13398                           
 13399                           	psect	text51
 13400  1495                     __ptext51:	
 13401 ;; *************** function _reload_device_settings *****************
 13402 ;; Defined at:
 13403 ;;		line 991 in file "BME280_driver/bme280.c"
 13404 ;; Parameters:    Size  Location     Type
 13405 ;;  settings        1    wreg     PTR const struct bme280_
 13406 ;;		 -> put_device_to_sleep@settings(5), 
 13407 ;;  dev             1   68[BANK0 ] PTR const struct bme280_
 13408 ;;		 -> EnvSensor(51), 
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;  settings        1   71[BANK0 ] PTR const struct bme280_
 13411 ;;		 -> put_device_to_sleep@settings(5), 
 13412 ;;  rslt            1   72[BANK0 ] char 
 13413 ;; Return value:  Size  Location     Type
 13414 ;;                  1    wreg      char 
 13415 ;; Registers used:
 13416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13417 ;; Tracked objects:
 13418 ;;		On entry : 0/0
 13419 ;;		On exit  : 0/0
 13420 ;;		Unchanged: 0/0
 13421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13422 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13424 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13425 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13426 ;;Total ram usage:        5 bytes
 13427 ;; Hardware stack levels used:    1
 13428 ;; Hardware stack levels required when called:   13
 13429 ;; This function calls:
 13430 ;;		_set_filter_standby_settings
 13431 ;;		_set_osr_settings
 13432 ;; This function is called by:
 13433 ;;		_put_device_to_sleep
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           
 13438                           ;psect for function _reload_device_settings
 13439  1495                     _reload_device_settings:	
 13440                           
 13441                           ;incstack = 0
 13442 ;; hardware stack exceeded
 13443                           ; Regs used in _reload_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13444                           ;reload_device_settings@settings stored from wreg
 13445  1495  0140               	movlb	0	; select bank0
 13446  1496  00E7               	movwf	reload_device_settings@settings
 13447                           
 13448                           ;BME280_driver/bme280.c: 991: static int8_t reload_device_settings(const struct bme280_s
      +                          ettings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 992: {;BME280_d
      +                          river/bme280.c: 993:     int8_t rslt;;BME280_driver/bme280.c: 995:     rslt = set_osr_se
      +                          ttings(0x1F, settings, dev);
 13449  1497  0867               	movf	reload_device_settings@settings,w
 13450  1498  00DD               	movwf	set_osr_settings@settings
 13451  1499  3000               	movlw	0
 13452  149A  00DE               	movwf	set_osr_settings@settings+1
 13453  149B  0864               	movf	reload_device_settings@dev,w
 13454  149C  00E5               	movwf	??_reload_device_settings
 13455  149D  0865               	movf	??_reload_device_settings,w
 13456  149E  00DF               	movwf	set_osr_settings@dev
 13457  149F  301F               	movlw	31
 13458  14A0  3195  2584  3194   	fcall	_set_osr_settings
 13459  14A3  0140               	movlb	0	; select bank0
 13460  14A4  00E6               	movwf	??_reload_device_settings+1
 13461  14A5  0866               	movf	??_reload_device_settings+1,w
 13462  14A6  00E8               	movwf	reload_device_settings@rslt
 13463                           
 13464                           ;BME280_driver/bme280.c: 996:     if (rslt == 0)
 13465  14A7  0868               	movf	reload_device_settings@rslt,w
 13466  14A8  1D03               	btfss	3,2
 13467  14A9  2CB9               	goto	l5096
 13468                           
 13469                           ;BME280_driver/bme280.c: 997:     {;BME280_driver/bme280.c: 998:         rslt = set_filt
      +                          er_standby_settings(0x1F, settings, dev);
 13470  14AA  0867               	movf	reload_device_settings@settings,w
 13471  14AB  00D3               	movwf	set_filter_standby_settings@settings
 13472  14AC  3000               	movlw	0
 13473  14AD  00D4               	movwf	set_filter_standby_settings@settings+1
 13474  14AE  0864               	movf	reload_device_settings@dev,w
 13475  14AF  00E5               	movwf	??_reload_device_settings
 13476  14B0  0865               	movf	??_reload_device_settings,w
 13477  14B1  00D5               	movwf	set_filter_standby_settings@dev
 13478  14B2  301F               	movlw	31
 13479  14B3  3189  2195         	fcall	_set_filter_standby_settings
 13480  14B5  0140               	movlb	0	; select bank0
 13481  14B6  00E6               	movwf	??_reload_device_settings+1
 13482  14B7  0866               	movf	??_reload_device_settings+1,w
 13483  14B8  00E8               	movwf	reload_device_settings@rslt
 13484  14B9                     l5096:	
 13485                           
 13486                           ;BME280_driver/bme280.c: 1001:     return rslt;
 13487  14B9  0868               	movf	reload_device_settings@rslt,w
 13488  14BA  0008               	return
 13489  14BB                     __end_of_reload_device_settings:	
 13490                           
 13491                           	psect	text52
 13492  1584                     __ptext52:	
 13493 ;; *************** function _set_osr_settings *****************
 13494 ;; Defined at:
 13495 ;;		line 777 in file "BME280_driver/bme280.c"
 13496 ;; Parameters:    Size  Location     Type
 13497 ;;  desired_sett    1    wreg     unsigned char 
 13498 ;;  settings        2   61[BANK0 ] PTR const struct bme280_
 13499 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 13500 ;;  dev             1   63[BANK0 ] PTR const struct bme280_
 13501 ;;		 -> EnvSensor(51), 
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;  desired_sett    1   67[BANK0 ] unsigned char 
 13504 ;;  rslt            1   66[BANK0 ] char 
 13505 ;; Return value:  Size  Location     Type
 13506 ;;                  1    wreg      char 
 13507 ;; Registers used:
 13508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13509 ;; Tracked objects:
 13510 ;;		On entry : 0/0
 13511 ;;		On exit  : 0/0
 13512 ;;		Unchanged: 0/0
 13513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13514 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13517 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13518 ;;Total ram usage:        7 bytes
 13519 ;; Hardware stack levels used:    1
 13520 ;; Hardware stack levels required when called:   12
 13521 ;; This function calls:
 13522 ;;		_set_osr_humidity_settings
 13523 ;;		_set_osr_press_temp_settings
 13524 ;; This function is called by:
 13525 ;;		_bme280_set_sensor_settings
 13526 ;;		_reload_device_settings
 13527 ;; This function uses a non-reentrant model
 13528 ;;
 13529                           
 13530                           
 13531                           ;psect for function _set_osr_settings
 13532  1584                     _set_osr_settings:	
 13533                           
 13534                           ;incstack = 0
 13535                           ; Regs used in _set_osr_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13536                           ;set_osr_settings@desired_settings stored from wreg
 13537  1584  0140               	movlb	0	; select bank0
 13538  1585  00E3               	movwf	set_osr_settings@desired_settings
 13539                           
 13540                           ;BME280_driver/bme280.c: 777: static int8_t set_osr_settings(uint8_t desired_settings,;B
      +                          ME280_driver/bme280.c: 778:                                const struct bme280_settings 
      +                          *settings,;BME280_driver/bme280.c: 779:                                const struct bme2
      +                          80_dev *dev);BME280_driver/bme280.c: 780: {;BME280_driver/bme280.c: 781:     int8_t rslt
      +                           = 1;
 13541  1586  01E2               	clrf	set_osr_settings@rslt
 13542  1587  0AE2               	incf	set_osr_settings@rslt,f
 13543                           
 13544                           ;BME280_driver/bme280.c: 783:     if (desired_settings & 1 << 2)
 13545  1588  1D63               	btfss	set_osr_settings@desired_settings,2
 13546  1589  2D99               	goto	l5040
 13547                           
 13548                           ;BME280_driver/bme280.c: 784:     {;BME280_driver/bme280.c: 785:         rslt = set_osr_
      +                          humidity_settings(settings, dev);
 13549  158A  085E               	movf	set_osr_settings@settings+1,w
 13550  158B  00D4               	movwf	set_osr_humidity_settings@settings+1
 13551  158C  085D               	movf	set_osr_settings@settings,w
 13552  158D  00D3               	movwf	set_osr_humidity_settings@settings
 13553  158E  085F               	movf	set_osr_settings@dev,w
 13554  158F  00E0               	movwf	??_set_osr_settings
 13555  1590  0860               	movf	??_set_osr_settings,w
 13556  1591  00D5               	movwf	set_osr_humidity_settings@dev
 13557  1592  318B  235C  3195   	fcall	_set_osr_humidity_settings
 13558  1595  0140               	movlb	0	; select bank0
 13559  1596  00E1               	movwf	??_set_osr_settings+1
 13560  1597  0861               	movf	??_set_osr_settings+1,w
 13561  1598  00E2               	movwf	set_osr_settings@rslt
 13562  1599                     l5040:	
 13563                           
 13564                           ;BME280_driver/bme280.c: 787:     if (desired_settings & (1 | 1 << 1))
 13565  1599  0863               	movf	set_osr_settings@desired_settings,w
 13566  159A  3903               	andlw	3
 13567  159B  1903               	btfsc	3,2
 13568  159C  2DAC               	goto	l5044
 13569                           
 13570                           ;BME280_driver/bme280.c: 788:     {;BME280_driver/bme280.c: 789:         rslt = set_osr_
      +                          press_temp_settings(desired_settings, settings, dev);
 13571  159D  085E               	movf	set_osr_settings@settings+1,w
 13572  159E  00D4               	movwf	set_osr_press_temp_settings@settings+1
 13573  159F  085D               	movf	set_osr_settings@settings,w
 13574  15A0  00D3               	movwf	set_osr_press_temp_settings@settings
 13575  15A1  085F               	movf	set_osr_settings@dev,w
 13576  15A2  00E0               	movwf	??_set_osr_settings
 13577  15A3  0860               	movf	??_set_osr_settings,w
 13578  15A4  00D5               	movwf	set_osr_press_temp_settings@dev
 13579  15A5  0863               	movf	set_osr_settings@desired_settings,w
 13580  15A6  3189  21DB         	fcall	_set_osr_press_temp_settings
 13581  15A8  0140               	movlb	0	; select bank0
 13582  15A9  00E1               	movwf	??_set_osr_settings+1
 13583  15AA  0861               	movf	??_set_osr_settings+1,w
 13584  15AB  00E2               	movwf	set_osr_settings@rslt
 13585  15AC                     l5044:	
 13586                           
 13587                           ;BME280_driver/bme280.c: 792:     return rslt;
 13588  15AC  0862               	movf	set_osr_settings@rslt,w
 13589  15AD  0008               	return
 13590  15AE                     __end_of_set_osr_settings:	
 13591                           
 13592                           	psect	text53
 13593  09DB                     __ptext53:	
 13594 ;; *************** function _set_osr_press_temp_settings *****************
 13595 ;; Defined at:
 13596 ;;		line 830 in file "BME280_driver/bme280.c"
 13597 ;; Parameters:    Size  Location     Type
 13598 ;;  desired_sett    1    wreg     unsigned char 
 13599 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 13600 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 13601 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 13602 ;;		 -> EnvSensor(51), 
 13603 ;; Auto vars:     Size  Location     Type
 13604 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 13605 ;;  reg_data        1   60[BANK0 ] unsigned char 
 13606 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 13607 ;;  rslt            1   58[BANK0 ] char 
 13608 ;; Return value:  Size  Location     Type
 13609 ;;                  1    wreg      char 
 13610 ;; Registers used:
 13611 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13612 ;; Tracked objects:
 13613 ;;		On entry : 0/0
 13614 ;;		On exit  : 0/0
 13615 ;;		Unchanged: 0/0
 13616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13617 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13618 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13619 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13620 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13621 ;;Total ram usage:       10 bytes
 13622 ;; Hardware stack levels used:    1
 13623 ;; Hardware stack levels required when called:   11
 13624 ;; This function calls:
 13625 ;;		_bme280_get_regs
 13626 ;;		_bme280_set_regs
 13627 ;;		_fill_osr_press_settings
 13628 ;;		_fill_osr_temp_settings
 13629 ;; This function is called by:
 13630 ;;		_set_osr_settings
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           
 13635                           ;psect for function _set_osr_press_temp_settings
 13636  09DB                     _set_osr_press_temp_settings:	
 13637                           
 13638                           ;incstack = 0
 13639                           ; Regs used in _set_osr_press_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13640                           ;set_osr_press_temp_settings@desired_settings stored from wreg
 13641  09DB  0140               	movlb	0	; select bank0
 13642  09DC  00D9               	movwf	set_osr_press_temp_settings@desired_settings
 13643                           
 13644                           ;BME280_driver/bme280.c: 830: static int8_t set_osr_press_temp_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 831:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 832:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 833: {;BME280_driv
      +                          er/bme280.c: 834:     int8_t rslt;;BME280_driver/bme280.c: 835:     uint8_t reg_addr = 0
      +                          xF4;
 13645  09DD  30F4               	movlw	244
 13646  09DE  00D6               	movwf	??_set_osr_press_temp_settings
 13647  09DF  0856               	movf	??_set_osr_press_temp_settings,w
 13648  09E0  00DB               	movwf	set_osr_press_temp_settings@reg_addr
 13649                           
 13650                           ;BME280_driver/bme280.c: 836:     uint8_t reg_data;;BME280_driver/bme280.c: 838:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 13651  09E1  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 13652  09E2  00D6               	movwf	??_set_osr_press_temp_settings
 13653  09E3  0856               	movf	??_set_osr_press_temp_settings,w
 13654  09E4  00B7               	movwf	bme280_get_regs@reg_data
 13655  09E5  3001               	movlw	1
 13656  09E6  00B8               	movwf	bme280_get_regs@len
 13657  09E7  3000               	movlw	0
 13658  09E8  00B9               	movwf	bme280_get_regs@len+1
 13659  09E9  0855               	movf	set_osr_press_temp_settings@dev,w
 13660  09EA  00D7               	movwf	??_set_osr_press_temp_settings+1
 13661  09EB  0857               	movf	??_set_osr_press_temp_settings+1,w
 13662  09EC  00BA               	movwf	bme280_get_regs@dev
 13663  09ED  085B               	movf	set_osr_press_temp_settings@reg_addr,w
 13664  09EE  3189  210C  3189   	fcall	_bme280_get_regs
 13665  09F1  0140               	movlb	0	; select bank0
 13666  09F2  00D8               	movwf	??_set_osr_press_temp_settings+2
 13667  09F3  0858               	movf	??_set_osr_press_temp_settings+2,w
 13668  09F4  00DA               	movwf	set_osr_press_temp_settings@rslt
 13669                           
 13670                           ;BME280_driver/bme280.c: 839:     if (rslt == 0)
 13671  09F5  085A               	movf	set_osr_press_temp_settings@rslt,w
 13672  09F6  1D03               	btfss	3,2
 13673  09F7  2A1F               	goto	l5026
 13674                           
 13675                           ;BME280_driver/bme280.c: 840:     {;BME280_driver/bme280.c: 841:         if (desired_set
      +                          tings & 1)
 13676  09F8  1C59               	btfss	set_osr_press_temp_settings@desired_settings,0
 13677  09F9  2A02               	goto	l5022
 13678                           
 13679                           ;BME280_driver/bme280.c: 842:         {;BME280_driver/bme280.c: 843:             fill_os
      +                          r_press_settings(&reg_data, settings);
 13680  09FA  0854               	movf	set_osr_press_temp_settings@settings+1,w
 13681  09FB  00F1               	movwf	fill_osr_press_settings@settings+1
 13682  09FC  0853               	movf	set_osr_press_temp_settings@settings,w
 13683  09FD  00F0               	movwf	fill_osr_press_settings@settings
 13684  09FE  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 13685  09FF  3193  2365  3189   	fcall	_fill_osr_press_settings
 13686  0A02                     l5022:	
 13687                           
 13688                           ;BME280_driver/bme280.c: 845:         if (desired_settings & 1 << 1)
 13689  0A02  0140               	movlb	0	; select bank0
 13690  0A03  1CD9               	btfss	set_osr_press_temp_settings@desired_settings,1
 13691  0A04  2A0D               	goto	l146
 13692                           
 13693                           ;BME280_driver/bme280.c: 846:         {;BME280_driver/bme280.c: 847:             fill_os
      +                          r_temp_settings(&reg_data, settings);
 13694  0A05  0854               	movf	set_osr_press_temp_settings@settings+1,w
 13695  0A06  00F1               	movwf	fill_osr_temp_settings@settings+1
 13696  0A07  0853               	movf	set_osr_press_temp_settings@settings,w
 13697  0A08  00F0               	movwf	fill_osr_temp_settings@settings
 13698  0A09  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 13699  0A0A  3193  23B8  3189   	fcall	_fill_osr_temp_settings
 13700  0A0D                     l146:	
 13701                           ;BME280_driver/bme280.c: 848:         }
 13702                           
 13703                           
 13704                           ;BME280_driver/bme280.c: 851:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 13705  0A0D  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 13706  0A0E  0140               	movlb	0	; select bank0
 13707  0A0F  00D6               	movwf	??_set_osr_press_temp_settings
 13708  0A10  0856               	movf	??_set_osr_press_temp_settings,w
 13709  0A11  00B4               	movwf	bme280_set_regs@reg_data
 13710  0A12  01B5               	clrf	bme280_set_regs@len
 13711  0A13  0AB5               	incf	bme280_set_regs@len,f
 13712  0A14  0855               	movf	set_osr_press_temp_settings@dev,w
 13713  0A15  00D7               	movwf	??_set_osr_press_temp_settings+1
 13714  0A16  0857               	movf	??_set_osr_press_temp_settings+1,w
 13715  0A17  00B6               	movwf	bme280_set_regs@dev
 13716  0A18  305B               	movlw	(low (set_osr_press_temp_settings@reg_addr| 0))& (0+255)
 13717  0A19  3185  25B7         	fcall	_bme280_set_regs
 13718  0A1B  0140               	movlb	0	; select bank0
 13719  0A1C  00D8               	movwf	??_set_osr_press_temp_settings+2
 13720  0A1D  0858               	movf	??_set_osr_press_temp_settings+2,w
 13721  0A1E  00DA               	movwf	set_osr_press_temp_settings@rslt
 13722  0A1F                     l5026:	
 13723                           
 13724                           ;BME280_driver/bme280.c: 854:     return rslt;
 13725  0A1F  085A               	movf	set_osr_press_temp_settings@rslt,w
 13726  0A20  0008               	return
 13727  0A21                     __end_of_set_osr_press_temp_settings:	
 13728                           
 13729                           	psect	text54
 13730  13B8                     __ptext54:	
 13731 ;; *************** function _fill_osr_temp_settings *****************
 13732 ;; Defined at:
 13733 ;;		line 919 in file "BME280_driver/bme280.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  reg_data        1    wreg     PTR unsigned char 
 13736 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 13737 ;;  settings        2    0[COMMON] PTR const struct bme280_
 13738 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 13739 ;; Auto vars:     Size  Location     Type
 13740 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 13741 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 13742 ;; Return value:  Size  Location     Type
 13743 ;;                  1    wreg      void 
 13744 ;; Registers used:
 13745 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13746 ;; Tracked objects:
 13747 ;;		On entry : 0/0
 13748 ;;		On exit  : 0/0
 13749 ;;		Unchanged: 0/0
 13750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13753 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13754 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13755 ;;Total ram usage:        6 bytes
 13756 ;; Hardware stack levels used:    1
 13757 ;; Hardware stack levels required when called:    3
 13758 ;; This function calls:
 13759 ;;		Nothing
 13760 ;; This function is called by:
 13761 ;;		_set_osr_press_temp_settings
 13762 ;; This function uses a non-reentrant model
 13763 ;;
 13764                           
 13765                           
 13766                           ;psect for function _fill_osr_temp_settings
 13767  13B8                     _fill_osr_temp_settings:	
 13768                           
 13769                           ;incstack = 0
 13770                           ; Regs used in _fill_osr_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 13771                           ;fill_osr_temp_settings@reg_data stored from wreg
 13772  13B8  00F5               	movwf	fill_osr_temp_settings@reg_data
 13773                           
 13774                           ;BME280_driver/bme280.c: 919: static void fill_osr_temp_settings(uint8_t *reg_data, cons
      +                          t struct bme280_settings *settings);BME280_driver/bme280.c: 920: {;BME280_driver/bme280.
      +                          c: 921:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->osr_t << 0x05) & 0xE0));
 13775  13B9  0870               	movf	fill_osr_temp_settings@settings,w
 13776  13BA  0086               	movwf	6
 13777  13BB  0871               	movf	fill_osr_temp_settings@settings+1,w
 13778  13BC  0087               	movwf	7
 13779  13BD  3141               	addfsr 1,1
 13780  13BE  0801               	movf	1,w
 13781  13BF  00F2               	movwf	??_fill_osr_temp_settings
 13782  13C0  3005               	movlw	5
 13783  13C1                     u4785:	
 13784  13C1  35F2               	lslf	??_fill_osr_temp_settings,f
 13785  13C2  0B89               	decfsz	9,f
 13786  13C3  2BC1               	goto	u4785
 13787  13C4  30E0               	movlw	224
 13788  13C5  0572               	andwf	??_fill_osr_temp_settings,w
 13789  13C6  00F3               	movwf	??_fill_osr_temp_settings+1
 13790  13C7  0875               	movf	fill_osr_temp_settings@reg_data,w
 13791  13C8  0086               	movwf	6
 13792  13C9  0187               	clrf	7
 13793  13CA  0801               	movf	1,w
 13794  13CB  391F               	andlw	31
 13795  13CC  0473               	iorwf	??_fill_osr_temp_settings+1,w
 13796  13CD  00F4               	movwf	??_fill_osr_temp_settings+2
 13797  13CE  0875               	movf	fill_osr_temp_settings@reg_data,w
 13798  13CF  0086               	movwf	6
 13799  13D0  0187               	clrf	7
 13800  13D1  0874               	movf	??_fill_osr_temp_settings+2,w
 13801  13D2  0081               	movwf	1
 13802  13D3  0008               	return
 13803  13D4                     __end_of_fill_osr_temp_settings:	
 13804                           
 13805                           	psect	text55
 13806  1365                     __ptext55:	
 13807 ;; *************** function _fill_osr_press_settings *****************
 13808 ;; Defined at:
 13809 ;;		line 910 in file "BME280_driver/bme280.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;  reg_data        1    wreg     PTR unsigned char 
 13812 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 13813 ;;  settings        2    0[COMMON] PTR const struct bme280_
 13814 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 13817 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 13818 ;; Return value:  Size  Location     Type
 13819 ;;                  1    wreg      void 
 13820 ;; Registers used:
 13821 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13822 ;; Tracked objects:
 13823 ;;		On entry : 0/0
 13824 ;;		On exit  : 0/0
 13825 ;;		Unchanged: 0/0
 13826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13829 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13830 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13831 ;;Total ram usage:        6 bytes
 13832 ;; Hardware stack levels used:    1
 13833 ;; Hardware stack levels required when called:    3
 13834 ;; This function calls:
 13835 ;;		Nothing
 13836 ;; This function is called by:
 13837 ;;		_set_osr_press_temp_settings
 13838 ;; This function uses a non-reentrant model
 13839 ;;
 13840                           
 13841                           
 13842                           ;psect for function _fill_osr_press_settings
 13843  1365                     _fill_osr_press_settings:	
 13844                           
 13845                           ;incstack = 0
 13846                           ; Regs used in _fill_osr_press_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 13847                           ;fill_osr_press_settings@reg_data stored from wreg
 13848  1365  00F5               	movwf	fill_osr_press_settings@reg_data
 13849                           
 13850                           ;BME280_driver/bme280.c: 910: static void fill_osr_press_settings(uint8_t *reg_data, con
      +                          st struct bme280_settings *settings);BME280_driver/bme280.c: 911: {;BME280_driver/bme280
      +                          .c: 912:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->osr_p << 0x02) & 0x1C));
 13851  1366  0870               	movf	fill_osr_press_settings@settings,w
 13852  1367  0086               	movwf	6
 13853  1368  0871               	movf	fill_osr_press_settings@settings+1,w
 13854  1369  0087               	movwf	7
 13855  136A  0801               	movf	1,w
 13856  136B  00F2               	movwf	??_fill_osr_press_settings
 13857  136C  3002               	movlw	2
 13858  136D                     u4775:	
 13859  136D  35F2               	lslf	??_fill_osr_press_settings,f
 13860  136E  0B89               	decfsz	9,f
 13861  136F  2B6D               	goto	u4775
 13862  1370  301C               	movlw	28
 13863  1371  0572               	andwf	??_fill_osr_press_settings,w
 13864  1372  00F3               	movwf	??_fill_osr_press_settings+1
 13865  1373  0875               	movf	fill_osr_press_settings@reg_data,w
 13866  1374  0086               	movwf	6
 13867  1375  0187               	clrf	7
 13868  1376  0801               	movf	1,w
 13869  1377  39E3               	andlw	227
 13870  1378  0473               	iorwf	??_fill_osr_press_settings+1,w
 13871  1379  00F4               	movwf	??_fill_osr_press_settings+2
 13872  137A  0875               	movf	fill_osr_press_settings@reg_data,w
 13873  137B  0086               	movwf	6
 13874  137C  0187               	clrf	7
 13875  137D  0874               	movf	??_fill_osr_press_settings+2,w
 13876  137E  0081               	movwf	1
 13877  137F  0008               	return
 13878  1380                     __end_of_fill_osr_press_settings:	
 13879                           
 13880                           	psect	text56
 13881  0B5C                     __ptext56:	
 13882 ;; *************** function _set_osr_humidity_settings *****************
 13883 ;; Defined at:
 13884 ;;		line 798 in file "BME280_driver/bme280.c"
 13885 ;; Parameters:    Size  Location     Type
 13886 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 13887 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 13888 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 13889 ;;		 -> EnvSensor(51), 
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;  reg_addr        1   60[BANK0 ] unsigned char 
 13892 ;;  rslt            1   59[BANK0 ] char 
 13893 ;;  ctrl_meas       1   58[BANK0 ] unsigned char 
 13894 ;;  ctrl_hum        1   57[BANK0 ] unsigned char 
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      char 
 13897 ;; Registers used:
 13898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13904 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13905 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13906 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13907 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13908 ;;Total ram usage:       10 bytes
 13909 ;; Hardware stack levels used:    1
 13910 ;; Hardware stack levels required when called:   11
 13911 ;; This function calls:
 13912 ;;		_bme280_get_regs
 13913 ;;		_bme280_set_regs
 13914 ;; This function is called by:
 13915 ;;		_set_osr_settings
 13916 ;; This function uses a non-reentrant model
 13917 ;;
 13918                           
 13919                           
 13920                           ;psect for function _set_osr_humidity_settings
 13921  0B5C                     _set_osr_humidity_settings:	
 13922                           
 13923                           ;BME280_driver/bme280.c: 798: static int8_t set_osr_humidity_settings(const struct bme28
      +                          0_settings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 799: {;BME28
      +                          0_driver/bme280.c: 800:     int8_t rslt;;BME280_driver/bme280.c: 801:     uint8_t ctrl_h
      +                          um;;BME280_driver/bme280.c: 802:     uint8_t ctrl_meas;;BME280_driver/bme280.c: 803:    
      +                           uint8_t reg_addr = 0xF2;
 13924                           
 13925                           ;incstack = 0
 13926                           ; Regs used in _set_osr_humidity_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 13927  0B5C  30F2               	movlw	242
 13928  0B5D  0140               	movlb	0	; select bank0
 13929  0B5E  00D6               	movwf	??_set_osr_humidity_settings
 13930  0B5F  0856               	movf	??_set_osr_humidity_settings,w
 13931  0B60  00DC               	movwf	set_osr_humidity_settings@reg_addr
 13932                           
 13933                           ;BME280_driver/bme280.c: 805:     ctrl_hum = settings->osr_h & 0x07;
 13934  0B61  0853               	movf	set_osr_humidity_settings@settings,w
 13935  0B62  0086               	movwf	6
 13936  0B63  0854               	movf	set_osr_humidity_settings@settings+1,w
 13937  0B64  0087               	movwf	7
 13938  0B65  3142               	addfsr 1,2
 13939  0B66  0801               	movf	1,w
 13940  0B67  3907               	andlw	7
 13941  0B68  00D6               	movwf	??_set_osr_humidity_settings
 13942  0B69  0856               	movf	??_set_osr_humidity_settings,w
 13943  0B6A  00D9               	movwf	set_osr_humidity_settings@ctrl_hum
 13944                           
 13945                           ;BME280_driver/bme280.c: 808:     rslt = bme280_set_regs(&reg_addr, &ctrl_hum, 1, dev);
 13946  0B6B  3059               	movlw	(low (set_osr_humidity_settings@ctrl_hum| 0))& (0+255)
 13947  0B6C  00D6               	movwf	??_set_osr_humidity_settings
 13948  0B6D  0856               	movf	??_set_osr_humidity_settings,w
 13949  0B6E  00B4               	movwf	bme280_set_regs@reg_data
 13950  0B6F  01B5               	clrf	bme280_set_regs@len
 13951  0B70  0AB5               	incf	bme280_set_regs@len,f
 13952  0B71  0855               	movf	set_osr_humidity_settings@dev,w
 13953  0B72  00D7               	movwf	??_set_osr_humidity_settings+1
 13954  0B73  0857               	movf	??_set_osr_humidity_settings+1,w
 13955  0B74  00B6               	movwf	bme280_set_regs@dev
 13956  0B75  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 13957  0B76  3185  25B7  318B   	fcall	_bme280_set_regs
 13958  0B79  0140               	movlb	0	; select bank0
 13959  0B7A  00D8               	movwf	??_set_osr_humidity_settings+2
 13960  0B7B  0858               	movf	??_set_osr_humidity_settings+2,w
 13961  0B7C  00DB               	movwf	set_osr_humidity_settings@rslt
 13962                           
 13963                           ;BME280_driver/bme280.c: 813:     if (rslt == 0)
 13964  0B7D  085B               	movf	set_osr_humidity_settings@rslt,w
 13965  0B7E  1D03               	btfss	3,2
 13966  0B7F  2BAC               	goto	l5008
 13967                           
 13968                           ;BME280_driver/bme280.c: 814:     {;BME280_driver/bme280.c: 815:         reg_addr = 0xF4
      +                          ;
 13969  0B80  30F4               	movlw	244
 13970  0B81  00D6               	movwf	??_set_osr_humidity_settings
 13971  0B82  0856               	movf	??_set_osr_humidity_settings,w
 13972  0B83  00DC               	movwf	set_osr_humidity_settings@reg_addr
 13973                           
 13974                           ;BME280_driver/bme280.c: 816:         rslt = bme280_get_regs(reg_addr, &ctrl_meas, 1, de
      +                          v);
 13975  0B84  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 13976  0B85  00D6               	movwf	??_set_osr_humidity_settings
 13977  0B86  0856               	movf	??_set_osr_humidity_settings,w
 13978  0B87  00B7               	movwf	bme280_get_regs@reg_data
 13979  0B88  3001               	movlw	1
 13980  0B89  00B8               	movwf	bme280_get_regs@len
 13981  0B8A  3000               	movlw	0
 13982  0B8B  00B9               	movwf	bme280_get_regs@len+1
 13983  0B8C  0855               	movf	set_osr_humidity_settings@dev,w
 13984  0B8D  00D7               	movwf	??_set_osr_humidity_settings+1
 13985  0B8E  0857               	movf	??_set_osr_humidity_settings+1,w
 13986  0B8F  00BA               	movwf	bme280_get_regs@dev
 13987  0B90  085C               	movf	set_osr_humidity_settings@reg_addr,w
 13988  0B91  3189  210C  318B   	fcall	_bme280_get_regs
 13989  0B94  0140               	movlb	0	; select bank0
 13990  0B95  00D8               	movwf	??_set_osr_humidity_settings+2
 13991  0B96  0858               	movf	??_set_osr_humidity_settings+2,w
 13992  0B97  00DB               	movwf	set_osr_humidity_settings@rslt
 13993                           
 13994                           ;BME280_driver/bme280.c: 817:         if (rslt == 0)
 13995  0B98  085B               	movf	set_osr_humidity_settings@rslt,w
 13996  0B99  1D03               	btfss	3,2
 13997  0B9A  2BAC               	goto	l5008
 13998                           
 13999                           ;BME280_driver/bme280.c: 818:         {;BME280_driver/bme280.c: 819:             rslt = 
      +                          bme280_set_regs(&reg_addr, &ctrl_meas, 1, dev);
 14000  0B9B  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 14001  0B9C  00D6               	movwf	??_set_osr_humidity_settings
 14002  0B9D  0856               	movf	??_set_osr_humidity_settings,w
 14003  0B9E  00B4               	movwf	bme280_set_regs@reg_data
 14004  0B9F  01B5               	clrf	bme280_set_regs@len
 14005  0BA0  0AB5               	incf	bme280_set_regs@len,f
 14006  0BA1  0855               	movf	set_osr_humidity_settings@dev,w
 14007  0BA2  00D7               	movwf	??_set_osr_humidity_settings+1
 14008  0BA3  0857               	movf	??_set_osr_humidity_settings+1,w
 14009  0BA4  00B6               	movwf	bme280_set_regs@dev
 14010  0BA5  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 14011  0BA6  3185  25B7         	fcall	_bme280_set_regs
 14012  0BA8  0140               	movlb	0	; select bank0
 14013  0BA9  00D8               	movwf	??_set_osr_humidity_settings+2
 14014  0BAA  0858               	movf	??_set_osr_humidity_settings+2,w
 14015  0BAB  00DB               	movwf	set_osr_humidity_settings@rslt
 14016  0BAC                     l5008:	
 14017                           
 14018                           ;BME280_driver/bme280.c: 823:     return rslt;
 14019  0BAC  085B               	movf	set_osr_humidity_settings@rslt,w
 14020  0BAD  0008               	return
 14021  0BAE                     __end_of_set_osr_humidity_settings:	
 14022                           
 14023                           	psect	text57
 14024  0995                     __ptext57:	
 14025 ;; *************** function _set_filter_standby_settings *****************
 14026 ;; Defined at:
 14027 ;;		line 861 in file "BME280_driver/bme280.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;  desired_sett    1    wreg     unsigned char 
 14030 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 14031 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14032 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 14033 ;;		 -> EnvSensor(51), 
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 14036 ;;  reg_data        1   60[BANK0 ] unsigned char 
 14037 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 14038 ;;  rslt            1   58[BANK0 ] char 
 14039 ;; Return value:  Size  Location     Type
 14040 ;;                  1    wreg      char 
 14041 ;; Registers used:
 14042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14043 ;; Tracked objects:
 14044 ;;		On entry : 0/0
 14045 ;;		On exit  : 0/0
 14046 ;;		Unchanged: 0/0
 14047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14048 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14049 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14050 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14051 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14052 ;;Total ram usage:       10 bytes
 14053 ;; Hardware stack levels used:    1
 14054 ;; Hardware stack levels required when called:   11
 14055 ;; This function calls:
 14056 ;;		_bme280_get_regs
 14057 ;;		_bme280_set_regs
 14058 ;;		_fill_filter_settings
 14059 ;;		_fill_standby_settings
 14060 ;; This function is called by:
 14061 ;;		_bme280_set_sensor_settings
 14062 ;;		_reload_device_settings
 14063 ;; This function uses a non-reentrant model
 14064 ;;
 14065                           
 14066                           
 14067                           ;psect for function _set_filter_standby_settings
 14068  0995                     _set_filter_standby_settings:	
 14069                           
 14070                           ;incstack = 0
 14071                           ; Regs used in _set_filter_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14072                           ;set_filter_standby_settings@desired_settings stored from wreg
 14073  0995  0140               	movlb	0	; select bank0
 14074  0996  00D9               	movwf	set_filter_standby_settings@desired_settings
 14075                           
 14076                           ;BME280_driver/bme280.c: 861: static int8_t set_filter_standby_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 862:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 863:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 864: {;BME280_driv
      +                          er/bme280.c: 865:     int8_t rslt;;BME280_driver/bme280.c: 866:     uint8_t reg_addr = 0
      +                          xF5;
 14077  0997  30F5               	movlw	245
 14078  0998  00D6               	movwf	??_set_filter_standby_settings
 14079  0999  0856               	movf	??_set_filter_standby_settings,w
 14080  099A  00DB               	movwf	set_filter_standby_settings@reg_addr
 14081                           
 14082                           ;BME280_driver/bme280.c: 867:     uint8_t reg_data;;BME280_driver/bme280.c: 869:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 14083  099B  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 14084  099C  00D6               	movwf	??_set_filter_standby_settings
 14085  099D  0856               	movf	??_set_filter_standby_settings,w
 14086  099E  00B7               	movwf	bme280_get_regs@reg_data
 14087  099F  3001               	movlw	1
 14088  09A0  00B8               	movwf	bme280_get_regs@len
 14089  09A1  3000               	movlw	0
 14090  09A2  00B9               	movwf	bme280_get_regs@len+1
 14091  09A3  0855               	movf	set_filter_standby_settings@dev,w
 14092  09A4  00D7               	movwf	??_set_filter_standby_settings+1
 14093  09A5  0857               	movf	??_set_filter_standby_settings+1,w
 14094  09A6  00BA               	movwf	bme280_get_regs@dev
 14095  09A7  085B               	movf	set_filter_standby_settings@reg_addr,w
 14096  09A8  3189  210C  3189   	fcall	_bme280_get_regs
 14097  09AB  0140               	movlb	0	; select bank0
 14098  09AC  00D8               	movwf	??_set_filter_standby_settings+2
 14099  09AD  0858               	movf	??_set_filter_standby_settings+2,w
 14100  09AE  00DA               	movwf	set_filter_standby_settings@rslt
 14101                           
 14102                           ;BME280_driver/bme280.c: 870:     if (rslt == 0)
 14103  09AF  085A               	movf	set_filter_standby_settings@rslt,w
 14104  09B0  1D03               	btfss	3,2
 14105  09B1  29D9               	goto	l5062
 14106                           
 14107                           ;BME280_driver/bme280.c: 871:     {;BME280_driver/bme280.c: 872:         if (desired_set
      +                          tings & 1 << 3)
 14108  09B2  1DD9               	btfss	set_filter_standby_settings@desired_settings,3
 14109  09B3  29BC               	goto	l5058
 14110                           
 14111                           ;BME280_driver/bme280.c: 873:         {;BME280_driver/bme280.c: 874:             fill_fi
      +                          lter_settings(&reg_data, settings);
 14112  09B4  0854               	movf	set_filter_standby_settings@settings+1,w
 14113  09B5  00F1               	movwf	fill_filter_settings@settings+1
 14114  09B6  0853               	movf	set_filter_standby_settings@settings,w
 14115  09B7  00F0               	movwf	fill_filter_settings@settings
 14116  09B8  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 14117  09B9  3193  2380  3189   	fcall	_fill_filter_settings
 14118  09BC                     l5058:	
 14119                           
 14120                           ;BME280_driver/bme280.c: 876:         if (desired_settings & 1 << 4)
 14121  09BC  0140               	movlb	0	; select bank0
 14122  09BD  1E59               	btfss	set_filter_standby_settings@desired_settings,4
 14123  09BE  29C7               	goto	l152
 14124                           
 14125                           ;BME280_driver/bme280.c: 877:         {;BME280_driver/bme280.c: 878:             fill_st
      +                          andby_settings(&reg_data, settings);
 14126  09BF  0854               	movf	set_filter_standby_settings@settings+1,w
 14127  09C0  00F1               	movwf	fill_standby_settings@settings+1
 14128  09C1  0853               	movf	set_filter_standby_settings@settings,w
 14129  09C2  00F0               	movwf	fill_standby_settings@settings
 14130  09C3  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 14131  09C4  3193  239C  3189   	fcall	_fill_standby_settings
 14132  09C7                     l152:	
 14133                           ;BME280_driver/bme280.c: 879:         }
 14134                           
 14135                           
 14136                           ;BME280_driver/bme280.c: 882:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 14137  09C7  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 14138  09C8  0140               	movlb	0	; select bank0
 14139  09C9  00D6               	movwf	??_set_filter_standby_settings
 14140  09CA  0856               	movf	??_set_filter_standby_settings,w
 14141  09CB  00B4               	movwf	bme280_set_regs@reg_data
 14142  09CC  01B5               	clrf	bme280_set_regs@len
 14143  09CD  0AB5               	incf	bme280_set_regs@len,f
 14144  09CE  0855               	movf	set_filter_standby_settings@dev,w
 14145  09CF  00D7               	movwf	??_set_filter_standby_settings+1
 14146  09D0  0857               	movf	??_set_filter_standby_settings+1,w
 14147  09D1  00B6               	movwf	bme280_set_regs@dev
 14148  09D2  305B               	movlw	(low (set_filter_standby_settings@reg_addr| 0))& (0+255)
 14149  09D3  3185  25B7         	fcall	_bme280_set_regs
 14150  09D5  0140               	movlb	0	; select bank0
 14151  09D6  00D8               	movwf	??_set_filter_standby_settings+2
 14152  09D7  0858               	movf	??_set_filter_standby_settings+2,w
 14153  09D8  00DA               	movwf	set_filter_standby_settings@rslt
 14154  09D9                     l5062:	
 14155                           
 14156                           ;BME280_driver/bme280.c: 885:     return rslt;
 14157  09D9  085A               	movf	set_filter_standby_settings@rslt,w
 14158  09DA  0008               	return
 14159  09DB                     __end_of_set_filter_standby_settings:	
 14160                           
 14161                           	psect	text58
 14162  139C                     __ptext58:	
 14163 ;; *************** function _fill_standby_settings *****************
 14164 ;; Defined at:
 14165 ;;		line 901 in file "BME280_driver/bme280.c"
 14166 ;; Parameters:    Size  Location     Type
 14167 ;;  reg_data        1    wreg     PTR unsigned char 
 14168 ;;		 -> set_filter_standby_settings@reg_data(1), 
 14169 ;;  settings        2    0[COMMON] PTR const struct bme280_
 14170 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14171 ;; Auto vars:     Size  Location     Type
 14172 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 14173 ;;		 -> set_filter_standby_settings@reg_data(1), 
 14174 ;; Return value:  Size  Location     Type
 14175 ;;                  1    wreg      void 
 14176 ;; Registers used:
 14177 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14178 ;; Tracked objects:
 14179 ;;		On entry : 0/0
 14180 ;;		On exit  : 0/0
 14181 ;;		Unchanged: 0/0
 14182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14185 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14187 ;;Total ram usage:        6 bytes
 14188 ;; Hardware stack levels used:    1
 14189 ;; Hardware stack levels required when called:    3
 14190 ;; This function calls:
 14191 ;;		Nothing
 14192 ;; This function is called by:
 14193 ;;		_set_filter_standby_settings
 14194 ;; This function uses a non-reentrant model
 14195 ;;
 14196                           
 14197                           
 14198                           ;psect for function _fill_standby_settings
 14199  139C                     _fill_standby_settings:	
 14200                           
 14201                           ;incstack = 0
 14202                           ; Regs used in _fill_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 14203                           ;fill_standby_settings@reg_data stored from wreg
 14204  139C  00F5               	movwf	fill_standby_settings@reg_data
 14205                           
 14206                           ;BME280_driver/bme280.c: 901: static void fill_standby_settings(uint8_t *reg_data, const
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 902: {;BME280_driver/bme280.c
      +                          : 903:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->standby_time << 0x05) & 0xE
      +                          0));
 14207  139D  0870               	movf	fill_standby_settings@settings,w
 14208  139E  0086               	movwf	6
 14209  139F  0871               	movf	fill_standby_settings@settings+1,w
 14210  13A0  0087               	movwf	7
 14211  13A1  3144               	addfsr 1,4
 14212  13A2  0801               	movf	1,w
 14213  13A3  00F2               	movwf	??_fill_standby_settings
 14214  13A4  3005               	movlw	5
 14215  13A5                     u4855:	
 14216  13A5  35F2               	lslf	??_fill_standby_settings,f
 14217  13A6  0B89               	decfsz	9,f
 14218  13A7  2BA5               	goto	u4855
 14219  13A8  30E0               	movlw	224
 14220  13A9  0572               	andwf	??_fill_standby_settings,w
 14221  13AA  00F3               	movwf	??_fill_standby_settings+1
 14222  13AB  0875               	movf	fill_standby_settings@reg_data,w
 14223  13AC  0086               	movwf	6
 14224  13AD  0187               	clrf	7
 14225  13AE  0801               	movf	1,w
 14226  13AF  391F               	andlw	31
 14227  13B0  0473               	iorwf	??_fill_standby_settings+1,w
 14228  13B1  00F4               	movwf	??_fill_standby_settings+2
 14229  13B2  0875               	movf	fill_standby_settings@reg_data,w
 14230  13B3  0086               	movwf	6
 14231  13B4  0187               	clrf	7
 14232  13B5  0874               	movf	??_fill_standby_settings+2,w
 14233  13B6  0081               	movwf	1
 14234  13B7  0008               	return
 14235  13B8                     __end_of_fill_standby_settings:	
 14236                           
 14237                           	psect	text59
 14238  1380                     __ptext59:	
 14239 ;; *************** function _fill_filter_settings *****************
 14240 ;; Defined at:
 14241 ;;		line 892 in file "BME280_driver/bme280.c"
 14242 ;; Parameters:    Size  Location     Type
 14243 ;;  reg_data        1    wreg     PTR unsigned char 
 14244 ;;		 -> set_filter_standby_settings@reg_data(1), 
 14245 ;;  settings        2    0[COMMON] PTR const struct bme280_
 14246 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14247 ;; Auto vars:     Size  Location     Type
 14248 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 14249 ;;		 -> set_filter_standby_settings@reg_data(1), 
 14250 ;; Return value:  Size  Location     Type
 14251 ;;                  1    wreg      void 
 14252 ;; Registers used:
 14253 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14254 ;; Tracked objects:
 14255 ;;		On entry : 0/0
 14256 ;;		On exit  : 0/0
 14257 ;;		Unchanged: 0/0
 14258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14261 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14262 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14263 ;;Total ram usage:        6 bytes
 14264 ;; Hardware stack levels used:    1
 14265 ;; Hardware stack levels required when called:    3
 14266 ;; This function calls:
 14267 ;;		Nothing
 14268 ;; This function is called by:
 14269 ;;		_set_filter_standby_settings
 14270 ;; This function uses a non-reentrant model
 14271 ;;
 14272                           
 14273                           
 14274                           ;psect for function _fill_filter_settings
 14275  1380                     _fill_filter_settings:	
 14276                           
 14277                           ;incstack = 0
 14278                           ; Regs used in _fill_filter_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 14279                           ;fill_filter_settings@reg_data stored from wreg
 14280  1380  00F5               	movwf	fill_filter_settings@reg_data
 14281                           
 14282                           ;BME280_driver/bme280.c: 892: static void fill_filter_settings(uint8_t *reg_data, const 
      +                          struct bme280_settings *settings);BME280_driver/bme280.c: 893: {;BME280_driver/bme280.c:
      +                           894:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->filter << 0x02) & 0x1C));
 14283  1381  0870               	movf	fill_filter_settings@settings,w
 14284  1382  0086               	movwf	6
 14285  1383  0871               	movf	fill_filter_settings@settings+1,w
 14286  1384  0087               	movwf	7
 14287  1385  3143               	addfsr 1,3
 14288  1386  0801               	movf	1,w
 14289  1387  00F2               	movwf	??_fill_filter_settings
 14290  1388  3002               	movlw	2
 14291  1389                     u4845:	
 14292  1389  35F2               	lslf	??_fill_filter_settings,f
 14293  138A  0B89               	decfsz	9,f
 14294  138B  2B89               	goto	u4845
 14295  138C  301C               	movlw	28
 14296  138D  0572               	andwf	??_fill_filter_settings,w
 14297  138E  00F3               	movwf	??_fill_filter_settings+1
 14298  138F  0875               	movf	fill_filter_settings@reg_data,w
 14299  1390  0086               	movwf	6
 14300  1391  0187               	clrf	7
 14301  1392  0801               	movf	1,w
 14302  1393  39E3               	andlw	227
 14303  1394  0473               	iorwf	??_fill_filter_settings+1,w
 14304  1395  00F4               	movwf	??_fill_filter_settings+2
 14305  1396  0875               	movf	fill_filter_settings@reg_data,w
 14306  1397  0086               	movwf	6
 14307  1398  0187               	clrf	7
 14308  1399  0874               	movf	??_fill_filter_settings+2,w
 14309  139A  0081               	movwf	1
 14310  139B  0008               	return
 14311  139C                     __end_of_fill_filter_settings:	
 14312                           
 14313                           	psect	text60
 14314  0C52                     __ptext60:	
 14315 ;; *************** function _parse_device_settings *****************
 14316 ;; Defined at:
 14317 ;;		line 929 in file "BME280_driver/bme280.c"
 14318 ;; Parameters:    Size  Location     Type
 14319 ;;  reg_data        1    wreg     PTR const unsigned char 
 14320 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 14321 ;;  settings        1    0[COMMON] PTR struct bme280_settin
 14322 ;;		 -> put_device_to_sleep@settings(5), 
 14323 ;; Auto vars:     Size  Location     Type
 14324 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 14325 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  1    wreg      void 
 14328 ;; Registers used:
 14329 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14335 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14339 ;;Total ram usage:        4 bytes
 14340 ;; Hardware stack levels used:    1
 14341 ;; Hardware stack levels required when called:    3
 14342 ;; This function calls:
 14343 ;;		Nothing
 14344 ;; This function is called by:
 14345 ;;		_put_device_to_sleep
 14346 ;;		_bme280_get_sensor_settings
 14347 ;; This function uses a non-reentrant model
 14348 ;;
 14349                           
 14350                           
 14351                           ;psect for function _parse_device_settings
 14352  0C52                     _parse_device_settings:	
 14353                           
 14354                           ;incstack = 0
 14355                           ; Regs used in _parse_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 14356                           ;parse_device_settings@reg_data stored from wreg
 14357  0C52  00F3               	movwf	parse_device_settings@reg_data
 14358                           
 14359                           ;BME280_driver/bme280.c: 929: static void parse_device_settings(const uint8_t *reg_data,
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 930: {;BME280_driver/bme280.c
      +                          : 931:     settings->osr_h = (reg_data[0] & ( 0x07));
 14360  0C53  0873               	movf	parse_device_settings@reg_data,w
 14361  0C54  0086               	movwf	6
 14362  0C55  0187               	clrf	7
 14363  0C56  0801               	movf	1,w
 14364  0C57  3907               	andlw	7
 14365  0C58  00F1               	movwf	??_parse_device_settings
 14366  0C59  0870               	movf	parse_device_settings@settings,w
 14367  0C5A  3E02               	addlw	2
 14368  0C5B  0086               	movwf	6
 14369  0C5C  0187               	clrf	7
 14370  0C5D  0871               	movf	??_parse_device_settings,w
 14371  0C5E  0081               	movwf	1
 14372                           
 14373                           ;BME280_driver/bme280.c: 932:     settings->osr_p = ((reg_data[2] & ( 0x1C)) >> ( 0x02))
      +                          ;
 14374  0C5F  0873               	movf	parse_device_settings@reg_data,w
 14375  0C60  3E02               	addlw	2
 14376  0C61  0086               	movwf	6
 14377  0C62  0187               	clrf	7
 14378  0C63  0801               	movf	1,w
 14379  0C64  00F1               	movwf	??_parse_device_settings
 14380  0C65  3002               	movlw	2
 14381  0C66                     u4935:	
 14382  0C66  36F1               	lsrf	??_parse_device_settings,f
 14383  0C67  0B89               	decfsz	9,f
 14384  0C68  2C66               	goto	u4935
 14385  0C69  0871               	movf	??_parse_device_settings,w
 14386  0C6A  3907               	andlw	7
 14387  0C6B  00F2               	movwf	??_parse_device_settings+1
 14388  0C6C  0870               	movf	parse_device_settings@settings,w
 14389  0C6D  0086               	movwf	6
 14390  0C6E  0187               	clrf	7
 14391  0C6F  0872               	movf	??_parse_device_settings+1,w
 14392  0C70  0081               	movwf	1
 14393                           
 14394                           ;BME280_driver/bme280.c: 933:     settings->osr_t = ((reg_data[2] & ( 0xE0)) >> ( 0x05))
      +                          ;
 14395  0C71  0873               	movf	parse_device_settings@reg_data,w
 14396  0C72  3E02               	addlw	2
 14397  0C73  0086               	movwf	6
 14398  0C74  0187               	clrf	7
 14399  0C75  0801               	movf	1,w
 14400  0C76  00F1               	movwf	??_parse_device_settings
 14401  0C77  3005               	movlw	5
 14402  0C78                     u4945:	
 14403  0C78  36F1               	lsrf	??_parse_device_settings,f
 14404  0C79  0B89               	decfsz	9,f
 14405  0C7A  2C78               	goto	u4945
 14406  0C7B  0871               	movf	??_parse_device_settings,w
 14407  0C7C  3907               	andlw	7
 14408  0C7D  00F2               	movwf	??_parse_device_settings+1
 14409  0C7E  0A70               	incf	parse_device_settings@settings,w
 14410  0C7F  0086               	movwf	6
 14411  0C80  0187               	clrf	7
 14412  0C81  0872               	movf	??_parse_device_settings+1,w
 14413  0C82  0081               	movwf	1
 14414                           
 14415                           ;BME280_driver/bme280.c: 934:     settings->filter = ((reg_data[3] & ( 0x1C)) >> ( 0x02)
      +                          );
 14416  0C83  0873               	movf	parse_device_settings@reg_data,w
 14417  0C84  3E03               	addlw	3
 14418  0C85  0086               	movwf	6
 14419  0C86  0187               	clrf	7
 14420  0C87  0801               	movf	1,w
 14421  0C88  00F1               	movwf	??_parse_device_settings
 14422  0C89  3002               	movlw	2
 14423  0C8A                     u4955:	
 14424  0C8A  36F1               	lsrf	??_parse_device_settings,f
 14425  0C8B  0B89               	decfsz	9,f
 14426  0C8C  2C8A               	goto	u4955
 14427  0C8D  0871               	movf	??_parse_device_settings,w
 14428  0C8E  3907               	andlw	7
 14429  0C8F  00F2               	movwf	??_parse_device_settings+1
 14430  0C90  0870               	movf	parse_device_settings@settings,w
 14431  0C91  3E03               	addlw	3
 14432  0C92  0086               	movwf	6
 14433  0C93  0187               	clrf	7
 14434  0C94  0872               	movf	??_parse_device_settings+1,w
 14435  0C95  0081               	movwf	1
 14436                           
 14437                           ;BME280_driver/bme280.c: 935:     settings->standby_time = ((reg_data[3] & ( 0xE0)) >> (
      +                           0x05));
 14438  0C96  0873               	movf	parse_device_settings@reg_data,w
 14439  0C97  3E03               	addlw	3
 14440  0C98  0086               	movwf	6
 14441  0C99  0187               	clrf	7
 14442  0C9A  0801               	movf	1,w
 14443  0C9B  00F1               	movwf	??_parse_device_settings
 14444  0C9C  3005               	movlw	5
 14445  0C9D                     u4965:	
 14446  0C9D  36F1               	lsrf	??_parse_device_settings,f
 14447  0C9E  0B89               	decfsz	9,f
 14448  0C9F  2C9D               	goto	u4965
 14449  0CA0  0871               	movf	??_parse_device_settings,w
 14450  0CA1  3907               	andlw	7
 14451  0CA2  00F2               	movwf	??_parse_device_settings+1
 14452  0CA3  0870               	movf	parse_device_settings@settings,w
 14453  0CA4  3E04               	addlw	4
 14454  0CA5  0086               	movwf	6
 14455  0CA6  0187               	clrf	7
 14456  0CA7  0872               	movf	??_parse_device_settings+1,w
 14457  0CA8  0081               	movwf	1
 14458  0CA9  0008               	return
 14459  0CAA                     __end_of_parse_device_settings:	
 14460                           
 14461                           	psect	text61
 14462  165E                     __ptext61:	
 14463 ;; *************** function _bme280_get_sensor_mode *****************
 14464 ;; Defined at:
 14465 ;;		line 610 in file "BME280_driver/bme280.c"
 14466 ;; Parameters:    Size  Location     Type
 14467 ;;  sensor_mode     1    wreg     PTR unsigned char 
 14468 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 14469 ;;  dev             1   32[BANK0 ] PTR const struct bme280_
 14470 ;;		 -> EnvSensor(51), 
 14471 ;; Auto vars:     Size  Location     Type
 14472 ;;  sensor_mode     1   37[BANK0 ] PTR unsigned char 
 14473 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 14474 ;;  rslt            1   36[BANK0 ] char 
 14475 ;; Return value:  Size  Location     Type
 14476 ;;                  1    wreg      char 
 14477 ;; Registers used:
 14478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14479 ;; Tracked objects:
 14480 ;;		On entry : 0/0
 14481 ;;		On exit  : 0/0
 14482 ;;		Unchanged: 0/0
 14483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14484 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14486 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14487 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14488 ;;Total ram usage:        6 bytes
 14489 ;; Hardware stack levels used:    1
 14490 ;; Hardware stack levels required when called:   11
 14491 ;; This function calls:
 14492 ;;		_bme280_get_regs
 14493 ;;		_null_ptr_check
 14494 ;; This function is called by:
 14495 ;;		_bme280_set_sensor_settings
 14496 ;;		_bme280_set_sensor_mode
 14497 ;; This function uses a non-reentrant model
 14498 ;;
 14499                           
 14500                           
 14501                           ;psect for function _bme280_get_sensor_mode
 14502  165E                     _bme280_get_sensor_mode:	
 14503                           
 14504                           ;incstack = 0
 14505                           ; Regs used in _bme280_get_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14506                           ;bme280_get_sensor_mode@sensor_mode stored from wreg
 14507  165E  0140               	movlb	0	; select bank0
 14508  165F  00C5               	movwf	bme280_get_sensor_mode@sensor_mode
 14509                           
 14510                           ;BME280_driver/bme280.c: 610: int8_t bme280_get_sensor_mode(uint8_t *sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 611: {;BME280_driver/bme280.c: 612:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 615:     rslt = null_ptr_check(dev);
 14511  1660  0840               	movf	bme280_get_sensor_mode@dev,w
 14512  1661  3194  244B  3196   	fcall	_null_ptr_check
 14513  1664  0140               	movlb	0	; select bank0
 14514  1665  00C1               	movwf	??_bme280_get_sensor_mode
 14515  1666  0841               	movf	??_bme280_get_sensor_mode,w
 14516  1667  00C4               	movwf	bme280_get_sensor_mode@rslt
 14517                           
 14518                           ;BME280_driver/bme280.c: 616:     if (rslt == 0)
 14519  1668  0844               	movf	bme280_get_sensor_mode@rslt,w
 14520  1669  1D03               	btfss	3,2
 14521  166A  2E89               	goto	l5210
 14522                           
 14523                           ;BME280_driver/bme280.c: 617:     {;BME280_driver/bme280.c: 619:         rslt = bme280_g
      +                          et_regs(0xF4, sensor_mode, 1, dev);
 14524  166B  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 14525  166C  00C1               	movwf	??_bme280_get_sensor_mode
 14526  166D  0841               	movf	??_bme280_get_sensor_mode,w
 14527  166E  00B7               	movwf	bme280_get_regs@reg_data
 14528  166F  3001               	movlw	1
 14529  1670  00B8               	movwf	bme280_get_regs@len
 14530  1671  3000               	movlw	0
 14531  1672  00B9               	movwf	bme280_get_regs@len+1
 14532  1673  0840               	movf	bme280_get_sensor_mode@dev,w
 14533  1674  00C2               	movwf	??_bme280_get_sensor_mode+1
 14534  1675  0842               	movf	??_bme280_get_sensor_mode+1,w
 14535  1676  00BA               	movwf	bme280_get_regs@dev
 14536  1677  30F4               	movlw	244
 14537  1678  3189  210C         	fcall	_bme280_get_regs
 14538  167A  0140               	movlb	0	; select bank0
 14539  167B  00C3               	movwf	??_bme280_get_sensor_mode+2
 14540  167C  0843               	movf	??_bme280_get_sensor_mode+2,w
 14541  167D  00C4               	movwf	bme280_get_sensor_mode@rslt
 14542                           
 14543                           ;BME280_driver/bme280.c: 622:         *sensor_mode = (*sensor_mode & ( 0x03));
 14544  167E  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 14545  167F  0086               	movwf	6
 14546  1680  0187               	clrf	7
 14547  1681  0801               	movf	1,w
 14548  1682  3903               	andlw	3
 14549  1683  00C1               	movwf	??_bme280_get_sensor_mode
 14550  1684  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 14551  1685  0086               	movwf	6
 14552  1686  0187               	clrf	7
 14553  1687  0841               	movf	??_bme280_get_sensor_mode,w
 14554  1688  0081               	movwf	1
 14555  1689                     l5210:	
 14556                           
 14557                           ;BME280_driver/bme280.c: 625:     return rslt;
 14558  1689  0844               	movf	bme280_get_sensor_mode@rslt,w
 14559  168A  0008               	return
 14560  168B                     __end_of_bme280_get_sensor_mode:	
 14561                           
 14562                           	psect	text62
 14563  0D64                     __ptext62:	
 14564 ;; *************** function _bme280_init *****************
 14565 ;; Defined at:
 14566 ;;		line 357 in file "BME280_driver/bme280.c"
 14567 ;; Parameters:    Size  Location     Type
 14568 ;;  dev             1    wreg     PTR struct bme280_dev
 14569 ;;		 -> EnvSensor(51), 
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;  dev             1   70[BANK0 ] PTR struct bme280_dev
 14572 ;;		 -> EnvSensor(51), 
 14573 ;;  rslt            1   69[BANK0 ] char 
 14574 ;;  chip_id         1   68[BANK0 ] unsigned char 
 14575 ;;  try_count       1   67[BANK0 ] unsigned char 
 14576 ;; Return value:  Size  Location     Type
 14577 ;;                  1    wreg      char 
 14578 ;; Registers used:
 14579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14580 ;; Tracked objects:
 14581 ;;		On entry : 0/0
 14582 ;;		On exit  : 0/0
 14583 ;;		Unchanged: 0/0
 14584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14586 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14587 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14588 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14589 ;;Total ram usage:        7 bytes
 14590 ;; Hardware stack levels used:    1
 14591 ;; Hardware stack levels required when called:   12
 14592 ;; This function calls:
 14593 ;;		_Sleep
 14594 ;;		_bme280_get_regs
 14595 ;;		_bme280_soft_reset
 14596 ;;		_get_calib_data
 14597 ;;		_null_ptr_check
 14598 ;; This function is called by:
 14599 ;;		_BME280_Init
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603                           
 14604                           ;psect for function _bme280_init
 14605  0D64                     _bme280_init:	
 14606                           
 14607                           ;incstack = 0
 14608                           ; Regs used in _bme280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14609                           ;bme280_init@dev stored from wreg
 14610  0D64  0140               	movlb	0	; select bank0
 14611  0D65  00E6               	movwf	bme280_init@dev
 14612                           
 14613                           ;BME280_driver/bme280.c: 357: int8_t bme280_init(struct bme280_dev *dev);BME280_driver/b
      +                          me280.c: 358: {;BME280_driver/bme280.c: 359:     int8_t rslt;;BME280_driver/bme280.c: 36
      +                          2:     uint8_t try_count = 5;
 14614  0D66  3005               	movlw	5
 14615  0D67  00E0               	movwf	??_bme280_init
 14616  0D68  0860               	movf	??_bme280_init,w
 14617  0D69  00E3               	movwf	bme280_init@try_count
 14618                           
 14619                           ;BME280_driver/bme280.c: 363:     uint8_t chip_id = 0;
 14620  0D6A  01E4               	clrf	bme280_init@chip_id
 14621                           
 14622                           ;BME280_driver/bme280.c: 366:     rslt = null_ptr_check(dev);
 14623  0D6B  0866               	movf	bme280_init@dev,w
 14624  0D6C  3194  244B  318D   	fcall	_null_ptr_check
 14625  0D6F  0140               	movlb	0	; select bank0
 14626  0D70  00E0               	movwf	??_bme280_init
 14627  0D71  0860               	movf	??_bme280_init,w
 14628  0D72  00E5               	movwf	bme280_init@rslt
 14629                           
 14630                           ;BME280_driver/bme280.c: 369:     if (rslt == 0)
 14631  0D73  0865               	movf	bme280_init@rslt,w
 14632  0D74  1903               	btfsc	3,2
 14633  0D75  2DC3               	goto	l5410
 14634  0D76  2DCD               	goto	l55
 14635  0D77                     l5392:	
 14636                           
 14637                           ;BME280_driver/bme280.c: 372:         {;BME280_driver/bme280.c: 374:             rslt = 
      +                          bme280_get_regs(0xD0, &chip_id, 1, dev);
 14638  0D77  3064               	movlw	(low (bme280_init@chip_id| 0))& (0+255)
 14639  0D78  00E0               	movwf	??_bme280_init
 14640  0D79  0860               	movf	??_bme280_init,w
 14641  0D7A  00B7               	movwf	bme280_get_regs@reg_data
 14642  0D7B  3001               	movlw	1
 14643  0D7C  00B8               	movwf	bme280_get_regs@len
 14644  0D7D  3000               	movlw	0
 14645  0D7E  00B9               	movwf	bme280_get_regs@len+1
 14646  0D7F  0866               	movf	bme280_init@dev,w
 14647  0D80  00E1               	movwf	??_bme280_init+1
 14648  0D81  0861               	movf	??_bme280_init+1,w
 14649  0D82  00BA               	movwf	bme280_get_regs@dev
 14650  0D83  30D0               	movlw	208
 14651  0D84  3189  210C  318D   	fcall	_bme280_get_regs
 14652  0D87  0140               	movlb	0	; select bank0
 14653  0D88  00E2               	movwf	??_bme280_init+2
 14654  0D89  0862               	movf	??_bme280_init+2,w
 14655  0D8A  00E5               	movwf	bme280_init@rslt
 14656                           
 14657                           ;BME280_driver/bme280.c: 377:             if ((rslt == 0) && (chip_id == 0x60))
 14658  0D8B  0865               	movf	bme280_init@rslt,w
 14659  0D8C  1D03               	btfss	3,2
 14660  0D8D  2DAE               	goto	l5406
 14661  0D8E  3060               	movlw	96
 14662  0D8F  0664               	xorwf	bme280_init@chip_id,w
 14663  0D90  1D03               	btfss	3,2
 14664  0D91  2DAE               	goto	l5406
 14665                           
 14666                           ;BME280_driver/bme280.c: 378:             {;BME280_driver/bme280.c: 379:                
      +                           dev->chip_id = chip_id;
 14667  0D92  0864               	movf	bme280_init@chip_id,w
 14668  0D93  00E0               	movwf	??_bme280_init
 14669  0D94  0866               	movf	bme280_init@dev,w
 14670  0D95  0086               	movwf	6
 14671  0D96  3001               	movlw	1	; select bank2/3
 14672  0D97  0087               	movwf	7
 14673  0D98  0860               	movf	??_bme280_init,w
 14674  0D99  0081               	movwf	1
 14675                           
 14676                           ;BME280_driver/bme280.c: 382:                 rslt = bme280_soft_reset(dev);
 14677  0D9A  0866               	movf	bme280_init@dev,w
 14678  0D9B  3197  2787  318D   	fcall	_bme280_soft_reset
 14679  0D9E  0140               	movlb	0	; select bank0
 14680  0D9F  00E0               	movwf	??_bme280_init
 14681  0DA0  0860               	movf	??_bme280_init,w
 14682  0DA1  00E5               	movwf	bme280_init@rslt
 14683                           
 14684                           ;BME280_driver/bme280.c: 383:                 if (rslt == 0)
 14685  0DA2  0865               	movf	bme280_init@rslt,w
 14686  0DA3  1D03               	btfss	3,2
 14687  0DA4  2DC6               	goto	l5412
 14688                           
 14689                           ;BME280_driver/bme280.c: 384:                 {;BME280_driver/bme280.c: 386:            
      +                                   rslt = get_calib_data(dev);
 14690  0DA5  0866               	movf	bme280_init@dev,w
 14691  0DA6  318A  226D  318D   	fcall	_get_calib_data
 14692  0DA9  0140               	movlb	0	; select bank0
 14693  0DAA  00E0               	movwf	??_bme280_init
 14694  0DAB  0860               	movf	??_bme280_init,w
 14695  0DAC  00E5               	movwf	bme280_init@rslt
 14696  0DAD  2DC6               	goto	l5412
 14697  0DAE                     l5406:	
 14698                           
 14699                           ;BME280_driver/bme280.c: 392:             dev->delay_ms(1);
 14700  0DAE  3000               	movlw	0
 14701  0DAF  00F3               	movwf	Sleep@ms+3
 14702  0DB0  3000               	movlw	0
 14703  0DB1  00F2               	movwf	Sleep@ms+2
 14704  0DB2  3000               	movlw	0
 14705  0DB3  00F1               	movwf	Sleep@ms+1
 14706  0DB4  3001               	movlw	1
 14707  0DB5  00F0               	movwf	Sleep@ms
 14708  0DB6  0866               	movf	bme280_init@dev,w
 14709  0DB7  3E07               	addlw	7
 14710  0DB8  0086               	movwf	6
 14711  0DB9  3001               	movlw	1	; select bank2/3
 14712  0DBA  0087               	movwf	7
 14713  0DBB  3F41               	moviw [1]fsr1
 14714  0DBC  008A               	movwf	10
 14715  0DBD  3F40               	moviw [0]fsr1
 14716  0DBE  000A               	callw
 14717  0DBF  318D               	pagesel	$
 14718                           
 14719                           ;BME280_driver/bme280.c: 393:             --try_count;
 14720  0DC0  3001               	movlw	1
 14721  0DC1  0140               	movlb	0	; select bank0
 14722  0DC2  02E3               	subwf	bme280_init@try_count,f
 14723  0DC3                     l5410:	
 14724                           
 14725                           ;BME280_driver/bme280.c: 371:         while (try_count)
 14726  0DC3  0863               	movf	bme280_init@try_count,w
 14727  0DC4  1D03               	btfss	3,2
 14728  0DC5  2D77               	goto	l5392
 14729  0DC6                     l5412:	
 14730                           
 14731                           ;BME280_driver/bme280.c: 397:         if (!try_count)
 14732  0DC6  0863               	movf	bme280_init@try_count,w
 14733  0DC7  1D03               	btfss	3,2
 14734  0DC8  2DCD               	goto	l55
 14735                           
 14736                           ;BME280_driver/bme280.c: 398:         {;BME280_driver/bme280.c: 399:             rslt = 
      +                          -2;
 14737  0DC9  30FE               	movlw	254
 14738  0DCA  00E0               	movwf	??_bme280_init
 14739  0DCB  0860               	movf	??_bme280_init,w
 14740  0DCC  00E5               	movwf	bme280_init@rslt
 14741  0DCD                     l55:	
 14742                           ;BME280_driver/bme280.c: 401:     }
 14743                           
 14744                           
 14745                           ;BME280_driver/bme280.c: 403:     return rslt;
 14746  0DCD  0865               	movf	bme280_init@rslt,w
 14747  0DCE  0008               	return
 14748  0DCF                     __end_of_bme280_init:	
 14749                           
 14750                           	psect	text63
 14751  0A6D                     __ptext63:	
 14752 ;; *************** function _get_calib_data *****************
 14753 ;; Defined at:
 14754 ;;		line 1307 in file "BME280_driver/bme280.c"
 14755 ;; Parameters:    Size  Location     Type
 14756 ;;  dev             1    wreg     PTR struct bme280_dev
 14757 ;;		 -> EnvSensor(51), 
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;  dev             1   63[BANK0 ] PTR struct bme280_dev
 14760 ;;		 -> EnvSensor(51), 
 14761 ;;  calib_data     26   35[BANK0 ] unsigned char [26]
 14762 ;;  rslt            1   62[BANK0 ] char 
 14763 ;;  reg_addr        1    0        unsigned char 
 14764 ;; Return value:  Size  Location     Type
 14765 ;;                  1    wreg      char 
 14766 ;; Registers used:
 14767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14768 ;; Tracked objects:
 14769 ;;		On entry : 0/0
 14770 ;;		On exit  : 0/0
 14771 ;;		Unchanged: 0/0
 14772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14774 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14775 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14776 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14777 ;;Total ram usage:       32 bytes
 14778 ;; Hardware stack levels used:    1
 14779 ;; Hardware stack levels required when called:   11
 14780 ;; This function calls:
 14781 ;;		_bme280_get_regs
 14782 ;;		_parse_humidity_calib_data
 14783 ;;		_parse_temp_press_calib_data
 14784 ;; This function is called by:
 14785 ;;		_bme280_init
 14786 ;; This function uses a non-reentrant model
 14787 ;;
 14788                           
 14789                           
 14790                           ;psect for function _get_calib_data
 14791  0A6D                     _get_calib_data:	
 14792                           
 14793                           ;incstack = 0
 14794                           ; Regs used in _get_calib_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14795                           ;get_calib_data@dev stored from wreg
 14796  0A6D  0140               	movlb	0	; select bank0
 14797  0A6E  00DF               	movwf	get_calib_data@dev
 14798                           
 14799                           ;BME280_driver/bme280.c: 1313:     uint8_t calib_data[26] = { 0 };
 14800  0A6F  3043               	movlw	low get_calib_data@calib_data
 14801  0A70  0086               	movwf	6
 14802  0A71  3000               	movlw	high get_calib_data@calib_data
 14803  0A72  0087               	movwf	7
 14804  0A73  301A               	movlw	26
 14805  0A74  00C0               	movwf	??_get_calib_data
 14806  0A75  3000               	movlw	0
 14807  0A76                     u5020:	
 14808  0A76  001E               	movwi fsr1++
 14809  0A77  0BC0               	decfsz	??_get_calib_data,f
 14810  0A78  2A76               	goto	u5020
 14811                           
 14812                           ;BME280_driver/bme280.c: 1316:     rslt = bme280_get_regs(reg_addr, calib_data, 26, dev)
      +                          ;
 14813  0A79  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 14814  0A7A  00C0               	movwf	??_get_calib_data
 14815  0A7B  0840               	movf	??_get_calib_data,w
 14816  0A7C  00B7               	movwf	bme280_get_regs@reg_data
 14817  0A7D  301A               	movlw	26
 14818  0A7E  00B8               	movwf	bme280_get_regs@len
 14819  0A7F  3000               	movlw	0
 14820  0A80  00B9               	movwf	bme280_get_regs@len+1
 14821  0A81  085F               	movf	get_calib_data@dev,w
 14822  0A82  00C1               	movwf	??_get_calib_data+1
 14823  0A83  0841               	movf	??_get_calib_data+1,w
 14824  0A84  00BA               	movwf	bme280_get_regs@dev
 14825  0A85  3088               	movlw	136
 14826  0A86  3189  210C  318A   	fcall	_bme280_get_regs
 14827  0A89  0140               	movlb	0	; select bank0
 14828  0A8A  00C2               	movwf	??_get_calib_data+2
 14829  0A8B  0842               	movf	??_get_calib_data+2,w
 14830  0A8C  00DE               	movwf	get_calib_data@rslt
 14831                           
 14832                           ;BME280_driver/bme280.c: 1317:     if (rslt == 0)
 14833  0A8D  085E               	movf	get_calib_data@rslt,w
 14834  0A8E  1D03               	btfss	3,2
 14835  0A8F  2AB7               	goto	l5198
 14836                           
 14837                           ;BME280_driver/bme280.c: 1318:     {;BME280_driver/bme280.c: 1322:         parse_temp_pr
      +                          ess_calib_data(calib_data, dev);
 14838  0A90  085F               	movf	get_calib_data@dev,w
 14839  0A91  00C0               	movwf	??_get_calib_data
 14840  0A92  0840               	movf	??_get_calib_data,w
 14841  0A93  00F0               	movwf	parse_temp_press_calib_data@dev
 14842  0A94  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 14843  0A95  3184  24C2  318A   	fcall	_parse_temp_press_calib_data
 14844                           
 14845                           ;BME280_driver/bme280.c: 1326:         rslt = bme280_get_regs(reg_addr, calib_data, 7, d
      +                          ev);
 14846  0A98  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 14847  0A99  0140               	movlb	0	; select bank0
 14848  0A9A  00C0               	movwf	??_get_calib_data
 14849  0A9B  0840               	movf	??_get_calib_data,w
 14850  0A9C  00B7               	movwf	bme280_get_regs@reg_data
 14851  0A9D  3007               	movlw	7
 14852  0A9E  00B8               	movwf	bme280_get_regs@len
 14853  0A9F  3000               	movlw	0
 14854  0AA0  00B9               	movwf	bme280_get_regs@len+1
 14855  0AA1  085F               	movf	get_calib_data@dev,w
 14856  0AA2  00C1               	movwf	??_get_calib_data+1
 14857  0AA3  0841               	movf	??_get_calib_data+1,w
 14858  0AA4  00BA               	movwf	bme280_get_regs@dev
 14859  0AA5  30E1               	movlw	225
 14860  0AA6  3189  210C  318A   	fcall	_bme280_get_regs
 14861  0AA9  0140               	movlb	0	; select bank0
 14862  0AAA  00C2               	movwf	??_get_calib_data+2
 14863  0AAB  0842               	movf	??_get_calib_data+2,w
 14864  0AAC  00DE               	movwf	get_calib_data@rslt
 14865                           
 14866                           ;BME280_driver/bme280.c: 1327:         if (rslt == 0)
 14867  0AAD  085E               	movf	get_calib_data@rslt,w
 14868  0AAE  1D03               	btfss	3,2
 14869  0AAF  2AB7               	goto	l5198
 14870                           
 14871                           ;BME280_driver/bme280.c: 1328:         {;BME280_driver/bme280.c: 1332:             parse
      +                          _humidity_calib_data(calib_data, dev);
 14872  0AB0  085F               	movf	get_calib_data@dev,w
 14873  0AB1  00C0               	movwf	??_get_calib_data
 14874  0AB2  0840               	movf	??_get_calib_data,w
 14875  0AB3  00F0               	movwf	parse_humidity_calib_data@dev
 14876  0AB4  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 14877  0AB5  3186  2658         	fcall	_parse_humidity_calib_data
 14878  0AB7                     l5198:	
 14879                           
 14880                           ;BME280_driver/bme280.c: 1336:     return rslt;
 14881  0AB7  0140               	movlb	0	; select bank0
 14882  0AB8  085E               	movf	get_calib_data@rslt,w
 14883  0AB9  0008               	return
 14884  0ABA                     __end_of_get_calib_data:	
 14885                           
 14886                           	psect	text64
 14887  04C2                     __ptext64:	
 14888 ;; *************** function _parse_temp_press_calib_data *****************
 14889 ;; Defined at:
 14890 ;;		line 1358 in file "BME280_driver/bme280.c"
 14891 ;; Parameters:    Size  Location     Type
 14892 ;;  reg_data        1    wreg     PTR const unsigned char 
 14893 ;;		 -> get_calib_data@calib_data(26), 
 14894 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 14895 ;;		 -> EnvSensor(51), 
 14896 ;; Auto vars:     Size  Location     Type
 14897 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 14898 ;;		 -> get_calib_data@calib_data(26), 
 14899 ;;  calib_data      1    2[COMMON] PTR struct bme280_calib_
 14900 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 14901 ;; Return value:  Size  Location     Type
 14902 ;;                  1    wreg      void 
 14903 ;; Registers used:
 14904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/0
 14907 ;;		On exit  : 0/0
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14910 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14914 ;;Total ram usage:        4 bytes
 14915 ;; Hardware stack levels used:    1
 14916 ;; Hardware stack levels required when called:    3
 14917 ;; This function calls:
 14918 ;;		Nothing
 14919 ;; This function is called by:
 14920 ;;		_get_calib_data
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           
 14925                           ;psect for function _parse_temp_press_calib_data
 14926  04C2                     _parse_temp_press_calib_data:	
 14927                           
 14928                           ;incstack = 0
 14929                           ; Regs used in _parse_temp_press_calib_data: [wreg-fsr1h+status,2+status,0]
 14930                           ;parse_temp_press_calib_data@reg_data stored from wreg
 14931  04C2  00F3               	movwf	parse_temp_press_calib_data@reg_data
 14932                           
 14933                           ;BME280_driver/bme280.c: 1358: static void parse_temp_press_calib_data(const uint8_t *re
      +                          g_data, struct bme280_dev *dev);BME280_driver/bme280.c: 1359: {;BME280_driver/bme280.c: 
      +                          1360:     struct bme280_calib_data *calib_data = &dev->calib_data;
 14934  04C3  0870               	movf	parse_temp_press_calib_data@dev,w
 14935  04C4  3E09               	addlw	9
 14936  04C5  00F1               	movwf	??_parse_temp_press_calib_data
 14937  04C6  0871               	movf	??_parse_temp_press_calib_data,w
 14938  04C7  00F2               	movwf	parse_temp_press_calib_data@calib_data
 14939                           
 14940                           ;BME280_driver/bme280.c: 1362:     calib_data->dig_T1 = (((uint16_t)reg_data[1] << 8) | 
      +                          (uint16_t)reg_data[0]);
 14941  04C8  0A73               	incf	parse_temp_press_calib_data@reg_data,w
 14942  04C9  0084               	movwf	4
 14943  04CA  0185               	clrf	5
 14944  04CB  0800               	movf	0,w
 14945  04CC  00F1               	movwf	??_parse_temp_press_calib_data
 14946  04CD  0873               	movf	parse_temp_press_calib_data@reg_data,w
 14947  04CE  0084               	movwf	4
 14948  04CF  0185               	clrf	5
 14949  04D0  0872               	movf	parse_temp_press_calib_data@calib_data,w
 14950  04D1  0086               	movwf	6
 14951  04D2  3001               	movlw	1	; select bank2/3
 14952  04D3  0087               	movwf	7
 14953  04D4  0800               	movf	0,w
 14954  04D5  3FC0               	movwi [0]fsr1
 14955  04D6  0871               	movf	??_parse_temp_press_calib_data,w
 14956  04D7  3FC1               	movwi [1]fsr1
 14957                           
 14958                           ;BME280_driver/bme280.c: 1363:     calib_data->dig_T2 = (int16_t)(((uint16_t)reg_data[3]
      +                           << 8) | (uint16_t)reg_data[2]);
 14959  04D8  0873               	movf	parse_temp_press_calib_data@reg_data,w
 14960  04D9  3E03               	addlw	3
 14961  04DA  0084               	movwf	4
 14962  04DB  0185               	clrf	5
 14963  04DC  0800               	movf	0,w
 14964  04DD  00F1               	movwf	??_parse_temp_press_calib_data
 14965  04DE  0873               	movf	parse_temp_press_calib_data@reg_data,w
 14966  04DF  3E02               	addlw	2
 14967  04E0  0084               	movwf	4
 14968  04E1  0185               	clrf	5
 14969  04E2  0872               	movf	parse_temp_press_calib_data@calib_data,w
 14970  04E3  3E02               	addlw	2
 14971  04E4  0086               	movwf	6
 14972  04E5  3001               	movlw	1	; select bank2/3
 14973  04E6  0087               	movwf	7
 14974  04E7  0800               	movf	0,w
 14975  04E8  3FC0               	movwi [0]fsr1
 14976  04E9  0871               	movf	??_parse_temp_press_calib_data,w
 14977  04EA  3FC1               	movwi [1]fsr1
 14978                           
 14979                           ;BME280_driver/bme280.c: 1364:     calib_data->dig_T3 = (int16_t)(((uint16_t)reg_data[5]
      +                           << 8) | (uint16_t)reg_data[4]);
 14980  04EB  0873               	movf	parse_temp_press_calib_data@reg_data,w
 14981  04EC  3E05               	addlw	5
 14982  04ED  0084               	movwf	4
 14983  04EE  0185               	clrf	5
 14984  04EF  0800               	movf	0,w
 14985  04F0  00F1               	movwf	??_parse_temp_press_calib_data
 14986  04F1  0873               	movf	parse_temp_press_calib_data@reg_data,w
 14987  04F2  3E04               	addlw	4
 14988  04F3  0084               	movwf	4
 14989  04F4  0185               	clrf	5
 14990  04F5  0872               	movf	parse_temp_press_calib_data@calib_data,w
 14991  04F6  3E04               	addlw	4
 14992  04F7  0086               	movwf	6
 14993  04F8  3001               	movlw	1	; select bank2/3
 14994  04F9  0087               	movwf	7
 14995  04FA  0800               	movf	0,w
 14996  04FB  3FC0               	movwi [0]fsr1
 14997  04FC  0871               	movf	??_parse_temp_press_calib_data,w
 14998  04FD  3FC1               	movwi [1]fsr1
 14999                           
 15000                           ;BME280_driver/bme280.c: 1365:     calib_data->dig_P1 = (((uint16_t)reg_data[7] << 8) | 
      +                          (uint16_t)reg_data[6]);
 15001  04FE  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15002  04FF  3E07               	addlw	7
 15003  0500  0084               	movwf	4
 15004  0501  0185               	clrf	5
 15005  0502  0800               	movf	0,w
 15006  0503  00F1               	movwf	??_parse_temp_press_calib_data
 15007  0504  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15008  0505  3E06               	addlw	6
 15009  0506  0084               	movwf	4
 15010  0507  0185               	clrf	5
 15011  0508  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15012  0509  3E06               	addlw	6
 15013  050A  0086               	movwf	6
 15014  050B  3001               	movlw	1	; select bank2/3
 15015  050C  0087               	movwf	7
 15016  050D  0800               	movf	0,w
 15017  050E  3FC0               	movwi [0]fsr1
 15018  050F  0871               	movf	??_parse_temp_press_calib_data,w
 15019  0510  3FC1               	movwi [1]fsr1
 15020                           
 15021                           ;BME280_driver/bme280.c: 1366:     calib_data->dig_P2 = (int16_t)(((uint16_t)reg_data[9]
      +                           << 8) | (uint16_t)reg_data[8]);
 15022  0511  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15023  0512  3E09               	addlw	9
 15024  0513  0084               	movwf	4
 15025  0514  0185               	clrf	5
 15026  0515  0800               	movf	0,w
 15027  0516  00F1               	movwf	??_parse_temp_press_calib_data
 15028  0517  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15029  0518  3E08               	addlw	8
 15030  0519  0084               	movwf	4
 15031  051A  0185               	clrf	5
 15032  051B  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15033  051C  3E08               	addlw	8
 15034  051D  0086               	movwf	6
 15035  051E  3001               	movlw	1	; select bank2/3
 15036  051F  0087               	movwf	7
 15037  0520  0800               	movf	0,w
 15038  0521  3FC0               	movwi [0]fsr1
 15039  0522  0871               	movf	??_parse_temp_press_calib_data,w
 15040  0523  3FC1               	movwi [1]fsr1
 15041                           
 15042                           ;BME280_driver/bme280.c: 1367:     calib_data->dig_P3 = (int16_t)(((uint16_t)reg_data[11
      +                          ] << 8) | (uint16_t)reg_data[10]);
 15043  0524  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15044  0525  3E0B               	addlw	11
 15045  0526  0084               	movwf	4
 15046  0527  0185               	clrf	5
 15047  0528  0800               	movf	0,w
 15048  0529  00F1               	movwf	??_parse_temp_press_calib_data
 15049  052A  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15050  052B  3E0A               	addlw	10
 15051  052C  0084               	movwf	4
 15052  052D  0185               	clrf	5
 15053  052E  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15054  052F  3E0A               	addlw	10
 15055  0530  0086               	movwf	6
 15056  0531  3001               	movlw	1	; select bank2/3
 15057  0532  0087               	movwf	7
 15058  0533  0800               	movf	0,w
 15059  0534  3FC0               	movwi [0]fsr1
 15060  0535  0871               	movf	??_parse_temp_press_calib_data,w
 15061  0536  3FC1               	movwi [1]fsr1
 15062                           
 15063                           ;BME280_driver/bme280.c: 1368:     calib_data->dig_P4 = (int16_t)(((uint16_t)reg_data[13
      +                          ] << 8) | (uint16_t)reg_data[12]);
 15064  0537  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15065  0538  3E0D               	addlw	13
 15066  0539  0084               	movwf	4
 15067  053A  0185               	clrf	5
 15068  053B  0800               	movf	0,w
 15069  053C  00F1               	movwf	??_parse_temp_press_calib_data
 15070  053D  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15071  053E  3E0C               	addlw	12
 15072  053F  0084               	movwf	4
 15073  0540  0185               	clrf	5
 15074  0541  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15075  0542  3E0C               	addlw	12
 15076  0543  0086               	movwf	6
 15077  0544  3001               	movlw	1	; select bank2/3
 15078  0545  0087               	movwf	7
 15079  0546  0800               	movf	0,w
 15080  0547  3FC0               	movwi [0]fsr1
 15081  0548  0871               	movf	??_parse_temp_press_calib_data,w
 15082  0549  3FC1               	movwi [1]fsr1
 15083                           
 15084                           ;BME280_driver/bme280.c: 1369:     calib_data->dig_P5 = (int16_t)(((uint16_t)reg_data[15
      +                          ] << 8) | (uint16_t)reg_data[14]);
 15085  054A  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15086  054B  3E0F               	addlw	15
 15087  054C  0084               	movwf	4
 15088  054D  0185               	clrf	5
 15089  054E  0800               	movf	0,w
 15090  054F  00F1               	movwf	??_parse_temp_press_calib_data
 15091  0550  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15092  0551  3E0E               	addlw	14
 15093  0552  0084               	movwf	4
 15094  0553  0185               	clrf	5
 15095  0554  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15096  0555  3E0E               	addlw	14
 15097  0556  0086               	movwf	6
 15098  0557  3001               	movlw	1	; select bank2/3
 15099  0558  0087               	movwf	7
 15100  0559  0800               	movf	0,w
 15101  055A  3FC0               	movwi [0]fsr1
 15102  055B  0871               	movf	??_parse_temp_press_calib_data,w
 15103  055C  3FC1               	movwi [1]fsr1
 15104                           
 15105                           ;BME280_driver/bme280.c: 1370:     calib_data->dig_P6 = (int16_t)(((uint16_t)reg_data[17
      +                          ] << 8) | (uint16_t)reg_data[16]);
 15106  055D  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15107  055E  3E11               	addlw	17
 15108  055F  0084               	movwf	4
 15109  0560  0185               	clrf	5
 15110  0561  0800               	movf	0,w
 15111  0562  00F1               	movwf	??_parse_temp_press_calib_data
 15112  0563  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15113  0564  3E10               	addlw	16
 15114  0565  0084               	movwf	4
 15115  0566  0185               	clrf	5
 15116  0567  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15117  0568  3E10               	addlw	16
 15118  0569  0086               	movwf	6
 15119  056A  3001               	movlw	1	; select bank2/3
 15120  056B  0087               	movwf	7
 15121  056C  0800               	movf	0,w
 15122  056D  3FC0               	movwi [0]fsr1
 15123  056E  0871               	movf	??_parse_temp_press_calib_data,w
 15124  056F  3FC1               	movwi [1]fsr1
 15125                           
 15126                           ;BME280_driver/bme280.c: 1371:     calib_data->dig_P7 = (int16_t)(((uint16_t)reg_data[19
      +                          ] << 8) | (uint16_t)reg_data[18]);
 15127  0570  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15128  0571  3E13               	addlw	19
 15129  0572  0084               	movwf	4
 15130  0573  0185               	clrf	5
 15131  0574  0800               	movf	0,w
 15132  0575  00F1               	movwf	??_parse_temp_press_calib_data
 15133  0576  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15134  0577  3E12               	addlw	18
 15135  0578  0084               	movwf	4
 15136  0579  0185               	clrf	5
 15137  057A  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15138  057B  3E12               	addlw	18
 15139  057C  0086               	movwf	6
 15140  057D  3001               	movlw	1	; select bank2/3
 15141  057E  0087               	movwf	7
 15142  057F  0800               	movf	0,w
 15143  0580  3FC0               	movwi [0]fsr1
 15144  0581  0871               	movf	??_parse_temp_press_calib_data,w
 15145  0582  3FC1               	movwi [1]fsr1
 15146                           
 15147                           ;BME280_driver/bme280.c: 1372:     calib_data->dig_P8 = (int16_t)(((uint16_t)reg_data[21
      +                          ] << 8) | (uint16_t)reg_data[20]);
 15148  0583  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15149  0584  3E15               	addlw	21
 15150  0585  0084               	movwf	4
 15151  0586  0185               	clrf	5
 15152  0587  0800               	movf	0,w
 15153  0588  00F1               	movwf	??_parse_temp_press_calib_data
 15154  0589  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15155  058A  3E14               	addlw	20
 15156  058B  0084               	movwf	4
 15157  058C  0185               	clrf	5
 15158  058D  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15159  058E  3E14               	addlw	20
 15160  058F  0086               	movwf	6
 15161  0590  3001               	movlw	1	; select bank2/3
 15162  0591  0087               	movwf	7
 15163  0592  0800               	movf	0,w
 15164  0593  3FC0               	movwi [0]fsr1
 15165  0594  0871               	movf	??_parse_temp_press_calib_data,w
 15166  0595  3FC1               	movwi [1]fsr1
 15167                           
 15168                           ;BME280_driver/bme280.c: 1373:     calib_data->dig_P9 = (int16_t)(((uint16_t)reg_data[23
      +                          ] << 8) | (uint16_t)reg_data[22]);
 15169  0596  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15170  0597  3E17               	addlw	23
 15171  0598  0084               	movwf	4
 15172  0599  0185               	clrf	5
 15173  059A  0800               	movf	0,w
 15174  059B  00F1               	movwf	??_parse_temp_press_calib_data
 15175  059C  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15176  059D  3E16               	addlw	22
 15177  059E  0084               	movwf	4
 15178  059F  0185               	clrf	5
 15179  05A0  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15180  05A1  3E16               	addlw	22
 15181  05A2  0086               	movwf	6
 15182  05A3  3001               	movlw	1	; select bank2/3
 15183  05A4  0087               	movwf	7
 15184  05A5  0800               	movf	0,w
 15185  05A6  3FC0               	movwi [0]fsr1
 15186  05A7  0871               	movf	??_parse_temp_press_calib_data,w
 15187  05A8  3FC1               	movwi [1]fsr1
 15188                           
 15189                           ;BME280_driver/bme280.c: 1374:     calib_data->dig_H1 = reg_data[25];
 15190  05A9  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15191  05AA  3E19               	addlw	25
 15192  05AB  0086               	movwf	6
 15193  05AC  0187               	clrf	7
 15194  05AD  0801               	movf	1,w
 15195  05AE  00F1               	movwf	??_parse_temp_press_calib_data
 15196  05AF  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15197  05B0  3E18               	addlw	24
 15198  05B1  0086               	movwf	6
 15199  05B2  3001               	movlw	1	; select bank2/3
 15200  05B3  0087               	movwf	7
 15201  05B4  0871               	movf	??_parse_temp_press_calib_data,w
 15202  05B5  0081               	movwf	1
 15203  05B6  0008               	return
 15204  05B7                     __end_of_parse_temp_press_calib_data:	
 15205                           
 15206                           	psect	text65
 15207  0658                     __ptext65:	
 15208 ;; *************** function _parse_humidity_calib_data *****************
 15209 ;; Defined at:
 15210 ;;		line 1381 in file "BME280_driver/bme280.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;  reg_data        1    wreg     PTR const unsigned char 
 15213 ;;		 -> get_calib_data@calib_data(26), 
 15214 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 15215 ;;		 -> EnvSensor(51), 
 15216 ;; Auto vars:     Size  Location     Type
 15217 ;;  reg_data        1   13[COMMON] PTR const unsigned char 
 15218 ;;		 -> get_calib_data@calib_data(26), 
 15219 ;;  dig_H5_msb      2   10[COMMON] short 
 15220 ;;  dig_H5_lsb      2    8[COMMON] short 
 15221 ;;  dig_H4_msb      2    6[COMMON] short 
 15222 ;;  dig_H4_lsb      2    4[COMMON] short 
 15223 ;;  calib_data      1   12[COMMON] PTR struct bme280_calib_
 15224 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  1    wreg      void 
 15227 ;; Registers used:
 15228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15234 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15235 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15236 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15237 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15238 ;;Total ram usage:       14 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:    3
 15241 ;; This function calls:
 15242 ;;		Nothing
 15243 ;; This function is called by:
 15244 ;;		_get_calib_data
 15245 ;; This function uses a non-reentrant model
 15246 ;;
 15247                           
 15248                           
 15249                           ;psect for function _parse_humidity_calib_data
 15250  0658                     _parse_humidity_calib_data:	
 15251                           
 15252                           ;incstack = 0
 15253                           ; Regs used in _parse_humidity_calib_data: [wreg-fsr1h+status,2+status,0]
 15254                           ;parse_humidity_calib_data@reg_data stored from wreg
 15255  0658  00FD               	movwf	parse_humidity_calib_data@reg_data
 15256                           
 15257                           ;BME280_driver/bme280.c: 1381: static void parse_humidity_calib_data(const uint8_t *reg_
      +                          data, struct bme280_dev *dev);BME280_driver/bme280.c: 1382: {;BME280_driver/bme280.c: 13
      +                          83:     struct bme280_calib_data *calib_data = &dev->calib_data;
 15258  0659  0870               	movf	parse_humidity_calib_data@dev,w
 15259  065A  3E09               	addlw	9
 15260  065B  00F1               	movwf	??_parse_humidity_calib_data
 15261  065C  0871               	movf	??_parse_humidity_calib_data,w
 15262  065D  00FC               	movwf	parse_humidity_calib_data@calib_data
 15263                           
 15264                           ;BME280_driver/bme280.c: 1384:     int16_t dig_H4_lsb;;BME280_driver/bme280.c: 1385:    
      +                           int16_t dig_H4_msb;;BME280_driver/bme280.c: 1386:     int16_t dig_H5_lsb;;BME280_driver
      +                          /bme280.c: 1387:     int16_t dig_H5_msb;;BME280_driver/bme280.c: 1389:     calib_data->d
      +                          ig_H2 = (int16_t)(((uint16_t)reg_data[1] << 8) | (uint16_t)reg_data[0]);
 15265  065E  0A7D               	incf	parse_humidity_calib_data@reg_data,w
 15266  065F  0084               	movwf	4
 15267  0660  0185               	clrf	5
 15268  0661  0800               	movf	0,w
 15269  0662  00F1               	movwf	??_parse_humidity_calib_data
 15270  0663  087D               	movf	parse_humidity_calib_data@reg_data,w
 15271  0664  0084               	movwf	4
 15272  0665  0185               	clrf	5
 15273  0666  087C               	movf	parse_humidity_calib_data@calib_data,w
 15274  0667  3E19               	addlw	25
 15275  0668  0086               	movwf	6
 15276  0669  3001               	movlw	1	; select bank2/3
 15277  066A  0087               	movwf	7
 15278  066B  0800               	movf	0,w
 15279  066C  3FC0               	movwi [0]fsr1
 15280  066D  0871               	movf	??_parse_humidity_calib_data,w
 15281  066E  3FC1               	movwi [1]fsr1
 15282                           
 15283                           ;BME280_driver/bme280.c: 1390:     calib_data->dig_H3 = reg_data[2];
 15284  066F  087D               	movf	parse_humidity_calib_data@reg_data,w
 15285  0670  3E02               	addlw	2
 15286  0671  0086               	movwf	6
 15287  0672  0187               	clrf	7
 15288  0673  0801               	movf	1,w
 15289  0674  00F1               	movwf	??_parse_humidity_calib_data
 15290  0675  087C               	movf	parse_humidity_calib_data@calib_data,w
 15291  0676  3E1B               	addlw	27
 15292  0677  0086               	movwf	6
 15293  0678  3001               	movlw	1	; select bank2/3
 15294  0679  0087               	movwf	7
 15295  067A  0871               	movf	??_parse_humidity_calib_data,w
 15296  067B  0081               	movwf	1
 15297                           
 15298                           ;BME280_driver/bme280.c: 1391:     dig_H4_msb = (int16_t)(int8_t)reg_data[3] * 16;
 15299  067C  087D               	movf	parse_humidity_calib_data@reg_data,w
 15300  067D  3E03               	addlw	3
 15301  067E  0086               	movwf	6
 15302  067F  0187               	clrf	7
 15303  0680  0801               	movf	1,w
 15304  0681  00F1               	movwf	??_parse_humidity_calib_data
 15305  0682  01F2               	clrf	??_parse_humidity_calib_data+1
 15306  0683  1BF1               	btfsc	??_parse_humidity_calib_data,7
 15307  0684  03F2               	decf	??_parse_humidity_calib_data+1,f
 15308  0685  0EF1               	swapf	??_parse_humidity_calib_data,f
 15309  0686  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 15310  0687  30F0               	movlw	240
 15311  0688  05F2               	andwf	??_parse_humidity_calib_data+1,f
 15312  0689  0871               	movf	??_parse_humidity_calib_data,w
 15313  068A  390F               	andlw	15
 15314  068B  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 15315  068C  30F0               	movlw	240
 15316  068D  05F1               	andwf	??_parse_humidity_calib_data,f
 15317  068E  0871               	movf	??_parse_humidity_calib_data,w
 15318  068F  00F6               	movwf	parse_humidity_calib_data@dig_H4_msb
 15319  0690  0872               	movf	??_parse_humidity_calib_data+1,w
 15320  0691  00F7               	movwf	parse_humidity_calib_data@dig_H4_msb+1
 15321                           
 15322                           ;BME280_driver/bme280.c: 1392:     dig_H4_lsb = (int16_t)(reg_data[4] & 0x0F);
 15323  0692  087D               	movf	parse_humidity_calib_data@reg_data,w
 15324  0693  3E04               	addlw	4
 15325  0694  0086               	movwf	6
 15326  0695  0187               	clrf	7
 15327  0696  0801               	movf	1,w
 15328  0697  390F               	andlw	15
 15329  0698  00F1               	movwf	??_parse_humidity_calib_data
 15330  0699  01F2               	clrf	??_parse_humidity_calib_data+1
 15331  069A  0871               	movf	??_parse_humidity_calib_data,w
 15332  069B  00F4               	movwf	parse_humidity_calib_data@dig_H4_lsb
 15333  069C  0872               	movf	??_parse_humidity_calib_data+1,w
 15334  069D  00F5               	movwf	parse_humidity_calib_data@dig_H4_lsb+1
 15335                           
 15336                           ;BME280_driver/bme280.c: 1393:     calib_data->dig_H4 = dig_H4_msb | dig_H4_lsb;
 15337  069E  0874               	movf	parse_humidity_calib_data@dig_H4_lsb,w
 15338  069F  0476               	iorwf	parse_humidity_calib_data@dig_H4_msb,w
 15339  06A0  00F1               	movwf	??_parse_humidity_calib_data
 15340  06A1  0875               	movf	parse_humidity_calib_data@dig_H4_lsb+1,w
 15341  06A2  0477               	iorwf	parse_humidity_calib_data@dig_H4_msb+1,w
 15342  06A3  00F2               	movwf	??_parse_humidity_calib_data+1
 15343  06A4  087C               	movf	parse_humidity_calib_data@calib_data,w
 15344  06A5  3E1C               	addlw	28
 15345  06A6  0086               	movwf	6
 15346  06A7  3001               	movlw	1	; select bank2/3
 15347  06A8  0087               	movwf	7
 15348  06A9  0871               	movf	??_parse_humidity_calib_data,w
 15349  06AA  3FC0               	movwi [0]fsr1
 15350  06AB  0872               	movf	??_parse_humidity_calib_data+1,w
 15351  06AC  3FC1               	movwi [1]fsr1
 15352                           
 15353                           ;BME280_driver/bme280.c: 1394:     dig_H5_msb = (int16_t)(int8_t)reg_data[5] * 16;
 15354  06AD  087D               	movf	parse_humidity_calib_data@reg_data,w
 15355  06AE  3E05               	addlw	5
 15356  06AF  0086               	movwf	6
 15357  06B0  0187               	clrf	7
 15358  06B1  0801               	movf	1,w
 15359  06B2  00F1               	movwf	??_parse_humidity_calib_data
 15360  06B3  01F2               	clrf	??_parse_humidity_calib_data+1
 15361  06B4  1BF1               	btfsc	??_parse_humidity_calib_data,7
 15362  06B5  03F2               	decf	??_parse_humidity_calib_data+1,f
 15363  06B6  0EF1               	swapf	??_parse_humidity_calib_data,f
 15364  06B7  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 15365  06B8  30F0               	movlw	240
 15366  06B9  05F2               	andwf	??_parse_humidity_calib_data+1,f
 15367  06BA  0871               	movf	??_parse_humidity_calib_data,w
 15368  06BB  390F               	andlw	15
 15369  06BC  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 15370  06BD  30F0               	movlw	240
 15371  06BE  05F1               	andwf	??_parse_humidity_calib_data,f
 15372  06BF  0871               	movf	??_parse_humidity_calib_data,w
 15373  06C0  00FA               	movwf	parse_humidity_calib_data@dig_H5_msb
 15374  06C1  0872               	movf	??_parse_humidity_calib_data+1,w
 15375  06C2  00FB               	movwf	parse_humidity_calib_data@dig_H5_msb+1
 15376                           
 15377                           ;BME280_driver/bme280.c: 1395:     dig_H5_lsb = (int16_t)(reg_data[4] >> 4);
 15378  06C3  087D               	movf	parse_humidity_calib_data@reg_data,w
 15379  06C4  3E04               	addlw	4
 15380  06C5  0086               	movwf	6
 15381  06C6  0187               	clrf	7
 15382  06C7  0801               	movf	1,w
 15383  06C8  00F1               	movwf	??_parse_humidity_calib_data
 15384  06C9  3004               	movlw	4
 15385  06CA                     u4985:	
 15386  06CA  36F1               	lsrf	??_parse_humidity_calib_data,f
 15387  06CB  0B89               	decfsz	9,f
 15388  06CC  2ECA               	goto	u4985
 15389  06CD  0871               	movf	??_parse_humidity_calib_data,w
 15390  06CE  00F2               	movwf	??_parse_humidity_calib_data+1
 15391  06CF  01F3               	clrf	??_parse_humidity_calib_data+2
 15392  06D0  0872               	movf	??_parse_humidity_calib_data+1,w
 15393  06D1  00F8               	movwf	parse_humidity_calib_data@dig_H5_lsb
 15394  06D2  0873               	movf	??_parse_humidity_calib_data+2,w
 15395  06D3  00F9               	movwf	parse_humidity_calib_data@dig_H5_lsb+1
 15396                           
 15397                           ;BME280_driver/bme280.c: 1396:     calib_data->dig_H5 = dig_H5_msb | dig_H5_lsb;
 15398  06D4  0878               	movf	parse_humidity_calib_data@dig_H5_lsb,w
 15399  06D5  047A               	iorwf	parse_humidity_calib_data@dig_H5_msb,w
 15400  06D6  00F1               	movwf	??_parse_humidity_calib_data
 15401  06D7  0879               	movf	parse_humidity_calib_data@dig_H5_lsb+1,w
 15402  06D8  047B               	iorwf	parse_humidity_calib_data@dig_H5_msb+1,w
 15403  06D9  00F2               	movwf	??_parse_humidity_calib_data+1
 15404  06DA  087C               	movf	parse_humidity_calib_data@calib_data,w
 15405  06DB  3E1E               	addlw	30
 15406  06DC  0086               	movwf	6
 15407  06DD  3001               	movlw	1	; select bank2/3
 15408  06DE  0087               	movwf	7
 15409  06DF  0871               	movf	??_parse_humidity_calib_data,w
 15410  06E0  3FC0               	movwi [0]fsr1
 15411  06E1  0872               	movf	??_parse_humidity_calib_data+1,w
 15412  06E2  3FC1               	movwi [1]fsr1
 15413                           
 15414                           ;BME280_driver/bme280.c: 1397:     calib_data->dig_H6 = (int8_t)reg_data[6];
 15415  06E3  087D               	movf	parse_humidity_calib_data@reg_data,w
 15416  06E4  3E06               	addlw	6
 15417  06E5  0086               	movwf	6
 15418  06E6  0187               	clrf	7
 15419  06E7  0801               	movf	1,w
 15420  06E8  00F1               	movwf	??_parse_humidity_calib_data
 15421  06E9  087C               	movf	parse_humidity_calib_data@calib_data,w
 15422  06EA  3E20               	addlw	32
 15423  06EB  0086               	movwf	6
 15424  06EC  3001               	movlw	1	; select bank2/3
 15425  06ED  0087               	movwf	7
 15426  06EE  0871               	movf	??_parse_humidity_calib_data,w
 15427  06EF  0081               	movwf	1
 15428  06F0  0008               	return
 15429  06F1                     __end_of_parse_humidity_calib_data:	
 15430                           
 15431                           	psect	text66
 15432  090C                     __ptext66:	
 15433 ;; *************** function _bme280_get_regs *****************
 15434 ;; Defined at:
 15435 ;;		line 409 in file "BME280_driver/bme280.c"
 15436 ;; Parameters:    Size  Location     Type
 15437 ;;  reg_addr        1    wreg     unsigned char 
 15438 ;;  reg_data        1   23[BANK0 ] PTR unsigned char 
 15439 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 15440 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 15441 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 15442 ;;  len             2   24[BANK0 ] unsigned short 
 15443 ;;  dev             1   26[BANK0 ] PTR const struct bme280_
 15444 ;;		 -> EnvSensor(51), 
 15445 ;; Auto vars:     Size  Location     Type
 15446 ;;  reg_addr        1   30[BANK0 ] unsigned char 
 15447 ;;  rslt            1   31[BANK0 ] char 
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1    wreg      char 
 15450 ;; Registers used:
 15451 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15458 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15459 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15460 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15461 ;;Total ram usage:        9 bytes
 15462 ;; Hardware stack levels used:    1
 15463 ;; Hardware stack levels required when called:   10
 15464 ;; This function calls:
 15465 ;;		_ReadEnvSensor
 15466 ;;		_null_ptr_check
 15467 ;; This function is called by:
 15468 ;;		_bme280_init
 15469 ;;		_bme280_get_sensor_mode
 15470 ;;		_set_osr_humidity_settings
 15471 ;;		_set_osr_press_temp_settings
 15472 ;;		_set_filter_standby_settings
 15473 ;;		_write_power_mode
 15474 ;;		_put_device_to_sleep
 15475 ;;		_get_calib_data
 15476 ;;		_bme280_get_sensor_settings
 15477 ;;		_bme280_get_sensor_data
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481                           
 15482                           ;psect for function _bme280_get_regs
 15483  090C                     _bme280_get_regs:	
 15484                           
 15485                           ;incstack = 0
 15486                           ; Regs used in _bme280_get_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15487                           ;bme280_get_regs@reg_addr stored from wreg
 15488  090C  0140               	movlb	0	; select bank0
 15489  090D  00BE               	movwf	bme280_get_regs@reg_addr
 15490                           
 15491                           ;BME280_driver/bme280.c: 409: int8_t bme280_get_regs(uint8_t reg_addr, uint8_t *reg_data
      +                          , uint16_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 410: {;BME280_driv
      +                          er/bme280.c: 411:     int8_t rslt;;BME280_driver/bme280.c: 414:     rslt = null_ptr_chec
      +                          k(dev);
 15492  090E  083A               	movf	bme280_get_regs@dev,w
 15493  090F  3194  244B  3189   	fcall	_null_ptr_check
 15494  0912  0140               	movlb	0	; select bank0
 15495  0913  00BB               	movwf	??_bme280_get_regs
 15496  0914  083B               	movf	??_bme280_get_regs,w
 15497  0915  00BF               	movwf	bme280_get_regs@rslt
 15498                           
 15499                           ;BME280_driver/bme280.c: 417:     if (rslt == 0)
 15500  0916  083F               	movf	bme280_get_regs@rslt,w
 15501  0917  1D03               	btfss	3,2
 15502  0918  294E               	goto	l65
 15503                           
 15504                           ;BME280_driver/bme280.c: 418:     {;BME280_driver/bme280.c: 420:         if (dev->intf !
      +                          = BME280_I2C_INTF)
 15505  0919  083A               	movf	bme280_get_regs@dev,w
 15506  091A  3E02               	addlw	2
 15507  091B  0086               	movwf	6
 15508  091C  3001               	movlw	1	; select bank2/3
 15509  091D  0087               	movwf	7
 15510  091E  0301               	decf	1,w
 15511  091F  1903               	btfsc	3,2
 15512  0920  2926               	goto	l4934
 15513                           
 15514                           ;BME280_driver/bme280.c: 421:         {;BME280_driver/bme280.c: 422:             reg_add
      +                          r = reg_addr | 0x80;
 15515  0921  083E               	movf	bme280_get_regs@reg_addr,w
 15516  0922  3880               	iorlw	128
 15517  0923  00BB               	movwf	??_bme280_get_regs
 15518  0924  083B               	movf	??_bme280_get_regs,w
 15519  0925  00BE               	movwf	bme280_get_regs@reg_addr
 15520  0926                     l4934:	
 15521                           
 15522                           ;BME280_driver/bme280.c: 426:         rslt = dev->read(dev->dev_id, reg_addr, reg_data, 
      +                          len);
 15523  0926  083A               	movf	bme280_get_regs@dev,w
 15524  0927  0086               	movwf	6
 15525  0928  3001               	movlw	1	; select bank2/3
 15526  0929  0087               	movwf	7
 15527  092A  3001               	movlw	1	; select bank2/3
 15528  092B  3F41               	moviw [1]fsr1
 15529  092C  00AD               	movwf	ReadEnvSensor@dev_id
 15530  092D  083E               	movf	bme280_get_regs@reg_addr,w
 15531  092E  00BB               	movwf	??_bme280_get_regs
 15532  092F  083B               	movf	??_bme280_get_regs,w
 15533  0930  00AE               	movwf	ReadEnvSensor@reg_addr
 15534  0931  0837               	movf	bme280_get_regs@reg_data,w
 15535  0932  00BC               	movwf	??_bme280_get_regs+1
 15536  0933  083C               	movf	??_bme280_get_regs+1,w
 15537  0934  00AF               	movwf	ReadEnvSensor@reg_data
 15538  0935  0839               	movf	bme280_get_regs@len+1,w
 15539  0936  00B1               	movwf	ReadEnvSensor@len+1
 15540  0937  0838               	movf	bme280_get_regs@len,w
 15541  0938  00B0               	movwf	ReadEnvSensor@len
 15542  0939  083A               	movf	bme280_get_regs@dev,w
 15543  093A  3E03               	addlw	3
 15544  093B  0086               	movwf	6
 15545  093C  3001               	movlw	1	; select bank2/3
 15546  093D  0087               	movwf	7
 15547  093E  3F41               	moviw [1]fsr1
 15548  093F  008A               	movwf	10
 15549  0940  3F40               	moviw [0]fsr1
 15550  0941  000A               	callw
 15551  0942  3189               	pagesel	$
 15552  0943  0140               	movlb	0	; select bank0
 15553  0944  00BD               	movwf	??_bme280_get_regs+2
 15554  0945  083D               	movf	??_bme280_get_regs+2,w
 15555  0946  00BF               	movwf	bme280_get_regs@rslt
 15556                           
 15557                           ;BME280_driver/bme280.c: 429:         if (rslt != 0)
 15558  0947  083F               	movf	bme280_get_regs@rslt,w
 15559  0948  1903               	btfsc	3,2
 15560  0949  294E               	goto	l65
 15561                           
 15562                           ;BME280_driver/bme280.c: 430:         {;BME280_driver/bme280.c: 431:             rslt = 
      +                          -4;
 15563  094A  30FC               	movlw	252
 15564  094B  00BB               	movwf	??_bme280_get_regs
 15565  094C  083B               	movf	??_bme280_get_regs,w
 15566  094D  00BF               	movwf	bme280_get_regs@rslt
 15567  094E                     l65:	
 15568                           ;BME280_driver/bme280.c: 433:     }
 15569                           
 15570                           
 15571                           ;BME280_driver/bme280.c: 435:     return rslt;
 15572  094E  083F               	movf	bme280_get_regs@rslt,w
 15573  094F  0008               	return
 15574  0950                     __end_of_bme280_get_regs:	
 15575                           
 15576                           	psect	text67
 15577  0ABA                     __ptext67:	
 15578 ;; *************** function _ReadEnvSensor *****************
 15579 ;; Defined at:
 15580 ;;		line 127 in file "bme280_i2c.c"
 15581 ;; Parameters:    Size  Location     Type
 15582 ;;  dev_id          1   13[BANK0 ] unsigned char 
 15583 ;;  reg_addr        1   14[BANK0 ] unsigned char 
 15584 ;;  reg_data        1   15[BANK0 ] PTR unsigned char 
 15585 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 15586 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 15587 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 15588 ;;  len             2   16[BANK0 ] unsigned short 
 15589 ;; Auto vars:     Size  Location     Type
 15590 ;;  i               2   21[BANK0 ] int 
 15591 ;;  rslt            1   20[BANK0 ] char 
 15592 ;; Return value:  Size  Location     Type
 15593 ;;                  1    wreg      char 
 15594 ;; Registers used:
 15595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15596 ;; Tracked objects:
 15597 ;;		On entry : 0/0
 15598 ;;		On exit  : 0/0
 15599 ;;		Unchanged: 0/0
 15600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15601 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15602 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15603 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15604 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15605 ;;Total ram usage:       10 bytes
 15606 ;; Hardware stack levels used:    1
 15607 ;; Hardware stack levels required when called:    9
 15608 ;; This function calls:
 15609 ;;		_I2C_ReadByte
 15610 ;;		_I2C_Stop
 15611 ;;		_I2C_Wait_SSPIF
 15612 ;;		_I2C_WriteByte
 15613 ;; This function is called by:
 15614 ;;		_BME280_Init
 15615 ;;		_bme280_get_regs
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           
 15620                           ;psect for function _ReadEnvSensor
 15621  0ABA                     _ReadEnvSensor:	
 15622                           
 15623                           ;bme280_i2c.c: 127: int8_t ReadEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg_
      +                          data, uint16_t len);bme280_i2c.c: 128: {;bme280_i2c.c: 129:     int8_t rslt = 0;
 15624                           
 15625                           ;incstack = 0
 15626                           ; Regs used in _ReadEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15627  0ABA  0140               	movlb	0	; select bank0
 15628  0ABB  01B4               	clrf	ReadEnvSensor@rslt
 15629                           
 15630                           ;bme280_i2c.c: 131:     PIR3bits.SSP1IF = 0;
 15631  0ABC  014E               	movlb	14	; select bank14
 15632  0ABD  100F               	bcf	15,0	;volatile
 15633                           
 15634                           ;bme280_i2c.c: 134:     SSP1CON2bits.SEN = 1;
 15635  0ABE  0143               	movlb	3	; select bank3
 15636  0ABF  1411               	bsf	17,0	;volatile
 15637                           
 15638                           ;bme280_i2c.c: 135:     I2C_Wait_SSPIF();
 15639  0AC0  3197  27C3  318A   	fcall	_I2C_Wait_SSPIF
 15640                           
 15641                           ;bme280_i2c.c: 138:     I2C_WriteByte(dev_id << 1);
 15642  0AC3  0140               	movlb	0	; select bank0
 15643  0AC4  352D               	lslf	ReadEnvSensor@dev_id,w
 15644  0AC5  3192  22B3  318A   	fcall	_I2C_WriteByte
 15645                           
 15646                           ;bme280_i2c.c: 141:     I2C_WriteByte(reg_addr);
 15647  0AC8  0140               	movlb	0	; select bank0
 15648  0AC9  082E               	movf	ReadEnvSensor@reg_addr,w
 15649  0ACA  3192  22B3  318A   	fcall	_I2C_WriteByte
 15650                           
 15651                           ;bme280_i2c.c: 144:     SSP1CON2bits.RSEN = 1;
 15652  0ACD  0143               	movlb	3	; select bank3
 15653  0ACE  1491               	bsf	17,1	;volatile
 15654                           
 15655                           ;bme280_i2c.c: 145:     I2C_Wait_SSPIF();
 15656  0ACF  3197  27C3  318A   	fcall	_I2C_Wait_SSPIF
 15657                           
 15658                           ;bme280_i2c.c: 148:     I2C_WriteByte((dev_id << 1) | 0x01);
 15659  0AD2  1403               	setc
 15660  0AD3  0140               	movlb	0	; select bank0
 15661  0AD4  0D2D               	rlf	ReadEnvSensor@dev_id,w
 15662  0AD5  3192  22B3  318A   	fcall	_I2C_WriteByte
 15663                           
 15664                           ;bme280_i2c.c: 151:     for (int i = 0; i < len; i++)
 15665  0AD8  0140               	movlb	0	; select bank0
 15666  0AD9  01B5               	clrf	ReadEnvSensor@i
 15667  0ADA  01B6               	clrf	ReadEnvSensor@i+1
 15668  0ADB                     l4892:	
 15669  0ADB  0831               	movf	ReadEnvSensor@len+1,w
 15670  0ADC  0236               	subwf	ReadEnvSensor@i+1,w
 15671  0ADD  1D03               	skipz
 15672  0ADE  2AE1               	goto	u4635
 15673  0ADF  0830               	movf	ReadEnvSensor@len,w
 15674  0AE0  0235               	subwf	ReadEnvSensor@i,w
 15675  0AE1                     u4635:	
 15676  0AE1  1803               	btfsc	3,0
 15677  0AE2  2B06               	goto	l4894
 15678                           
 15679                           ;bme280_i2c.c: 152:     {;bme280_i2c.c: 153:         if (i == len - 1)
 15680  0AE3  0830               	movf	ReadEnvSensor@len,w
 15681  0AE4  3EFF               	addlw	255
 15682  0AE5  00B2               	movwf	??_ReadEnvSensor
 15683  0AE6  30FF               	movlw	255
 15684  0AE7  3D31               	addwfc	ReadEnvSensor@len+1,w
 15685  0AE8  00B3               	movwf	??_ReadEnvSensor+1
 15686  0AE9  0836               	movf	ReadEnvSensor@i+1,w
 15687  0AEA  0633               	xorwf	??_ReadEnvSensor+1,w
 15688  0AEB  1D03               	skipz
 15689  0AEC  2AEF               	goto	u4625
 15690  0AED  0835               	movf	ReadEnvSensor@i,w
 15691  0AEE  0632               	xorwf	??_ReadEnvSensor,w
 15692  0AEF                     u4625:	
 15693  0AEF  1D03               	skipz
 15694  0AF0  2AF3               	goto	l4888
 15695                           
 15696                           ;bme280_i2c.c: 154:         {;bme280_i2c.c: 155:             reg_data[i] = I2C_ReadByte(
      +                          1);
 15697  0AF1  3001               	movlw	1
 15698  0AF2  2AF4               	goto	L3
 15699  0AF3                     l4888:	
 15700                           ;bme280_i2c.c: 156:         }
 15701                           
 15702                           
 15703                           ;bme280_i2c.c: 158:         {;bme280_i2c.c: 159:             reg_data[i]=I2C_ReadByte(0)
      +                          ;
 15704  0AF3  3000               	movlw	0
 15705  0AF4                     L3:	
 15706  0AF4  3193  234C  318A   	fcall	_I2C_ReadByte
 15707  0AF7  0140               	movlb	0	; select bank0
 15708  0AF8  00B2               	movwf	??_ReadEnvSensor
 15709  0AF9  0835               	movf	ReadEnvSensor@i,w
 15710  0AFA  072F               	addwf	ReadEnvSensor@reg_data,w
 15711  0AFB  00B3               	movwf	??_ReadEnvSensor+1
 15712  0AFC  0833               	movf	??_ReadEnvSensor+1,w
 15713  0AFD  0086               	movwf	6
 15714  0AFE  0187               	clrf	7
 15715  0AFF  0832               	movf	??_ReadEnvSensor,w
 15716  0B00  0081               	movwf	1
 15717                           
 15718                           ;bme280_i2c.c: 161:     }
 15719  0B01  3001               	movlw	1
 15720  0B02  07B5               	addwf	ReadEnvSensor@i,f
 15721  0B03  3000               	movlw	0
 15722  0B04  3DB6               	addwfc	ReadEnvSensor@i+1,f
 15723  0B05  2ADB               	goto	l4892
 15724  0B06                     l4894:	
 15725                           
 15726                           ;bme280_i2c.c: 164:     I2C_Stop();
 15727  0B06  3192  2233         	fcall	_I2C_Stop
 15728                           
 15729                           ;bme280_i2c.c: 166:     return rslt;
 15730  0B08  0140               	movlb	0	; select bank0
 15731  0B09  0834               	movf	ReadEnvSensor@rslt,w
 15732  0B0A  0008               	return
 15733  0B0B                     __end_of_ReadEnvSensor:	
 15734                           
 15735                           	psect	text68
 15736  134C                     __ptext68:	
 15737 ;; *************** function _I2C_ReadByte *****************
 15738 ;; Defined at:
 15739 ;;		line 53 in file "bme280_i2c.c"
 15740 ;; Parameters:    Size  Location     Type
 15741 ;;  ackbit          1    wreg     unsigned char 
 15742 ;; Auto vars:     Size  Location     Type
 15743 ;;  ackbit          1   11[BANK0 ] unsigned char 
 15744 ;;  rcvdata         1   12[BANK0 ] unsigned char 
 15745 ;; Return value:  Size  Location     Type
 15746 ;;                  1    wreg      unsigned char 
 15747 ;; Registers used:
 15748 ;;		wreg, status,2, status,0, pclath, cstack
 15749 ;; Tracked objects:
 15750 ;;		On entry : 0/0
 15751 ;;		On exit  : 0/0
 15752 ;;		Unchanged: 0/0
 15753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15755 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15757 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15758 ;;Total ram usage:        3 bytes
 15759 ;; Hardware stack levels used:    1
 15760 ;; Hardware stack levels required when called:    6
 15761 ;; This function calls:
 15762 ;;		_I2C_Wait_SSPIF
 15763 ;; This function is called by:
 15764 ;;		_ReadEnvSensor
 15765 ;; This function uses a non-reentrant model
 15766 ;;
 15767                           
 15768                           
 15769                           ;psect for function _I2C_ReadByte
 15770  134C                     _I2C_ReadByte:	
 15771                           
 15772                           ;incstack = 0
 15773                           ; Regs used in _I2C_ReadByte: [wreg+status,2+status,0+pclath+cstack]
 15774                           ;I2C_ReadByte@ackbit stored from wreg
 15775  134C  0140               	movlb	0	; select bank0
 15776  134D  00AB               	movwf	I2C_ReadByte@ackbit
 15777                           
 15778                           ;bme280_i2c.c: 53: uint8_t I2C_ReadByte(uint8_t ackbit);bme280_i2c.c: 54: {;bme280_i2c.c
      +                          : 55:     uint8_t rcvdata;;bme280_i2c.c: 57:     SSP1CON2bits.RCEN = 1;
 15779  134E  0143               	movlb	3	; select bank3
 15780  134F  1591               	bsf	17,3	;volatile
 15781                           
 15782                           ;bme280_i2c.c: 58:     I2C_Wait_SSPIF();
 15783  1350  3197  27C3  3193   	fcall	_I2C_Wait_SSPIF
 15784                           
 15785                           ;bme280_i2c.c: 60:     rcvdata = SSP1BUF;
 15786  1353  0143               	movlb	3	; select bank3
 15787  1354  080C               	movf	12,w	;volatile
 15788  1355  00FD               	movwf	??_I2C_ReadByte
 15789  1356  087D               	movf	??_I2C_ReadByte,w
 15790  1357  0140               	movlb	0	; select bank0
 15791  1358  00AC               	movwf	I2C_ReadByte@rcvdata
 15792                           
 15793                           ;bme280_i2c.c: 63:     SSP1CON2bits.ACKDT = ackbit;
 15794  1359  0C2B               	rrf	I2C_ReadByte@ackbit,w
 15795  135A  0143               	movlb	3	; select bank3
 15796  135B  1C03               	skipc
 15797  135C  1291               	bcf	17,5	;volatile
 15798  135D  1803               	skipnc
 15799  135E  1691               	bsf	17,5	;volatile
 15800                           
 15801                           ;bme280_i2c.c: 64:     SSP1CON2bits.ACKEN = 1;
 15802  135F  1611               	bsf	17,4	;volatile
 15803                           
 15804                           ;bme280_i2c.c: 65:     I2C_Wait_SSPIF();
 15805  1360  3197  27C3         	fcall	_I2C_Wait_SSPIF
 15806                           
 15807                           ;bme280_i2c.c: 67:     return (rcvdata);
 15808  1362  0140               	movlb	0	; select bank0
 15809  1363  082C               	movf	I2C_ReadByte@rcvdata,w
 15810  1364  0008               	return
 15811  1365                     __end_of_I2C_ReadByte:	
 15812                           
 15813                           	psect	text69
 15814  1787                     __ptext69:	
 15815 ;; *************** function _bme280_soft_reset *****************
 15816 ;; Defined at:
 15817 ;;		line 631 in file "BME280_driver/bme280.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  dev             1    wreg     PTR const struct bme280_
 15820 ;;		 -> EnvSensor(51), 
 15821 ;; Auto vars:     Size  Location     Type
 15822 ;;  dev             1   57[BANK0 ] PTR const struct bme280_
 15823 ;;		 -> EnvSensor(51), 
 15824 ;;  reg_addr        1   56[BANK0 ] unsigned char 
 15825 ;;  rslt            1   55[BANK0 ] char 
 15826 ;;  soft_rst_cmd    1   54[BANK0 ] unsigned char 
 15827 ;; Return value:  Size  Location     Type
 15828 ;;                  1    wreg      char 
 15829 ;; Registers used:
 15830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15831 ;; Tracked objects:
 15832 ;;		On entry : 0/0
 15833 ;;		On exit  : 0/0
 15834 ;;		Unchanged: 0/0
 15835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15837 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15838 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15839 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15840 ;;Total ram usage:        7 bytes
 15841 ;; Hardware stack levels used:    1
 15842 ;; Hardware stack levels required when called:   11
 15843 ;; This function calls:
 15844 ;;		_Sleep
 15845 ;;		_bme280_set_regs
 15846 ;;		_null_ptr_check
 15847 ;; This function is called by:
 15848 ;;		_bme280_init
 15849 ;;		_put_device_to_sleep
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           
 15854                           ;psect for function _bme280_soft_reset
 15855  1787                     _bme280_soft_reset:	
 15856                           
 15857                           ;incstack = 0
 15858                           ; Regs used in _bme280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15859                           ;bme280_soft_reset@dev stored from wreg
 15860  1787  0140               	movlb	0	; select bank0
 15861  1788  00D9               	movwf	bme280_soft_reset@dev
 15862                           
 15863                           ;BME280_driver/bme280.c: 631: int8_t bme280_soft_reset(const struct bme280_dev *dev);BME
      +                          280_driver/bme280.c: 632: {;BME280_driver/bme280.c: 633:     int8_t rslt;;BME280_driver/
      +                          bme280.c: 634:     uint8_t reg_addr = 0xE0;
 15864  1789  30E0               	movlw	224
 15865  178A  00D3               	movwf	??_bme280_soft_reset
 15866  178B  0853               	movf	??_bme280_soft_reset,w
 15867  178C  00D8               	movwf	bme280_soft_reset@reg_addr
 15868                           
 15869                           ;BME280_driver/bme280.c: 637:     uint8_t soft_rst_cmd = 0xB6;
 15870  178D  30B6               	movlw	182
 15871  178E  00D3               	movwf	??_bme280_soft_reset
 15872  178F  0853               	movf	??_bme280_soft_reset,w
 15873  1790  00D6               	movwf	bme280_soft_reset@soft_rst_cmd
 15874                           
 15875                           ;BME280_driver/bme280.c: 640:     rslt = null_ptr_check(dev);
 15876  1791  0859               	movf	bme280_soft_reset@dev,w
 15877  1792  3194  244B  3197   	fcall	_null_ptr_check
 15878  1795  0140               	movlb	0	; select bank0
 15879  1796  00D3               	movwf	??_bme280_soft_reset
 15880  1797  0853               	movf	??_bme280_soft_reset,w
 15881  1798  00D7               	movwf	bme280_soft_reset@rslt
 15882                           
 15883                           ;BME280_driver/bme280.c: 643:     if (rslt == 0)
 15884  1799  0857               	movf	bme280_soft_reset@rslt,w
 15885  179A  1D03               	btfss	3,2
 15886  179B  2FC0               	goto	l5084
 15887                           
 15888                           ;BME280_driver/bme280.c: 644:     {;BME280_driver/bme280.c: 646:         rslt = bme280_s
      +                          et_regs(&reg_addr, &soft_rst_cmd, 1, dev);
 15889  179C  3056               	movlw	(low (bme280_soft_reset@soft_rst_cmd| 0))& (0+255)
 15890  179D  00D3               	movwf	??_bme280_soft_reset
 15891  179E  0853               	movf	??_bme280_soft_reset,w
 15892  179F  00B4               	movwf	bme280_set_regs@reg_data
 15893  17A0  01B5               	clrf	bme280_set_regs@len
 15894  17A1  0AB5               	incf	bme280_set_regs@len,f
 15895  17A2  0859               	movf	bme280_soft_reset@dev,w
 15896  17A3  00D4               	movwf	??_bme280_soft_reset+1
 15897  17A4  0854               	movf	??_bme280_soft_reset+1,w
 15898  17A5  00B6               	movwf	bme280_set_regs@dev
 15899  17A6  3058               	movlw	(low (bme280_soft_reset@reg_addr| 0))& (0+255)
 15900  17A7  3185  25B7  3197   	fcall	_bme280_set_regs
 15901  17AA  0140               	movlb	0	; select bank0
 15902  17AB  00D5               	movwf	??_bme280_soft_reset+2
 15903  17AC  0855               	movf	??_bme280_soft_reset+2,w
 15904  17AD  00D7               	movwf	bme280_soft_reset@rslt
 15905                           
 15906                           ;BME280_driver/bme280.c: 649:         dev->delay_ms(2);
 15907  17AE  3000               	movlw	0
 15908  17AF  00F3               	movwf	Sleep@ms+3
 15909  17B0  3000               	movlw	0
 15910  17B1  00F2               	movwf	Sleep@ms+2
 15911  17B2  3000               	movlw	0
 15912  17B3  00F1               	movwf	Sleep@ms+1
 15913  17B4  3002               	movlw	2
 15914  17B5  00F0               	movwf	Sleep@ms
 15915  17B6  0859               	movf	bme280_soft_reset@dev,w
 15916  17B7  3E07               	addlw	7
 15917  17B8  0086               	movwf	6
 15918  17B9  3001               	movlw	1	; select bank2/3
 15919  17BA  0087               	movwf	7
 15920  17BB  3F41               	moviw [1]fsr1
 15921  17BC  008A               	movwf	10
 15922  17BD  3F40               	moviw [0]fsr1
 15923  17BE  000A               	callw
 15924  17BF  3197               	pagesel	$
 15925  17C0                     l5084:	
 15926                           
 15927                           ;BME280_driver/bme280.c: 652:     return rslt;
 15928  17C0  0140               	movlb	0	; select bank0
 15929  17C1  0857               	movf	bme280_soft_reset@rslt,w
 15930  17C2  0008               	return
 15931  17C3                     __end_of_bme280_soft_reset:	
 15932                           
 15933                           	psect	text70
 15934  05B7                     __ptext70:	
 15935 ;; *************** function _bme280_set_regs *****************
 15936 ;; Defined at:
 15937 ;;		line 442 in file "BME280_driver/bme280.c"
 15938 ;; Parameters:    Size  Location     Type
 15939 ;;  reg_addr        1    wreg     PTR unsigned char 
 15940 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 15941 ;;		 -> bme280_soft_reset@reg_addr(1), 
 15942 ;;  reg_data        1   20[BANK0 ] PTR const unsigned char 
 15943 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 15944 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 15945 ;;  len             1   21[BANK0 ] unsigned char 
 15946 ;;  dev             1   22[BANK0 ] PTR const struct bme280_
 15947 ;;		 -> EnvSensor(51), 
 15948 ;; Auto vars:     Size  Location     Type
 15949 ;;  reg_addr        1   50[BANK0 ] PTR unsigned char 
 15950 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 15951 ;;		 -> bme280_soft_reset@reg_addr(1), 
 15952 ;;  temp_buff      20   26[BANK0 ] unsigned char [20]
 15953 ;;  temp_len        2   46[BANK0 ] unsigned short 
 15954 ;;  rslt            1   49[BANK0 ] char 
 15955 ;;  reg_addr_cnt    1   48[BANK0 ] unsigned char 
 15956 ;; Return value:  Size  Location     Type
 15957 ;;                  1    wreg      char 
 15958 ;; Registers used:
 15959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15960 ;; Tracked objects:
 15961 ;;		On entry : 0/0
 15962 ;;		On exit  : 0/0
 15963 ;;		Unchanged: 0/0
 15964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15965 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15966 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15967 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15968 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15969 ;;Total ram usage:       31 bytes
 15970 ;; Hardware stack levels used:    1
 15971 ;; Hardware stack levels required when called:   10
 15972 ;; This function calls:
 15973 ;;		_WriteEnvSensor
 15974 ;;		_interleave_reg_addr
 15975 ;;		_null_ptr_check
 15976 ;; This function is called by:
 15977 ;;		_bme280_soft_reset
 15978 ;;		_set_osr_humidity_settings
 15979 ;;		_set_osr_press_temp_settings
 15980 ;;		_set_filter_standby_settings
 15981 ;;		_write_power_mode
 15982 ;; This function uses a non-reentrant model
 15983 ;;
 15984                           
 15985                           
 15986                           ;psect for function _bme280_set_regs
 15987  05B7                     _bme280_set_regs:	
 15988                           
 15989                           ;incstack = 0
 15990                           ; Regs used in _bme280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15991                           ;bme280_set_regs@reg_addr stored from wreg
 15992  05B7  0140               	movlb	0	; select bank0
 15993  05B8  00D2               	movwf	bme280_set_regs@reg_addr
 15994                           
 15995                           ;BME280_driver/bme280.c: 442: int8_t bme280_set_regs(uint8_t *reg_addr, const uint8_t *r
      +                          eg_data, uint8_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 443: {;BME28
      +                          0_driver/bme280.c: 444:     int8_t rslt;;BME280_driver/bme280.c: 445:     uint8_t temp_b
      +                          uff[20];;BME280_driver/bme280.c: 447:     if (len > 10)
 15996  05B9  300B               	movlw	11
 15997  05BA  0235               	subwf	bme280_set_regs@len,w
 15998  05BB  1C03               	skipc
 15999  05BC  2DC1               	goto	l4946
 16000                           
 16001                           ;BME280_driver/bme280.c: 448:     {;BME280_driver/bme280.c: 449:         len = 10;
 16002  05BD  300A               	movlw	10
 16003  05BE  00B7               	movwf	??_bme280_set_regs
 16004  05BF  0837               	movf	??_bme280_set_regs,w
 16005  05C0  00B5               	movwf	bme280_set_regs@len
 16006  05C1                     l4946:	
 16007                           
 16008                           ;BME280_driver/bme280.c: 451:     uint16_t temp_len;;BME280_driver/bme280.c: 452:     ui
      +                          nt8_t reg_addr_cnt;;BME280_driver/bme280.c: 455:     rslt = null_ptr_check(dev);
 16009  05C1  0836               	movf	bme280_set_regs@dev,w
 16010  05C2  3194  244B  3185   	fcall	_null_ptr_check
 16011  05C5  0140               	movlb	0	; select bank0
 16012  05C6  00B7               	movwf	??_bme280_set_regs
 16013  05C7  0837               	movf	??_bme280_set_regs,w
 16014  05C8  00D1               	movwf	bme280_set_regs@rslt
 16015                           
 16016                           ;BME280_driver/bme280.c: 458:     if ((rslt == 0) && (reg_addr != ((void*)0)) && (reg_da
      +                          ta != ((void*)0)))
 16017  05C9  0851               	movf	bme280_set_regs@rslt,w
 16018  05CA  1D03               	btfss	3,2
 16019  05CB  2E54               	goto	l72
 16020  05CC  0852               	movf	bme280_set_regs@reg_addr,w
 16021  05CD  1903               	btfsc	3,2
 16022  05CE  2E54               	goto	l72
 16023  05CF  0834               	movf	bme280_set_regs@reg_data,w
 16024  05D0  1903               	btfsc	3,2
 16025  05D1  2E54               	goto	l72
 16026                           
 16027                           ;BME280_driver/bme280.c: 459:     {;BME280_driver/bme280.c: 460:         if (len != 0)
 16028  05D2  0835               	movf	bme280_set_regs@len,w
 16029  05D3  1903               	btfsc	3,2
 16030  05D4  2E4F               	goto	l4982
 16031                           
 16032                           ;BME280_driver/bme280.c: 461:         {;BME280_driver/bme280.c: 462:             temp_bu
      +                          ff[0] = reg_data[0];
 16033  05D5  0834               	movf	bme280_set_regs@reg_data,w
 16034  05D6  0086               	movwf	6
 16035  05D7  0187               	clrf	7
 16036  05D8  0801               	movf	1,w
 16037  05D9  00B7               	movwf	??_bme280_set_regs
 16038  05DA  0837               	movf	??_bme280_set_regs,w
 16039  05DB  00BA               	movwf	bme280_set_regs@temp_buff
 16040                           
 16041                           ;BME280_driver/bme280.c: 465:             if (dev->intf != BME280_I2C_INTF)
 16042  05DC  0836               	movf	bme280_set_regs@dev,w
 16043  05DD  3E02               	addlw	2
 16044  05DE  0086               	movwf	6
 16045  05DF  3001               	movlw	1	; select bank2/3
 16046  05E0  0087               	movwf	7
 16047  05E1  0301               	decf	1,w
 16048  05E2  1903               	btfsc	3,2
 16049  05E3  2DFF               	goto	l4968
 16050                           
 16051                           ;BME280_driver/bme280.c: 466:             {;BME280_driver/bme280.c: 467:                
      +                           for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
 16052  05E4  01D0               	clrf	bme280_set_regs@reg_addr_cnt
 16053  05E5                     l4966:	
 16054  05E5  0835               	movf	bme280_set_regs@len,w
 16055  05E6  0250               	subwf	bme280_set_regs@reg_addr_cnt,w
 16056  05E7  1803               	btfsc	3,0
 16057  05E8  2DFF               	goto	l4968
 16058                           
 16059                           ;BME280_driver/bme280.c: 468:                 {;BME280_driver/bme280.c: 469:            
      +                                   reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
 16060  05E9  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 16061  05EA  0752               	addwf	bme280_set_regs@reg_addr,w
 16062  05EB  00B7               	movwf	??_bme280_set_regs
 16063  05EC  0837               	movf	??_bme280_set_regs,w
 16064  05ED  0086               	movwf	6
 16065  05EE  0187               	clrf	7
 16066  05EF  0801               	movf	1,w
 16067  05F0  397F               	andlw	127
 16068  05F1  00B8               	movwf	??_bme280_set_regs+1
 16069  05F2  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 16070  05F3  0752               	addwf	bme280_set_regs@reg_addr,w
 16071  05F4  00B9               	movwf	??_bme280_set_regs+2
 16072  05F5  0839               	movf	??_bme280_set_regs+2,w
 16073  05F6  0086               	movwf	6
 16074  05F7  0187               	clrf	7
 16075  05F8  0838               	movf	??_bme280_set_regs+1,w
 16076  05F9  0081               	movwf	1
 16077                           
 16078                           ;BME280_driver/bme280.c: 470:                 }
 16079  05FA  3001               	movlw	1
 16080  05FB  00B7               	movwf	??_bme280_set_regs
 16081  05FC  0837               	movf	??_bme280_set_regs,w
 16082  05FD  07D0               	addwf	bme280_set_regs@reg_addr_cnt,f
 16083  05FE  2DE5               	goto	l4966
 16084  05FF                     l4968:	
 16085                           
 16086                           ;BME280_driver/bme280.c: 474:             if (len > 1)
 16087  05FF  3002               	movlw	2
 16088  0600  0235               	subwf	bme280_set_regs@len,w
 16089  0601  1C03               	skipc
 16090  0602  2E1F               	goto	l4974
 16091                           
 16092                           ;BME280_driver/bme280.c: 475:             {;BME280_driver/bme280.c: 479:                
      +                           interleave_reg_addr(reg_addr, temp_buff, reg_data, len);
 16093  0603  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 16094  0604  00B7               	movwf	??_bme280_set_regs
 16095  0605  0837               	movf	??_bme280_set_regs,w
 16096  0606  00F0               	movwf	interleave_reg_addr@temp_buff
 16097  0607  0834               	movf	bme280_set_regs@reg_data,w
 16098  0608  00B8               	movwf	??_bme280_set_regs+1
 16099  0609  0838               	movf	??_bme280_set_regs+1,w
 16100  060A  00F1               	movwf	interleave_reg_addr@reg_data
 16101  060B  0835               	movf	bme280_set_regs@len,w
 16102  060C  00B9               	movwf	??_bme280_set_regs+2
 16103  060D  0839               	movf	??_bme280_set_regs+2,w
 16104  060E  00F2               	movwf	interleave_reg_addr@len
 16105  060F  0852               	movf	bme280_set_regs@reg_addr,w
 16106  0610  3196  2631  3185   	fcall	_interleave_reg_addr
 16107                           
 16108                           ;BME280_driver/bme280.c: 480:                 temp_len = ((len * 2) - 1);
 16109  0613  0140               	movlb	0	; select bank0
 16110  0614  0835               	movf	bme280_set_regs@len,w
 16111  0615  00B7               	movwf	??_bme280_set_regs
 16112  0616  01B8               	clrf	??_bme280_set_regs+1
 16113  0617  35B7               	lslf	??_bme280_set_regs,f
 16114  0618  0DB8               	rlf	??_bme280_set_regs+1,f
 16115  0619  0837               	movf	??_bme280_set_regs,w
 16116  061A  3EFF               	addlw	255
 16117  061B  00CE               	movwf	bme280_set_regs@temp_len
 16118  061C  30FF               	movlw	255
 16119  061D  3D38               	addwfc	??_bme280_set_regs+1,w
 16120  061E  2E25               	goto	L4
 16121  061F                     l4974:	
 16122                           ;BME280_driver/bme280.c: 481:             }
 16123                           
 16124                           
 16125                           ;BME280_driver/bme280.c: 483:             {;BME280_driver/bme280.c: 484:                
      +                           temp_len = len;
 16126  061F  0835               	movf	bme280_set_regs@len,w
 16127  0620  00B7               	movwf	??_bme280_set_regs
 16128  0621  01B8               	clrf	??_bme280_set_regs+1
 16129  0622  0837               	movf	??_bme280_set_regs,w
 16130  0623  00CE               	movwf	bme280_set_regs@temp_len
 16131  0624  0838               	movf	??_bme280_set_regs+1,w
 16132  0625                     L4:	
 16133  0625  00CF               	movwf	bme280_set_regs@temp_len+1
 16134                           
 16135                           ;BME280_driver/bme280.c: 486:             rslt = dev->write(dev->dev_id, reg_addr[0], te
      +                          mp_buff, temp_len);
 16136  0626  0836               	movf	bme280_set_regs@dev,w
 16137  0627  0086               	movwf	6
 16138  0628  3001               	movlw	1	; select bank2/3
 16139  0629  0087               	movwf	7
 16140  062A  3001               	movlw	1	; select bank2/3
 16141  062B  3F41               	moviw [1]fsr1
 16142  062C  00AB               	movwf	WriteEnvSensor@dev_id
 16143  062D  0852               	movf	bme280_set_regs@reg_addr,w
 16144  062E  0086               	movwf	6
 16145  062F  0187               	clrf	7
 16146  0630  0801               	movf	1,w
 16147  0631  00B7               	movwf	??_bme280_set_regs
 16148  0632  0837               	movf	??_bme280_set_regs,w
 16149  0633  00AC               	movwf	WriteEnvSensor@reg_addr
 16150  0634  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 16151  0635  00B8               	movwf	??_bme280_set_regs+1
 16152  0636  0838               	movf	??_bme280_set_regs+1,w
 16153  0637  00AD               	movwf	WriteEnvSensor@reg_data
 16154  0638  084F               	movf	bme280_set_regs@temp_len+1,w
 16155  0639  00AF               	movwf	WriteEnvSensor@len+1
 16156  063A  084E               	movf	bme280_set_regs@temp_len,w
 16157  063B  00AE               	movwf	WriteEnvSensor@len
 16158  063C  0836               	movf	bme280_set_regs@dev,w
 16159  063D  3E05               	addlw	5
 16160  063E  0086               	movwf	6
 16161  063F  3001               	movlw	1	; select bank2/3
 16162  0640  0087               	movwf	7
 16163  0641  3F41               	moviw [1]fsr1
 16164  0642  008A               	movwf	10
 16165  0643  3F40               	moviw [0]fsr1
 16166  0644  000A               	callw
 16167  0645  3185               	pagesel	$
 16168  0646  0140               	movlb	0	; select bank0
 16169  0647  00B9               	movwf	??_bme280_set_regs+2
 16170  0648  0839               	movf	??_bme280_set_regs+2,w
 16171  0649  00D1               	movwf	bme280_set_regs@rslt
 16172                           
 16173                           ;BME280_driver/bme280.c: 489:             if (rslt != 0)
 16174  064A  0851               	movf	bme280_set_regs@rslt,w
 16175  064B  1903               	btfsc	3,2
 16176  064C  2E56               	goto	l4984
 16177                           
 16178                           ;BME280_driver/bme280.c: 490:             {;BME280_driver/bme280.c: 491:                
      +                           rslt = -4;
 16179  064D  30FC               	movlw	252
 16180  064E  2E50               	goto	L5
 16181  064F                     l4982:	
 16182                           
 16183                           ;BME280_driver/bme280.c: 495:         {;BME280_driver/bme280.c: 496:             rslt = 
      +                          -3;
 16184  064F  30FD               	movlw	253
 16185  0650                     L5:	
 16186  0650  00B7               	movwf	??_bme280_set_regs
 16187  0651  0837               	movf	??_bme280_set_regs,w
 16188  0652  00D1               	movwf	bme280_set_regs@rslt
 16189  0653  2E56               	goto	l4984
 16190  0654                     l72:	
 16191                           ;BME280_driver/bme280.c: 499:     else
 16192                           
 16193                           
 16194                           ;BME280_driver/bme280.c: 500:     {;BME280_driver/bme280.c: 501:         rslt = -1;
 16195  0654  01D1               	clrf	bme280_set_regs@rslt
 16196  0655  03D1               	decf	bme280_set_regs@rslt,f
 16197  0656                     l4984:	
 16198                           
 16199                           ;BME280_driver/bme280.c: 504:     return rslt;
 16200  0656  0851               	movf	bme280_set_regs@rslt,w
 16201  0657  0008               	return
 16202  0658                     __end_of_bme280_set_regs:	
 16203                           
 16204                           	psect	text71
 16205  144B                     __ptext71:	
 16206 ;; *************** function _null_ptr_check *****************
 16207 ;; Defined at:
 16208 ;;		line 1426 in file "BME280_driver/bme280.c"
 16209 ;; Parameters:    Size  Location     Type
 16210 ;;  dev             1    wreg     PTR const struct bme280_
 16211 ;;		 -> EnvSensor(51), 
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;  dev             1    3[COMMON] PTR const struct bme280_
 16214 ;;		 -> EnvSensor(51), 
 16215 ;;  rslt            1    2[COMMON] char 
 16216 ;; Return value:  Size  Location     Type
 16217 ;;                  1    wreg      char 
 16218 ;; Registers used:
 16219 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16220 ;; Tracked objects:
 16221 ;;		On entry : 0/0
 16222 ;;		On exit  : 0/0
 16223 ;;		Unchanged: 0/0
 16224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16229 ;;Total ram usage:        4 bytes
 16230 ;; Hardware stack levels used:    1
 16231 ;; Hardware stack levels required when called:    3
 16232 ;; This function calls:
 16233 ;;		Nothing
 16234 ;; This function is called by:
 16235 ;;		_bme280_init
 16236 ;;		_bme280_get_regs
 16237 ;;		_bme280_set_regs
 16238 ;;		_bme280_set_sensor_settings
 16239 ;;		_bme280_set_sensor_mode
 16240 ;;		_bme280_get_sensor_mode
 16241 ;;		_bme280_soft_reset
 16242 ;;		_bme280_get_sensor_settings
 16243 ;;		_bme280_get_sensor_data
 16244 ;; This function uses a non-reentrant model
 16245 ;;
 16246                           
 16247                           
 16248                           ;psect for function _null_ptr_check
 16249  144B                     _null_ptr_check:	
 16250                           
 16251                           ;incstack = 0
 16252                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
 16253                           ;null_ptr_check@dev stored from wreg
 16254  144B  00F3               	movwf	null_ptr_check@dev
 16255                           
 16256                           ;BME280_driver/bme280.c: 1426: static int8_t null_ptr_check(const struct bme280_dev *dev
      +                          );BME280_driver/bme280.c: 1427: {;BME280_driver/bme280.c: 1428:     int8_t rslt;;BME280_
      +                          driver/bme280.c: 1430:     if ((dev == ((void*)0)) || (dev->read == ((void*)0)) || (dev-
      +                          >write == ((void*)0)) || (dev->delay_ms == ((void*)0)))
 16257  144C  0873               	movf	null_ptr_check@dev,w
 16258  144D  1903               	btfsc	3,2
 16259  144E  2C6A               	goto	l238
 16260  144F  0873               	movf	null_ptr_check@dev,w
 16261  1450  3E03               	addlw	3
 16262  1451  0086               	movwf	6
 16263  1452  3001               	movlw	1	; select bank2/3
 16264  1453  0087               	movwf	7
 16265  1454  0016               	moviw fsr1++
 16266  1455  0401               	iorwf	1,w
 16267  1456  1903               	btfsc	3,2
 16268  1457  2C6A               	goto	l238
 16269  1458  0873               	movf	null_ptr_check@dev,w
 16270  1459  3E05               	addlw	5
 16271  145A  0086               	movwf	6
 16272  145B  3001               	movlw	1	; select bank2/3
 16273  145C  0087               	movwf	7
 16274  145D  0016               	moviw fsr1++
 16275  145E  0401               	iorwf	1,w
 16276  145F  1903               	btfsc	3,2
 16277  1460  2C6A               	goto	l238
 16278  1461  0873               	movf	null_ptr_check@dev,w
 16279  1462  3E07               	addlw	7
 16280  1463  0086               	movwf	6
 16281  1464  3001               	movlw	1	; select bank2/3
 16282  1465  0087               	movwf	7
 16283  1466  0016               	moviw fsr1++
 16284  1467  0401               	iorwf	1,w
 16285  1468  1D03               	btfss	3,2
 16286  1469  2C6D               	goto	l4850
 16287  146A                     l238:	
 16288                           
 16289                           ;BME280_driver/bme280.c: 1431:     {;BME280_driver/bme280.c: 1433:         rslt = -1;
 16290  146A  01F2               	clrf	null_ptr_check@rslt
 16291  146B  03F2               	decf	null_ptr_check@rslt,f
 16292                           
 16293                           ;BME280_driver/bme280.c: 1434:     }
 16294  146C  2C6E               	goto	l4852
 16295  146D                     l4850:	
 16296                           
 16297                           ;BME280_driver/bme280.c: 1436:     {;BME280_driver/bme280.c: 1438:         rslt = 0;
 16298  146D  01F2               	clrf	null_ptr_check@rslt
 16299  146E                     l4852:	
 16300                           
 16301                           ;BME280_driver/bme280.c: 1441:     return rslt;
 16302  146E  0872               	movf	null_ptr_check@rslt,w
 16303  146F  0008               	return
 16304  1470                     __end_of_null_ptr_check:	
 16305                           
 16306                           	psect	text72
 16307  1631                     __ptext72:	
 16308 ;; *************** function _interleave_reg_addr *****************
 16309 ;; Defined at:
 16310 ;;		line 1343 in file "BME280_driver/bme280.c"
 16311 ;; Parameters:    Size  Location     Type
 16312 ;;  reg_addr        1    wreg     PTR const unsigned char 
 16313 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 16314 ;;		 -> bme280_soft_reset@reg_addr(1), 
 16315 ;;  temp_buff       1    0[COMMON] PTR unsigned char 
 16316 ;;		 -> bme280_set_regs@temp_buff(20), 
 16317 ;;  reg_data        1    1[COMMON] PTR const unsigned char 
 16318 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 16319 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 16320 ;;  len             1    2[COMMON] unsigned char 
 16321 ;; Auto vars:     Size  Location     Type
 16322 ;;  reg_addr        1    6[COMMON] PTR const unsigned char 
 16323 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 16324 ;;		 -> bme280_soft_reset@reg_addr(1), 
 16325 ;;  index           1    7[COMMON] unsigned char 
 16326 ;; Return value:  Size  Location     Type
 16327 ;;                  1    wreg      void 
 16328 ;; Registers used:
 16329 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16330 ;; Tracked objects:
 16331 ;;		On entry : 0/0
 16332 ;;		On exit  : 0/0
 16333 ;;		Unchanged: 0/0
 16334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16335 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16337 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16338 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16339 ;;Total ram usage:        8 bytes
 16340 ;; Hardware stack levels used:    1
 16341 ;; Hardware stack levels required when called:    3
 16342 ;; This function calls:
 16343 ;;		Nothing
 16344 ;; This function is called by:
 16345 ;;		_bme280_set_regs
 16346 ;; This function uses a non-reentrant model
 16347 ;;
 16348                           
 16349                           
 16350                           ;psect for function _interleave_reg_addr
 16351  1631                     _interleave_reg_addr:	
 16352                           
 16353                           ;incstack = 0
 16354                           ; Regs used in _interleave_reg_addr: [wreg+fsr1l+fsr1h+status,2+status,0]
 16355                           ;interleave_reg_addr@reg_addr stored from wreg
 16356  1631  00F6               	movwf	interleave_reg_addr@reg_addr
 16357                           
 16358                           ;BME280_driver/bme280.c: 1343: static void interleave_reg_addr(const uint8_t *reg_addr, 
      +                          uint8_t *temp_buff, const uint8_t *reg_data, uint8_t len);BME280_driver/bme280.c: 1344: 
      +                          {;BME280_driver/bme280.c: 1345:     uint8_t index;;BME280_driver/bme280.c: 1347:     for
      +                           (index = 1; index < len; index++)
 16359  1632  01F7               	clrf	interleave_reg_addr@index
 16360  1633  0AF7               	incf	interleave_reg_addr@index,f
 16361  1634                     l4862:	
 16362  1634  0872               	movf	interleave_reg_addr@len,w
 16363  1635  0277               	subwf	interleave_reg_addr@index,w
 16364  1636  1803               	btfsc	3,0
 16365  1637  0008               	return
 16366                           
 16367                           ;BME280_driver/bme280.c: 1348:     {;BME280_driver/bme280.c: 1349:         temp_buff[(in
      +                          dex * 2) - 1] = reg_addr[index];
 16368  1638  0877               	movf	interleave_reg_addr@index,w
 16369  1639  0776               	addwf	interleave_reg_addr@reg_addr,w
 16370  163A  00F3               	movwf	??_interleave_reg_addr
 16371  163B  0873               	movf	??_interleave_reg_addr,w
 16372  163C  0086               	movwf	6
 16373  163D  0187               	clrf	7
 16374  163E  0801               	movf	1,w
 16375  163F  00F4               	movwf	??_interleave_reg_addr+1
 16376  1640  3577               	lslf	interleave_reg_addr@index,w
 16377  1641  0770               	addwf	interleave_reg_addr@temp_buff,w
 16378  1642  00F5               	movwf	??_interleave_reg_addr+2
 16379  1643  0875               	movf	??_interleave_reg_addr+2,w
 16380  1644  3EFF               	addlw	-1
 16381  1645  0086               	movwf	6
 16382  1646  0187               	clrf	7
 16383  1647  0874               	movf	??_interleave_reg_addr+1,w
 16384  1648  0081               	movwf	1
 16385                           
 16386                           ;BME280_driver/bme280.c: 1350:         temp_buff[index * 2] = reg_data[index];
 16387  1649  0877               	movf	interleave_reg_addr@index,w
 16388  164A  0771               	addwf	interleave_reg_addr@reg_data,w
 16389  164B  00F3               	movwf	??_interleave_reg_addr
 16390  164C  0873               	movf	??_interleave_reg_addr,w
 16391  164D  0086               	movwf	6
 16392  164E  0187               	clrf	7
 16393  164F  0801               	movf	1,w
 16394  1650  00F4               	movwf	??_interleave_reg_addr+1
 16395  1651  3577               	lslf	interleave_reg_addr@index,w
 16396  1652  0770               	addwf	interleave_reg_addr@temp_buff,w
 16397  1653  00F5               	movwf	??_interleave_reg_addr+2
 16398  1654  0875               	movf	??_interleave_reg_addr+2,w
 16399  1655  0086               	movwf	6
 16400  1656  0187               	clrf	7
 16401  1657  0874               	movf	??_interleave_reg_addr+1,w
 16402  1658  0081               	movwf	1
 16403                           
 16404                           ;BME280_driver/bme280.c: 1351:     }
 16405  1659  3001               	movlw	1
 16406  165A  00F3               	movwf	??_interleave_reg_addr
 16407  165B  0873               	movf	??_interleave_reg_addr,w
 16408  165C  07F7               	addwf	interleave_reg_addr@index,f
 16409  165D  2E34               	goto	l4862
 16410  165E                     __end_of_interleave_reg_addr:	
 16411                           
 16412                           	psect	text73
 16413  171B                     __ptext73:	
 16414 ;; *************** function _WriteEnvSensor *****************
 16415 ;; Defined at:
 16416 ;;		line 169 in file "bme280_i2c.c"
 16417 ;; Parameters:    Size  Location     Type
 16418 ;;  dev_id          1   11[BANK0 ] unsigned char 
 16419 ;;  reg_addr        1   12[BANK0 ] unsigned char 
 16420 ;;  reg_data        1   13[BANK0 ] PTR unsigned char 
 16421 ;;		 -> bme280_set_regs@temp_buff(20), 
 16422 ;;  len             2   14[BANK0 ] unsigned short 
 16423 ;; Auto vars:     Size  Location     Type
 16424 ;;  i               2   18[BANK0 ] int 
 16425 ;;  rslt            1   17[BANK0 ] char 
 16426 ;; Return value:  Size  Location     Type
 16427 ;;                  1    wreg      char 
 16428 ;; Registers used:
 16429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16430 ;; Tracked objects:
 16431 ;;		On entry : 0/0
 16432 ;;		On exit  : 0/0
 16433 ;;		Unchanged: 0/0
 16434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16435 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16436 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16438 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16439 ;;Total ram usage:        9 bytes
 16440 ;; Hardware stack levels used:    1
 16441 ;; Hardware stack levels required when called:    9
 16442 ;; This function calls:
 16443 ;;		_I2C_Stop
 16444 ;;		_I2C_Wait_SSPIF
 16445 ;;		_I2C_WriteByte
 16446 ;; This function is called by:
 16447 ;;		_BME280_Init
 16448 ;;		_bme280_set_regs
 16449 ;; This function uses a non-reentrant model
 16450 ;;
 16451                           
 16452                           
 16453                           ;psect for function _WriteEnvSensor
 16454  171B                     _WriteEnvSensor:	
 16455                           
 16456                           ;bme280_i2c.c: 169: int8_t WriteEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg
      +                          _data, uint16_t len);bme280_i2c.c: 170: {;bme280_i2c.c: 171:     int8_t rslt = 0;
 16457                           
 16458                           ;incstack = 0
 16459                           ; Regs used in _WriteEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16460  171B  0140               	movlb	0	; select bank0
 16461  171C  01B1               	clrf	WriteEnvSensor@rslt
 16462                           
 16463                           ;bme280_i2c.c: 173:     PIR3bits.SSP1IF = 0;
 16464  171D  014E               	movlb	14	; select bank14
 16465  171E  100F               	bcf	15,0	;volatile
 16466                           
 16467                           ;bme280_i2c.c: 176:     SSP1CON2bits.SEN = 1;
 16468  171F  0143               	movlb	3	; select bank3
 16469  1720  1411               	bsf	17,0	;volatile
 16470                           
 16471                           ;bme280_i2c.c: 177:     I2C_Wait_SSPIF();
 16472  1721  3197  27C3  3197   	fcall	_I2C_Wait_SSPIF
 16473                           
 16474                           ;bme280_i2c.c: 180:     I2C_WriteByte(dev_id << 1);
 16475  1724  0140               	movlb	0	; select bank0
 16476  1725  352B               	lslf	WriteEnvSensor@dev_id,w
 16477  1726  3192  22B3  3197   	fcall	_I2C_WriteByte
 16478                           
 16479                           ;bme280_i2c.c: 183:     I2C_WriteByte(reg_addr);
 16480  1729  0140               	movlb	0	; select bank0
 16481  172A  082C               	movf	WriteEnvSensor@reg_addr,w
 16482  172B  3192  22B3  3197   	fcall	_I2C_WriteByte
 16483                           
 16484                           ;bme280_i2c.c: 185:     for(int i = 0; i < len; i++)
 16485  172E  0140               	movlb	0	; select bank0
 16486  172F  01B2               	clrf	WriteEnvSensor@i
 16487  1730  01B3               	clrf	WriteEnvSensor@i+1
 16488  1731                     l4918:	
 16489  1731  082F               	movf	WriteEnvSensor@len+1,w
 16490  1732  0233               	subwf	WriteEnvSensor@i+1,w
 16491  1733  1D03               	skipz
 16492  1734  2F37               	goto	u4645
 16493  1735  082E               	movf	WriteEnvSensor@len,w
 16494  1736  0232               	subwf	WriteEnvSensor@i,w
 16495  1737                     u4645:	
 16496  1737  1803               	btfsc	3,0
 16497  1738  2F49               	goto	l4920
 16498                           
 16499                           ;bme280_i2c.c: 186:     {;bme280_i2c.c: 187:         I2C_WriteByte(reg_data[i]);
 16500  1739  0832               	movf	WriteEnvSensor@i,w
 16501  173A  072D               	addwf	WriteEnvSensor@reg_data,w
 16502  173B  00B0               	movwf	??_WriteEnvSensor
 16503  173C  0830               	movf	??_WriteEnvSensor,w
 16504  173D  0086               	movwf	6
 16505  173E  0187               	clrf	7
 16506  173F  0801               	movf	1,w
 16507  1740  3192  22B3  3197   	fcall	_I2C_WriteByte
 16508                           
 16509                           ;bme280_i2c.c: 188:     }
 16510  1743  3001               	movlw	1
 16511  1744  0140               	movlb	0	; select bank0
 16512  1745  07B2               	addwf	WriteEnvSensor@i,f
 16513  1746  3000               	movlw	0
 16514  1747  3DB3               	addwfc	WriteEnvSensor@i+1,f
 16515  1748  2F31               	goto	l4918
 16516  1749                     l4920:	
 16517                           
 16518                           ;bme280_i2c.c: 190:     I2C_Stop();
 16519  1749  3192  2233         	fcall	_I2C_Stop
 16520                           
 16521                           ;bme280_i2c.c: 192:     return rslt;
 16522  174B  0140               	movlb	0	; select bank0
 16523  174C  0831               	movf	WriteEnvSensor@rslt,w
 16524  174D  0008               	return
 16525  174E                     __end_of_WriteEnvSensor:	
 16526                           
 16527                           	psect	text74
 16528  12B3                     __ptext74:	
 16529 ;; *************** function _I2C_WriteByte *****************
 16530 ;; Defined at:
 16531 ;;		line 39 in file "bme280_i2c.c"
 16532 ;; Parameters:    Size  Location     Type
 16533 ;;  data            1    wreg     unsigned char 
 16534 ;; Auto vars:     Size  Location     Type
 16535 ;;  data            1   13[COMMON] unsigned char 
 16536 ;; Return value:  Size  Location     Type
 16537 ;;                  1    wreg      void 
 16538 ;; Registers used:
 16539 ;;		wreg, status,2, status,0, pclath, cstack
 16540 ;; Tracked objects:
 16541 ;;		On entry : 0/0
 16542 ;;		On exit  : 0/0
 16543 ;;		Unchanged: 0/0
 16544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16548 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16549 ;;Total ram usage:        1 bytes
 16550 ;; Hardware stack levels used:    1
 16551 ;; Hardware stack levels required when called:    8
 16552 ;; This function calls:
 16553 ;;		_I2C_UserAlert
 16554 ;;		_I2C_Wait_SSPIF
 16555 ;; This function is called by:
 16556 ;;		_ReadEnvSensor
 16557 ;;		_WriteEnvSensor
 16558 ;; This function uses a non-reentrant model
 16559 ;;
 16560                           
 16561                           
 16562                           ;psect for function _I2C_WriteByte
 16563  12B3                     _I2C_WriteByte:	
 16564                           
 16565                           ;incstack = 0
 16566                           ; Regs used in _I2C_WriteByte: [wreg+status,2+status,0+pclath+cstack]
 16567                           ;I2C_WriteByte@data stored from wreg
 16568  12B3  00FD               	movwf	I2C_WriteByte@data
 16569                           
 16570                           ;bme280_i2c.c: 39: void I2C_WriteByte(uint8_t data);bme280_i2c.c: 40: {;bme280_i2c.c: 41
      +                          :     SSP1BUF = data;
 16571  12B4  087D               	movf	I2C_WriteByte@data,w
 16572  12B5  0143               	movlb	3	; select bank3
 16573  12B6  008C               	movwf	12	;volatile
 16574                           
 16575                           ;bme280_i2c.c: 42:     I2C_Wait_SSPIF();
 16576  12B7  3197  27C3  3192   	fcall	_I2C_Wait_SSPIF
 16577                           
 16578                           ;bme280_i2c.c: 45:     if (SSP1CON2bits.ACKSTAT != 0)
 16579  12BA  0143               	movlb	3	; select bank3
 16580  12BB  1F11               	btfss	17,6	;volatile
 16581  12BC  0008               	return
 16582                           
 16583                           ;bme280_i2c.c: 46:     {;bme280_i2c.c: 47:         I2C_UserAlert(I2C_ERROR_WRITE_NO_ACK)
      +                          ;
 16584  12BD  3001               	movlw	1
 16585  12BE  3187  27FC         	fcall	_I2C_UserAlert
 16586  12C0  0008               	return
 16587  12C1                     __end_of_I2C_WriteByte:	
 16588                           
 16589                           	psect	text75
 16590  07FC                     __ptext75:	
 16591 ;; *************** function _I2C_UserAlert *****************
 16592 ;; Defined at:
 16593 ;;		line 76 in file "bme280_i2c.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;  status          1    wreg     enum E11288
 16596 ;; Auto vars:     Size  Location     Type
 16597 ;;  status          1    0[COMMON] enum E11288
 16598 ;; Return value:  Size  Location     Type
 16599 ;;                  1    wreg      void 
 16600 ;; Registers used:
 16601 ;;		wreg, status,2, status,0, pclath, cstack
 16602 ;; Tracked objects:
 16603 ;;		On entry : 0/0
 16604 ;;		On exit  : 0/0
 16605 ;;		Unchanged: 0/0
 16606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16611 ;;Total ram usage:        0 bytes
 16612 ;; Hardware stack levels used:    1
 16613 ;; Hardware stack levels required when called:    7
 16614 ;; This function calls:
 16615 ;;		_I2C_Stop
 16616 ;; This function is called by:
 16617 ;;		_I2C_WriteByte
 16618 ;; This function uses a non-reentrant model
 16619 ;;
 16620                           
 16621                           
 16622                           ;psect for function _I2C_UserAlert
 16623  07FC                     _I2C_UserAlert:	
 16624                           
 16625                           ;bme280_i2c.c: 76: void I2C_UserAlert(I2C_ERROR status);bme280_i2c.c: 77: {;bme280_i2c.c
      +                          : 78:     I2C_Stop();
 16626                           
 16627                           ;incstack = 0
 16628                           ; Regs used in _I2C_UserAlert: [wreg+status,2+status,0+pclath+cstack]
 16629  07FC  3192  2233         	fcall	_I2C_Stop
 16630  07FE  0008               	return
 16631  07FF                     __end_of_I2C_UserAlert:	
 16632                           
 16633                           	psect	text76
 16634  1233                     __ptext76:	
 16635 ;; *************** function _I2C_Stop *****************
 16636 ;; Defined at:
 16637 ;;		line 70 in file "bme280_i2c.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;		None
 16640 ;; Auto vars:     Size  Location     Type
 16641 ;;		None
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  1    wreg      void 
 16644 ;; Registers used:
 16645 ;;		wreg, status,2, status,0, pclath, cstack
 16646 ;; Tracked objects:
 16647 ;;		On entry : 0/0
 16648 ;;		On exit  : 0/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16655 ;;Total ram usage:        0 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; Hardware stack levels required when called:    6
 16658 ;; This function calls:
 16659 ;;		_I2C_Wait_SSPIF
 16660 ;; This function is called by:
 16661 ;;		_I2C_UserAlert
 16662 ;;		_ReadEnvSensor
 16663 ;;		_WriteEnvSensor
 16664 ;; This function uses a non-reentrant model
 16665 ;;
 16666                           
 16667                           
 16668                           ;psect for function _I2C_Stop
 16669  1233                     _I2C_Stop:	
 16670                           
 16671                           ;bme280_i2c.c: 72:     SSP1CON2bits.PEN = 1;
 16672                           
 16673                           ;incstack = 0
 16674                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
 16675  1233  0143               	movlb	3	; select bank3
 16676  1234  1511               	bsf	17,2	;volatile
 16677                           
 16678                           ;bme280_i2c.c: 73:     I2C_Wait_SSPIF();
 16679  1235  3197  27C3         	fcall	_I2C_Wait_SSPIF
 16680  1237  0008               	return
 16681  1238                     __end_of_I2C_Stop:	
 16682                           
 16683                           	psect	text77
 16684  17C3                     __ptext77:	
 16685 ;; *************** function _I2C_Wait_SSPIF *****************
 16686 ;; Defined at:
 16687 ;;		line 16 in file "bme280_i2c.c"
 16688 ;; Parameters:    Size  Location     Type
 16689 ;;		None
 16690 ;; Auto vars:     Size  Location     Type
 16691 ;;		None
 16692 ;; Return value:  Size  Location     Type
 16693 ;;                  1    wreg      void 
 16694 ;; Registers used:
 16695 ;;		wreg, status,2, status,0, pclath, cstack
 16696 ;; Tracked objects:
 16697 ;;		On entry : 0/0
 16698 ;;		On exit  : 0/0
 16699 ;;		Unchanged: 0/0
 16700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16703 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16704 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16705 ;;Total ram usage:        4 bytes
 16706 ;; Hardware stack levels used:    1
 16707 ;; Hardware stack levels required when called:    5
 16708 ;; This function calls:
 16709 ;;		_DebugAlert
 16710 ;; This function is called by:
 16711 ;;		_I2C_WriteByte
 16712 ;;		_I2C_ReadByte
 16713 ;;		_I2C_Stop
 16714 ;;		_ReadEnvSensor
 16715 ;;		_WriteEnvSensor
 16716 ;; This function uses a non-reentrant model
 16717 ;;
 16718                           
 16719                           
 16720                           ;psect for function _I2C_Wait_SSPIF
 16721  17C3                     _I2C_Wait_SSPIF:	
 16722                           
 16723                           ;bme280_i2c.c: 18:     __g_timeout_start = ticks; while (!(PIR3bits.SSP1IF != 0)) { if (
      +                          ticks - __g_timeout_start > 1000) { DebugAlert(200, 200, 3);; break; } };
 16724                           
 16725                           ;incstack = 0
 16726                           ; Regs used in _I2C_Wait_SSPIF: [wreg+status,2+status,0+pclath+cstack]
 16727  17C3  0141               	movlb	1	; select bank1
 16728  17C4  082B               	movf	(_ticks+3)^(0+128),w
 16729  17C5  00AF               	movwf	(___g_timeout_start+3)^(0+128)
 16730  17C6  082A               	movf	(_ticks+2)^(0+128),w
 16731  17C7  00AE               	movwf	(___g_timeout_start+2)^(0+128)
 16732  17C8  0829               	movf	(_ticks+1)^(0+128),w
 16733  17C9  00AD               	movwf	(___g_timeout_start+1)^(0+128)
 16734  17CA  0828               	movf	_ticks^(0+128),w
 16735  17CB  00AC               	movwf	___g_timeout_start^(0+128)
 16736  17CC                     l533:	
 16737  17CC  014E               	movlb	14	; select bank14
 16738  17CD  180F               	btfsc	15,0	;volatile
 16739  17CE  2FFD               	goto	l536
 16740  17CF  0141               	movlb	1	; select bank1
 16741  17D0  082C               	movf	___g_timeout_start^(0+128),w
 16742  17D1  0228               	subwf	_ticks^(0+128),w
 16743  17D2  0140               	movlb	0	; select bank0
 16744  17D3  00A7               	movwf	??_I2C_Wait_SSPIF
 16745  17D4  0141               	movlb	1	; select bank1
 16746  17D5  082D               	movf	(___g_timeout_start+1)^(0+128),w
 16747  17D6  3B29               	subwfb	(_ticks+1)^(0+128),w
 16748  17D7  0140               	movlb	0	; select bank0
 16749  17D8  00A8               	movwf	??_I2C_Wait_SSPIF+1
 16750  17D9  0141               	movlb	1	; select bank1
 16751  17DA  082E               	movf	(___g_timeout_start+2)^(0+128),w
 16752  17DB  3B2A               	subwfb	(_ticks+2)^(0+128),w
 16753  17DC  0140               	movlb	0	; select bank0
 16754  17DD  00A9               	movwf	??_I2C_Wait_SSPIF+2
 16755  17DE  0141               	movlb	1	; select bank1
 16756  17DF  082F               	movf	(___g_timeout_start+3)^(0+128),w
 16757  17E0  3B2B               	subwfb	(_ticks+3)^(0+128),w
 16758  17E1  0140               	movlb	0	; select bank0
 16759  17E2  00AA               	movwf	??_I2C_Wait_SSPIF+3
 16760  17E3  082A               	movf	??_I2C_Wait_SSPIF+3,w
 16761  17E4  1D03               	btfss	3,2
 16762  17E5  2FEF               	goto	l4808
 16763  17E6  0829               	movf	??_I2C_Wait_SSPIF+2,w
 16764  17E7  1D03               	btfss	3,2
 16765  17E8  2FEF               	goto	l4808
 16766  17E9  30E9               	movlw	233
 16767  17EA  0227               	subwf	??_I2C_Wait_SSPIF,w
 16768  17EB  3003               	movlw	3
 16769  17EC  3B28               	subwfb	??_I2C_Wait_SSPIF+1,w
 16770  17ED  1C03               	btfss	3,0
 16771  17EE  2FCC               	goto	l533
 16772  17EF                     l4808:	
 16773  17EF  30C8               	movlw	200
 16774  17F0  00A0               	movwf	DebugAlert@delay_high
 16775  17F1  3000               	movlw	0
 16776  17F2  00A1               	movwf	DebugAlert@delay_high+1
 16777  17F3  30C8               	movlw	200
 16778  17F4  00A2               	movwf	DebugAlert@delay_low
 16779  17F5  3000               	movlw	0
 16780  17F6  00A3               	movwf	DebugAlert@delay_low+1
 16781  17F7  3003               	movlw	3
 16782  17F8  00A7               	movwf	??_I2C_Wait_SSPIF
 16783  17F9  0827               	movf	??_I2C_Wait_SSPIF,w
 16784  17FA  00A4               	movwf	DebugAlert@num_flashes
 16785  17FB  3195  255A         	fcall	_DebugAlert
 16786  17FD                     l536:	
 16787                           
 16788                           ;bme280_i2c.c: 19:     PIR3bits.SSP1IF = 0;
 16789  17FD  014E               	movlb	14	; select bank14
 16790  17FE  100F               	bcf	15,0	;volatile
 16791  17FF  0008               	return
 16792  1800                     __end_of_I2C_Wait_SSPIF:	
 16793                           
 16794                           	psect	text78
 16795  155A                     __ptext78:	
 16796 ;; *************** function _DebugAlert *****************
 16797 ;; Defined at:
 16798 ;;		line 4 in file "debug.c"
 16799 ;; Parameters:    Size  Location     Type
 16800 ;;  delay_high      2    0[BANK0 ] unsigned int 
 16801 ;;  delay_low       2    2[BANK0 ] unsigned int 
 16802 ;;  num_flashes     1    4[BANK0 ] unsigned char 
 16803 ;; Auto vars:     Size  Location     Type
 16804 ;;  i               2    5[BANK0 ] int 
 16805 ;; Return value:  Size  Location     Type
 16806 ;;                  1    wreg      void 
 16807 ;; Registers used:
 16808 ;;		wreg, status,2, status,0, pclath, cstack
 16809 ;; Tracked objects:
 16810 ;;		On entry : 0/0
 16811 ;;		On exit  : 0/0
 16812 ;;		Unchanged: 0/0
 16813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16814 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16815 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16817 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16818 ;;Total ram usage:        8 bytes
 16819 ;; Hardware stack levels used:    1
 16820 ;; Hardware stack levels required when called:    4
 16821 ;; This function calls:
 16822 ;;		_Sleep
 16823 ;; This function is called by:
 16824 ;;		_I2C_Wait_SSPIF
 16825 ;;		_BME280_Init
 16826 ;;		_main
 16827 ;; This function uses a non-reentrant model
 16828 ;;
 16829                           
 16830                           
 16831                           ;psect for function _DebugAlert
 16832  155A                     _DebugAlert:	
 16833                           
 16834                           ;debug.c: 4: void DebugAlert(unsigned int delay_high, unsigned int delay_low, uint8_t nu
      +                          m_flashes);debug.c: 5: {;debug.c: 7:     for (int i = 0; i < num_flashes; i++)
 16835                           
 16836                           ;incstack = 0
 16837                           ; Regs used in _DebugAlert: [wreg+status,2+status,0+pclath+cstack]
 16838  155A  0140               	movlb	0	; select bank0
 16839  155B  01A5               	clrf	DebugAlert@i
 16840  155C  01A6               	clrf	DebugAlert@i+1
 16841  155D                     l4802:	
 16842  155D  0826               	movf	DebugAlert@i+1,w
 16843  155E  3A80               	xorlw	128
 16844  155F  00FC               	movwf	??_DebugAlert
 16845  1560  3080               	movlw	128
 16846  1561  027C               	subwf	??_DebugAlert,w
 16847  1562  1D03               	skipz
 16848  1563  2D66               	goto	u4535
 16849  1564  0824               	movf	DebugAlert@num_flashes,w
 16850  1565  0225               	subwf	DebugAlert@i,w
 16851  1566                     u4535:	
 16852  1566  1803               	btfsc	3,0
 16853  1567  0008               	return
 16854                           
 16855                           ;debug.c: 8:     {;debug.c: 9:         do { LATCbits.LATC5 = 1; } while(0);
 16856  1568  0140               	movlb	0	; select bank0
 16857  1569  169A               	bsf	26,5	;volatile
 16858                           
 16859                           ;debug.c: 10:         Sleep(delay_high);
 16860  156A  0820               	movf	DebugAlert@delay_high,w
 16861  156B  00F0               	movwf	Sleep@ms
 16862  156C  0821               	movf	DebugAlert@delay_high+1,w
 16863  156D  00F1               	movwf	Sleep@ms+1
 16864  156E  01F2               	clrf	Sleep@ms+2
 16865  156F  01F3               	clrf	Sleep@ms+3
 16866  1570  3195  25AE  3195   	fcall	_Sleep
 16867  1573  0140               	movlb	0	; select bank0
 16868  1574  129A               	bcf	26,5	;volatile
 16869                           
 16870                           ;debug.c: 12:         Sleep(delay_low);
 16871  1575  0822               	movf	DebugAlert@delay_low,w
 16872  1576  00F0               	movwf	Sleep@ms
 16873  1577  0823               	movf	DebugAlert@delay_low+1,w
 16874  1578  00F1               	movwf	Sleep@ms+1
 16875  1579  01F2               	clrf	Sleep@ms+2
 16876  157A  01F3               	clrf	Sleep@ms+3
 16877  157B  3195  25AE  3195   	fcall	_Sleep
 16878                           
 16879                           ;debug.c: 13:     }
 16880  157E  3001               	movlw	1
 16881  157F  0140               	movlb	0	; select bank0
 16882  1580  07A5               	addwf	DebugAlert@i,f
 16883  1581  3000               	movlw	0
 16884  1582  3DA6               	addwfc	DebugAlert@i+1,f
 16885  1583  2D5D               	goto	l4802
 16886  1584                     __end_of_DebugAlert:	
 16887                           
 16888                           	psect	text79
 16889  15AE                     __ptext79:	
 16890 ;; *************** function _Sleep *****************
 16891 ;; Defined at:
 16892 ;;		line 17 in file "timing.c"
 16893 ;; Parameters:    Size  Location     Type
 16894 ;;  ms              4    0[COMMON] unsigned long 
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;  start           4    8[COMMON] unsigned long 
 16897 ;; Return value:  Size  Location     Type
 16898 ;;                  1    wreg      void 
 16899 ;; Registers used:
 16900 ;;		wreg
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16907 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16909 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16910 ;;Total ram usage:       12 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; Hardware stack levels required when called:    3
 16913 ;; This function calls:
 16914 ;;		Nothing
 16915 ;; This function is called by:
 16916 ;;		_BME280_Init
 16917 ;;		_DebugAlert
 16918 ;;		_SetupGPS
 16919 ;;		_main
 16920 ;;		_TransmitBit
 16921 ;;		_bme280_soft_reset
 16922 ;;		_bme280_init
 16923 ;; This function uses a non-reentrant model
 16924 ;;
 16925                           
 16926                           
 16927                           ;psect for function _Sleep
 16928  15AE                     _Sleep:	
 16929                           
 16930                           ;timing.c: 17: void Sleep(uint32_t ms);timing.c: 18: {;timing.c: 19:     uint32_t start 
      +                          = ticks;
 16931                           
 16932                           ;incstack = 0
 16933                           ; Regs used in _Sleep: [wreg]
 16934  15AE  0141               	movlb	1	; select bank1
 16935  15AF  082B               	movf	(_ticks+3)^(0+128),w
 16936  15B0  00FB               	movwf	Sleep@start+3
 16937  15B1  082A               	movf	(_ticks+2)^(0+128),w
 16938  15B2  00FA               	movwf	Sleep@start+2
 16939  15B3  0829               	movf	(_ticks+1)^(0+128),w
 16940  15B4  00F9               	movwf	Sleep@start+1
 16941  15B5  0828               	movf	_ticks^(0+128),w
 16942  15B6  00F8               	movwf	Sleep@start
 16943  15B7                     l891:	
 16944                           ;timing.c: 23:     }
 16945                           
 16946                           ;timing.c: 20:     while (ticks - start < ms)
 16947                           
 16948                           
 16949                           ;timing.c: 20:     while (ticks - start < ms)
 16950  15B7  0878               	movf	Sleep@start,w
 16951  15B8  0141               	movlb	1	; select bank1
 16952  15B9  0228               	subwf	_ticks^(0+128),w
 16953  15BA  00F4               	movwf	??_Sleep
 16954  15BB  0879               	movf	Sleep@start+1,w
 16955  15BC  3B29               	subwfb	(_ticks+1)^(0+128),w
 16956  15BD  00F5               	movwf	??_Sleep+1
 16957  15BE  087A               	movf	Sleep@start+2,w
 16958  15BF  3B2A               	subwfb	(_ticks+2)^(0+128),w
 16959  15C0  00F6               	movwf	??_Sleep+2
 16960  15C1  087B               	movf	Sleep@start+3,w
 16961  15C2  3B2B               	subwfb	(_ticks+3)^(0+128),w
 16962  15C3  00F7               	movwf	??_Sleep+3
 16963  15C4  0873               	movf	Sleep@ms+3,w
 16964  15C5  0277               	subwf	??_Sleep+3,w
 16965  15C6  1D03               	skipz
 16966  15C7  2DD2               	goto	u4525
 16967  15C8  0872               	movf	Sleep@ms+2,w
 16968  15C9  0276               	subwf	??_Sleep+2,w
 16969  15CA  1D03               	skipz
 16970  15CB  2DD2               	goto	u4525
 16971  15CC  0871               	movf	Sleep@ms+1,w
 16972  15CD  0275               	subwf	??_Sleep+1,w
 16973  15CE  1D03               	skipz
 16974  15CF  2DD2               	goto	u4525
 16975  15D0  0870               	movf	Sleep@ms,w
 16976  15D1  0274               	subwf	??_Sleep,w
 16977  15D2                     u4525:	
 16978  15D2  1803               	btfsc	3,0
 16979  15D3  0008               	return
 16980                           
 16981                           ;timing.c: 21:     {;timing.c: 22:         _delay((unsigned long)((1)*(1000000/4000.0)))
      +                          ;
 16982  15D4  3053               	movlw	83
 16983  15D5                     u6757:	
 16984  15D5  0B89               	decfsz	9,f
 16985  15D6  2DD5               	goto	u6757
 16986  15D7  0000               	nop
 16987  15D8  2DB7               	goto	l891
 16988  15D9                     __end_of_Sleep:	
 16989                           
 16990                           	psect	text80
 16991  12F5                     __ptext80:	
 16992 ;; *************** function _I2C_Init *****************
 16993 ;; Defined at:
 16994 ;;		line 22 in file "bme280_i2c.c"
 16995 ;; Parameters:    Size  Location     Type
 16996 ;;		None
 16997 ;; Auto vars:     Size  Location     Type
 16998 ;;		None
 16999 ;; Return value:  Size  Location     Type
 17000 ;;                  1    wreg      void 
 17001 ;; Registers used:
 17002 ;;		wreg, status,2
 17003 ;; Tracked objects:
 17004 ;;		On entry : 0/0
 17005 ;;		On exit  : 0/0
 17006 ;;		Unchanged: 0/0
 17007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17012 ;;Total ram usage:        0 bytes
 17013 ;; Hardware stack levels used:    1
 17014 ;; Hardware stack levels required when called:    3
 17015 ;; This function calls:
 17016 ;;		Nothing
 17017 ;; This function is called by:
 17018 ;;		_BME280_Init
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022                           
 17023                           ;psect for function _I2C_Init
 17024  12F5                     _I2C_Init:	
 17025                           
 17026                           ;bme280_i2c.c: 25:     SSP1CLKPPS = 0x0E;
 17027                           
 17028                           ;incstack = 0
 17029                           ; Regs used in _I2C_Init: [wreg+status,2]
 17030  12F5  300E               	movlw	14
 17031  12F6  017D               	movlb	61	; select bank61
 17032  12F7  00C5               	movwf	69	;volatile
 17033                           
 17034                           ;bme280_i2c.c: 26:     SSP1DATPPS = 0x0C;
 17035  12F8  300C               	movlw	12
 17036  12F9  00C6               	movwf	70	;volatile
 17037                           
 17038                           ;bme280_i2c.c: 27:     RB6PPS = 0x13;
 17039  12FA  3013               	movlw	19
 17040  12FB  017E               	movlb	62	; select bank62
 17041  12FC  009E               	movwf	30	;volatile
 17042                           
 17043                           ;bme280_i2c.c: 28:     RB4PPS = 0x14;
 17044  12FD  3014               	movlw	20
 17045  12FE  009C               	movwf	28	;volatile
 17046                           
 17047                           ;bme280_i2c.c: 30:     SSP1STAT = 0x80;
 17048  12FF  3080               	movlw	128
 17049  1300  0143               	movlb	3	; select bank3
 17050  1301  008F               	movwf	15	;volatile
 17051                           
 17052                           ;bme280_i2c.c: 31:     SSP1CON1 = 0x28;
 17053  1302  3028               	movlw	40
 17054  1303  0090               	movwf	16	;volatile
 17055                           
 17056                           ;bme280_i2c.c: 32:     SSP1CON3 = 0x00;
 17057  1304  0192               	clrf	18	;volatile
 17058                           
 17059                           ;bme280_i2c.c: 33:     SSP1ADD = 0x03;
 17060  1305  3003               	movlw	3
 17061  1306  008D               	movwf	13	;volatile
 17062                           
 17063                           ;bme280_i2c.c: 36:     SSP1CON1bits.SSPEN = 1;
 17064  1307  1690               	bsf	16,5	;volatile
 17065  1308  0008               	return
 17066  1309                     __end_of_I2C_Init:	
 17067                           
 17068                           	psect	intentry
 17069  0004                     __pintentry:	
 17070 ;; *************** function _INTERRUPT_InterruptManager *****************
 17071 ;; Defined at:
 17072 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;		None
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;		None
 17077 ;; Return value:  Size  Location     Type
 17078 ;;                  1    wreg      void 
 17079 ;; Registers used:
 17080 ;;		wreg, status,2, status,0, pclath, cstack
 17081 ;; Tracked objects:
 17082 ;;		On entry : 0/0
 17083 ;;		On exit  : 0/0
 17084 ;;		Unchanged: 0/0
 17085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17090 ;;Total ram usage:        0 bytes
 17091 ;; Hardware stack levels used:    1
 17092 ;; Hardware stack levels required when called:    2
 17093 ;; This function calls:
 17094 ;;		_TMR0_ISR
 17095 ;; This function is called by:
 17096 ;;		Interrupt level 1
 17097 ;; This function uses a non-reentrant model
 17098 ;;
 17099                           
 17100  0004                     _INTERRUPT_InterruptManager:	
 17101                           
 17102                           ;incstack = 0
 17103 ;; hardware stack exceeded
 17104  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17105                           
 17106                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 17107  0005  3180               	pagesel	$
 17108                           
 17109                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17110  0006  014E               	movlb	14	; select bank14
 17111  0007  1A96               	btfsc	22,5	;volatile
 17112  0008  1E8C               	btfss	12,5	;volatile
 17113  0009  280C               	goto	i1l389
 17114                           
 17115                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17116  000A  3192  22A6         	fcall	_TMR0_ISR
 17117  000C                     i1l389:	
 17118                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17119                           
 17120  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17121  000D  0009               	retfie
 17122  000E                     __end_of_INTERRUPT_InterruptManager:	
 17123                           
 17124                           	psect	text82
 17125  12A6                     __ptext82:	
 17126 ;; *************** function _TMR0_ISR *****************
 17127 ;; Defined at:
 17128 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 17129 ;; Parameters:    Size  Location     Type
 17130 ;;		None
 17131 ;; Auto vars:     Size  Location     Type
 17132 ;;		None
 17133 ;; Return value:  Size  Location     Type
 17134 ;;                  1    wreg      void 
 17135 ;; Registers used:
 17136 ;;		wreg, status,2, status,0, pclath, cstack
 17137 ;; Tracked objects:
 17138 ;;		On entry : 0/0
 17139 ;;		On exit  : 0/0
 17140 ;;		Unchanged: 0/0
 17141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17146 ;;Total ram usage:        0 bytes
 17147 ;; Hardware stack levels used:    1
 17148 ;; Hardware stack levels required when called:    1
 17149 ;; This function calls:
 17150 ;;		Absolute function
 17151 ;;		_TMR0_DefaultInterruptHandler
 17152 ;;		_TimerISR
 17153 ;; This function is called by:
 17154 ;;		_INTERRUPT_InterruptManager
 17155 ;; This function uses a non-reentrant model
 17156 ;;
 17157                           
 17158                           
 17159                           ;psect for function _TMR0_ISR
 17160  12A6                     _TMR0_ISR:	
 17161                           
 17162                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 17163                           
 17164                           ;incstack = 0
 17165 ;; hardware stack exceeded
 17166                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17167  12A6  014E               	movlb	14	; select bank14
 17168  12A7  128C               	bcf	12,5	;volatile
 17169                           
 17170                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 17171  12A8  0141               	movlb	1	; select bank1
 17172  12A9  0851               	movf	_TMR0_InterruptHandler^(0+128),w
 17173  12AA  0452               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 17174  12AB  1903               	btfsc	3,2
 17175  12AC  0008               	return
 17176                           
 17177                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 17178  12AD  0852               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 17179  12AE  008A               	movwf	10
 17180  12AF  0851               	movf	_TMR0_InterruptHandler^(0+128),w
 17181  12B0  000A               	callw
 17182  12B1  3192               	pagesel	$
 17183  12B2  0008               	return
 17184  12B3                     __end_of_TMR0_ISR:	
 17185                           
 17186                           	psect	text83
 17187  07FF                     __ptext83:	
 17188 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17189 ;; Defined at:
 17190 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 17191 ;; Parameters:    Size  Location     Type
 17192 ;;		None
 17193 ;; Auto vars:     Size  Location     Type
 17194 ;;		None
 17195 ;; Return value:  Size  Location     Type
 17196 ;;                  1    wreg      void 
 17197 ;; Registers used:
 17198 ;;		None
 17199 ;; Tracked objects:
 17200 ;;		On entry : 0/0
 17201 ;;		On exit  : 0/0
 17202 ;;		Unchanged: 0/0
 17203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17208 ;;Total ram usage:        0 bytes
 17209 ;; Hardware stack levels used:    1
 17210 ;; This function calls:
 17211 ;;		Nothing
 17212 ;; This function is called by:
 17213 ;;		_TMR0_Initialize
 17214 ;;		_TMR0_ISR
 17215 ;; This function uses a non-reentrant model
 17216 ;;
 17217                           
 17218                           
 17219                           ;psect for function _TMR0_DefaultInterruptHandler
 17220  07FF                     _TMR0_DefaultInterruptHandler:	
 17221                           
 17222                           ;incstack = 0
 17223 ;; hardware stack exceeded
 17224                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17225  07FF  0008               	return
 17226  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 17227                           
 17228                           	psect	text84
 17229  126E                     __ptext84:	
 17230 ;; *************** function _TimerISR *****************
 17231 ;; Defined at:
 17232 ;;		line 6 in file "timing.c"
 17233 ;; Parameters:    Size  Location     Type
 17234 ;;		None
 17235 ;; Auto vars:     Size  Location     Type
 17236 ;;		None
 17237 ;; Return value:  Size  Location     Type
 17238 ;;                  1    wreg      void 
 17239 ;; Registers used:
 17240 ;;		wreg
 17241 ;; Tracked objects:
 17242 ;;		On entry : 0/0
 17243 ;;		On exit  : 0/0
 17244 ;;		Unchanged: 0/0
 17245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17250 ;;Total ram usage:        0 bytes
 17251 ;; Hardware stack levels used:    1
 17252 ;; This function calls:
 17253 ;;		Nothing
 17254 ;; This function is called by:
 17255 ;;		_InitTiming
 17256 ;;		_TMR0_ISR
 17257 ;; This function uses a non-reentrant model
 17258 ;;
 17259                           
 17260                           
 17261                           ;psect for function _TimerISR
 17262  126E                     _TimerISR:	
 17263                           
 17264                           ;timing.c: 8:     ticks++;
 17265                           
 17266                           ;incstack = 0
 17267 ;; hardware stack exceeded
 17268                           ; Regs used in _TimerISR: [wreg]
 17269  126E  3001               	movlw	1
 17270  126F  0141               	movlb	1	; select bank1
 17271  1270  07A8               	addwf	_ticks^(0+128),f
 17272  1271  3000               	movlw	0
 17273  1272  3DA9               	addwfc	(_ticks+1)^(0+128),f
 17274  1273  3000               	movlw	0
 17275  1274  3DAA               	addwfc	(_ticks+2)^(0+128),f
 17276  1275  3000               	movlw	0
 17277  1276  3DAB               	addwfc	(_ticks+3)^(0+128),f
 17278  1277  0008               	return
 17279  1278                     __end_of_TimerISR:	
 17280  007E                     btemp	set	126	;btemp
 17281  007E                     int$flags	set	126
 17282  007E                     wtemp0	set	126


Data Sizes:
    Strings     180
    Constant    2
    Data        44
    BSS         151
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     23      51
    BANK2            80      0      79
    BANK3            80      0      52
    BANK4            80     32      76
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           72      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    put_device_to_sleep@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    put_device_to_sleep@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    put_device_to_sleep@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    get_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    get_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    get_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    PollGPS$2658	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    S54$4$2	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    S54$3$2	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(COMMON[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_9(CODE[3]), checksum(BANK1[6]), STR_8(CODE[7]), main@convertedNumber(BANK4[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_9(CODE[3]), checksum(BANK1[6]), STR_8(CODE[7]), main@convertedNumber(BANK4[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK3[20]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 16384
		 -> ROM(CODE[16384]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    TransmitString@message	PTR unsigned char  size(2) Largest target is 140
		 -> STR_9(CODE[3]), txdata(BIGRAM[140]), 

    crc16@data	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    crc16_update@pData	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    WriteGPS@message	PTR unsigned char  size(2) Largest target is 26
		 -> STR_7(CODE[14]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    UIntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK4[16]), 

    IntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK4[16]), 

    UIntToHexString@dest	PTR unsigned char  size(1) Largest target is 6
		 -> checksum(BANK1[6]), 

    ReverseString@opposite	PTR unsigned char  size(2) Largest target is 16
		 -> checksum(BANK1[6]), main@convertedNumber(BANK4[16]), 

    ReverseString@str	PTR unsigned char  size(2) Largest target is 16
		 -> checksum(BANK1[6]), main@convertedNumber(BANK4[16]), 

    InsertString@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    InsertString@src	PTR unsigned char  size(2) Largest target is 20
		 -> checksum(BANK1[6]), STR_8(CODE[7]), main@convertedNumber(BANK4[16]), csvField(BANK3[20]), 

    Insert@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    sp__GetAtRowCSV	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    GetAtRowCSV@src	PTR unsigned char  size(2) Largest target is 140
		 -> nmea_data(BIGRAM[140]), 

    ClearStringn@str	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    ClearString@str	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK4[16]), 

    WriteEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    ReadEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(COMMON[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    EnvSensor.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    EnvSensor.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    EnvSensor.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    null_ptr_check@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    parse_humidity_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_humidity_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_humidity_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_humidity_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_humidity_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    parse_humidity_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK2[37]), EnvSensor(BANK2[51]), 

    parse_temp_press_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_temp_press_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_temp_press_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_temp_press_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_temp_press_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    parse_temp_press_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK2[37]), EnvSensor(BANK2[51]), 

    interleave_reg_addr@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    interleave_reg_addr@reg_addr	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    interleave_reg_addr@temp_buff	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    get_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    reload_device_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    reload_device_settings@settings	PTR const struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    put_device_to_sleep@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    write_power_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    parse_device_settings@reg_data	PTR const unsigned char  size(1) Largest target is 4
		 -> put_device_to_sleep@reg_data(BANK1[4]), bme280_get_sensor_settings@reg_data(COMMON[4]), 

    parse_device_settings@settings	PTR struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK2[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_osr_press_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK2[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_press_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK2[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_standby_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    fill_filter_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK2[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_filter_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    set_filter_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK2[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_filter_standby_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    set_osr_press_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK2[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_press_temp_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    set_osr_humidity_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    set_osr_humidity_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK2[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    set_osr_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK2[51]), put_device_to_sleep@settings(BANK1[5]), 

    bme280_get_sensor_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_soft_reset@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    bme280_get_sensor_mode@sensor_mode	PTR unsigned char  size(1) Largest target is 1
		 -> bme280_set_sensor_mode@last_set_mode(BANK1[1]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), 

    bme280_get_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    bme280_set_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    bme280_get_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    bme280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    bme280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    bme280_set_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    bme280_get_regs@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(COMMON[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    bme280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 

    S54bme280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    S54bme280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    S54bme280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK2[51]), 


Critical Paths under _main in COMMON

    _main->_IntToString
    _crc16->_crc16_update
    _crc16_update->_strlen
    _UIntToString->___lldiv
    _TransmitString->_TransmitChar
    _TransmitChar->_TransmitBit
    _TransmitBit->_Sleep
    _SetupGPS->_Sleep
    _SetupGPS->_WriteGPS
    _GPS_SendUBX->_GetLengthUBX
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _PollGPS->_InsertTxDataSep
    _PollGPS->_strcmp
    _strcmp->_GetAtRowCSV
    _WriteGPS->_strlen
    _InsertTxData->_InsertTxDataSep
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _Insert->_strlen
    _GetAtRowCSV->_ClearStringn
    _IntToString->_ReverseString
    _ReverseString->___awdiv
    _InitTiming->_TMR0_SetInterruptHandler
    _ClearString->_strlen
    _get_calib_data->_parse_humidity_calib_data
    _ReadEnvSensor->_I2C_ReadByte
    _ReadEnvSensor->_I2C_WriteByte
    _WriteEnvSensor->_I2C_WriteByte
    _I2C_Wait_SSPIF->_DebugAlert
    _DebugAlert->_Sleep

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _crc16->_crc16_update
    _UIntToString->_ReverseString
    _UIntToHexString->_ReverseString
    _TransmitString->_TransmitChar
    _SetupGPS->_GPS_HasAcknowledged
    _PollGPS->_InsertTxData
    _strcmp->_GetAtRowCSV
    _InsertTxData->_InsertString
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _IntToString->_ReverseString
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep
    _write_power_mode->_bme280_set_regs
    _put_device_to_sleep->_reload_device_settings
    _reload_device_settings->_set_osr_settings
    _set_osr_settings->_set_osr_humidity_settings
    _set_osr_settings->_set_osr_press_temp_settings
    _set_osr_press_temp_settings->_bme280_set_regs
    _set_osr_humidity_settings->_bme280_set_regs
    _set_filter_standby_settings->_bme280_set_regs
    _bme280_get_sensor_mode->_bme280_get_regs
    _bme280_init->_get_calib_data
    _get_calib_data->_bme280_get_regs
    _bme280_get_regs->_ReadEnvSensor
    _ReadEnvSensor->_I2C_ReadByte
    _I2C_ReadByte->_I2C_Wait_SSPIF
    _bme280_soft_reset->_bme280_set_regs
    _bme280_set_regs->_WriteEnvSensor
    _WriteEnvSensor->_I2C_Wait_SSPIF
    _I2C_WriteByte->_I2C_Wait_SSPIF
    _I2C_Stop->_I2C_Wait_SSPIF
    _I2C_Wait_SSPIF->_DebugAlert

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_BME280_Init
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0  465412
                                             18 BANK1      5     5      0
                                              0 BANK4     32    32      0
                        _BME280_Init
                        _ClearString
                        _ClearTxData
                         _DebugAlert
                         _InitTiming
                             _Insert
                       _InsertString
                        _IntToString
                            _PollGPS
                  _SYSTEM_Initialize
                           _SetupGPS
                              _Sleep
                     _TransmitString
                    _UIntToHexString
                       _UIntToString
                              _crc16
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _crc16                                                4     2      2    1876
                                              1 BANK0      4     2      2
                       _crc16_update
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc16_update                                        10     4      6     536
                                              5 COMMON     9     3      6
                                              0 BANK0      1     1      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _UIntToString                                         9     4      5    4914
                                             13 BANK0      9     4      5
                      _ReverseString
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     412
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UIntToHexString                                     19    14      5    3695
                                             13 BANK0     19    14      5
                      _ReverseString
                              _crc16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       7     5      2    2270
                                              3 BANK0      7     5      2
                       _TransmitChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitChar                                         4     4      0     806
                                             13 COMMON     1     1      0
                                              0 BANK0      3     3      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          1     1      0     676
                                             12 COMMON     1     1      0
                              _Sleep
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             1     1      0    3835
                                             12 COMMON     1     1      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                              _Sleep
                           _WriteGPS
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     329
                                              4 COMMON     6     6      0
                      _EUSART1_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      98
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0     916
                                              0 COMMON     4     4      0
                                              0 BANK0     18    18      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PollGPS                                             18    18      0   51702
                                             25 BANK0     18    18      0
                          _ClearNMEA
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                        _GetAtRowCSV
                             _Insert
                       _InsertString
                       _InsertTxData
                    _InsertTxDataSep
                           _WriteGPS
                             _strcmp
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               4     2      2     413
                                             11 COMMON     3     1      2
                                              8 BANK0      1     1      0
                        _GetAtRowCSV (ARG)
 ---------------------------------------------------------------------------------
 (2) _WriteGPS                                             7     5      2    1945
                                              5 COMMON     7     5      2
                      _EUSART1_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InsertTxData                                         4     0      4   21261
                                             21 BANK0      4     0      4
                        _GetAtRowCSV
                       _InsertString
                    _InsertTxDataSep
 ---------------------------------------------------------------------------------
 (2) _InsertTxDataSep                                      3     1      2    6367
                                             12 COMMON     2     0      2
                                              9 BANK0      1     1      0
                             _Insert
 ---------------------------------------------------------------------------------
 (3) _InsertString                                        13     5      8   10689
                                             12 COMMON     1     1      0
                                              9 BANK0     12     4      8
                        _GetAtRowCSV (ARG)
                             _Insert
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _Insert                                              16     9      7    5976
                                              5 COMMON     7     0      7
                                              0 BANK0      9     9      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _GetAtRowCSV                                         13     9      4    2849
                                              6 COMMON     5     1      4
                                              0 BANK0      8     8      0
                       _ClearStringn
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _ClearStringn                                         6     4      2     256
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearNMEA                                            4     4      0      99
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _IntToString                                          8     5      3    6013
                                             11 COMMON     3     0      3
                                             13 BANK0      5     5      0
                      _ReverseString
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReverseString                                       15    13      2    2985
                                              9 COMMON     2     0      2
                                              0 BANK0     13    13      0
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _InitTiming                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearTxData                                          4     4      0      99
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ClearString                                          6     6      0    1392
                                              5 COMMON     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2    1120
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _BME280_Init                                          4     4      0  367442
                                             14 BANK1      4     4      0
                         _DebugAlert
                           _I2C_Init
                        _bme280_init
             _bme280_set_sensor_mode
         _bme280_set_sensor_settings
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_settings                           6     5      1  187200
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
               _are_settings_changed
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _are_settings_changed                                 3     2      1     282
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_mode                               6     5      1  137160
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
                   _write_power_mode
 ---------------------------------------------------------------------------------
 (3) _write_power_mode                                     8     7      1   23631
                                             51 BANK0      8     7      1
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _put_device_to_sleep                                 14    14      0   99150
                                             73 BANK0      3     3      0
                                              0 BANK1     11    11      0
                    _bme280_get_regs
                  _bme280_soft_reset
              _parse_device_settings
             _reload_device_settings
 ---------------------------------------------------------------------------------
 (4) _reload_device_settings                               5     4      1   73487
                                             68 BANK0      5     4      1
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _set_osr_settings                                     7     4      3   48691
                                             61 BANK0      7     4      3
          _set_osr_humidity_settings
        _set_osr_press_temp_settings
 ---------------------------------------------------------------------------------
 (4) _set_osr_press_temp_settings                         10     7      3   24298
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
            _fill_osr_press_settings
             _fill_osr_temp_settings
 ---------------------------------------------------------------------------------
 (5) _fill_osr_temp_settings                               6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _fill_osr_press_settings                              6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _set_osr_humidity_settings                           10     7      3   23776
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _set_filter_standby_settings                         10     7      3   24478
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
               _fill_filter_settings
              _fill_standby_settings
 ---------------------------------------------------------------------------------
 (4) _fill_standby_settings                                6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _fill_filter_settings                                 6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _parse_device_settings                                4     3      1     562
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _bme280_get_sensor_mode                               6     5      1   13430
                                             32 BANK0      6     5      1
                    _bme280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_init                                          7     7      0   41377
                                             64 BANK0      7     7      0
                              _Sleep *
                    _bme280_get_regs
                  _bme280_soft_reset
                     _get_calib_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _get_calib_data                                      32    32      0   15072
                                             32 BANK0     32    32      0
                    _bme280_get_regs
          _parse_humidity_calib_data
        _parse_temp_press_calib_data
 ---------------------------------------------------------------------------------
 (4) _parse_temp_press_calib_data                          4     3      1    1338
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _parse_humidity_calib_data                           14    13      1     699
                                              0 COMMON    14    13      1
 ---------------------------------------------------------------------------------
 (5) _bme280_get_regs                                      9     5      4   12470
                                             23 BANK0      9     5      4
                      _ReadEnvSensor *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (6) _ReadEnvSensor                                       10     5      5    8662
                                             13 BANK0     10     5      5
                       _I2C_ReadByte
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (7) _I2C_ReadByte                                         3     3      0    1650
                                             13 COMMON     1     1      0
                                             11 BANK0      2     2      0
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (4) _bme280_soft_reset                                    7     7      0   12168
                                             51 BANK0      7     7      0
                              _Sleep *
                    _bme280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (5) _bme280_set_regs                                     31    28      3   10716
                                             20 BANK0     31    28      3
                     _WriteEnvSensor *
                _interleave_reg_addr
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (6) _null_ptr_check                                       4     4      0     485
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _interleave_reg_addr                                  8     5      3     622
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _WriteEnvSensor                                       9     4      5    6857
                                             11 BANK0      9     4      5
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (7) _I2C_WriteByte                                        1     1      0    3201
                                             13 COMMON     1     1      0
                      _I2C_UserAlert
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (8) _I2C_UserAlert                                        1     1      0    1585
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C_Stop                                             0     0      0    1585
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (8) _I2C_Wait_SSPIF                                       4     4      0    1585
                                              7 BANK0      4     4      0
                         _DebugAlert
 ---------------------------------------------------------------------------------
 (1) _DebugAlert                                           8     3      5    1585
                                             12 COMMON     1     1      0
                                              0 BANK0      7     2      5
                              _Sleep
 ---------------------------------------------------------------------------------
 (4) _Sleep                                               12     8      4     645
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (17) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BME280_Init
     _DebugAlert
       _Sleep
     _I2C_Init
     _bme280_init
       _Sleep *
       _bme280_get_regs *
         _ReadEnvSensor *
           _I2C_ReadByte
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Stop
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
           _I2C_WriteByte
             _I2C_UserAlert
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
         _null_ptr_check *
       _bme280_soft_reset *
         _Sleep *
         _bme280_set_regs *
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _null_ptr_check *
       _get_calib_data *
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _parse_humidity_calib_data
         _parse_temp_press_calib_data
       _null_ptr_check *
     _bme280_set_sensor_mode
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _write_power_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
     _bme280_set_sensor_settings
       _are_settings_changed
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _set_filter_standby_settings
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _fill_filter_settings
         _fill_standby_settings
       _set_osr_settings
         _set_osr_humidity_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
         _set_osr_press_temp_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _fill_osr_press_settings
           _fill_osr_temp_settings
   _ClearString
     _strlen
   _ClearTxData
   _DebugAlert
     _Sleep
   _InitTiming
     _TMR0_SetInterruptHandler
   _Insert
     _strlen
   _InsertString
     _GetAtRowCSV (ARG)
       _ClearStringn
       _strlen
     _Insert (ARG)
       _strlen
     _strlen (ARG)
   _IntToString
     _ReverseString
       ___awdiv
       _strlen
     ___awdiv
     ___awmod
   _PollGPS
     _ClearNMEA
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _GetAtRowCSV
       _ClearStringn
       _strlen
     _Insert
       _strlen
     _InsertString
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
       _Insert (ARG)
         _strlen
       _strlen (ARG)
     _InsertTxData
       _GetAtRowCSV
         _ClearStringn
         _strlen
       _InsertString
         _GetAtRowCSV (ARG)
           _ClearStringn
           _strlen
         _Insert (ARG)
           _strlen
         _strlen (ARG)
       _InsertTxDataSep
         _Insert
           _strlen
     _InsertTxDataSep
       _Insert
         _strlen
     _WriteGPS
       _EUSART1_Write
       _strlen
     _strcmp
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _GPS_SendUBX
       _EUSART1_Write
       _GetLengthUBX
     _Sleep
     _WriteGPS
       _EUSART1_Write
       _strlen
   _Sleep
   _TransmitString
     _TransmitChar
       _TransmitBit
         _Sleep
     _strlen
   _UIntToHexString
     _ReverseString
       ___awdiv
       _strlen
     _crc16 (ARG)
       _crc16_update
         _strlen (ARG)
       _strlen
   _UIntToString
     _ReverseString
       ___awdiv
       _strlen
     ___lldiv
     ___llmod
   _crc16
     _crc16_update
       _strlen (ARG)
     _strlen
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     15F       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     17      33       8       63.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      34      12       65.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50     20      4C      14       95.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              48      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     15F      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Sep 14 16:33:14 2019

                           __end_of_ClearString 14E2                             __end_of_GetAtRowCSV 0D64  
                              GetAtRowCSV@index 0024                            __end_of_ClearStringn 13F0  
                             GetAtRowCSV@column 0078                                     __CFG_CP$OFF 0000  
                             GetAtRowCSV@counti 0020                                              l55 0DCD  
                                            l72 0654                                              l65 094E  
                                  ___awdiv@sign 0076                                 GPS_SendUBX@data 0077  
                                            _id 00B0                      ?_set_osr_humidity_settings 0053  
                                   __CFG_LVP$ON 0000                                             l152 09C7  
                                           l146 0A0D                                             l238 146A  
                                           l355 125E                                             l348 1282  
                                           l533 17CC                                             l536 17FD  
                                           l803 0339                                             l653 0D5D  
                                           l807 0398                                             l648 0D1D  
                                           l808 03F7                                             l844 0828  
                                           l828 0285                                             l861 1310  
                                           l679 078C                                             l891 15B7  
                                           l779 0A3F                 __size_of_fill_osr_temp_settings 001C  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 0076  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                               _InsertTxDataSep 1334                                   __CFG_BBEN$OFF 0000  
                                bme280_init@dev 0066                               ___g_timeout_start 00AC  
                                ReverseString@i 002B                                  WriteGPS@counti 0078  
                                    _DebugAlert 155A                                            l5022 0A02  
                         __size_of_crc16_update 003D                                            l5008 0BAC  
                                          l5040 1599                                            l6000 04C0  
                                          l5210 1689                                            l5026 0A1F  
                                          l5044 15AC                                            l5062 09D9  
                                          l5070 1321                                            l5302 0D4F  
                                          l5224 08C8                                            l5072 132D  
                                          l5320 0BBE                                            l6024 15E8  
                                          l5410 0DC3                                            l5058 09BC  
                                          l5250 1785                                            l5234 0808  
                                          l5154 13D7                                            l5306 0D62  
                                          l5170 0F70                                            l5322 0BFA  
                                          l5084 17C0                                            l5412 0DC6  
                                          l5236 0809                                            l5172 0F7E  
                                          l5406 0DAE                                            l5430 0FB7  
                                          l5318 0BEE                                            l5096 14B9  
                                          l5352 0B20                                            l5176 0F83  
                                          l5168 0F44                                            l5336 1312  
                                          l4802 155D                                            l5442 0FFD  
                                          l5370 0B46                                            l5362 0B28  
                                          l5346 0B15                                            l6306 0EC6  
                                          l5274 128C                                            l6330 07F5  
                                          l5436 0FDA                                            l5364 0B34  
                                          l6308 0F0C                                            l6340 0DE2  
                                          l5620 0769                                            l6324 07D6  
                                          l6316 07AD                                            l5198 0AB7  
                                          l5462 0886                                            l5374 0B4F  
                                          l5614 0748                                            l5606 0740  
                                          l5710 0C1E                                            l4808 17EF  
                                          l4920 1749                                            l5392 0D77  
                                          l6352 0E2C                                            l5640 140F  
                                          l5616 0767                                            l5608 0741  
                                          l6328 07E8                                            l4850 146D  
                                          l5458 0875                                            l5378 0B57  
                                          l5722 0C49                                            l6522 0273  
                                          l4852 146E                                            l5708 0C10  
                                          l4918 1731                                            l4862 1634  
                                          l4934 0926                                            l5734 095A  
                                          l5566 1516                                            l5654 169D  
                                          l5718 0C3E                                            l6358 0CAD  
                                          l5912 13F2                                            l5760 0990  
                                          l5752 097F                                            l5656 168E  
                                          l5576 14ED                                            l5680 080B  
                                          l6464 0059                                            l4946 05C1  
                                          l5746 0967                                            l5738 0961  
                                          l5658 16AB                                            l5770 08D2  
                                          l5682 0843                                            l4892 0ADB  
                                          l5836 0E96                                            l5748 0973  
                                          l5756 0988                                            l5924 0A23  
                                          l5772 08E0                                            l5780 0903  
                                          l5676 082E                                            l4974 061F  
                                          l4966 05E5                                            l4982 064F  
                                          l4894 0B06                                            l5846 14C9  
                                          l5598 072A                                            l5694 16F3  
                                          l4984 0656                                            l4968 05FF  
                                          l4888 0AF3                                            l5776 08F8  
                                          l5970 0356                                            l5972 02FE  
                                          l5974 035C                                            l5968 0321  
                                          l5986 0498                                            l5996 04BB  
                                          l5998 02B1                                            STR_1 184E  
                                          STR_2 1834                                            STR_3 1882  
                                          STR_4 181A                                            STR_5 1868  
                                          STR_6 1800                                            STR_7 189C  
                                          STR_8 18AA                                            STR_9 18B1  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u5020 0A76  
                                          u5005 0F31                                            u5015 0F4E  
                                          u6005 140A                                            u5135 0D30  
                                          u5235 0B2B                                            u6035 0314  
                                          _PMD0 0796                                            u4525 15D2  
                                          u5165 0D27                                            u6125 15F2  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u4535 1566                                            u5255 0B35  
                                          u5175 0BF8                                            _PMD3 0799  
                                          _PMD4 079A                                            u4625 0AEF  
                                          u5265 0B3F                                            u5185 0BC9  
                                          u6065 0308                                            _PMD5 079B  
                                          _PMD6 079C                                            u4635 0AE1  
                                          u5275 0B47                                            _PMD7 079D  
                                          u5620 16FF                                            u4645 1737  
                                          u5630 1700                                            u5614 16F9  
                                          u5615 16F8                                            u6505 0ED0  
                                          u5705 0C3F                                            u5555 1427  
                                          u4845 1389                                            u5485 1520  
                                          u5645 1711                                            u6525 07C9  
                                          u6550 0DD6                                            u4935 0C66  
                                          u4855 13A5                                            u4775 136D  
                                          u5495 14F7                                            u6560 0DD7  
                                          u4945 0C78                                            u4785 13C1  
                                          u5665 0C13                                            u5825 08D5  
                                          u6730 0064                                            u4955 0C8A  
                                          u5755 096A                                            u4965 0C9D  
                                          u5685 0C1F                                            u5845 08EE  
                                          u5775 0979                                            u5695 0C33  
                                          u5855 08F9                                            u4985 06CA  
                                          u5785 0980                                            u6585 0E17  
                                          u4995 13E1                                            u6757 15D5  
                                          u5895 14D3                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                        ??_fill_filter_settings 0072                       __size_of_write_power_mode 0039  
                        WriteEnvSensor@reg_addr 002C                          WriteEnvSensor@reg_data 002D  
                                 _EUSART1_Write 125D                                   __CFG_FCMEN$ON 0000  
               __size_of_bme280_set_sensor_mode 0040                       __size_of_set_osr_settings 002A  
                         __size_of_I2C_ReadByte 0019                             _put_device_to_sleep 0888  
                                          _main 004D                            __end_of_GetLengthUBX 12E2  
                                 ?_EUSART1_Read 0070                                __end_of_I2C_Init 1309  
                                  TransmitBit@b 007C                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                        interleave_reg_addr@len 0072                                __end_of_I2C_Stop 1238  
          are_settings_changed@desired_settings 0070                     put_device_to_sleep@reg_data 00BA  
                                 __CFG_BOREN$ON 0000                               GPS_SendUBX@length 0075  
                  GPS_HasAcknowledged@startTime 0020                                            start 000E  
                          bme280_soft_reset@dev 0059                                 _HALF_BAUD_DELAY 18B4  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                reload_device_settings@settings 0067                         ??_fill_standby_settings 0072  
                                 ??_IntToString 002D                     put_device_to_sleep@settings 00C0  
                                 _ReadEnvSensor 0ABA                                 __end_of_PollGPS 04C2  
                               bme280_init@rslt 0065                         __end_of_TMR0_Initialize 12F5  
                ??_TMR0_DefaultInterruptHandler 0070                  __size_of_OSCILLATOR_Initialize 0009  
                 __end_of_OSCILLATOR_Initialize 126E                            ?_put_device_to_sleep 0070  
                              PollGPS@startTime 003D                           ReverseString@opposite 0027  
                                         ?_main 0070                      GPS_HasAcknowledged@ackByte 0024  
                               __end_of___awdiv 0B5C                                   __CFG_WDTE$OFF 0000  
                               __end_of___awmod 0995                                 WriteGPS@message 0075  
                               __end_of___lldiv 0C52                                 ___awdiv@divisor 0070  
                               __end_of___llmod 090C                                           i1l389 000C  
                               ___awdiv@counter 0075                                           _OSCEN 0891  
                                  _crc16_update 080B                                           _TMR0H 059D  
                                         _TMR0L 059C                                      Insert@dest 0075  
                             _bme280_soft_reset 1787                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0006                        __size_of_bme280_get_regs 0044  
                     ?_TMR0_SetInterruptHandler 0070                                           _Sleep 15AE  
                              __end_of_TMR0_ISR 12B3                              ?_bme280_soft_reset 0070  
                                  _I2C_ReadByte 134C                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                      UIntToHexString@remainder 0038                                           _crc16 1470  
                              crc16_update@wCrc 0079                                ?_UIntToHexString 002D  
                                  ?_GPS_SendUBX 0070                                           _ticks 00A8  
                                 TransmitChar@i 0021                                  ?_EUSART1_Write 0070  
                                         pclath 000A                         GPS_HasAcknowledged@data 002F  
                 __size_of_are_settings_changed 000B                                     _ClearTxData 13F0  
                                ??_EUSART1_Read 0070                             ??_bme280_soft_reset 0053  
                                         status 0003                                           wtemp0 007E  
                                   _ClearString 14BB                        __size_of_bme280_set_regs 00A1  
                              ??_get_calib_data 0040                          put_device_to_sleep@dev 00BE  
                         bme280_soft_reset@rslt 0057                                     _GetAtRowCSV 0D02  
                        _fill_osr_temp_settings 13B8              _EUSART1_DefaultFramingErrorHandler 0000  
    bme280_set_sensor_settings@desired_settings 00C5                                   PollGPS@counti 0041  
                          __end_of_UIntToString 0D02                   bme280_set_sensor_settings@dev 006C  
                               __initialization 0010                           DebugAlert@num_flashes 0024  
                                    _InitTiming 1255               parse_humidity_calib_data@reg_data 007D  
                                ?_ReadEnvSensor 002D                      __end_of_EUSART1_Initialize 144B  
                                  __end_of_main 0291                            GPS_HasAcknowledged@i 0031  
                                __CFG_SAFEN$OFF 0000                              __size_of_ClearNMEA 001D  
                   ?_INTERRUPT_InterruptManager 0070                          _bme280_set_sensor_mode 0848  
                         ??_put_device_to_sleep 0069                         __end_of_InsertTxDataSep 134C  
                     __end_of_bme280_soft_reset 17C3                         ?_bme280_get_sensor_mode 0040  
                                        ??_main 00CC                           __end_of_ReverseString 0F15  
                           __end_of_IntToString 0E3B                          __size_of_I2C_UserAlert 0003  
                       __size_of_WriteEnvSensor 0033                                ??_null_ptr_check 0070  
             bme280_set_sensor_mode@sensor_mode 00C5                                ReverseString@str 0079  
                                 ?_InsertTxData 0035                                __end_of_TimerISR 1278  
                              __end_of_SetupGPS 0A6D                           ReadEnvSensor@reg_addr 002E  
                                 ?_InsertString 0029                           ReadEnvSensor@reg_data 002F  
           write_power_mode@sensor_mode_reg_val 005A                                          ?_Sleep 0070  
                                        ?_crc16 0021                                      Sleep@start 0078  
                        __size_of_I2C_WriteByte 000E                                ___llmod@dividend 0074  
                              ___awdiv@dividend 0072                                     ?_DebugAlert 0020  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                       __end_of_HALF_BAUD_DELAY 18B6                                __end_of_WriteGPS 1531  
                                        _RC1REG 0119                                          _RC1STA 011D  
                      ??_reload_device_settings 0065                                          _RB4PPS 1F1C  
                                        _RB6PPS 1F1E                                          _RB7PPS 1F1F  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                    __size_of_EUSART1_is_rx_ready 0005  
                                __CFG_WDTCCS$SC 0000                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                             I2C_ReadByte@rcvdata 002C  
                                   Insert@index 0078                    __size_of_interleave_reg_addr 002D  
                     bme280_get_sensor_mode@dev 0040                       bme280_set_sensor_mode@dev 006C  
                         __size_of_ClearStringn 001C                      ?_parse_humidity_calib_data 0070  
                                     ??_PollGPS 0039                                          _Insert 0F15  
                                __CFG_PWRTS$OFF 0000                    fill_filter_settings@reg_data 0075  
                             crc16_update@pData 0075                                       ??___awdiv 0074  
                                __CFG_STVREN$ON 0000                                       ??___awmod 0074  
                                     ??___lldiv 0078                    parse_humidity_calib_data@dev 0070  
                                     ??___llmod 0078                             DebugAlert@delay_low 0022  
                      ?_EUSART1_SetErrorHandler 0070                  __end_of_bme280_get_sensor_mode 168B  
                              ?_TMR0_Initialize 0070                  fill_osr_temp_settings@reg_data 0075  
                              ___awdiv@quotient 0077                                 ___awmod@divisor 0070  
                  fill_filter_settings@settings 0070                                 ___awmod@counter 0075  
              ??_EUSART1_SetOverrunErrorHandler 0072                 ?_EUSART1_SetOverrunErrorHandler 0070  
                                        _txdata 2764                                          _strcmp 168B  
                                        _strlen 131D                        interleave_reg_addr@index 0077  
                             get_calib_data@dev 005F                                  ??_InsertTxData 007E  
                                  IntToString@i 0030                                    IntToString@n 007B  
                               InsertString@src 002B                                  _PMD_Initialize 1278  
                                     ?_I2C_Init 0070                                  ??_InsertString 007C  
                                     ?_I2C_Stop 0070                  fill_osr_temp_settings@settings 0070  
                              ??_TransmitString 0025                             write_power_mode@dev 0053  
                               ??_EUSART1_Write 0070        TMR0_SetInterruptHandler@InterruptHandler 0070  
                         __size_of_GetLengthUBX 0012                                   ClearStringn@i 0074  
                                  _ClearStringn 13D4                               __end_of_ClearNMEA 142A  
                       put_device_to_sleep@rslt 00BF                               ??_bme280_get_regs 003B  
                              _write_power_mode 174E                    interleave_reg_addr@temp_buff 0070  
                             _SYSTEM_Initialize 12C1                         __end_of__initialization 0049  
                              _set_osr_settings 1584                                   _I2C_UserAlert 07FC  
                            ?_SYSTEM_Initialize 0070                             main@convertedNumber 024C  
                          _UIntToHexString$1753 0034                 set_filter_standby_settings@rslt 005A  
                               ??_ReadEnvSensor 0032                             ReverseString@counti 0029  
                bme280_set_sensor_settings@rslt 00C7                         __size_of_I2C_Wait_SSPIF 003D  
                                 ??_bme280_init 0060                        get_calib_data@calib_data 0043  
                                __pcstackCOMMON 0070                                     ?_InitTiming 0070  
                                 __end_of_Sleep 15D9                                  PollGPS@success 0043  
                                 _I2C_WriteByte 12B3                __size_of_fill_osr_press_settings 001B  
                                  __pidataBANK4 1605                               ??_bme280_set_regs 0037  
                                 __end_of_crc16 1495                             ??_SYSTEM_Initialize 0072  
                                   _IntToString 0DCF                                       ?_TMR0_ISR 0070  
              set_osr_settings@desired_settings 0063                                   ??_TransmitBit 007C  
                           __size_of_DebugAlert 002A                                     PollGPS@byte 0046  
                        __end_of_PMD_Initialize 1282                      __size_of_bme280_soft_reset 003C  
                              ?_InsertTxDataSep 007C                            __end_of_EUSART1_Read 128E  
                   ??_set_osr_humidity_settings 0056                           _parse_device_settings 0C52  
                                  _GetLengthUBX 12D0                                      ??_I2C_Init 0070  
                                    ??_I2C_Stop 007D                are_settings_changed@sub_settings 0071  
                                       ??_Sleep 0074                             set_osr_settings@dev 005F  
                                       ??_crc16 007E                     __end_of_GPS_HasAcknowledged 0783  
                     __end_of_SYSTEM_Initialize 12D0                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                 ??_BME280_Init 00C8                 __size_of_reload_device_settings 0026  
                   interleave_reg_addr@reg_addr 0076                           __size_of_UIntToString 0058  
                          __size_of_GPS_SendUBX 0027                                  ?_I2C_UserAlert 0070  
                             ReverseString@temp 0026                     interleave_reg_addr@reg_data 0071  
                         InsertString@destLimit 002F                                _setNavFlightMode 0220  
                                       ?_Insert 0075                 __end_of_EUSART1_SetErrorHandler 1249  
                                    __pmaintext 004D                                       ?_TimerISR 0070  
                                ?_I2C_WriteByte 0070                                       ?_SetupGPS 0070  
                set_osr_press_temp_settings@dev 0055                __end_of_TMR0_SetInterruptHandler 1243  
                                    ??_TMR0_ISR 0070                  __size_of_fill_standby_settings 001C  
                               __CFG_PPS1WAY$ON 0000                   __end_of_fill_standby_settings 13B8  
                                    __pintentry 0004     set_filter_standby_settings@desired_settings 0059  
                              ReadEnvSensor@len 0030                                       ?_WriteGPS 0075  
                           __end_of_bme280_init 0DCF                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0070                                  _WriteEnvSensor 171B  
                                       ?_strcmp 007B                                         ?_strlen 0070  
        __end_of_EUSART1_SetFramingErrorHandler 124F         __size_of_EUSART1_SetFramingErrorHandler 0006  
                _EUSART1_SetFramingErrorHandler 1249                    ??_bme280_set_sensor_settings 006D  
                           __end_of_TransmitBit 131D                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                    _UIntToString 0CAA  
                                       _OSCTUNE 0892                    ?_parse_temp_press_calib_data 0070  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                   set_osr_humidity_settings@rslt 005B  
                           __size_of_InitTiming 0008                                    Insert@length 0025  
                       ?_fill_osr_temp_settings 0070                    ?_set_osr_press_temp_settings 0053  
                                  ?_ClearTxData 0070                       _set_osr_humidity_settings 0B5C  
                                       Insert@i 0027                                    ?_ClearString 0070  
                                  ?_GetAtRowCSV 0076                   __size_of_fill_filter_settings 001C  
                  set_osr_humidity_settings@dev 0055                            __end_of_InsertTxData 16EA  
                 bme280_soft_reset@soft_rst_cmd 0056                                         Sleep@ms 0070  
                                       _PollGPS 0291                            __end_of_InsertString 0C00  
                           __end_of_BME280_Init 0EA8                                 __size_of_Insert 0075  
                                    ??_TimerISR 0070                                      ??_SetupGPS 007C  
                       ?_bme280_set_sensor_mode 006C                                GetLengthUBX@data 0073  
                                       ___awdiv 0B0B                                         ___awmod 0950  
                                       ___lldiv 0C00                                         ___llmod 08CA  
                  __end_of_are_settings_changed 080B                          __end_of_WriteEnvSensor 174E  
                        _reload_device_settings 1495                             _EUSART1_is_rx_ready 1238  
                        ?_parse_device_settings 0070                                      ??_WriteGPS 0077  
                            crc16_update@length 0077                                         __ptext1 1470  
                                       __ptext2 080B                                         __ptext3 0CAA  
                                       __ptext4 08CA                                         __ptext5 0C00  
                                       __ptext6 0783                                         __ptext7 15D9  
                                       __ptext8 16EA                                         __ptext9 1309  
           parse_humidity_calib_data@dig_H4_lsb 0074             parse_humidity_calib_data@dig_H4_msb 0076  
           parse_humidity_calib_data@dig_H5_lsb 0078             parse_humidity_calib_data@dig_H5_msb 007A  
                          DebugAlert@delay_high 0020                                 __CFG_WRTAPP$OFF 0000  
                               __size_of_strcmp 002F             parse_humidity_calib_data@calib_data 007C  
                               __size_of_strlen 0017                             _interleave_reg_addr 1631  
                         _OSCILLATOR_Initialize 1265                                ___awmod@dividend 0072  
                            _EUSART1_Initialize 142A                        ??_PIN_MANAGER_Initialize 0070  
                               __CFG_WRTSAF$OFF 0000                              get_calib_data@F376 01A0  
                     reload_device_settings@dev 0064                  __end_of_fill_osr_temp_settings 13D4  
                                       main@end 025C                      __size_of_SYSTEM_Initialize 000F  
                                       clrloop0 128F                                    ??_DebugAlert 007C  
                 ??_parse_temp_press_calib_data 0071                                 ??_I2C_UserAlert 007D  
                          end_of_initialization 0049                              get_calib_data@rslt 005E  
                          ?_EUSART1_is_rx_ready 0070                             ?_EUSART1_Initialize 0070  
                              InsertString@dest 0029           bme280_set_sensor_settings@sensor_mode 00C6  
                                       init_ram 129A                     _EUSART1_OverrunErrorHandler 01D0  
                                       initloop 129B                   ??_set_osr_press_temp_settings 0056  
                          ?_interleave_reg_addr 0070                        __size_of_UIntToHexString 0079  
                               ??_I2C_WriteByte 007D                                 ___lldiv@divisor 0070  
                __end_of_bme280_set_sensor_mode 0888                                  _I2C_Wait_SSPIF 17C3  
                               ___lldiv@counter 007D                     ??_parse_humidity_calib_data 0071  
                       _fill_osr_press_settings 1365                     __end_of_put_device_to_sleep 08CA  
                          write_power_mode@rslt 0058                                     _bme280_init 0D64  
                      write_power_mode@reg_addr 0059                      reload_device_settings@rslt 0068  
                         __size_of_EUSART1_Read 000C                                      main@F11370 0120  
                          ??_EUSART1_Initialize 0072                                  ClearString@str 007A  
                               ?_WriteEnvSensor 002B                                         strcmp@l 0028  
                                       strcmp@r 007B                                     _TransmitBit 1309  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0073  
                      __end_of_write_power_mode 1787                                         strlen@s 0070  
                            __end_of_DebugAlert 1584                        _TMR0_SetInterruptHandler 123D  
                      __end_of_set_osr_settings 15AE                                 _bme280_get_regs 090C  
                                 ?_TransmitChar 0070                              bme280_get_regs@dev 003A  
                               WriteEnvSensor@i 0032                              bme280_get_regs@len 0038  
                               TransmitString@i 0028                 fill_osr_press_settings@reg_data 0075  
                                GetAtRowCSV@col 0022                                    GPS_SendUBX@i 0078  
                                GetAtRowCSV@src 0076                               __size_of_I2C_Init 0014  
                             __size_of_I2C_Stop 0005                __size_of_EUSART1_SetErrorHandler 0006  
                           EUSART1_Write@txData 0070                                __CFG_FEXTOSC$OFF 0000  
                         ??_EUSART1_is_rx_ready 0070                    ?_set_filter_standby_settings 0053  
               fill_osr_press_settings@settings 0070                                 _bme280_set_regs 05B7  
                                   _BME280_Init 0E3B                            bme280_init@try_count 0063  
                         ??_interleave_reg_addr 0073                          __end_of_I2C_Wait_SSPIF 1800  
                                  _EUSART1_Read 1282                       bme280_soft_reset@reg_addr 0058  
                                _gps_configured 00B2                                       _ClearNMEA 140D  
                          ReverseString@halfway 0024                          __size_of_ReverseString 006D  
                         TransmitString@message 0023                                    ??_InitTiming 0072  
          __size_of_parse_temp_press_calib_data 00F5                                  __end_of_Insert 0F8A  
                                  ?_IntToString 007B                         __size_of_get_calib_data 004D  
                                     Insert@src 0077            __size_of_set_osr_press_temp_settings 0046  
                             __size_of_TMR0_ISR 000D              __end_of_bme280_set_sensor_settings 1000  
                    _bme280_set_sensor_settings 0F8A                          ?_OSCILLATOR_Initialize 0070  
                parse_temp_press_calib_data@dev 0070                                       _EnvSensor 013C  
                                ??_TransmitChar 007D                        bme280_set_regs@temp_buff 003A  
                                __end_of_strcmp 16BA                       _parse_humidity_calib_data 0658  
                                __end_of_strlen 1334                             start_initialization 0010  
                           UIntToHexString@dest 0031                                    PollGPS@index 0049  
                      __size_of_TMR0_Initialize 0013                 __size_of_PIN_MANAGER_Initialize 0029  
         parse_temp_press_calib_data@calib_data 0072                                UIntToHexString@i 003C  
                              UIntToHexString@n 002D                              __end_of_InitTiming 125D  
                         __end_of_EUSART1_Write 1265                               InsertTxData@field 0037  
                         __size_of_InsertTxData 0030                               InsertTxData@index 0035  
                          _are_settings_changed 0800                              I2C_ReadByte@ackbit 002B  
                       __size_of_null_ptr_check 0025                           __size_of_InsertString 0052  
                 ??_set_filter_standby_settings 0056                                 ___llmod@divisor 0070  
                               ?_I2C_Wait_SSPIF 0070                       ??_fill_osr_press_settings 0072  
                               ___llmod@counter 0079                                      ?_ClearNMEA 0070  
                          __size_of_ClearTxData 001D                            __size_of_ClearString 0027  
                                      ??_Insert 0020                                __CFG_LPBOREN$OFF 0000  
                          __size_of_GetAtRowCSV 0062                                    ClearTxData@i 0072  
                              ??_PMD_Initialize 0070                              bme280_init@chip_id 0064  
                         __end_of_ReadEnvSensor 0B0B                            set_osr_settings@rslt 0062  
            __size_of_set_osr_humidity_settings 0052                         __end_of_bme280_get_regs 0950  
                               BME280_Init@rslt 00CB                               ??_UIntToHexString 0032  
                             __size_of_TimerISR 000A                                     __pdataBANK4 0220  
                             __size_of_SetupGPS 004C                              null_ptr_check@rslt 0072  
                                  ClearString@i 0078                                        ??_strcmp 007D  
                                      ??_strlen 0072                                   ?_crc16_update 0075  
                                 _ReverseString 0EA8                                    GetAtRowCSV@i 0026  
                             __size_of_WriteGPS 0028                                     __pbssBIGRAM 26D8  
                                  _InsertTxData 16BA                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00BA  
                                 __pcstackBANK4 024C                                   ?_I2C_ReadByte 0070  
                       __end_of_bme280_set_regs 0658                                    _InsertString 0BAE  
                                 crc16_update@i 0020                        __size_of_InsertTxDataSep 0018  
                                 ??_GPS_SendUBX 0074                           ?_are_settings_changed 0070  
              ??_EUSART1_SetFramingErrorHandler 0072                 ?_EUSART1_SetFramingErrorHandler 0070  
                        PollGPS@eusart_complete 0045             bme280_set_sensor_mode@last_set_mode 00C6  
             set_osr_humidity_settings@ctrl_hum 0059                                       crc16@data 0021  
                       __size_of_TransmitString 002C                           _TMR0_InterruptHandler 00D1  
                                     WriteGPS@i 007A                                       __pnvBANK1 00D1  
                                     __pnvBANK3 01CE                    __size_of_GPS_HasAcknowledged 0092  
             set_osr_humidity_settings@reg_addr 005C                        set_osr_settings@settings 005D  
                      ??_bme280_get_sensor_mode 0041                                        ?_PollGPS 0070  
                        _PIN_MANAGER_Initialize 1531                         ?_reload_device_settings 0064  
                       ??_parse_device_settings 0071                                        ?___awdiv 0070  
                                      ?___awmod 0070                                        ?___lldiv 0070  
           set_filter_standby_settings@reg_addr 005B                                        ?___llmod 0070  
           set_filter_standby_settings@reg_data 005C               set_osr_humidity_settings@settings 0053  
               set_osr_press_temp_settings@rslt 005A            __size_of_set_filter_standby_settings 0046  
             __end_of_set_osr_humidity_settings 0BAE                    ??_INTERRUPT_InterruptManager 0070  
                         _fill_standby_settings 139C                    __end_of_fill_filter_settings 139C  
                                ??_crc16_update 007B                 __end_of_fill_osr_press_settings 1380  
                                ?_ReverseString 0079                                        _BAUD1CON 011F  
           set_filter_standby_settings@settings 0053              _EUSART1_DefaultOverrunErrorHandler 0000  
                                  _PollGPS$2658 0044                                        _I2C_Init 12F5  
                                      _I2C_Stop 1233                            _EUSART1_ErrorHandler 01CE  
                                ??_I2C_ReadByte 007D                              ClearStringn@length 0070  
                             ReadEnvSensor@rslt 0034                         _EUSART1_SetErrorHandler 1243  
                                __size_of_Sleep 002B                                  __size_of_crc16 0025  
                          InsertTxDataSep@index 007C                                       _nmea_data 26D8  
   set_osr_press_temp_settings@desired_settings 0059                               ??_TMR0_Initialize 0072  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0070  
                                      _LATCbits 001A                         BME280_Init@settings_sel 00CA  
                                   ??_ClearNMEA 0070                             __end_of_GPS_SendUBX 1509  
                                     clear_ram0 128E                            __end_of_TransmitChar 171B  
                                      _PIE0bits 0716                  __end_of_reload_device_settings 14BB  
           __size_of_INTERRUPT_InterruptManager 000A             parse_temp_press_calib_data@reg_data 0073  
                              ??_WriteEnvSensor 0030                      ??_TMR0_SetInterruptHandler 0072  
                                      _PIR0bits 070C                                        _PIR3bits 070F  
                                      _RX1DTPPS 1ECB                                    ?_bme280_init 0070  
                                   DebugAlert@i 0025                                   UIntToString@i 0034  
                                 UIntToString@n 002D                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 12A6                                        _SSP1STAT 018F  
                              ?_bme280_get_regs 0037                                  _get_calib_data 0A6D  
                                  ?_TransmitBit 0070                            __size_of_IntToString 006C  
                             ?_write_power_mode 0053                               ?_set_osr_settings 005D  
                          WriteEnvSensor@dev_id 002B                              ??_write_power_mode 0054  
                                     main@index 026A                              ??_set_osr_settings 0060  
                          TransmitString@counti 0026                         bme280_get_regs@reg_addr 003E  
                       bme280_set_regs@reg_addr 0052                         bme280_get_regs@reg_data 0037  
                       bme280_set_regs@reg_data 0034                                ?_bme280_set_regs 0034  
             bme280_get_sensor_mode@sensor_mode 0045                          ??_are_settings_changed 0071  
                                 ?_ClearStringn 0070                         bme280_set_regs@temp_len 004E  
                                _null_ptr_check 144B              __size_of_parse_humidity_calib_data 0099  
                                  ?_BME280_Init 0070                           __end_of_I2C_UserAlert 07FF  
                                      PollGPS@i 0047                             ReadEnvSensor@dev_id 002D  
                   bme280_set_regs@reg_addr_cnt 0050                               ??_InsertTxDataSep 0029  
                            InsertString@counti 0031                                 IntToString@dest 007D  
                               IntToString@sign 002F                             bme280_set_regs@rslt 0051  
               __size_of_bme280_get_sensor_mode 002D                           __end_of_I2C_WriteByte 12C1  
                                      _TimerISR 126E                                        _SetupGPS 0A21  
                              __size_of_PollGPS 0231                          __end_of_get_calib_data 0ABA  
                             null_ptr_check@dev 0073                                   InsertString@i 0033  
                       ??_OSCILLATOR_Initialize 0070                                __size_of___awdiv 0051  
                        ?_fill_standby_settings 0070                                __size_of___awmod 0045  
                              __size_of___lldiv 0052                                __size_of___llmod 0042  
                   __size_of_EUSART1_Initialize 0021                                 ??_ReverseString 0020  
                                      _WriteGPS 1509                    __size_of_put_device_to_sleep 0042  
                                 ?_GetLengthUBX 0070                     ?_bme280_set_sensor_settings 006C  
                             ClearString@counti 0076                       ??_EUSART1_SetErrorHandler 0072  
                   _EUSART1_DefaultErrorHandler 0000                                        crc16@crc 0023  
                   __end_of_EUSART1_is_rx_ready 123D                                      _T0CON0bits 059E  
                                      _checksum 00B4             __end_of_parse_temp_press_calib_data 05B7  
                   _parse_temp_press_calib_data 04C2                             I2C_UserAlert@status 0070  
                set_filter_standby_settings@dev 0055                                  ReadEnvSensor@i 0035  
                                      __ptext10 0A21                                        __ptext11 14E2  
                                      __ptext20 124F                                        __ptext12 12D0  
                                      __ptext21 1249                                        __ptext13 06F1  
                                      __ptext30 0F15                                        __ptext22 1243  
                                      __ptext14 12C1                                        __ptext31 0D02  
                                      __ptext23 0291                                        __ptext15 12E2  
                                      __ptext40 1255                                        __ptext32 13D4  
                                      __ptext24 168B                                        __ptext16 1278  
                                      __ptext41 123D                                        __ptext33 1238  
                                      __ptext25 1509                                        __ptext17 1531  
                                      __ptext50 0888                                        __ptext42 13F0  
                                      __ptext34 1282                                        __ptext26 125D  
                                      __ptext18 1265                                        __ptext51 1495  
                                      __ptext43 14BB                                        __ptext35 140D  
                                      __ptext27 16BA                                        __ptext19 142A  
                                ??_ClearStringn 0072                                        __ptext60 0C52  
                                      __ptext52 1584                                        __ptext44 131D  
                                      __ptext36 0DCF                                        __ptext28 1334  
                                      __ptext61 165E                                        __ptext53 09DB  
                                      __ptext45 0E3B                                        __ptext37 0950  
                                      __ptext29 0BAE                                        __ptext70 05B7  
                                      __ptext62 0D64                                        __ptext54 13B8  
                                      __ptext46 0F8A                                        __ptext38 0EA8  
                                      __ptext71 144B                                        __ptext63 0A6D  
                                      __ptext55 1365                                        __ptext47 0800  
                                      __ptext39 0B0B                                        __ptext80 12F5  
                                      __ptext72 1631                                        __ptext64 04C2  
                                      __ptext56 0B5C                                        __ptext48 0848  
                                      __ptext73 171B                                        __ptext65 0658  
                                      __ptext57 0995                                        __ptext49 174E  
                                      __ptext82 12A6                                        __ptext74 12B3  
                                      __ptext66 090C                                        __ptext58 139C  
                                      __ptext83 07FF                                        __ptext75 07FC  
                                      __ptext67 0ABA                                        __ptext59 1380  
                                      __ptext84 126E                                        __ptext76 1233  
                                      __ptext68 134C                                        __ptext77 17C3  
                                      __ptext69 1787                                        __ptext78 155A  
                                      __ptext79 15AE                     __end_of_interleave_reg_addr 165E  
                                  _SSP1CON1bits 0190                          __end_of_null_ptr_check 1470  
                                  _SSP1CON2bits 0191                                ??_I2C_Wait_SSPIF 0027  
                                      _csvField 01BA                                     _GPS_SendUBX 14E2  
           __end_of_set_osr_press_temp_settings 0A21                     _set_osr_press_temp_settings 09DB  
                               _UIntToHexString 0783                                  _TransmitString 15D9  
                                 __size_of_main 0244                            _fill_filter_settings 1380  
             __end_of_parse_humidity_calib_data 06F1                            __end_of_crc16_update 0848  
          __end_of_TMR0_DefaultInterruptHandler 0800           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 07FF                            __CFG_WDTCWS$WDTCWS_7 0000  
                          __end_of_I2C_ReadByte 1365                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0070                                TransmitChar@byte 0020  
                               ?_get_calib_data 0070                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 000E                      _INTERRUPT_InterruptManager 0004  
                                    ClearNMEA@i 0072                                UIntToString@dest 0031  
                   _EUSART1_FramingErrorHandler 01D2                                  ??_GetLengthUBX 0073  
                               main@sensor_data 025E                        ??_fill_osr_temp_settings 0072  
                           _GPS_HasAcknowledged 06F1                                      _INTCONbits 000B  
                             InsertString@index 002D                          _bme280_get_sensor_mode 165E  
            set_osr_humidity_settings@ctrl_meas 005A                                   ?_UIntToString 002D  
                            bme280_set_regs@dev 0036                              bme280_set_regs@len 0035  
                 parse_device_settings@reg_data 0073                                  __pstringtext10 18B1  
                                __pstringtext11 0000                                 ?_null_ptr_check 0070  
                    bme280_get_sensor_data@F271 00A0                      bme280_get_sensor_data@F273 0130  
                         __size_of_TransmitChar 0031                          __end_of_TransmitString 1605  
                                      intlevel1 0000                                   ??_ClearTxData 0070  
                      ??_bme280_set_sensor_mode 006D                   parse_device_settings@settings 0070  
                 fill_standby_settings@reg_data 0075                                   ??_ClearString 0075  
                              ___lldiv@dividend 0074                           ?_fill_filter_settings 0070  
                                 ??_GetAtRowCSV 007A                         ?_PIN_MANAGER_Initialize 0070  
                             __CFG_CLKOUTEN$OFF 0000          __end_of_EUSART1_SetOverrunErrorHandler 1255  
       __size_of_EUSART1_SetOverrunErrorHandler 0006                  _EUSART1_SetOverrunErrorHandler 124F  
                          ?_GPS_HasAcknowledged 0070                   ?_TMR0_DefaultInterruptHandler 0070  
                 fill_standby_settings@settings 0070                    GPS_HasAcknowledged@ackByteID 0030  
                  GPS_HasAcknowledged@ackPacket 0025                              WriteEnvSensor@rslt 0031  
EUSART1_SetFramingErrorHandler@interruptHandler 0070                            __size_of_bme280_init 006B  
                __size_of_parse_device_settings 0058                   __end_of_parse_device_settings 0CAA  
                        __size_of_EUSART1_Write 0008                              _eusart1RxLastError 00B3  
                                 __pstringtext1 18B4                                   __pstringtext2 1800  
                                 __pstringtext3 181A                                   __pstringtext4 1834  
                                 __pstringtext5 184E                                   __pstringtext6 1868  
                                 __pstringtext7 1882                                   __pstringtext8 189C  
                                 __pstringtext9 18AA                            __size_of_TransmitBit 0014  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                                  _TransmitChar 16EA                                ___lldiv@quotient 0079  
                                ??_UIntToString 0032                                 _TMR0_Initialize 12E2  
                               ClearStringn@str 0073            are_settings_changed@settings_changed 0072  
                       __end_of_UIntToHexString 07FC                               WriteEnvSensor@len 002E  
                                    _TX1STAbits 011E             __end_of_set_filter_standby_settings 09DB  
                   _set_filter_standby_settings 0995                      bme280_get_sensor_mode@rslt 0044  
                        __size_of_ReadEnvSensor 0051                        ?_fill_osr_press_settings 0070  
                    bme280_set_sensor_mode@rslt 00C7                                 ?_TransmitString 0023  
                __end_of_PIN_MANAGER_Initialize 155A                                 Insert@destLimit 007A  
           set_osr_press_temp_settings@reg_addr 005B             set_osr_press_temp_settings@reg_data 005C  
                           bme280_get_regs@rslt 003F                           ??_GPS_HasAcknowledged 0070  
                             I2C_WriteByte@data 007D                            __size_of_BME280_Init 006D  
           __size_of_bme280_set_sensor_settings 0076                             __end_of_ClearTxData 140D  
                   write_power_mode@sensor_mode 0057             set_osr_press_temp_settings@settings 0053  
