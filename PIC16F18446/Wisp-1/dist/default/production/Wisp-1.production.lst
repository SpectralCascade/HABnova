

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Sep 14 17:57:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	cinit,global,class=CODE,merge=1,delta=2
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2
    78                           	psect	text50,local,class=CODE,merge=1,delta=2
    79                           	dabs	1,0xCA0,32
    80                           	dabs	1,0xC20,80
    81                           	dabs	1,0xBD4,28
    82                           	dabs	1,0xBA0,52
    83                           	dabs	1,0xB20,80
    84                           	dabs	1,0xAE8,8
    85                           	dabs	1,0x26D8,0,_nmea_data
    86                           	dabs	1,0x2764,0,_txdata
    87                           	dabs	1,0x7E,2
    88  0000                     
    89                           ; Version 2.05
    90                           ; Generated 20/12/2018 GMT
    91                           ; 
    92                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F18446 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  008C                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008E                     	;# 
   149  008F                     	;# 
   150  0090                     	;# 
   151  0090                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0094                     	;# 
   158  0095                     	;# 
   159  0096                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  010C                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  010F                     	;# 
   178  0110                     	;# 
   179  0111                     	;# 
   180  0112                     	;# 
   181  0113                     	;# 
   182  0114                     	;# 
   183  0115                     	;# 
   184  0116                     	;# 
   185  0117                     	;# 
   186  0118                     	;# 
   187  0119                     	;# 
   188  0119                     	;# 
   189  0119                     	;# 
   190  011A                     	;# 
   191  011A                     	;# 
   192  011A                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011B                     	;# 
   198  011C                     	;# 
   199  011C                     	;# 
   200  011C                     	;# 
   201  011D                     	;# 
   202  011D                     	;# 
   203  011D                     	;# 
   204  011E                     	;# 
   205  011E                     	;# 
   206  011E                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  011F                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  018E                     	;# 
   215  018F                     	;# 
   216  0190                     	;# 
   217  0191                     	;# 
   218  0192                     	;# 
   219  0196                     	;# 
   220  0197                     	;# 
   221  0198                     	;# 
   222  0199                     	;# 
   223  019A                     	;# 
   224  019B                     	;# 
   225  019C                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  020E                     	;# 
   229  020E                     	;# 
   230  020F                     	;# 
   231  020F                     	;# 
   232  0210                     	;# 
   233  0210                     	;# 
   234  0211                     	;# 
   235  0211                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0216                     	;# 
   243  0216                     	;# 
   244  0217                     	;# 
   245  0217                     	;# 
   246  0218                     	;# 
   247  0219                     	;# 
   248  021A                     	;# 
   249  021A                     	;# 
   250  021B                     	;# 
   251  021B                     	;# 
   252  021C                     	;# 
   253  021C                     	;# 
   254  021D                     	;# 
   255  021D                     	;# 
   256  021E                     	;# 
   257  021F                     	;# 
   258  028C                     	;# 
   259  028C                     	;# 
   260  028D                     	;# 
   261  028D                     	;# 
   262  028E                     	;# 
   263  028F                     	;# 
   264  0290                     	;# 
   265  0291                     	;# 
   266  0292                     	;# 
   267  0292                     	;# 
   268  0293                     	;# 
   269  0293                     	;# 
   270  0294                     	;# 
   271  0295                     	;# 
   272  0296                     	;# 
   273  0297                     	;# 
   274  0298                     	;# 
   275  0298                     	;# 
   276  0299                     	;# 
   277  0299                     	;# 
   278  029A                     	;# 
   279  029B                     	;# 
   280  029C                     	;# 
   281  029D                     	;# 
   282  029F                     	;# 
   283  030C                     	;# 
   284  030C                     	;# 
   285  030D                     	;# 
   286  030E                     	;# 
   287  030F                     	;# 
   288  0310                     	;# 
   289  0310                     	;# 
   290  0311                     	;# 
   291  0312                     	;# 
   292  0313                     	;# 
   293  0314                     	;# 
   294  0314                     	;# 
   295  0315                     	;# 
   296  0316                     	;# 
   297  0317                     	;# 
   298  0318                     	;# 
   299  0318                     	;# 
   300  0319                     	;# 
   301  031A                     	;# 
   302  031B                     	;# 
   303  038C                     	;# 
   304  038C                     	;# 
   305  038D                     	;# 
   306  038E                     	;# 
   307  0390                     	;# 
   308  0390                     	;# 
   309  0391                     	;# 
   310  0392                     	;# 
   311  048C                     	;# 
   312  048C                     	;# 
   313  048D                     	;# 
   314  048E                     	;# 
   315  048F                     	;# 
   316  048F                     	;# 
   317  0490                     	;# 
   318  0491                     	;# 
   319  0492                     	;# 
   320  0492                     	;# 
   321  0493                     	;# 
   322  0494                     	;# 
   323  0495                     	;# 
   324  0495                     	;# 
   325  0496                     	;# 
   326  0497                     	;# 
   327  0498                     	;# 
   328  0499                     	;# 
   329  049A                     	;# 
   330  049B                     	;# 
   331  049C                     	;# 
   332  049D                     	;# 
   333  058C                     	;# 
   334  058C                     	;# 
   335  058D                     	;# 
   336  058E                     	;# 
   337  058F                     	;# 
   338  058F                     	;# 
   339  0590                     	;# 
   340  0591                     	;# 
   341  0592                     	;# 
   342  0593                     	;# 
   343  059C                     	;# 
   344  059C                     	;# 
   345  059D                     	;# 
   346  059D                     	;# 
   347  059E                     	;# 
   348  059F                     	;# 
   349  060C                     	;# 
   350  060C                     	;# 
   351  060D                     	;# 
   352  060D                     	;# 
   353  060E                     	;# 
   354  060F                     	;# 
   355  0610                     	;# 
   356  0611                     	;# 
   357  0612                     	;# 
   358  0613                     	;# 
   359  0614                     	;# 
   360  0616                     	;# 
   361  0616                     	;# 
   362  0617                     	;# 
   363  0617                     	;# 
   364  0618                     	;# 
   365  0619                     	;# 
   366  061A                     	;# 
   367  061B                     	;# 
   368  061C                     	;# 
   369  061D                     	;# 
   370  061E                     	;# 
   371  070C                     	;# 
   372  070D                     	;# 
   373  070E                     	;# 
   374  070F                     	;# 
   375  0710                     	;# 
   376  0711                     	;# 
   377  0712                     	;# 
   378  0713                     	;# 
   379  0714                     	;# 
   380  0716                     	;# 
   381  0717                     	;# 
   382  0718                     	;# 
   383  0719                     	;# 
   384  071A                     	;# 
   385  071B                     	;# 
   386  071C                     	;# 
   387  071D                     	;# 
   388  071E                     	;# 
   389  0796                     	;# 
   390  0797                     	;# 
   391  0798                     	;# 
   392  0799                     	;# 
   393  079A                     	;# 
   394  079B                     	;# 
   395  079C                     	;# 
   396  079D                     	;# 
   397  080C                     	;# 
   398  080D                     	;# 
   399  080E                     	;# 
   400  080F                     	;# 
   401  0810                     	;# 
   402  0811                     	;# 
   403  0812                     	;# 
   404  0813                     	;# 
   405  0814                     	;# 
   406  081A                     	;# 
   407  081A                     	;# 
   408  081B                     	;# 
   409  081C                     	;# 
   410  081C                     	;# 
   411  081D                     	;# 
   412  081E                     	;# 
   413  081F                     	;# 
   414  088C                     	;# 
   415  088D                     	;# 
   416  088E                     	;# 
   417  088F                     	;# 
   418  0890                     	;# 
   419  0891                     	;# 
   420  0892                     	;# 
   421  0893                     	;# 
   422  0895                     	;# 
   423  0896                     	;# 
   424  0897                     	;# 
   425  0898                     	;# 
   426  0899                     	;# 
   427  089A                     	;# 
   428  089B                     	;# 
   429  090C                     	;# 
   430  090E                     	;# 
   431  090F                     	;# 
   432  091F                     	;# 
   433  098F                     	;# 
   434  098F                     	;# 
   435  0990                     	;# 
   436  0991                     	;# 
   437  0992                     	;# 
   438  0993                     	;# 
   439  0994                     	;# 
   440  0995                     	;# 
   441  0996                     	;# 
   442  0997                     	;# 
   443  1E0F                     	;# 
   444  1E10                     	;# 
   445  1E11                     	;# 
   446  1E12                     	;# 
   447  1E13                     	;# 
   448  1E14                     	;# 
   449  1E15                     	;# 
   450  1E16                     	;# 
   451  1E17                     	;# 
   452  1E18                     	;# 
   453  1E19                     	;# 
   454  1E1A                     	;# 
   455  1E1B                     	;# 
   456  1E1C                     	;# 
   457  1E1D                     	;# 
   458  1E1E                     	;# 
   459  1E1F                     	;# 
   460  1E20                     	;# 
   461  1E21                     	;# 
   462  1E22                     	;# 
   463  1E23                     	;# 
   464  1E24                     	;# 
   465  1E25                     	;# 
   466  1E26                     	;# 
   467  1E27                     	;# 
   468  1E28                     	;# 
   469  1E29                     	;# 
   470  1E2A                     	;# 
   471  1E2B                     	;# 
   472  1E2C                     	;# 
   473  1E2D                     	;# 
   474  1E2E                     	;# 
   475  1E2F                     	;# 
   476  1E30                     	;# 
   477  1E31                     	;# 
   478  1E32                     	;# 
   479  1E33                     	;# 
   480  1E34                     	;# 
   481  1E35                     	;# 
   482  1E36                     	;# 
   483  1E37                     	;# 
   484  1E8F                     	;# 
   485  1E90                     	;# 
   486  1E91                     	;# 
   487  1E92                     	;# 
   488  1E93                     	;# 
   489  1E94                     	;# 
   490  1E95                     	;# 
   491  1E96                     	;# 
   492  1E97                     	;# 
   493  1E9C                     	;# 
   494  1E9D                     	;# 
   495  1E9E                     	;# 
   496  1EA1                     	;# 
   497  1EA2                     	;# 
   498  1EA3                     	;# 
   499  1EA4                     	;# 
   500  1EA9                     	;# 
   501  1EAA                     	;# 
   502  1EB1                     	;# 
   503  1EB2                     	;# 
   504  1EB8                     	;# 
   505  1EB9                     	;# 
   506  1EBA                     	;# 
   507  1EBB                     	;# 
   508  1EBC                     	;# 
   509  1EBD                     	;# 
   510  1EBE                     	;# 
   511  1EC3                     	;# 
   512  1EC5                     	;# 
   513  1EC6                     	;# 
   514  1EC7                     	;# 
   515  1EC8                     	;# 
   516  1EC9                     	;# 
   517  1ECA                     	;# 
   518  1ECB                     	;# 
   519  1ECB                     	;# 
   520  1ECB                     	;# 
   521  1ECC                     	;# 
   522  1ECC                     	;# 
   523  1ECC                     	;# 
   524  1F10                     	;# 
   525  1F11                     	;# 
   526  1F12                     	;# 
   527  1F14                     	;# 
   528  1F15                     	;# 
   529  1F1C                     	;# 
   530  1F1D                     	;# 
   531  1F1E                     	;# 
   532  1F1F                     	;# 
   533  1F20                     	;# 
   534  1F21                     	;# 
   535  1F22                     	;# 
   536  1F23                     	;# 
   537  1F24                     	;# 
   538  1F25                     	;# 
   539  1F26                     	;# 
   540  1F27                     	;# 
   541  1F38                     	;# 
   542  1F39                     	;# 
   543  1F3A                     	;# 
   544  1F3B                     	;# 
   545  1F3C                     	;# 
   546  1F3D                     	;# 
   547  1F3E                     	;# 
   548  1F3F                     	;# 
   549  1F43                     	;# 
   550  1F44                     	;# 
   551  1F45                     	;# 
   552  1F46                     	;# 
   553  1F47                     	;# 
   554  1F48                     	;# 
   555  1F49                     	;# 
   556  1F4A                     	;# 
   557  1F4E                     	;# 
   558  1F4F                     	;# 
   559  1F50                     	;# 
   560  1F51                     	;# 
   561  1F52                     	;# 
   562  1F53                     	;# 
   563  1F54                     	;# 
   564  1F55                     	;# 
   565  1FE4                     	;# 
   566  1FE5                     	;# 
   567  1FE6                     	;# 
   568  1FE7                     	;# 
   569  1FE8                     	;# 
   570  1FE8                     	;# 
   571  1FE9                     	;# 
   572  1FEA                     	;# 
   573  1FEB                     	;# 
   574  1FED                     	;# 
   575  1FEE                     	;# 
   576  1FEF                     	;# 
   577  0000                     	;# 
   578  0001                     	;# 
   579  0002                     	;# 
   580  0003                     	;# 
   581  0004                     	;# 
   582  0005                     	;# 
   583  0006                     	;# 
   584  0007                     	;# 
   585  0008                     	;# 
   586  0009                     	;# 
   587  000A                     	;# 
   588  000B                     	;# 
   589  000C                     	;# 
   590  000D                     	;# 
   591  000E                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0014                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  008C                     	;# 
   599  008C                     	;# 
   600  008D                     	;# 
   601  008E                     	;# 
   602  008E                     	;# 
   603  008F                     	;# 
   604  0090                     	;# 
   605  0090                     	;# 
   606  0091                     	;# 
   607  0092                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0096                     	;# 
   615  0097                     	;# 
   616  0098                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  009F                     	;# 
   626  010C                     	;# 
   627  010C                     	;# 
   628  010D                     	;# 
   629  010E                     	;# 
   630  010F                     	;# 
   631  010F                     	;# 
   632  0110                     	;# 
   633  0111                     	;# 
   634  0112                     	;# 
   635  0113                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0117                     	;# 
   640  0118                     	;# 
   641  0119                     	;# 
   642  0119                     	;# 
   643  0119                     	;# 
   644  011A                     	;# 
   645  011A                     	;# 
   646  011A                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011B                     	;# 
   651  011B                     	;# 
   652  011C                     	;# 
   653  011C                     	;# 
   654  011C                     	;# 
   655  011D                     	;# 
   656  011D                     	;# 
   657  011D                     	;# 
   658  011E                     	;# 
   659  011E                     	;# 
   660  011E                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  011F                     	;# 
   665  011F                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  018E                     	;# 
   669  018F                     	;# 
   670  0190                     	;# 
   671  0191                     	;# 
   672  0192                     	;# 
   673  0196                     	;# 
   674  0197                     	;# 
   675  0198                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019C                     	;# 
   680  020C                     	;# 
   681  020D                     	;# 
   682  020E                     	;# 
   683  020E                     	;# 
   684  020F                     	;# 
   685  020F                     	;# 
   686  0210                     	;# 
   687  0210                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0213                     	;# 
   692  0214                     	;# 
   693  0214                     	;# 
   694  0215                     	;# 
   695  0215                     	;# 
   696  0216                     	;# 
   697  0216                     	;# 
   698  0217                     	;# 
   699  0217                     	;# 
   700  0218                     	;# 
   701  0219                     	;# 
   702  021A                     	;# 
   703  021A                     	;# 
   704  021B                     	;# 
   705  021B                     	;# 
   706  021C                     	;# 
   707  021C                     	;# 
   708  021D                     	;# 
   709  021D                     	;# 
   710  021E                     	;# 
   711  021F                     	;# 
   712  028C                     	;# 
   713  028C                     	;# 
   714  028D                     	;# 
   715  028D                     	;# 
   716  028E                     	;# 
   717  028F                     	;# 
   718  0290                     	;# 
   719  0291                     	;# 
   720  0292                     	;# 
   721  0292                     	;# 
   722  0293                     	;# 
   723  0293                     	;# 
   724  0294                     	;# 
   725  0295                     	;# 
   726  0296                     	;# 
   727  0297                     	;# 
   728  0298                     	;# 
   729  0298                     	;# 
   730  0299                     	;# 
   731  0299                     	;# 
   732  029A                     	;# 
   733  029B                     	;# 
   734  029C                     	;# 
   735  029D                     	;# 
   736  029F                     	;# 
   737  030C                     	;# 
   738  030C                     	;# 
   739  030D                     	;# 
   740  030E                     	;# 
   741  030F                     	;# 
   742  0310                     	;# 
   743  0310                     	;# 
   744  0311                     	;# 
   745  0312                     	;# 
   746  0313                     	;# 
   747  0314                     	;# 
   748  0314                     	;# 
   749  0315                     	;# 
   750  0316                     	;# 
   751  0317                     	;# 
   752  0318                     	;# 
   753  0318                     	;# 
   754  0319                     	;# 
   755  031A                     	;# 
   756  031B                     	;# 
   757  038C                     	;# 
   758  038C                     	;# 
   759  038D                     	;# 
   760  038E                     	;# 
   761  0390                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  048C                     	;# 
   766  048C                     	;# 
   767  048D                     	;# 
   768  048E                     	;# 
   769  048F                     	;# 
   770  048F                     	;# 
   771  0490                     	;# 
   772  0491                     	;# 
   773  0492                     	;# 
   774  0492                     	;# 
   775  0493                     	;# 
   776  0494                     	;# 
   777  0495                     	;# 
   778  0495                     	;# 
   779  0496                     	;# 
   780  0497                     	;# 
   781  0498                     	;# 
   782  0499                     	;# 
   783  049A                     	;# 
   784  049B                     	;# 
   785  049C                     	;# 
   786  049D                     	;# 
   787  058C                     	;# 
   788  058C                     	;# 
   789  058D                     	;# 
   790  058E                     	;# 
   791  058F                     	;# 
   792  058F                     	;# 
   793  0590                     	;# 
   794  0591                     	;# 
   795  0592                     	;# 
   796  0593                     	;# 
   797  059C                     	;# 
   798  059C                     	;# 
   799  059D                     	;# 
   800  059D                     	;# 
   801  059E                     	;# 
   802  059F                     	;# 
   803  060C                     	;# 
   804  060C                     	;# 
   805  060D                     	;# 
   806  060D                     	;# 
   807  060E                     	;# 
   808  060F                     	;# 
   809  0610                     	;# 
   810  0611                     	;# 
   811  0612                     	;# 
   812  0613                     	;# 
   813  0614                     	;# 
   814  0616                     	;# 
   815  0616                     	;# 
   816  0617                     	;# 
   817  0617                     	;# 
   818  0618                     	;# 
   819  0619                     	;# 
   820  061A                     	;# 
   821  061B                     	;# 
   822  061C                     	;# 
   823  061D                     	;# 
   824  061E                     	;# 
   825  070C                     	;# 
   826  070D                     	;# 
   827  070E                     	;# 
   828  070F                     	;# 
   829  0710                     	;# 
   830  0711                     	;# 
   831  0712                     	;# 
   832  0713                     	;# 
   833  0714                     	;# 
   834  0716                     	;# 
   835  0717                     	;# 
   836  0718                     	;# 
   837  0719                     	;# 
   838  071A                     	;# 
   839  071B                     	;# 
   840  071C                     	;# 
   841  071D                     	;# 
   842  071E                     	;# 
   843  0796                     	;# 
   844  0797                     	;# 
   845  0798                     	;# 
   846  0799                     	;# 
   847  079A                     	;# 
   848  079B                     	;# 
   849  079C                     	;# 
   850  079D                     	;# 
   851  080C                     	;# 
   852  080D                     	;# 
   853  080E                     	;# 
   854  080F                     	;# 
   855  0810                     	;# 
   856  0811                     	;# 
   857  0812                     	;# 
   858  0813                     	;# 
   859  0814                     	;# 
   860  081A                     	;# 
   861  081A                     	;# 
   862  081B                     	;# 
   863  081C                     	;# 
   864  081C                     	;# 
   865  081D                     	;# 
   866  081E                     	;# 
   867  081F                     	;# 
   868  088C                     	;# 
   869  088D                     	;# 
   870  088E                     	;# 
   871  088F                     	;# 
   872  0890                     	;# 
   873  0891                     	;# 
   874  0892                     	;# 
   875  0893                     	;# 
   876  0895                     	;# 
   877  0896                     	;# 
   878  0897                     	;# 
   879  0898                     	;# 
   880  0899                     	;# 
   881  089A                     	;# 
   882  089B                     	;# 
   883  090C                     	;# 
   884  090E                     	;# 
   885  090F                     	;# 
   886  091F                     	;# 
   887  098F                     	;# 
   888  098F                     	;# 
   889  0990                     	;# 
   890  0991                     	;# 
   891  0992                     	;# 
   892  0993                     	;# 
   893  0994                     	;# 
   894  0995                     	;# 
   895  0996                     	;# 
   896  0997                     	;# 
   897  1E0F                     	;# 
   898  1E10                     	;# 
   899  1E11                     	;# 
   900  1E12                     	;# 
   901  1E13                     	;# 
   902  1E14                     	;# 
   903  1E15                     	;# 
   904  1E16                     	;# 
   905  1E17                     	;# 
   906  1E18                     	;# 
   907  1E19                     	;# 
   908  1E1A                     	;# 
   909  1E1B                     	;# 
   910  1E1C                     	;# 
   911  1E1D                     	;# 
   912  1E1E                     	;# 
   913  1E1F                     	;# 
   914  1E20                     	;# 
   915  1E21                     	;# 
   916  1E22                     	;# 
   917  1E23                     	;# 
   918  1E24                     	;# 
   919  1E25                     	;# 
   920  1E26                     	;# 
   921  1E27                     	;# 
   922  1E28                     	;# 
   923  1E29                     	;# 
   924  1E2A                     	;# 
   925  1E2B                     	;# 
   926  1E2C                     	;# 
   927  1E2D                     	;# 
   928  1E2E                     	;# 
   929  1E2F                     	;# 
   930  1E30                     	;# 
   931  1E31                     	;# 
   932  1E32                     	;# 
   933  1E33                     	;# 
   934  1E34                     	;# 
   935  1E35                     	;# 
   936  1E36                     	;# 
   937  1E37                     	;# 
   938  1E8F                     	;# 
   939  1E90                     	;# 
   940  1E91                     	;# 
   941  1E92                     	;# 
   942  1E93                     	;# 
   943  1E94                     	;# 
   944  1E95                     	;# 
   945  1E96                     	;# 
   946  1E97                     	;# 
   947  1E9C                     	;# 
   948  1E9D                     	;# 
   949  1E9E                     	;# 
   950  1EA1                     	;# 
   951  1EA2                     	;# 
   952  1EA3                     	;# 
   953  1EA4                     	;# 
   954  1EA9                     	;# 
   955  1EAA                     	;# 
   956  1EB1                     	;# 
   957  1EB2                     	;# 
   958  1EB8                     	;# 
   959  1EB9                     	;# 
   960  1EBA                     	;# 
   961  1EBB                     	;# 
   962  1EBC                     	;# 
   963  1EBD                     	;# 
   964  1EBE                     	;# 
   965  1EC3                     	;# 
   966  1EC5                     	;# 
   967  1EC6                     	;# 
   968  1EC7                     	;# 
   969  1EC8                     	;# 
   970  1EC9                     	;# 
   971  1ECA                     	;# 
   972  1ECB                     	;# 
   973  1ECB                     	;# 
   974  1ECB                     	;# 
   975  1ECC                     	;# 
   976  1ECC                     	;# 
   977  1ECC                     	;# 
   978  1F10                     	;# 
   979  1F11                     	;# 
   980  1F12                     	;# 
   981  1F14                     	;# 
   982  1F15                     	;# 
   983  1F1C                     	;# 
   984  1F1D                     	;# 
   985  1F1E                     	;# 
   986  1F1F                     	;# 
   987  1F20                     	;# 
   988  1F21                     	;# 
   989  1F22                     	;# 
   990  1F23                     	;# 
   991  1F24                     	;# 
   992  1F25                     	;# 
   993  1F26                     	;# 
   994  1F27                     	;# 
   995  1F38                     	;# 
   996  1F39                     	;# 
   997  1F3A                     	;# 
   998  1F3B                     	;# 
   999  1F3C                     	;# 
  1000  1F3D                     	;# 
  1001  1F3E                     	;# 
  1002  1F3F                     	;# 
  1003  1F43                     	;# 
  1004  1F44                     	;# 
  1005  1F45                     	;# 
  1006  1F46                     	;# 
  1007  1F47                     	;# 
  1008  1F48                     	;# 
  1009  1F49                     	;# 
  1010  1F4A                     	;# 
  1011  1F4E                     	;# 
  1012  1F4F                     	;# 
  1013  1F50                     	;# 
  1014  1F51                     	;# 
  1015  1F52                     	;# 
  1016  1F53                     	;# 
  1017  1F54                     	;# 
  1018  1F55                     	;# 
  1019  1FE4                     	;# 
  1020  1FE5                     	;# 
  1021  1FE6                     	;# 
  1022  1FE7                     	;# 
  1023  1FE8                     	;# 
  1024  1FE8                     	;# 
  1025  1FE9                     	;# 
  1026  1FEA                     	;# 
  1027  1FEB                     	;# 
  1028  1FED                     	;# 
  1029  1FEE                     	;# 
  1030  1FEF                     	;# 
  1031  0000                     	;# 
  1032  0001                     	;# 
  1033  0002                     	;# 
  1034  0003                     	;# 
  1035  0004                     	;# 
  1036  0005                     	;# 
  1037  0006                     	;# 
  1038  0007                     	;# 
  1039  0008                     	;# 
  1040  0009                     	;# 
  1041  000A                     	;# 
  1042  000B                     	;# 
  1043  000C                     	;# 
  1044  000D                     	;# 
  1045  000E                     	;# 
  1046  0012                     	;# 
  1047  0013                     	;# 
  1048  0014                     	;# 
  1049  0018                     	;# 
  1050  0019                     	;# 
  1051  001A                     	;# 
  1052  008C                     	;# 
  1053  008C                     	;# 
  1054  008D                     	;# 
  1055  008E                     	;# 
  1056  008E                     	;# 
  1057  008F                     	;# 
  1058  0090                     	;# 
  1059  0090                     	;# 
  1060  0091                     	;# 
  1061  0092                     	;# 
  1062  0092                     	;# 
  1063  0093                     	;# 
  1064  0094                     	;# 
  1065  0094                     	;# 
  1066  0095                     	;# 
  1067  0096                     	;# 
  1068  0096                     	;# 
  1069  0097                     	;# 
  1070  0098                     	;# 
  1071  0099                     	;# 
  1072  009A                     	;# 
  1073  009B                     	;# 
  1074  009B                     	;# 
  1075  009C                     	;# 
  1076  009D                     	;# 
  1077  009D                     	;# 
  1078  009E                     	;# 
  1079  009F                     	;# 
  1080  010C                     	;# 
  1081  010C                     	;# 
  1082  010D                     	;# 
  1083  010E                     	;# 
  1084  010F                     	;# 
  1085  010F                     	;# 
  1086  0110                     	;# 
  1087  0111                     	;# 
  1088  0112                     	;# 
  1089  0113                     	;# 
  1090  0114                     	;# 
  1091  0115                     	;# 
  1092  0116                     	;# 
  1093  0117                     	;# 
  1094  0118                     	;# 
  1095  0119                     	;# 
  1096  0119                     	;# 
  1097  0119                     	;# 
  1098  011A                     	;# 
  1099  011A                     	;# 
  1100  011A                     	;# 
  1101  011B                     	;# 
  1102  011B                     	;# 
  1103  011B                     	;# 
  1104  011B                     	;# 
  1105  011B                     	;# 
  1106  011C                     	;# 
  1107  011C                     	;# 
  1108  011C                     	;# 
  1109  011D                     	;# 
  1110  011D                     	;# 
  1111  011D                     	;# 
  1112  011E                     	;# 
  1113  011E                     	;# 
  1114  011E                     	;# 
  1115  011F                     	;# 
  1116  011F                     	;# 
  1117  011F                     	;# 
  1118  011F                     	;# 
  1119  011F                     	;# 
  1120  018C                     	;# 
  1121  018D                     	;# 
  1122  018E                     	;# 
  1123  018F                     	;# 
  1124  0190                     	;# 
  1125  0191                     	;# 
  1126  0192                     	;# 
  1127  0196                     	;# 
  1128  0197                     	;# 
  1129  0198                     	;# 
  1130  0199                     	;# 
  1131  019A                     	;# 
  1132  019B                     	;# 
  1133  019C                     	;# 
  1134  020C                     	;# 
  1135  020D                     	;# 
  1136  020E                     	;# 
  1137  020E                     	;# 
  1138  020F                     	;# 
  1139  020F                     	;# 
  1140  0210                     	;# 
  1141  0210                     	;# 
  1142  0211                     	;# 
  1143  0211                     	;# 
  1144  0212                     	;# 
  1145  0213                     	;# 
  1146  0214                     	;# 
  1147  0214                     	;# 
  1148  0215                     	;# 
  1149  0215                     	;# 
  1150  0216                     	;# 
  1151  0216                     	;# 
  1152  0217                     	;# 
  1153  0217                     	;# 
  1154  0218                     	;# 
  1155  0219                     	;# 
  1156  021A                     	;# 
  1157  021A                     	;# 
  1158  021B                     	;# 
  1159  021B                     	;# 
  1160  021C                     	;# 
  1161  021C                     	;# 
  1162  021D                     	;# 
  1163  021D                     	;# 
  1164  021E                     	;# 
  1165  021F                     	;# 
  1166  028C                     	;# 
  1167  028C                     	;# 
  1168  028D                     	;# 
  1169  028D                     	;# 
  1170  028E                     	;# 
  1171  028F                     	;# 
  1172  0290                     	;# 
  1173  0291                     	;# 
  1174  0292                     	;# 
  1175  0292                     	;# 
  1176  0293                     	;# 
  1177  0293                     	;# 
  1178  0294                     	;# 
  1179  0295                     	;# 
  1180  0296                     	;# 
  1181  0297                     	;# 
  1182  0298                     	;# 
  1183  0298                     	;# 
  1184  0299                     	;# 
  1185  0299                     	;# 
  1186  029A                     	;# 
  1187  029B                     	;# 
  1188  029C                     	;# 
  1189  029D                     	;# 
  1190  029F                     	;# 
  1191  030C                     	;# 
  1192  030C                     	;# 
  1193  030D                     	;# 
  1194  030E                     	;# 
  1195  030F                     	;# 
  1196  0310                     	;# 
  1197  0310                     	;# 
  1198  0311                     	;# 
  1199  0312                     	;# 
  1200  0313                     	;# 
  1201  0314                     	;# 
  1202  0314                     	;# 
  1203  0315                     	;# 
  1204  0316                     	;# 
  1205  0317                     	;# 
  1206  0318                     	;# 
  1207  0318                     	;# 
  1208  0319                     	;# 
  1209  031A                     	;# 
  1210  031B                     	;# 
  1211  038C                     	;# 
  1212  038C                     	;# 
  1213  038D                     	;# 
  1214  038E                     	;# 
  1215  0390                     	;# 
  1216  0390                     	;# 
  1217  0391                     	;# 
  1218  0392                     	;# 
  1219  048C                     	;# 
  1220  048C                     	;# 
  1221  048D                     	;# 
  1222  048E                     	;# 
  1223  048F                     	;# 
  1224  048F                     	;# 
  1225  0490                     	;# 
  1226  0491                     	;# 
  1227  0492                     	;# 
  1228  0492                     	;# 
  1229  0493                     	;# 
  1230  0494                     	;# 
  1231  0495                     	;# 
  1232  0495                     	;# 
  1233  0496                     	;# 
  1234  0497                     	;# 
  1235  0498                     	;# 
  1236  0499                     	;# 
  1237  049A                     	;# 
  1238  049B                     	;# 
  1239  049C                     	;# 
  1240  049D                     	;# 
  1241  058C                     	;# 
  1242  058C                     	;# 
  1243  058D                     	;# 
  1244  058E                     	;# 
  1245  058F                     	;# 
  1246  058F                     	;# 
  1247  0590                     	;# 
  1248  0591                     	;# 
  1249  0592                     	;# 
  1250  0593                     	;# 
  1251  059C                     	;# 
  1252  059C                     	;# 
  1253  059D                     	;# 
  1254  059D                     	;# 
  1255  059E                     	;# 
  1256  059F                     	;# 
  1257  060C                     	;# 
  1258  060C                     	;# 
  1259  060D                     	;# 
  1260  060D                     	;# 
  1261  060E                     	;# 
  1262  060F                     	;# 
  1263  0610                     	;# 
  1264  0611                     	;# 
  1265  0612                     	;# 
  1266  0613                     	;# 
  1267  0614                     	;# 
  1268  0616                     	;# 
  1269  0616                     	;# 
  1270  0617                     	;# 
  1271  0617                     	;# 
  1272  0618                     	;# 
  1273  0619                     	;# 
  1274  061A                     	;# 
  1275  061B                     	;# 
  1276  061C                     	;# 
  1277  061D                     	;# 
  1278  061E                     	;# 
  1279  070C                     	;# 
  1280  070D                     	;# 
  1281  070E                     	;# 
  1282  070F                     	;# 
  1283  0710                     	;# 
  1284  0711                     	;# 
  1285  0712                     	;# 
  1286  0713                     	;# 
  1287  0714                     	;# 
  1288  0716                     	;# 
  1289  0717                     	;# 
  1290  0718                     	;# 
  1291  0719                     	;# 
  1292  071A                     	;# 
  1293  071B                     	;# 
  1294  071C                     	;# 
  1295  071D                     	;# 
  1296  071E                     	;# 
  1297  0796                     	;# 
  1298  0797                     	;# 
  1299  0798                     	;# 
  1300  0799                     	;# 
  1301  079A                     	;# 
  1302  079B                     	;# 
  1303  079C                     	;# 
  1304  079D                     	;# 
  1305  080C                     	;# 
  1306  080D                     	;# 
  1307  080E                     	;# 
  1308  080F                     	;# 
  1309  0810                     	;# 
  1310  0811                     	;# 
  1311  0812                     	;# 
  1312  0813                     	;# 
  1313  0814                     	;# 
  1314  081A                     	;# 
  1315  081A                     	;# 
  1316  081B                     	;# 
  1317  081C                     	;# 
  1318  081C                     	;# 
  1319  081D                     	;# 
  1320  081E                     	;# 
  1321  081F                     	;# 
  1322  088C                     	;# 
  1323  088D                     	;# 
  1324  088E                     	;# 
  1325  088F                     	;# 
  1326  0890                     	;# 
  1327  0891                     	;# 
  1328  0892                     	;# 
  1329  0893                     	;# 
  1330  0895                     	;# 
  1331  0896                     	;# 
  1332  0897                     	;# 
  1333  0898                     	;# 
  1334  0899                     	;# 
  1335  089A                     	;# 
  1336  089B                     	;# 
  1337  090C                     	;# 
  1338  090E                     	;# 
  1339  090F                     	;# 
  1340  091F                     	;# 
  1341  098F                     	;# 
  1342  098F                     	;# 
  1343  0990                     	;# 
  1344  0991                     	;# 
  1345  0992                     	;# 
  1346  0993                     	;# 
  1347  0994                     	;# 
  1348  0995                     	;# 
  1349  0996                     	;# 
  1350  0997                     	;# 
  1351  1E0F                     	;# 
  1352  1E10                     	;# 
  1353  1E11                     	;# 
  1354  1E12                     	;# 
  1355  1E13                     	;# 
  1356  1E14                     	;# 
  1357  1E15                     	;# 
  1358  1E16                     	;# 
  1359  1E17                     	;# 
  1360  1E18                     	;# 
  1361  1E19                     	;# 
  1362  1E1A                     	;# 
  1363  1E1B                     	;# 
  1364  1E1C                     	;# 
  1365  1E1D                     	;# 
  1366  1E1E                     	;# 
  1367  1E1F                     	;# 
  1368  1E20                     	;# 
  1369  1E21                     	;# 
  1370  1E22                     	;# 
  1371  1E23                     	;# 
  1372  1E24                     	;# 
  1373  1E25                     	;# 
  1374  1E26                     	;# 
  1375  1E27                     	;# 
  1376  1E28                     	;# 
  1377  1E29                     	;# 
  1378  1E2A                     	;# 
  1379  1E2B                     	;# 
  1380  1E2C                     	;# 
  1381  1E2D                     	;# 
  1382  1E2E                     	;# 
  1383  1E2F                     	;# 
  1384  1E30                     	;# 
  1385  1E31                     	;# 
  1386  1E32                     	;# 
  1387  1E33                     	;# 
  1388  1E34                     	;# 
  1389  1E35                     	;# 
  1390  1E36                     	;# 
  1391  1E37                     	;# 
  1392  1E8F                     	;# 
  1393  1E90                     	;# 
  1394  1E91                     	;# 
  1395  1E92                     	;# 
  1396  1E93                     	;# 
  1397  1E94                     	;# 
  1398  1E95                     	;# 
  1399  1E96                     	;# 
  1400  1E97                     	;# 
  1401  1E9C                     	;# 
  1402  1E9D                     	;# 
  1403  1E9E                     	;# 
  1404  1EA1                     	;# 
  1405  1EA2                     	;# 
  1406  1EA3                     	;# 
  1407  1EA4                     	;# 
  1408  1EA9                     	;# 
  1409  1EAA                     	;# 
  1410  1EB1                     	;# 
  1411  1EB2                     	;# 
  1412  1EB8                     	;# 
  1413  1EB9                     	;# 
  1414  1EBA                     	;# 
  1415  1EBB                     	;# 
  1416  1EBC                     	;# 
  1417  1EBD                     	;# 
  1418  1EBE                     	;# 
  1419  1EC3                     	;# 
  1420  1EC5                     	;# 
  1421  1EC6                     	;# 
  1422  1EC7                     	;# 
  1423  1EC8                     	;# 
  1424  1EC9                     	;# 
  1425  1ECA                     	;# 
  1426  1ECB                     	;# 
  1427  1ECB                     	;# 
  1428  1ECB                     	;# 
  1429  1ECC                     	;# 
  1430  1ECC                     	;# 
  1431  1ECC                     	;# 
  1432  1F10                     	;# 
  1433  1F11                     	;# 
  1434  1F12                     	;# 
  1435  1F14                     	;# 
  1436  1F15                     	;# 
  1437  1F1C                     	;# 
  1438  1F1D                     	;# 
  1439  1F1E                     	;# 
  1440  1F1F                     	;# 
  1441  1F20                     	;# 
  1442  1F21                     	;# 
  1443  1F22                     	;# 
  1444  1F23                     	;# 
  1445  1F24                     	;# 
  1446  1F25                     	;# 
  1447  1F26                     	;# 
  1448  1F27                     	;# 
  1449  1F38                     	;# 
  1450  1F39                     	;# 
  1451  1F3A                     	;# 
  1452  1F3B                     	;# 
  1453  1F3C                     	;# 
  1454  1F3D                     	;# 
  1455  1F3E                     	;# 
  1456  1F3F                     	;# 
  1457  1F43                     	;# 
  1458  1F44                     	;# 
  1459  1F45                     	;# 
  1460  1F46                     	;# 
  1461  1F47                     	;# 
  1462  1F48                     	;# 
  1463  1F49                     	;# 
  1464  1F4A                     	;# 
  1465  1F4E                     	;# 
  1466  1F4F                     	;# 
  1467  1F50                     	;# 
  1468  1F51                     	;# 
  1469  1F52                     	;# 
  1470  1F53                     	;# 
  1471  1F54                     	;# 
  1472  1F55                     	;# 
  1473  1FE4                     	;# 
  1474  1FE5                     	;# 
  1475  1FE6                     	;# 
  1476  1FE7                     	;# 
  1477  1FE8                     	;# 
  1478  1FE8                     	;# 
  1479  1FE9                     	;# 
  1480  1FEA                     	;# 
  1481  1FEB                     	;# 
  1482  1FED                     	;# 
  1483  1FEE                     	;# 
  1484  1FEF                     	;# 
  1485  0000                     	;# 
  1486  0001                     	;# 
  1487  0002                     	;# 
  1488  0003                     	;# 
  1489  0004                     	;# 
  1490  0005                     	;# 
  1491  0006                     	;# 
  1492  0007                     	;# 
  1493  0008                     	;# 
  1494  0009                     	;# 
  1495  000A                     	;# 
  1496  000B                     	;# 
  1497  000C                     	;# 
  1498  000D                     	;# 
  1499  000E                     	;# 
  1500  0012                     	;# 
  1501  0013                     	;# 
  1502  0014                     	;# 
  1503  0018                     	;# 
  1504  0019                     	;# 
  1505  001A                     	;# 
  1506  008C                     	;# 
  1507  008C                     	;# 
  1508  008D                     	;# 
  1509  008E                     	;# 
  1510  008E                     	;# 
  1511  008F                     	;# 
  1512  0090                     	;# 
  1513  0090                     	;# 
  1514  0091                     	;# 
  1515  0092                     	;# 
  1516  0092                     	;# 
  1517  0093                     	;# 
  1518  0094                     	;# 
  1519  0094                     	;# 
  1520  0095                     	;# 
  1521  0096                     	;# 
  1522  0096                     	;# 
  1523  0097                     	;# 
  1524  0098                     	;# 
  1525  0099                     	;# 
  1526  009A                     	;# 
  1527  009B                     	;# 
  1528  009B                     	;# 
  1529  009C                     	;# 
  1530  009D                     	;# 
  1531  009D                     	;# 
  1532  009E                     	;# 
  1533  009F                     	;# 
  1534  010C                     	;# 
  1535  010C                     	;# 
  1536  010D                     	;# 
  1537  010E                     	;# 
  1538  010F                     	;# 
  1539  010F                     	;# 
  1540  0110                     	;# 
  1541  0111                     	;# 
  1542  0112                     	;# 
  1543  0113                     	;# 
  1544  0114                     	;# 
  1545  0115                     	;# 
  1546  0116                     	;# 
  1547  0117                     	;# 
  1548  0118                     	;# 
  1549  0119                     	;# 
  1550  0119                     	;# 
  1551  0119                     	;# 
  1552  011A                     	;# 
  1553  011A                     	;# 
  1554  011A                     	;# 
  1555  011B                     	;# 
  1556  011B                     	;# 
  1557  011B                     	;# 
  1558  011B                     	;# 
  1559  011B                     	;# 
  1560  011C                     	;# 
  1561  011C                     	;# 
  1562  011C                     	;# 
  1563  011D                     	;# 
  1564  011D                     	;# 
  1565  011D                     	;# 
  1566  011E                     	;# 
  1567  011E                     	;# 
  1568  011E                     	;# 
  1569  011F                     	;# 
  1570  011F                     	;# 
  1571  011F                     	;# 
  1572  011F                     	;# 
  1573  011F                     	;# 
  1574  018C                     	;# 
  1575  018D                     	;# 
  1576  018E                     	;# 
  1577  018F                     	;# 
  1578  0190                     	;# 
  1579  0191                     	;# 
  1580  0192                     	;# 
  1581  0196                     	;# 
  1582  0197                     	;# 
  1583  0198                     	;# 
  1584  0199                     	;# 
  1585  019A                     	;# 
  1586  019B                     	;# 
  1587  019C                     	;# 
  1588  020C                     	;# 
  1589  020D                     	;# 
  1590  020E                     	;# 
  1591  020E                     	;# 
  1592  020F                     	;# 
  1593  020F                     	;# 
  1594  0210                     	;# 
  1595  0210                     	;# 
  1596  0211                     	;# 
  1597  0211                     	;# 
  1598  0212                     	;# 
  1599  0213                     	;# 
  1600  0214                     	;# 
  1601  0214                     	;# 
  1602  0215                     	;# 
  1603  0215                     	;# 
  1604  0216                     	;# 
  1605  0216                     	;# 
  1606  0217                     	;# 
  1607  0217                     	;# 
  1608  0218                     	;# 
  1609  0219                     	;# 
  1610  021A                     	;# 
  1611  021A                     	;# 
  1612  021B                     	;# 
  1613  021B                     	;# 
  1614  021C                     	;# 
  1615  021C                     	;# 
  1616  021D                     	;# 
  1617  021D                     	;# 
  1618  021E                     	;# 
  1619  021F                     	;# 
  1620  028C                     	;# 
  1621  028C                     	;# 
  1622  028D                     	;# 
  1623  028D                     	;# 
  1624  028E                     	;# 
  1625  028F                     	;# 
  1626  0290                     	;# 
  1627  0291                     	;# 
  1628  0292                     	;# 
  1629  0292                     	;# 
  1630  0293                     	;# 
  1631  0293                     	;# 
  1632  0294                     	;# 
  1633  0295                     	;# 
  1634  0296                     	;# 
  1635  0297                     	;# 
  1636  0298                     	;# 
  1637  0298                     	;# 
  1638  0299                     	;# 
  1639  0299                     	;# 
  1640  029A                     	;# 
  1641  029B                     	;# 
  1642  029C                     	;# 
  1643  029D                     	;# 
  1644  029F                     	;# 
  1645  030C                     	;# 
  1646  030C                     	;# 
  1647  030D                     	;# 
  1648  030E                     	;# 
  1649  030F                     	;# 
  1650  0310                     	;# 
  1651  0310                     	;# 
  1652  0311                     	;# 
  1653  0312                     	;# 
  1654  0313                     	;# 
  1655  0314                     	;# 
  1656  0314                     	;# 
  1657  0315                     	;# 
  1658  0316                     	;# 
  1659  0317                     	;# 
  1660  0318                     	;# 
  1661  0318                     	;# 
  1662  0319                     	;# 
  1663  031A                     	;# 
  1664  031B                     	;# 
  1665  038C                     	;# 
  1666  038C                     	;# 
  1667  038D                     	;# 
  1668  038E                     	;# 
  1669  0390                     	;# 
  1670  0390                     	;# 
  1671  0391                     	;# 
  1672  0392                     	;# 
  1673  048C                     	;# 
  1674  048C                     	;# 
  1675  048D                     	;# 
  1676  048E                     	;# 
  1677  048F                     	;# 
  1678  048F                     	;# 
  1679  0490                     	;# 
  1680  0491                     	;# 
  1681  0492                     	;# 
  1682  0492                     	;# 
  1683  0493                     	;# 
  1684  0494                     	;# 
  1685  0495                     	;# 
  1686  0495                     	;# 
  1687  0496                     	;# 
  1688  0497                     	;# 
  1689  0498                     	;# 
  1690  0499                     	;# 
  1691  049A                     	;# 
  1692  049B                     	;# 
  1693  049C                     	;# 
  1694  049D                     	;# 
  1695  058C                     	;# 
  1696  058C                     	;# 
  1697  058D                     	;# 
  1698  058E                     	;# 
  1699  058F                     	;# 
  1700  058F                     	;# 
  1701  0590                     	;# 
  1702  0591                     	;# 
  1703  0592                     	;# 
  1704  0593                     	;# 
  1705  059C                     	;# 
  1706  059C                     	;# 
  1707  059D                     	;# 
  1708  059D                     	;# 
  1709  059E                     	;# 
  1710  059F                     	;# 
  1711  060C                     	;# 
  1712  060C                     	;# 
  1713  060D                     	;# 
  1714  060D                     	;# 
  1715  060E                     	;# 
  1716  060F                     	;# 
  1717  0610                     	;# 
  1718  0611                     	;# 
  1719  0612                     	;# 
  1720  0613                     	;# 
  1721  0614                     	;# 
  1722  0616                     	;# 
  1723  0616                     	;# 
  1724  0617                     	;# 
  1725  0617                     	;# 
  1726  0618                     	;# 
  1727  0619                     	;# 
  1728  061A                     	;# 
  1729  061B                     	;# 
  1730  061C                     	;# 
  1731  061D                     	;# 
  1732  061E                     	;# 
  1733  070C                     	;# 
  1734  070D                     	;# 
  1735  070E                     	;# 
  1736  070F                     	;# 
  1737  0710                     	;# 
  1738  0711                     	;# 
  1739  0712                     	;# 
  1740  0713                     	;# 
  1741  0714                     	;# 
  1742  0716                     	;# 
  1743  0717                     	;# 
  1744  0718                     	;# 
  1745  0719                     	;# 
  1746  071A                     	;# 
  1747  071B                     	;# 
  1748  071C                     	;# 
  1749  071D                     	;# 
  1750  071E                     	;# 
  1751  0796                     	;# 
  1752  0797                     	;# 
  1753  0798                     	;# 
  1754  0799                     	;# 
  1755  079A                     	;# 
  1756  079B                     	;# 
  1757  079C                     	;# 
  1758  079D                     	;# 
  1759  080C                     	;# 
  1760  080D                     	;# 
  1761  080E                     	;# 
  1762  080F                     	;# 
  1763  0810                     	;# 
  1764  0811                     	;# 
  1765  0812                     	;# 
  1766  0813                     	;# 
  1767  0814                     	;# 
  1768  081A                     	;# 
  1769  081A                     	;# 
  1770  081B                     	;# 
  1771  081C                     	;# 
  1772  081C                     	;# 
  1773  081D                     	;# 
  1774  081E                     	;# 
  1775  081F                     	;# 
  1776  088C                     	;# 
  1777  088D                     	;# 
  1778  088E                     	;# 
  1779  088F                     	;# 
  1780  0890                     	;# 
  1781  0891                     	;# 
  1782  0892                     	;# 
  1783  0893                     	;# 
  1784  0895                     	;# 
  1785  0896                     	;# 
  1786  0897                     	;# 
  1787  0898                     	;# 
  1788  0899                     	;# 
  1789  089A                     	;# 
  1790  089B                     	;# 
  1791  090C                     	;# 
  1792  090E                     	;# 
  1793  090F                     	;# 
  1794  091F                     	;# 
  1795  098F                     	;# 
  1796  098F                     	;# 
  1797  0990                     	;# 
  1798  0991                     	;# 
  1799  0992                     	;# 
  1800  0993                     	;# 
  1801  0994                     	;# 
  1802  0995                     	;# 
  1803  0996                     	;# 
  1804  0997                     	;# 
  1805  1E0F                     	;# 
  1806  1E10                     	;# 
  1807  1E11                     	;# 
  1808  1E12                     	;# 
  1809  1E13                     	;# 
  1810  1E14                     	;# 
  1811  1E15                     	;# 
  1812  1E16                     	;# 
  1813  1E17                     	;# 
  1814  1E18                     	;# 
  1815  1E19                     	;# 
  1816  1E1A                     	;# 
  1817  1E1B                     	;# 
  1818  1E1C                     	;# 
  1819  1E1D                     	;# 
  1820  1E1E                     	;# 
  1821  1E1F                     	;# 
  1822  1E20                     	;# 
  1823  1E21                     	;# 
  1824  1E22                     	;# 
  1825  1E23                     	;# 
  1826  1E24                     	;# 
  1827  1E25                     	;# 
  1828  1E26                     	;# 
  1829  1E27                     	;# 
  1830  1E28                     	;# 
  1831  1E29                     	;# 
  1832  1E2A                     	;# 
  1833  1E2B                     	;# 
  1834  1E2C                     	;# 
  1835  1E2D                     	;# 
  1836  1E2E                     	;# 
  1837  1E2F                     	;# 
  1838  1E30                     	;# 
  1839  1E31                     	;# 
  1840  1E32                     	;# 
  1841  1E33                     	;# 
  1842  1E34                     	;# 
  1843  1E35                     	;# 
  1844  1E36                     	;# 
  1845  1E37                     	;# 
  1846  1E8F                     	;# 
  1847  1E90                     	;# 
  1848  1E91                     	;# 
  1849  1E92                     	;# 
  1850  1E93                     	;# 
  1851  1E94                     	;# 
  1852  1E95                     	;# 
  1853  1E96                     	;# 
  1854  1E97                     	;# 
  1855  1E9C                     	;# 
  1856  1E9D                     	;# 
  1857  1E9E                     	;# 
  1858  1EA1                     	;# 
  1859  1EA2                     	;# 
  1860  1EA3                     	;# 
  1861  1EA4                     	;# 
  1862  1EA9                     	;# 
  1863  1EAA                     	;# 
  1864  1EB1                     	;# 
  1865  1EB2                     	;# 
  1866  1EB8                     	;# 
  1867  1EB9                     	;# 
  1868  1EBA                     	;# 
  1869  1EBB                     	;# 
  1870  1EBC                     	;# 
  1871  1EBD                     	;# 
  1872  1EBE                     	;# 
  1873  1EC3                     	;# 
  1874  1EC5                     	;# 
  1875  1EC6                     	;# 
  1876  1EC7                     	;# 
  1877  1EC8                     	;# 
  1878  1EC9                     	;# 
  1879  1ECA                     	;# 
  1880  1ECB                     	;# 
  1881  1ECB                     	;# 
  1882  1ECB                     	;# 
  1883  1ECC                     	;# 
  1884  1ECC                     	;# 
  1885  1ECC                     	;# 
  1886  1F10                     	;# 
  1887  1F11                     	;# 
  1888  1F12                     	;# 
  1889  1F14                     	;# 
  1890  1F15                     	;# 
  1891  1F1C                     	;# 
  1892  1F1D                     	;# 
  1893  1F1E                     	;# 
  1894  1F1F                     	;# 
  1895  1F20                     	;# 
  1896  1F21                     	;# 
  1897  1F22                     	;# 
  1898  1F23                     	;# 
  1899  1F24                     	;# 
  1900  1F25                     	;# 
  1901  1F26                     	;# 
  1902  1F27                     	;# 
  1903  1F38                     	;# 
  1904  1F39                     	;# 
  1905  1F3A                     	;# 
  1906  1F3B                     	;# 
  1907  1F3C                     	;# 
  1908  1F3D                     	;# 
  1909  1F3E                     	;# 
  1910  1F3F                     	;# 
  1911  1F43                     	;# 
  1912  1F44                     	;# 
  1913  1F45                     	;# 
  1914  1F46                     	;# 
  1915  1F47                     	;# 
  1916  1F48                     	;# 
  1917  1F49                     	;# 
  1918  1F4A                     	;# 
  1919  1F4E                     	;# 
  1920  1F4F                     	;# 
  1921  1F50                     	;# 
  1922  1F51                     	;# 
  1923  1F52                     	;# 
  1924  1F53                     	;# 
  1925  1F54                     	;# 
  1926  1F55                     	;# 
  1927  1FE4                     	;# 
  1928  1FE5                     	;# 
  1929  1FE6                     	;# 
  1930  1FE7                     	;# 
  1931  1FE8                     	;# 
  1932  1FE8                     	;# 
  1933  1FE9                     	;# 
  1934  1FEA                     	;# 
  1935  1FEB                     	;# 
  1936  1FED                     	;# 
  1937  1FEE                     	;# 
  1938  1FEF                     	;# 
  1939  0000                     	;# 
  1940  0001                     	;# 
  1941  0002                     	;# 
  1942  0003                     	;# 
  1943  0004                     	;# 
  1944  0005                     	;# 
  1945  0006                     	;# 
  1946  0007                     	;# 
  1947  0008                     	;# 
  1948  0009                     	;# 
  1949  000A                     	;# 
  1950  000B                     	;# 
  1951  000C                     	;# 
  1952  000D                     	;# 
  1953  000E                     	;# 
  1954  0012                     	;# 
  1955  0013                     	;# 
  1956  0014                     	;# 
  1957  0018                     	;# 
  1958  0019                     	;# 
  1959  001A                     	;# 
  1960  008C                     	;# 
  1961  008C                     	;# 
  1962  008D                     	;# 
  1963  008E                     	;# 
  1964  008E                     	;# 
  1965  008F                     	;# 
  1966  0090                     	;# 
  1967  0090                     	;# 
  1968  0091                     	;# 
  1969  0092                     	;# 
  1970  0092                     	;# 
  1971  0093                     	;# 
  1972  0094                     	;# 
  1973  0094                     	;# 
  1974  0095                     	;# 
  1975  0096                     	;# 
  1976  0096                     	;# 
  1977  0097                     	;# 
  1978  0098                     	;# 
  1979  0099                     	;# 
  1980  009A                     	;# 
  1981  009B                     	;# 
  1982  009B                     	;# 
  1983  009C                     	;# 
  1984  009D                     	;# 
  1985  009D                     	;# 
  1986  009E                     	;# 
  1987  009F                     	;# 
  1988  010C                     	;# 
  1989  010C                     	;# 
  1990  010D                     	;# 
  1991  010E                     	;# 
  1992  010F                     	;# 
  1993  010F                     	;# 
  1994  0110                     	;# 
  1995  0111                     	;# 
  1996  0112                     	;# 
  1997  0113                     	;# 
  1998  0114                     	;# 
  1999  0115                     	;# 
  2000  0116                     	;# 
  2001  0117                     	;# 
  2002  0118                     	;# 
  2003  0119                     	;# 
  2004  0119                     	;# 
  2005  0119                     	;# 
  2006  011A                     	;# 
  2007  011A                     	;# 
  2008  011A                     	;# 
  2009  011B                     	;# 
  2010  011B                     	;# 
  2011  011B                     	;# 
  2012  011B                     	;# 
  2013  011B                     	;# 
  2014  011C                     	;# 
  2015  011C                     	;# 
  2016  011C                     	;# 
  2017  011D                     	;# 
  2018  011D                     	;# 
  2019  011D                     	;# 
  2020  011E                     	;# 
  2021  011E                     	;# 
  2022  011E                     	;# 
  2023  011F                     	;# 
  2024  011F                     	;# 
  2025  011F                     	;# 
  2026  011F                     	;# 
  2027  011F                     	;# 
  2028  018C                     	;# 
  2029  018D                     	;# 
  2030  018E                     	;# 
  2031  018F                     	;# 
  2032  0190                     	;# 
  2033  0191                     	;# 
  2034  0192                     	;# 
  2035  0196                     	;# 
  2036  0197                     	;# 
  2037  0198                     	;# 
  2038  0199                     	;# 
  2039  019A                     	;# 
  2040  019B                     	;# 
  2041  019C                     	;# 
  2042  020C                     	;# 
  2043  020D                     	;# 
  2044  020E                     	;# 
  2045  020E                     	;# 
  2046  020F                     	;# 
  2047  020F                     	;# 
  2048  0210                     	;# 
  2049  0210                     	;# 
  2050  0211                     	;# 
  2051  0211                     	;# 
  2052  0212                     	;# 
  2053  0213                     	;# 
  2054  0214                     	;# 
  2055  0214                     	;# 
  2056  0215                     	;# 
  2057  0215                     	;# 
  2058  0216                     	;# 
  2059  0216                     	;# 
  2060  0217                     	;# 
  2061  0217                     	;# 
  2062  0218                     	;# 
  2063  0219                     	;# 
  2064  021A                     	;# 
  2065  021A                     	;# 
  2066  021B                     	;# 
  2067  021B                     	;# 
  2068  021C                     	;# 
  2069  021C                     	;# 
  2070  021D                     	;# 
  2071  021D                     	;# 
  2072  021E                     	;# 
  2073  021F                     	;# 
  2074  028C                     	;# 
  2075  028C                     	;# 
  2076  028D                     	;# 
  2077  028D                     	;# 
  2078  028E                     	;# 
  2079  028F                     	;# 
  2080  0290                     	;# 
  2081  0291                     	;# 
  2082  0292                     	;# 
  2083  0292                     	;# 
  2084  0293                     	;# 
  2085  0293                     	;# 
  2086  0294                     	;# 
  2087  0295                     	;# 
  2088  0296                     	;# 
  2089  0297                     	;# 
  2090  0298                     	;# 
  2091  0298                     	;# 
  2092  0299                     	;# 
  2093  0299                     	;# 
  2094  029A                     	;# 
  2095  029B                     	;# 
  2096  029C                     	;# 
  2097  029D                     	;# 
  2098  029F                     	;# 
  2099  030C                     	;# 
  2100  030C                     	;# 
  2101  030D                     	;# 
  2102  030E                     	;# 
  2103  030F                     	;# 
  2104  0310                     	;# 
  2105  0310                     	;# 
  2106  0311                     	;# 
  2107  0312                     	;# 
  2108  0313                     	;# 
  2109  0314                     	;# 
  2110  0314                     	;# 
  2111  0315                     	;# 
  2112  0316                     	;# 
  2113  0317                     	;# 
  2114  0318                     	;# 
  2115  0318                     	;# 
  2116  0319                     	;# 
  2117  031A                     	;# 
  2118  031B                     	;# 
  2119  038C                     	;# 
  2120  038C                     	;# 
  2121  038D                     	;# 
  2122  038E                     	;# 
  2123  0390                     	;# 
  2124  0390                     	;# 
  2125  0391                     	;# 
  2126  0392                     	;# 
  2127  048C                     	;# 
  2128  048C                     	;# 
  2129  048D                     	;# 
  2130  048E                     	;# 
  2131  048F                     	;# 
  2132  048F                     	;# 
  2133  0490                     	;# 
  2134  0491                     	;# 
  2135  0492                     	;# 
  2136  0492                     	;# 
  2137  0493                     	;# 
  2138  0494                     	;# 
  2139  0495                     	;# 
  2140  0495                     	;# 
  2141  0496                     	;# 
  2142  0497                     	;# 
  2143  0498                     	;# 
  2144  0499                     	;# 
  2145  049A                     	;# 
  2146  049B                     	;# 
  2147  049C                     	;# 
  2148  049D                     	;# 
  2149  058C                     	;# 
  2150  058C                     	;# 
  2151  058D                     	;# 
  2152  058E                     	;# 
  2153  058F                     	;# 
  2154  058F                     	;# 
  2155  0590                     	;# 
  2156  0591                     	;# 
  2157  0592                     	;# 
  2158  0593                     	;# 
  2159  059C                     	;# 
  2160  059C                     	;# 
  2161  059D                     	;# 
  2162  059D                     	;# 
  2163  059E                     	;# 
  2164  059F                     	;# 
  2165  060C                     	;# 
  2166  060C                     	;# 
  2167  060D                     	;# 
  2168  060D                     	;# 
  2169  060E                     	;# 
  2170  060F                     	;# 
  2171  0610                     	;# 
  2172  0611                     	;# 
  2173  0612                     	;# 
  2174  0613                     	;# 
  2175  0614                     	;# 
  2176  0616                     	;# 
  2177  0616                     	;# 
  2178  0617                     	;# 
  2179  0617                     	;# 
  2180  0618                     	;# 
  2181  0619                     	;# 
  2182  061A                     	;# 
  2183  061B                     	;# 
  2184  061C                     	;# 
  2185  061D                     	;# 
  2186  061E                     	;# 
  2187  070C                     	;# 
  2188  070D                     	;# 
  2189  070E                     	;# 
  2190  070F                     	;# 
  2191  0710                     	;# 
  2192  0711                     	;# 
  2193  0712                     	;# 
  2194  0713                     	;# 
  2195  0714                     	;# 
  2196  0716                     	;# 
  2197  0717                     	;# 
  2198  0718                     	;# 
  2199  0719                     	;# 
  2200  071A                     	;# 
  2201  071B                     	;# 
  2202  071C                     	;# 
  2203  071D                     	;# 
  2204  071E                     	;# 
  2205  0796                     	;# 
  2206  0797                     	;# 
  2207  0798                     	;# 
  2208  0799                     	;# 
  2209  079A                     	;# 
  2210  079B                     	;# 
  2211  079C                     	;# 
  2212  079D                     	;# 
  2213  080C                     	;# 
  2214  080D                     	;# 
  2215  080E                     	;# 
  2216  080F                     	;# 
  2217  0810                     	;# 
  2218  0811                     	;# 
  2219  0812                     	;# 
  2220  0813                     	;# 
  2221  0814                     	;# 
  2222  081A                     	;# 
  2223  081A                     	;# 
  2224  081B                     	;# 
  2225  081C                     	;# 
  2226  081C                     	;# 
  2227  081D                     	;# 
  2228  081E                     	;# 
  2229  081F                     	;# 
  2230  088C                     	;# 
  2231  088D                     	;# 
  2232  088E                     	;# 
  2233  088F                     	;# 
  2234  0890                     	;# 
  2235  0891                     	;# 
  2236  0892                     	;# 
  2237  0893                     	;# 
  2238  0895                     	;# 
  2239  0896                     	;# 
  2240  0897                     	;# 
  2241  0898                     	;# 
  2242  0899                     	;# 
  2243  089A                     	;# 
  2244  089B                     	;# 
  2245  090C                     	;# 
  2246  090E                     	;# 
  2247  090F                     	;# 
  2248  091F                     	;# 
  2249  098F                     	;# 
  2250  098F                     	;# 
  2251  0990                     	;# 
  2252  0991                     	;# 
  2253  0992                     	;# 
  2254  0993                     	;# 
  2255  0994                     	;# 
  2256  0995                     	;# 
  2257  0996                     	;# 
  2258  0997                     	;# 
  2259  1E0F                     	;# 
  2260  1E10                     	;# 
  2261  1E11                     	;# 
  2262  1E12                     	;# 
  2263  1E13                     	;# 
  2264  1E14                     	;# 
  2265  1E15                     	;# 
  2266  1E16                     	;# 
  2267  1E17                     	;# 
  2268  1E18                     	;# 
  2269  1E19                     	;# 
  2270  1E1A                     	;# 
  2271  1E1B                     	;# 
  2272  1E1C                     	;# 
  2273  1E1D                     	;# 
  2274  1E1E                     	;# 
  2275  1E1F                     	;# 
  2276  1E20                     	;# 
  2277  1E21                     	;# 
  2278  1E22                     	;# 
  2279  1E23                     	;# 
  2280  1E24                     	;# 
  2281  1E25                     	;# 
  2282  1E26                     	;# 
  2283  1E27                     	;# 
  2284  1E28                     	;# 
  2285  1E29                     	;# 
  2286  1E2A                     	;# 
  2287  1E2B                     	;# 
  2288  1E2C                     	;# 
  2289  1E2D                     	;# 
  2290  1E2E                     	;# 
  2291  1E2F                     	;# 
  2292  1E30                     	;# 
  2293  1E31                     	;# 
  2294  1E32                     	;# 
  2295  1E33                     	;# 
  2296  1E34                     	;# 
  2297  1E35                     	;# 
  2298  1E36                     	;# 
  2299  1E37                     	;# 
  2300  1E8F                     	;# 
  2301  1E90                     	;# 
  2302  1E91                     	;# 
  2303  1E92                     	;# 
  2304  1E93                     	;# 
  2305  1E94                     	;# 
  2306  1E95                     	;# 
  2307  1E96                     	;# 
  2308  1E97                     	;# 
  2309  1E9C                     	;# 
  2310  1E9D                     	;# 
  2311  1E9E                     	;# 
  2312  1EA1                     	;# 
  2313  1EA2                     	;# 
  2314  1EA3                     	;# 
  2315  1EA4                     	;# 
  2316  1EA9                     	;# 
  2317  1EAA                     	;# 
  2318  1EB1                     	;# 
  2319  1EB2                     	;# 
  2320  1EB8                     	;# 
  2321  1EB9                     	;# 
  2322  1EBA                     	;# 
  2323  1EBB                     	;# 
  2324  1EBC                     	;# 
  2325  1EBD                     	;# 
  2326  1EBE                     	;# 
  2327  1EC3                     	;# 
  2328  1EC5                     	;# 
  2329  1EC6                     	;# 
  2330  1EC7                     	;# 
  2331  1EC8                     	;# 
  2332  1EC9                     	;# 
  2333  1ECA                     	;# 
  2334  1ECB                     	;# 
  2335  1ECB                     	;# 
  2336  1ECB                     	;# 
  2337  1ECC                     	;# 
  2338  1ECC                     	;# 
  2339  1ECC                     	;# 
  2340  1F10                     	;# 
  2341  1F11                     	;# 
  2342  1F12                     	;# 
  2343  1F14                     	;# 
  2344  1F15                     	;# 
  2345  1F1C                     	;# 
  2346  1F1D                     	;# 
  2347  1F1E                     	;# 
  2348  1F1F                     	;# 
  2349  1F20                     	;# 
  2350  1F21                     	;# 
  2351  1F22                     	;# 
  2352  1F23                     	;# 
  2353  1F24                     	;# 
  2354  1F25                     	;# 
  2355  1F26                     	;# 
  2356  1F27                     	;# 
  2357  1F38                     	;# 
  2358  1F39                     	;# 
  2359  1F3A                     	;# 
  2360  1F3B                     	;# 
  2361  1F3C                     	;# 
  2362  1F3D                     	;# 
  2363  1F3E                     	;# 
  2364  1F3F                     	;# 
  2365  1F43                     	;# 
  2366  1F44                     	;# 
  2367  1F45                     	;# 
  2368  1F46                     	;# 
  2369  1F47                     	;# 
  2370  1F48                     	;# 
  2371  1F49                     	;# 
  2372  1F4A                     	;# 
  2373  1F4E                     	;# 
  2374  1F4F                     	;# 
  2375  1F50                     	;# 
  2376  1F51                     	;# 
  2377  1F52                     	;# 
  2378  1F53                     	;# 
  2379  1F54                     	;# 
  2380  1F55                     	;# 
  2381  1FE4                     	;# 
  2382  1FE5                     	;# 
  2383  1FE6                     	;# 
  2384  1FE7                     	;# 
  2385  1FE8                     	;# 
  2386  1FE8                     	;# 
  2387  1FE9                     	;# 
  2388  1FEA                     	;# 
  2389  1FEB                     	;# 
  2390  1FED                     	;# 
  2391  1FEE                     	;# 
  2392  1FEF                     	;# 
  2393  0000                     	;# 
  2394  0001                     	;# 
  2395  0002                     	;# 
  2396  0003                     	;# 
  2397  0004                     	;# 
  2398  0005                     	;# 
  2399  0006                     	;# 
  2400  0007                     	;# 
  2401  0008                     	;# 
  2402  0009                     	;# 
  2403  000A                     	;# 
  2404  000B                     	;# 
  2405  000C                     	;# 
  2406  000D                     	;# 
  2407  000E                     	;# 
  2408  0012                     	;# 
  2409  0013                     	;# 
  2410  0014                     	;# 
  2411  0018                     	;# 
  2412  0019                     	;# 
  2413  001A                     	;# 
  2414  008C                     	;# 
  2415  008C                     	;# 
  2416  008D                     	;# 
  2417  008E                     	;# 
  2418  008E                     	;# 
  2419  008F                     	;# 
  2420  0090                     	;# 
  2421  0090                     	;# 
  2422  0091                     	;# 
  2423  0092                     	;# 
  2424  0092                     	;# 
  2425  0093                     	;# 
  2426  0094                     	;# 
  2427  0094                     	;# 
  2428  0095                     	;# 
  2429  0096                     	;# 
  2430  0096                     	;# 
  2431  0097                     	;# 
  2432  0098                     	;# 
  2433  0099                     	;# 
  2434  009A                     	;# 
  2435  009B                     	;# 
  2436  009B                     	;# 
  2437  009C                     	;# 
  2438  009D                     	;# 
  2439  009D                     	;# 
  2440  009E                     	;# 
  2441  009F                     	;# 
  2442  010C                     	;# 
  2443  010C                     	;# 
  2444  010D                     	;# 
  2445  010E                     	;# 
  2446  010F                     	;# 
  2447  010F                     	;# 
  2448  0110                     	;# 
  2449  0111                     	;# 
  2450  0112                     	;# 
  2451  0113                     	;# 
  2452  0114                     	;# 
  2453  0115                     	;# 
  2454  0116                     	;# 
  2455  0117                     	;# 
  2456  0118                     	;# 
  2457  0119                     	;# 
  2458  0119                     	;# 
  2459  0119                     	;# 
  2460  011A                     	;# 
  2461  011A                     	;# 
  2462  011A                     	;# 
  2463  011B                     	;# 
  2464  011B                     	;# 
  2465  011B                     	;# 
  2466  011B                     	;# 
  2467  011B                     	;# 
  2468  011C                     	;# 
  2469  011C                     	;# 
  2470  011C                     	;# 
  2471  011D                     	;# 
  2472  011D                     	;# 
  2473  011D                     	;# 
  2474  011E                     	;# 
  2475  011E                     	;# 
  2476  011E                     	;# 
  2477  011F                     	;# 
  2478  011F                     	;# 
  2479  011F                     	;# 
  2480  011F                     	;# 
  2481  011F                     	;# 
  2482  018C                     	;# 
  2483  018D                     	;# 
  2484  018E                     	;# 
  2485  018F                     	;# 
  2486  0190                     	;# 
  2487  0191                     	;# 
  2488  0192                     	;# 
  2489  0196                     	;# 
  2490  0197                     	;# 
  2491  0198                     	;# 
  2492  0199                     	;# 
  2493  019A                     	;# 
  2494  019B                     	;# 
  2495  019C                     	;# 
  2496  020C                     	;# 
  2497  020D                     	;# 
  2498  020E                     	;# 
  2499  020E                     	;# 
  2500  020F                     	;# 
  2501  020F                     	;# 
  2502  0210                     	;# 
  2503  0210                     	;# 
  2504  0211                     	;# 
  2505  0211                     	;# 
  2506  0212                     	;# 
  2507  0213                     	;# 
  2508  0214                     	;# 
  2509  0214                     	;# 
  2510  0215                     	;# 
  2511  0215                     	;# 
  2512  0216                     	;# 
  2513  0216                     	;# 
  2514  0217                     	;# 
  2515  0217                     	;# 
  2516  0218                     	;# 
  2517  0219                     	;# 
  2518  021A                     	;# 
  2519  021A                     	;# 
  2520  021B                     	;# 
  2521  021B                     	;# 
  2522  021C                     	;# 
  2523  021C                     	;# 
  2524  021D                     	;# 
  2525  021D                     	;# 
  2526  021E                     	;# 
  2527  021F                     	;# 
  2528  028C                     	;# 
  2529  028C                     	;# 
  2530  028D                     	;# 
  2531  028D                     	;# 
  2532  028E                     	;# 
  2533  028F                     	;# 
  2534  0290                     	;# 
  2535  0291                     	;# 
  2536  0292                     	;# 
  2537  0292                     	;# 
  2538  0293                     	;# 
  2539  0293                     	;# 
  2540  0294                     	;# 
  2541  0295                     	;# 
  2542  0296                     	;# 
  2543  0297                     	;# 
  2544  0298                     	;# 
  2545  0298                     	;# 
  2546  0299                     	;# 
  2547  0299                     	;# 
  2548  029A                     	;# 
  2549  029B                     	;# 
  2550  029C                     	;# 
  2551  029D                     	;# 
  2552  029F                     	;# 
  2553  030C                     	;# 
  2554  030C                     	;# 
  2555  030D                     	;# 
  2556  030E                     	;# 
  2557  030F                     	;# 
  2558  0310                     	;# 
  2559  0310                     	;# 
  2560  0311                     	;# 
  2561  0312                     	;# 
  2562  0313                     	;# 
  2563  0314                     	;# 
  2564  0314                     	;# 
  2565  0315                     	;# 
  2566  0316                     	;# 
  2567  0317                     	;# 
  2568  0318                     	;# 
  2569  0318                     	;# 
  2570  0319                     	;# 
  2571  031A                     	;# 
  2572  031B                     	;# 
  2573  038C                     	;# 
  2574  038C                     	;# 
  2575  038D                     	;# 
  2576  038E                     	;# 
  2577  0390                     	;# 
  2578  0390                     	;# 
  2579  0391                     	;# 
  2580  0392                     	;# 
  2581  048C                     	;# 
  2582  048C                     	;# 
  2583  048D                     	;# 
  2584  048E                     	;# 
  2585  048F                     	;# 
  2586  048F                     	;# 
  2587  0490                     	;# 
  2588  0491                     	;# 
  2589  0492                     	;# 
  2590  0492                     	;# 
  2591  0493                     	;# 
  2592  0494                     	;# 
  2593  0495                     	;# 
  2594  0495                     	;# 
  2595  0496                     	;# 
  2596  0497                     	;# 
  2597  0498                     	;# 
  2598  0499                     	;# 
  2599  049A                     	;# 
  2600  049B                     	;# 
  2601  049C                     	;# 
  2602  049D                     	;# 
  2603  058C                     	;# 
  2604  058C                     	;# 
  2605  058D                     	;# 
  2606  058E                     	;# 
  2607  058F                     	;# 
  2608  058F                     	;# 
  2609  0590                     	;# 
  2610  0591                     	;# 
  2611  0592                     	;# 
  2612  0593                     	;# 
  2613  059C                     	;# 
  2614  059C                     	;# 
  2615  059D                     	;# 
  2616  059D                     	;# 
  2617  059E                     	;# 
  2618  059F                     	;# 
  2619  060C                     	;# 
  2620  060C                     	;# 
  2621  060D                     	;# 
  2622  060D                     	;# 
  2623  060E                     	;# 
  2624  060F                     	;# 
  2625  0610                     	;# 
  2626  0611                     	;# 
  2627  0612                     	;# 
  2628  0613                     	;# 
  2629  0614                     	;# 
  2630  0616                     	;# 
  2631  0616                     	;# 
  2632  0617                     	;# 
  2633  0617                     	;# 
  2634  0618                     	;# 
  2635  0619                     	;# 
  2636  061A                     	;# 
  2637  061B                     	;# 
  2638  061C                     	;# 
  2639  061D                     	;# 
  2640  061E                     	;# 
  2641  070C                     	;# 
  2642  070D                     	;# 
  2643  070E                     	;# 
  2644  070F                     	;# 
  2645  0710                     	;# 
  2646  0711                     	;# 
  2647  0712                     	;# 
  2648  0713                     	;# 
  2649  0714                     	;# 
  2650  0716                     	;# 
  2651  0717                     	;# 
  2652  0718                     	;# 
  2653  0719                     	;# 
  2654  071A                     	;# 
  2655  071B                     	;# 
  2656  071C                     	;# 
  2657  071D                     	;# 
  2658  071E                     	;# 
  2659  0796                     	;# 
  2660  0797                     	;# 
  2661  0798                     	;# 
  2662  0799                     	;# 
  2663  079A                     	;# 
  2664  079B                     	;# 
  2665  079C                     	;# 
  2666  079D                     	;# 
  2667  080C                     	;# 
  2668  080D                     	;# 
  2669  080E                     	;# 
  2670  080F                     	;# 
  2671  0810                     	;# 
  2672  0811                     	;# 
  2673  0812                     	;# 
  2674  0813                     	;# 
  2675  0814                     	;# 
  2676  081A                     	;# 
  2677  081A                     	;# 
  2678  081B                     	;# 
  2679  081C                     	;# 
  2680  081C                     	;# 
  2681  081D                     	;# 
  2682  081E                     	;# 
  2683  081F                     	;# 
  2684  088C                     	;# 
  2685  088D                     	;# 
  2686  088E                     	;# 
  2687  088F                     	;# 
  2688  0890                     	;# 
  2689  0891                     	;# 
  2690  0892                     	;# 
  2691  0893                     	;# 
  2692  0895                     	;# 
  2693  0896                     	;# 
  2694  0897                     	;# 
  2695  0898                     	;# 
  2696  0899                     	;# 
  2697  089A                     	;# 
  2698  089B                     	;# 
  2699  090C                     	;# 
  2700  090E                     	;# 
  2701  090F                     	;# 
  2702  091F                     	;# 
  2703  098F                     	;# 
  2704  098F                     	;# 
  2705  0990                     	;# 
  2706  0991                     	;# 
  2707  0992                     	;# 
  2708  0993                     	;# 
  2709  0994                     	;# 
  2710  0995                     	;# 
  2711  0996                     	;# 
  2712  0997                     	;# 
  2713  1E0F                     	;# 
  2714  1E10                     	;# 
  2715  1E11                     	;# 
  2716  1E12                     	;# 
  2717  1E13                     	;# 
  2718  1E14                     	;# 
  2719  1E15                     	;# 
  2720  1E16                     	;# 
  2721  1E17                     	;# 
  2722  1E18                     	;# 
  2723  1E19                     	;# 
  2724  1E1A                     	;# 
  2725  1E1B                     	;# 
  2726  1E1C                     	;# 
  2727  1E1D                     	;# 
  2728  1E1E                     	;# 
  2729  1E1F                     	;# 
  2730  1E20                     	;# 
  2731  1E21                     	;# 
  2732  1E22                     	;# 
  2733  1E23                     	;# 
  2734  1E24                     	;# 
  2735  1E25                     	;# 
  2736  1E26                     	;# 
  2737  1E27                     	;# 
  2738  1E28                     	;# 
  2739  1E29                     	;# 
  2740  1E2A                     	;# 
  2741  1E2B                     	;# 
  2742  1E2C                     	;# 
  2743  1E2D                     	;# 
  2744  1E2E                     	;# 
  2745  1E2F                     	;# 
  2746  1E30                     	;# 
  2747  1E31                     	;# 
  2748  1E32                     	;# 
  2749  1E33                     	;# 
  2750  1E34                     	;# 
  2751  1E35                     	;# 
  2752  1E36                     	;# 
  2753  1E37                     	;# 
  2754  1E8F                     	;# 
  2755  1E90                     	;# 
  2756  1E91                     	;# 
  2757  1E92                     	;# 
  2758  1E93                     	;# 
  2759  1E94                     	;# 
  2760  1E95                     	;# 
  2761  1E96                     	;# 
  2762  1E97                     	;# 
  2763  1E9C                     	;# 
  2764  1E9D                     	;# 
  2765  1E9E                     	;# 
  2766  1EA1                     	;# 
  2767  1EA2                     	;# 
  2768  1EA3                     	;# 
  2769  1EA4                     	;# 
  2770  1EA9                     	;# 
  2771  1EAA                     	;# 
  2772  1EB1                     	;# 
  2773  1EB2                     	;# 
  2774  1EB8                     	;# 
  2775  1EB9                     	;# 
  2776  1EBA                     	;# 
  2777  1EBB                     	;# 
  2778  1EBC                     	;# 
  2779  1EBD                     	;# 
  2780  1EBE                     	;# 
  2781  1EC3                     	;# 
  2782  1EC5                     	;# 
  2783  1EC6                     	;# 
  2784  1EC7                     	;# 
  2785  1EC8                     	;# 
  2786  1EC9                     	;# 
  2787  1ECA                     	;# 
  2788  1ECB                     	;# 
  2789  1ECB                     	;# 
  2790  1ECB                     	;# 
  2791  1ECC                     	;# 
  2792  1ECC                     	;# 
  2793  1ECC                     	;# 
  2794  1F10                     	;# 
  2795  1F11                     	;# 
  2796  1F12                     	;# 
  2797  1F14                     	;# 
  2798  1F15                     	;# 
  2799  1F1C                     	;# 
  2800  1F1D                     	;# 
  2801  1F1E                     	;# 
  2802  1F1F                     	;# 
  2803  1F20                     	;# 
  2804  1F21                     	;# 
  2805  1F22                     	;# 
  2806  1F23                     	;# 
  2807  1F24                     	;# 
  2808  1F25                     	;# 
  2809  1F26                     	;# 
  2810  1F27                     	;# 
  2811  1F38                     	;# 
  2812  1F39                     	;# 
  2813  1F3A                     	;# 
  2814  1F3B                     	;# 
  2815  1F3C                     	;# 
  2816  1F3D                     	;# 
  2817  1F3E                     	;# 
  2818  1F3F                     	;# 
  2819  1F43                     	;# 
  2820  1F44                     	;# 
  2821  1F45                     	;# 
  2822  1F46                     	;# 
  2823  1F47                     	;# 
  2824  1F48                     	;# 
  2825  1F49                     	;# 
  2826  1F4A                     	;# 
  2827  1F4E                     	;# 
  2828  1F4F                     	;# 
  2829  1F50                     	;# 
  2830  1F51                     	;# 
  2831  1F52                     	;# 
  2832  1F53                     	;# 
  2833  1F54                     	;# 
  2834  1F55                     	;# 
  2835  1FE4                     	;# 
  2836  1FE5                     	;# 
  2837  1FE6                     	;# 
  2838  1FE7                     	;# 
  2839  1FE8                     	;# 
  2840  1FE8                     	;# 
  2841  1FE9                     	;# 
  2842  1FEA                     	;# 
  2843  1FEB                     	;# 
  2844  1FED                     	;# 
  2845  1FEE                     	;# 
  2846  1FEF                     	;# 
  2847  0000                     	;# 
  2848  0001                     	;# 
  2849  0002                     	;# 
  2850  0003                     	;# 
  2851  0004                     	;# 
  2852  0005                     	;# 
  2853  0006                     	;# 
  2854  0007                     	;# 
  2855  0008                     	;# 
  2856  0009                     	;# 
  2857  000A                     	;# 
  2858  000B                     	;# 
  2859  000C                     	;# 
  2860  000D                     	;# 
  2861  000E                     	;# 
  2862  0012                     	;# 
  2863  0013                     	;# 
  2864  0014                     	;# 
  2865  0018                     	;# 
  2866  0019                     	;# 
  2867  001A                     	;# 
  2868  008C                     	;# 
  2869  008C                     	;# 
  2870  008D                     	;# 
  2871  008E                     	;# 
  2872  008E                     	;# 
  2873  008F                     	;# 
  2874  0090                     	;# 
  2875  0090                     	;# 
  2876  0091                     	;# 
  2877  0092                     	;# 
  2878  0092                     	;# 
  2879  0093                     	;# 
  2880  0094                     	;# 
  2881  0094                     	;# 
  2882  0095                     	;# 
  2883  0096                     	;# 
  2884  0096                     	;# 
  2885  0097                     	;# 
  2886  0098                     	;# 
  2887  0099                     	;# 
  2888  009A                     	;# 
  2889  009B                     	;# 
  2890  009B                     	;# 
  2891  009C                     	;# 
  2892  009D                     	;# 
  2893  009D                     	;# 
  2894  009E                     	;# 
  2895  009F                     	;# 
  2896  010C                     	;# 
  2897  010C                     	;# 
  2898  010D                     	;# 
  2899  010E                     	;# 
  2900  010F                     	;# 
  2901  010F                     	;# 
  2902  0110                     	;# 
  2903  0111                     	;# 
  2904  0112                     	;# 
  2905  0113                     	;# 
  2906  0114                     	;# 
  2907  0115                     	;# 
  2908  0116                     	;# 
  2909  0117                     	;# 
  2910  0118                     	;# 
  2911  0119                     	;# 
  2912  0119                     	;# 
  2913  0119                     	;# 
  2914  011A                     	;# 
  2915  011A                     	;# 
  2916  011A                     	;# 
  2917  011B                     	;# 
  2918  011B                     	;# 
  2919  011B                     	;# 
  2920  011B                     	;# 
  2921  011B                     	;# 
  2922  011C                     	;# 
  2923  011C                     	;# 
  2924  011C                     	;# 
  2925  011D                     	;# 
  2926  011D                     	;# 
  2927  011D                     	;# 
  2928  011E                     	;# 
  2929  011E                     	;# 
  2930  011E                     	;# 
  2931  011F                     	;# 
  2932  011F                     	;# 
  2933  011F                     	;# 
  2934  011F                     	;# 
  2935  011F                     	;# 
  2936  018C                     	;# 
  2937  018D                     	;# 
  2938  018E                     	;# 
  2939  018F                     	;# 
  2940  0190                     	;# 
  2941  0191                     	;# 
  2942  0192                     	;# 
  2943  0196                     	;# 
  2944  0197                     	;# 
  2945  0198                     	;# 
  2946  0199                     	;# 
  2947  019A                     	;# 
  2948  019B                     	;# 
  2949  019C                     	;# 
  2950  020C                     	;# 
  2951  020D                     	;# 
  2952  020E                     	;# 
  2953  020E                     	;# 
  2954  020F                     	;# 
  2955  020F                     	;# 
  2956  0210                     	;# 
  2957  0210                     	;# 
  2958  0211                     	;# 
  2959  0211                     	;# 
  2960  0212                     	;# 
  2961  0213                     	;# 
  2962  0214                     	;# 
  2963  0214                     	;# 
  2964  0215                     	;# 
  2965  0215                     	;# 
  2966  0216                     	;# 
  2967  0216                     	;# 
  2968  0217                     	;# 
  2969  0217                     	;# 
  2970  0218                     	;# 
  2971  0219                     	;# 
  2972  021A                     	;# 
  2973  021A                     	;# 
  2974  021B                     	;# 
  2975  021B                     	;# 
  2976  021C                     	;# 
  2977  021C                     	;# 
  2978  021D                     	;# 
  2979  021D                     	;# 
  2980  021E                     	;# 
  2981  021F                     	;# 
  2982  028C                     	;# 
  2983  028C                     	;# 
  2984  028D                     	;# 
  2985  028D                     	;# 
  2986  028E                     	;# 
  2987  028F                     	;# 
  2988  0290                     	;# 
  2989  0291                     	;# 
  2990  0292                     	;# 
  2991  0292                     	;# 
  2992  0293                     	;# 
  2993  0293                     	;# 
  2994  0294                     	;# 
  2995  0295                     	;# 
  2996  0296                     	;# 
  2997  0297                     	;# 
  2998  0298                     	;# 
  2999  0298                     	;# 
  3000  0299                     	;# 
  3001  0299                     	;# 
  3002  029A                     	;# 
  3003  029B                     	;# 
  3004  029C                     	;# 
  3005  029D                     	;# 
  3006  029F                     	;# 
  3007  030C                     	;# 
  3008  030C                     	;# 
  3009  030D                     	;# 
  3010  030E                     	;# 
  3011  030F                     	;# 
  3012  0310                     	;# 
  3013  0310                     	;# 
  3014  0311                     	;# 
  3015  0312                     	;# 
  3016  0313                     	;# 
  3017  0314                     	;# 
  3018  0314                     	;# 
  3019  0315                     	;# 
  3020  0316                     	;# 
  3021  0317                     	;# 
  3022  0318                     	;# 
  3023  0318                     	;# 
  3024  0319                     	;# 
  3025  031A                     	;# 
  3026  031B                     	;# 
  3027  038C                     	;# 
  3028  038C                     	;# 
  3029  038D                     	;# 
  3030  038E                     	;# 
  3031  0390                     	;# 
  3032  0390                     	;# 
  3033  0391                     	;# 
  3034  0392                     	;# 
  3035  048C                     	;# 
  3036  048C                     	;# 
  3037  048D                     	;# 
  3038  048E                     	;# 
  3039  048F                     	;# 
  3040  048F                     	;# 
  3041  0490                     	;# 
  3042  0491                     	;# 
  3043  0492                     	;# 
  3044  0492                     	;# 
  3045  0493                     	;# 
  3046  0494                     	;# 
  3047  0495                     	;# 
  3048  0495                     	;# 
  3049  0496                     	;# 
  3050  0497                     	;# 
  3051  0498                     	;# 
  3052  0499                     	;# 
  3053  049A                     	;# 
  3054  049B                     	;# 
  3055  049C                     	;# 
  3056  049D                     	;# 
  3057  058C                     	;# 
  3058  058C                     	;# 
  3059  058D                     	;# 
  3060  058E                     	;# 
  3061  058F                     	;# 
  3062  058F                     	;# 
  3063  0590                     	;# 
  3064  0591                     	;# 
  3065  0592                     	;# 
  3066  0593                     	;# 
  3067  059C                     	;# 
  3068  059C                     	;# 
  3069  059D                     	;# 
  3070  059D                     	;# 
  3071  059E                     	;# 
  3072  059F                     	;# 
  3073  060C                     	;# 
  3074  060C                     	;# 
  3075  060D                     	;# 
  3076  060D                     	;# 
  3077  060E                     	;# 
  3078  060F                     	;# 
  3079  0610                     	;# 
  3080  0611                     	;# 
  3081  0612                     	;# 
  3082  0613                     	;# 
  3083  0614                     	;# 
  3084  0616                     	;# 
  3085  0616                     	;# 
  3086  0617                     	;# 
  3087  0617                     	;# 
  3088  0618                     	;# 
  3089  0619                     	;# 
  3090  061A                     	;# 
  3091  061B                     	;# 
  3092  061C                     	;# 
  3093  061D                     	;# 
  3094  061E                     	;# 
  3095  070C                     	;# 
  3096  070D                     	;# 
  3097  070E                     	;# 
  3098  070F                     	;# 
  3099  0710                     	;# 
  3100  0711                     	;# 
  3101  0712                     	;# 
  3102  0713                     	;# 
  3103  0714                     	;# 
  3104  0716                     	;# 
  3105  0717                     	;# 
  3106  0718                     	;# 
  3107  0719                     	;# 
  3108  071A                     	;# 
  3109  071B                     	;# 
  3110  071C                     	;# 
  3111  071D                     	;# 
  3112  071E                     	;# 
  3113  0796                     	;# 
  3114  0797                     	;# 
  3115  0798                     	;# 
  3116  0799                     	;# 
  3117  079A                     	;# 
  3118  079B                     	;# 
  3119  079C                     	;# 
  3120  079D                     	;# 
  3121  080C                     	;# 
  3122  080D                     	;# 
  3123  080E                     	;# 
  3124  080F                     	;# 
  3125  0810                     	;# 
  3126  0811                     	;# 
  3127  0812                     	;# 
  3128  0813                     	;# 
  3129  0814                     	;# 
  3130  081A                     	;# 
  3131  081A                     	;# 
  3132  081B                     	;# 
  3133  081C                     	;# 
  3134  081C                     	;# 
  3135  081D                     	;# 
  3136  081E                     	;# 
  3137  081F                     	;# 
  3138  088C                     	;# 
  3139  088D                     	;# 
  3140  088E                     	;# 
  3141  088F                     	;# 
  3142  0890                     	;# 
  3143  0891                     	;# 
  3144  0892                     	;# 
  3145  0893                     	;# 
  3146  0895                     	;# 
  3147  0896                     	;# 
  3148  0897                     	;# 
  3149  0898                     	;# 
  3150  0899                     	;# 
  3151  089A                     	;# 
  3152  089B                     	;# 
  3153  090C                     	;# 
  3154  090E                     	;# 
  3155  090F                     	;# 
  3156  091F                     	;# 
  3157  098F                     	;# 
  3158  098F                     	;# 
  3159  0990                     	;# 
  3160  0991                     	;# 
  3161  0992                     	;# 
  3162  0993                     	;# 
  3163  0994                     	;# 
  3164  0995                     	;# 
  3165  0996                     	;# 
  3166  0997                     	;# 
  3167  1E0F                     	;# 
  3168  1E10                     	;# 
  3169  1E11                     	;# 
  3170  1E12                     	;# 
  3171  1E13                     	;# 
  3172  1E14                     	;# 
  3173  1E15                     	;# 
  3174  1E16                     	;# 
  3175  1E17                     	;# 
  3176  1E18                     	;# 
  3177  1E19                     	;# 
  3178  1E1A                     	;# 
  3179  1E1B                     	;# 
  3180  1E1C                     	;# 
  3181  1E1D                     	;# 
  3182  1E1E                     	;# 
  3183  1E1F                     	;# 
  3184  1E20                     	;# 
  3185  1E21                     	;# 
  3186  1E22                     	;# 
  3187  1E23                     	;# 
  3188  1E24                     	;# 
  3189  1E25                     	;# 
  3190  1E26                     	;# 
  3191  1E27                     	;# 
  3192  1E28                     	;# 
  3193  1E29                     	;# 
  3194  1E2A                     	;# 
  3195  1E2B                     	;# 
  3196  1E2C                     	;# 
  3197  1E2D                     	;# 
  3198  1E2E                     	;# 
  3199  1E2F                     	;# 
  3200  1E30                     	;# 
  3201  1E31                     	;# 
  3202  1E32                     	;# 
  3203  1E33                     	;# 
  3204  1E34                     	;# 
  3205  1E35                     	;# 
  3206  1E36                     	;# 
  3207  1E37                     	;# 
  3208  1E8F                     	;# 
  3209  1E90                     	;# 
  3210  1E91                     	;# 
  3211  1E92                     	;# 
  3212  1E93                     	;# 
  3213  1E94                     	;# 
  3214  1E95                     	;# 
  3215  1E96                     	;# 
  3216  1E97                     	;# 
  3217  1E9C                     	;# 
  3218  1E9D                     	;# 
  3219  1E9E                     	;# 
  3220  1EA1                     	;# 
  3221  1EA2                     	;# 
  3222  1EA3                     	;# 
  3223  1EA4                     	;# 
  3224  1EA9                     	;# 
  3225  1EAA                     	;# 
  3226  1EB1                     	;# 
  3227  1EB2                     	;# 
  3228  1EB8                     	;# 
  3229  1EB9                     	;# 
  3230  1EBA                     	;# 
  3231  1EBB                     	;# 
  3232  1EBC                     	;# 
  3233  1EBD                     	;# 
  3234  1EBE                     	;# 
  3235  1EC3                     	;# 
  3236  1EC5                     	;# 
  3237  1EC6                     	;# 
  3238  1EC7                     	;# 
  3239  1EC8                     	;# 
  3240  1EC9                     	;# 
  3241  1ECA                     	;# 
  3242  1ECB                     	;# 
  3243  1ECB                     	;# 
  3244  1ECB                     	;# 
  3245  1ECC                     	;# 
  3246  1ECC                     	;# 
  3247  1ECC                     	;# 
  3248  1F10                     	;# 
  3249  1F11                     	;# 
  3250  1F12                     	;# 
  3251  1F14                     	;# 
  3252  1F15                     	;# 
  3253  1F1C                     	;# 
  3254  1F1D                     	;# 
  3255  1F1E                     	;# 
  3256  1F1F                     	;# 
  3257  1F20                     	;# 
  3258  1F21                     	;# 
  3259  1F22                     	;# 
  3260  1F23                     	;# 
  3261  1F24                     	;# 
  3262  1F25                     	;# 
  3263  1F26                     	;# 
  3264  1F27                     	;# 
  3265  1F38                     	;# 
  3266  1F39                     	;# 
  3267  1F3A                     	;# 
  3268  1F3B                     	;# 
  3269  1F3C                     	;# 
  3270  1F3D                     	;# 
  3271  1F3E                     	;# 
  3272  1F3F                     	;# 
  3273  1F43                     	;# 
  3274  1F44                     	;# 
  3275  1F45                     	;# 
  3276  1F46                     	;# 
  3277  1F47                     	;# 
  3278  1F48                     	;# 
  3279  1F49                     	;# 
  3280  1F4A                     	;# 
  3281  1F4E                     	;# 
  3282  1F4F                     	;# 
  3283  1F50                     	;# 
  3284  1F51                     	;# 
  3285  1F52                     	;# 
  3286  1F53                     	;# 
  3287  1F54                     	;# 
  3288  1F55                     	;# 
  3289  1FE4                     	;# 
  3290  1FE5                     	;# 
  3291  1FE6                     	;# 
  3292  1FE7                     	;# 
  3293  1FE8                     	;# 
  3294  1FE8                     	;# 
  3295  1FE9                     	;# 
  3296  1FEA                     	;# 
  3297  1FEB                     	;# 
  3298  1FED                     	;# 
  3299  1FEE                     	;# 
  3300  1FEF                     	;# 
  3301  0000                     	;# 
  3302  0001                     	;# 
  3303  0002                     	;# 
  3304  0003                     	;# 
  3305  0004                     	;# 
  3306  0005                     	;# 
  3307  0006                     	;# 
  3308  0007                     	;# 
  3309  0008                     	;# 
  3310  0009                     	;# 
  3311  000A                     	;# 
  3312  000B                     	;# 
  3313  000C                     	;# 
  3314  000D                     	;# 
  3315  000E                     	;# 
  3316  0012                     	;# 
  3317  0013                     	;# 
  3318  0014                     	;# 
  3319  0018                     	;# 
  3320  0019                     	;# 
  3321  001A                     	;# 
  3322  008C                     	;# 
  3323  008C                     	;# 
  3324  008D                     	;# 
  3325  008E                     	;# 
  3326  008E                     	;# 
  3327  008F                     	;# 
  3328  0090                     	;# 
  3329  0090                     	;# 
  3330  0091                     	;# 
  3331  0092                     	;# 
  3332  0092                     	;# 
  3333  0093                     	;# 
  3334  0094                     	;# 
  3335  0094                     	;# 
  3336  0095                     	;# 
  3337  0096                     	;# 
  3338  0096                     	;# 
  3339  0097                     	;# 
  3340  0098                     	;# 
  3341  0099                     	;# 
  3342  009A                     	;# 
  3343  009B                     	;# 
  3344  009B                     	;# 
  3345  009C                     	;# 
  3346  009D                     	;# 
  3347  009D                     	;# 
  3348  009E                     	;# 
  3349  009F                     	;# 
  3350  010C                     	;# 
  3351  010C                     	;# 
  3352  010D                     	;# 
  3353  010E                     	;# 
  3354  010F                     	;# 
  3355  010F                     	;# 
  3356  0110                     	;# 
  3357  0111                     	;# 
  3358  0112                     	;# 
  3359  0113                     	;# 
  3360  0114                     	;# 
  3361  0115                     	;# 
  3362  0116                     	;# 
  3363  0117                     	;# 
  3364  0118                     	;# 
  3365  0119                     	;# 
  3366  0119                     	;# 
  3367  0119                     	;# 
  3368  011A                     	;# 
  3369  011A                     	;# 
  3370  011A                     	;# 
  3371  011B                     	;# 
  3372  011B                     	;# 
  3373  011B                     	;# 
  3374  011B                     	;# 
  3375  011B                     	;# 
  3376  011C                     	;# 
  3377  011C                     	;# 
  3378  011C                     	;# 
  3379  011D                     	;# 
  3380  011D                     	;# 
  3381  011D                     	;# 
  3382  011E                     	;# 
  3383  011E                     	;# 
  3384  011E                     	;# 
  3385  011F                     	;# 
  3386  011F                     	;# 
  3387  011F                     	;# 
  3388  011F                     	;# 
  3389  011F                     	;# 
  3390  018C                     	;# 
  3391  018D                     	;# 
  3392  018E                     	;# 
  3393  018F                     	;# 
  3394  0190                     	;# 
  3395  0191                     	;# 
  3396  0192                     	;# 
  3397  0196                     	;# 
  3398  0197                     	;# 
  3399  0198                     	;# 
  3400  0199                     	;# 
  3401  019A                     	;# 
  3402  019B                     	;# 
  3403  019C                     	;# 
  3404  020C                     	;# 
  3405  020D                     	;# 
  3406  020E                     	;# 
  3407  020E                     	;# 
  3408  020F                     	;# 
  3409  020F                     	;# 
  3410  0210                     	;# 
  3411  0210                     	;# 
  3412  0211                     	;# 
  3413  0211                     	;# 
  3414  0212                     	;# 
  3415  0213                     	;# 
  3416  0214                     	;# 
  3417  0214                     	;# 
  3418  0215                     	;# 
  3419  0215                     	;# 
  3420  0216                     	;# 
  3421  0216                     	;# 
  3422  0217                     	;# 
  3423  0217                     	;# 
  3424  0218                     	;# 
  3425  0219                     	;# 
  3426  021A                     	;# 
  3427  021A                     	;# 
  3428  021B                     	;# 
  3429  021B                     	;# 
  3430  021C                     	;# 
  3431  021C                     	;# 
  3432  021D                     	;# 
  3433  021D                     	;# 
  3434  021E                     	;# 
  3435  021F                     	;# 
  3436  028C                     	;# 
  3437  028C                     	;# 
  3438  028D                     	;# 
  3439  028D                     	;# 
  3440  028E                     	;# 
  3441  028F                     	;# 
  3442  0290                     	;# 
  3443  0291                     	;# 
  3444  0292                     	;# 
  3445  0292                     	;# 
  3446  0293                     	;# 
  3447  0293                     	;# 
  3448  0294                     	;# 
  3449  0295                     	;# 
  3450  0296                     	;# 
  3451  0297                     	;# 
  3452  0298                     	;# 
  3453  0298                     	;# 
  3454  0299                     	;# 
  3455  0299                     	;# 
  3456  029A                     	;# 
  3457  029B                     	;# 
  3458  029C                     	;# 
  3459  029D                     	;# 
  3460  029F                     	;# 
  3461  030C                     	;# 
  3462  030C                     	;# 
  3463  030D                     	;# 
  3464  030E                     	;# 
  3465  030F                     	;# 
  3466  0310                     	;# 
  3467  0310                     	;# 
  3468  0311                     	;# 
  3469  0312                     	;# 
  3470  0313                     	;# 
  3471  0314                     	;# 
  3472  0314                     	;# 
  3473  0315                     	;# 
  3474  0316                     	;# 
  3475  0317                     	;# 
  3476  0318                     	;# 
  3477  0318                     	;# 
  3478  0319                     	;# 
  3479  031A                     	;# 
  3480  031B                     	;# 
  3481  038C                     	;# 
  3482  038C                     	;# 
  3483  038D                     	;# 
  3484  038E                     	;# 
  3485  0390                     	;# 
  3486  0390                     	;# 
  3487  0391                     	;# 
  3488  0392                     	;# 
  3489  048C                     	;# 
  3490  048C                     	;# 
  3491  048D                     	;# 
  3492  048E                     	;# 
  3493  048F                     	;# 
  3494  048F                     	;# 
  3495  0490                     	;# 
  3496  0491                     	;# 
  3497  0492                     	;# 
  3498  0492                     	;# 
  3499  0493                     	;# 
  3500  0494                     	;# 
  3501  0495                     	;# 
  3502  0495                     	;# 
  3503  0496                     	;# 
  3504  0497                     	;# 
  3505  0498                     	;# 
  3506  0499                     	;# 
  3507  049A                     	;# 
  3508  049B                     	;# 
  3509  049C                     	;# 
  3510  049D                     	;# 
  3511  058C                     	;# 
  3512  058C                     	;# 
  3513  058D                     	;# 
  3514  058E                     	;# 
  3515  058F                     	;# 
  3516  058F                     	;# 
  3517  0590                     	;# 
  3518  0591                     	;# 
  3519  0592                     	;# 
  3520  0593                     	;# 
  3521  059C                     	;# 
  3522  059C                     	;# 
  3523  059D                     	;# 
  3524  059D                     	;# 
  3525  059E                     	;# 
  3526  059F                     	;# 
  3527  060C                     	;# 
  3528  060C                     	;# 
  3529  060D                     	;# 
  3530  060D                     	;# 
  3531  060E                     	;# 
  3532  060F                     	;# 
  3533  0610                     	;# 
  3534  0611                     	;# 
  3535  0612                     	;# 
  3536  0613                     	;# 
  3537  0614                     	;# 
  3538  0616                     	;# 
  3539  0616                     	;# 
  3540  0617                     	;# 
  3541  0617                     	;# 
  3542  0618                     	;# 
  3543  0619                     	;# 
  3544  061A                     	;# 
  3545  061B                     	;# 
  3546  061C                     	;# 
  3547  061D                     	;# 
  3548  061E                     	;# 
  3549  070C                     	;# 
  3550  070D                     	;# 
  3551  070E                     	;# 
  3552  070F                     	;# 
  3553  0710                     	;# 
  3554  0711                     	;# 
  3555  0712                     	;# 
  3556  0713                     	;# 
  3557  0714                     	;# 
  3558  0716                     	;# 
  3559  0717                     	;# 
  3560  0718                     	;# 
  3561  0719                     	;# 
  3562  071A                     	;# 
  3563  071B                     	;# 
  3564  071C                     	;# 
  3565  071D                     	;# 
  3566  071E                     	;# 
  3567  0796                     	;# 
  3568  0797                     	;# 
  3569  0798                     	;# 
  3570  0799                     	;# 
  3571  079A                     	;# 
  3572  079B                     	;# 
  3573  079C                     	;# 
  3574  079D                     	;# 
  3575  080C                     	;# 
  3576  080D                     	;# 
  3577  080E                     	;# 
  3578  080F                     	;# 
  3579  0810                     	;# 
  3580  0811                     	;# 
  3581  0812                     	;# 
  3582  0813                     	;# 
  3583  0814                     	;# 
  3584  081A                     	;# 
  3585  081A                     	;# 
  3586  081B                     	;# 
  3587  081C                     	;# 
  3588  081C                     	;# 
  3589  081D                     	;# 
  3590  081E                     	;# 
  3591  081F                     	;# 
  3592  088C                     	;# 
  3593  088D                     	;# 
  3594  088E                     	;# 
  3595  088F                     	;# 
  3596  0890                     	;# 
  3597  0891                     	;# 
  3598  0892                     	;# 
  3599  0893                     	;# 
  3600  0895                     	;# 
  3601  0896                     	;# 
  3602  0897                     	;# 
  3603  0898                     	;# 
  3604  0899                     	;# 
  3605  089A                     	;# 
  3606  089B                     	;# 
  3607  090C                     	;# 
  3608  090E                     	;# 
  3609  090F                     	;# 
  3610  091F                     	;# 
  3611  098F                     	;# 
  3612  098F                     	;# 
  3613  0990                     	;# 
  3614  0991                     	;# 
  3615  0992                     	;# 
  3616  0993                     	;# 
  3617  0994                     	;# 
  3618  0995                     	;# 
  3619  0996                     	;# 
  3620  0997                     	;# 
  3621  1E0F                     	;# 
  3622  1E10                     	;# 
  3623  1E11                     	;# 
  3624  1E12                     	;# 
  3625  1E13                     	;# 
  3626  1E14                     	;# 
  3627  1E15                     	;# 
  3628  1E16                     	;# 
  3629  1E17                     	;# 
  3630  1E18                     	;# 
  3631  1E19                     	;# 
  3632  1E1A                     	;# 
  3633  1E1B                     	;# 
  3634  1E1C                     	;# 
  3635  1E1D                     	;# 
  3636  1E1E                     	;# 
  3637  1E1F                     	;# 
  3638  1E20                     	;# 
  3639  1E21                     	;# 
  3640  1E22                     	;# 
  3641  1E23                     	;# 
  3642  1E24                     	;# 
  3643  1E25                     	;# 
  3644  1E26                     	;# 
  3645  1E27                     	;# 
  3646  1E28                     	;# 
  3647  1E29                     	;# 
  3648  1E2A                     	;# 
  3649  1E2B                     	;# 
  3650  1E2C                     	;# 
  3651  1E2D                     	;# 
  3652  1E2E                     	;# 
  3653  1E2F                     	;# 
  3654  1E30                     	;# 
  3655  1E31                     	;# 
  3656  1E32                     	;# 
  3657  1E33                     	;# 
  3658  1E34                     	;# 
  3659  1E35                     	;# 
  3660  1E36                     	;# 
  3661  1E37                     	;# 
  3662  1E8F                     	;# 
  3663  1E90                     	;# 
  3664  1E91                     	;# 
  3665  1E92                     	;# 
  3666  1E93                     	;# 
  3667  1E94                     	;# 
  3668  1E95                     	;# 
  3669  1E96                     	;# 
  3670  1E97                     	;# 
  3671  1E9C                     	;# 
  3672  1E9D                     	;# 
  3673  1E9E                     	;# 
  3674  1EA1                     	;# 
  3675  1EA2                     	;# 
  3676  1EA3                     	;# 
  3677  1EA4                     	;# 
  3678  1EA9                     	;# 
  3679  1EAA                     	;# 
  3680  1EB1                     	;# 
  3681  1EB2                     	;# 
  3682  1EB8                     	;# 
  3683  1EB9                     	;# 
  3684  1EBA                     	;# 
  3685  1EBB                     	;# 
  3686  1EBC                     	;# 
  3687  1EBD                     	;# 
  3688  1EBE                     	;# 
  3689  1EC3                     	;# 
  3690  1EC5                     	;# 
  3691  1EC6                     	;# 
  3692  1EC7                     	;# 
  3693  1EC8                     	;# 
  3694  1EC9                     	;# 
  3695  1ECA                     	;# 
  3696  1ECB                     	;# 
  3697  1ECB                     	;# 
  3698  1ECB                     	;# 
  3699  1ECC                     	;# 
  3700  1ECC                     	;# 
  3701  1ECC                     	;# 
  3702  1F10                     	;# 
  3703  1F11                     	;# 
  3704  1F12                     	;# 
  3705  1F14                     	;# 
  3706  1F15                     	;# 
  3707  1F1C                     	;# 
  3708  1F1D                     	;# 
  3709  1F1E                     	;# 
  3710  1F1F                     	;# 
  3711  1F20                     	;# 
  3712  1F21                     	;# 
  3713  1F22                     	;# 
  3714  1F23                     	;# 
  3715  1F24                     	;# 
  3716  1F25                     	;# 
  3717  1F26                     	;# 
  3718  1F27                     	;# 
  3719  1F38                     	;# 
  3720  1F39                     	;# 
  3721  1F3A                     	;# 
  3722  1F3B                     	;# 
  3723  1F3C                     	;# 
  3724  1F3D                     	;# 
  3725  1F3E                     	;# 
  3726  1F3F                     	;# 
  3727  1F43                     	;# 
  3728  1F44                     	;# 
  3729  1F45                     	;# 
  3730  1F46                     	;# 
  3731  1F47                     	;# 
  3732  1F48                     	;# 
  3733  1F49                     	;# 
  3734  1F4A                     	;# 
  3735  1F4E                     	;# 
  3736  1F4F                     	;# 
  3737  1F50                     	;# 
  3738  1F51                     	;# 
  3739  1F52                     	;# 
  3740  1F53                     	;# 
  3741  1F54                     	;# 
  3742  1F55                     	;# 
  3743  1FE4                     	;# 
  3744  1FE5                     	;# 
  3745  1FE6                     	;# 
  3746  1FE7                     	;# 
  3747  1FE8                     	;# 
  3748  1FE8                     	;# 
  3749  1FE9                     	;# 
  3750  1FEA                     	;# 
  3751  1FEB                     	;# 
  3752  1FED                     	;# 
  3753  1FEE                     	;# 
  3754  1FEF                     	;# 
  3755  0000                     	;# 
  3756  0001                     	;# 
  3757  0002                     	;# 
  3758  0003                     	;# 
  3759  0004                     	;# 
  3760  0005                     	;# 
  3761  0006                     	;# 
  3762  0007                     	;# 
  3763  0008                     	;# 
  3764  0009                     	;# 
  3765  000A                     	;# 
  3766  000B                     	;# 
  3767  000C                     	;# 
  3768  000D                     	;# 
  3769  000E                     	;# 
  3770  0012                     	;# 
  3771  0013                     	;# 
  3772  0014                     	;# 
  3773  0018                     	;# 
  3774  0019                     	;# 
  3775  001A                     	;# 
  3776  008C                     	;# 
  3777  008C                     	;# 
  3778  008D                     	;# 
  3779  008E                     	;# 
  3780  008E                     	;# 
  3781  008F                     	;# 
  3782  0090                     	;# 
  3783  0090                     	;# 
  3784  0091                     	;# 
  3785  0092                     	;# 
  3786  0092                     	;# 
  3787  0093                     	;# 
  3788  0094                     	;# 
  3789  0094                     	;# 
  3790  0095                     	;# 
  3791  0096                     	;# 
  3792  0096                     	;# 
  3793  0097                     	;# 
  3794  0098                     	;# 
  3795  0099                     	;# 
  3796  009A                     	;# 
  3797  009B                     	;# 
  3798  009B                     	;# 
  3799  009C                     	;# 
  3800  009D                     	;# 
  3801  009D                     	;# 
  3802  009E                     	;# 
  3803  009F                     	;# 
  3804  010C                     	;# 
  3805  010C                     	;# 
  3806  010D                     	;# 
  3807  010E                     	;# 
  3808  010F                     	;# 
  3809  010F                     	;# 
  3810  0110                     	;# 
  3811  0111                     	;# 
  3812  0112                     	;# 
  3813  0113                     	;# 
  3814  0114                     	;# 
  3815  0115                     	;# 
  3816  0116                     	;# 
  3817  0117                     	;# 
  3818  0118                     	;# 
  3819  0119                     	;# 
  3820  0119                     	;# 
  3821  0119                     	;# 
  3822  011A                     	;# 
  3823  011A                     	;# 
  3824  011A                     	;# 
  3825  011B                     	;# 
  3826  011B                     	;# 
  3827  011B                     	;# 
  3828  011B                     	;# 
  3829  011B                     	;# 
  3830  011C                     	;# 
  3831  011C                     	;# 
  3832  011C                     	;# 
  3833  011D                     	;# 
  3834  011D                     	;# 
  3835  011D                     	;# 
  3836  011E                     	;# 
  3837  011E                     	;# 
  3838  011E                     	;# 
  3839  011F                     	;# 
  3840  011F                     	;# 
  3841  011F                     	;# 
  3842  011F                     	;# 
  3843  011F                     	;# 
  3844  018C                     	;# 
  3845  018D                     	;# 
  3846  018E                     	;# 
  3847  018F                     	;# 
  3848  0190                     	;# 
  3849  0191                     	;# 
  3850  0192                     	;# 
  3851  0196                     	;# 
  3852  0197                     	;# 
  3853  0198                     	;# 
  3854  0199                     	;# 
  3855  019A                     	;# 
  3856  019B                     	;# 
  3857  019C                     	;# 
  3858  020C                     	;# 
  3859  020D                     	;# 
  3860  020E                     	;# 
  3861  020E                     	;# 
  3862  020F                     	;# 
  3863  020F                     	;# 
  3864  0210                     	;# 
  3865  0210                     	;# 
  3866  0211                     	;# 
  3867  0211                     	;# 
  3868  0212                     	;# 
  3869  0213                     	;# 
  3870  0214                     	;# 
  3871  0214                     	;# 
  3872  0215                     	;# 
  3873  0215                     	;# 
  3874  0216                     	;# 
  3875  0216                     	;# 
  3876  0217                     	;# 
  3877  0217                     	;# 
  3878  0218                     	;# 
  3879  0219                     	;# 
  3880  021A                     	;# 
  3881  021A                     	;# 
  3882  021B                     	;# 
  3883  021B                     	;# 
  3884  021C                     	;# 
  3885  021C                     	;# 
  3886  021D                     	;# 
  3887  021D                     	;# 
  3888  021E                     	;# 
  3889  021F                     	;# 
  3890  028C                     	;# 
  3891  028C                     	;# 
  3892  028D                     	;# 
  3893  028D                     	;# 
  3894  028E                     	;# 
  3895  028F                     	;# 
  3896  0290                     	;# 
  3897  0291                     	;# 
  3898  0292                     	;# 
  3899  0292                     	;# 
  3900  0293                     	;# 
  3901  0293                     	;# 
  3902  0294                     	;# 
  3903  0295                     	;# 
  3904  0296                     	;# 
  3905  0297                     	;# 
  3906  0298                     	;# 
  3907  0298                     	;# 
  3908  0299                     	;# 
  3909  0299                     	;# 
  3910  029A                     	;# 
  3911  029B                     	;# 
  3912  029C                     	;# 
  3913  029D                     	;# 
  3914  029F                     	;# 
  3915  030C                     	;# 
  3916  030C                     	;# 
  3917  030D                     	;# 
  3918  030E                     	;# 
  3919  030F                     	;# 
  3920  0310                     	;# 
  3921  0310                     	;# 
  3922  0311                     	;# 
  3923  0312                     	;# 
  3924  0313                     	;# 
  3925  0314                     	;# 
  3926  0314                     	;# 
  3927  0315                     	;# 
  3928  0316                     	;# 
  3929  0317                     	;# 
  3930  0318                     	;# 
  3931  0318                     	;# 
  3932  0319                     	;# 
  3933  031A                     	;# 
  3934  031B                     	;# 
  3935  038C                     	;# 
  3936  038C                     	;# 
  3937  038D                     	;# 
  3938  038E                     	;# 
  3939  0390                     	;# 
  3940  0390                     	;# 
  3941  0391                     	;# 
  3942  0392                     	;# 
  3943  048C                     	;# 
  3944  048C                     	;# 
  3945  048D                     	;# 
  3946  048E                     	;# 
  3947  048F                     	;# 
  3948  048F                     	;# 
  3949  0490                     	;# 
  3950  0491                     	;# 
  3951  0492                     	;# 
  3952  0492                     	;# 
  3953  0493                     	;# 
  3954  0494                     	;# 
  3955  0495                     	;# 
  3956  0495                     	;# 
  3957  0496                     	;# 
  3958  0497                     	;# 
  3959  0498                     	;# 
  3960  0499                     	;# 
  3961  049A                     	;# 
  3962  049B                     	;# 
  3963  049C                     	;# 
  3964  049D                     	;# 
  3965  058C                     	;# 
  3966  058C                     	;# 
  3967  058D                     	;# 
  3968  058E                     	;# 
  3969  058F                     	;# 
  3970  058F                     	;# 
  3971  0590                     	;# 
  3972  0591                     	;# 
  3973  0592                     	;# 
  3974  0593                     	;# 
  3975  059C                     	;# 
  3976  059C                     	;# 
  3977  059D                     	;# 
  3978  059D                     	;# 
  3979  059E                     	;# 
  3980  059F                     	;# 
  3981  060C                     	;# 
  3982  060C                     	;# 
  3983  060D                     	;# 
  3984  060D                     	;# 
  3985  060E                     	;# 
  3986  060F                     	;# 
  3987  0610                     	;# 
  3988  0611                     	;# 
  3989  0612                     	;# 
  3990  0613                     	;# 
  3991  0614                     	;# 
  3992  0616                     	;# 
  3993  0616                     	;# 
  3994  0617                     	;# 
  3995  0617                     	;# 
  3996  0618                     	;# 
  3997  0619                     	;# 
  3998  061A                     	;# 
  3999  061B                     	;# 
  4000  061C                     	;# 
  4001  061D                     	;# 
  4002  061E                     	;# 
  4003  070C                     	;# 
  4004  070D                     	;# 
  4005  070E                     	;# 
  4006  070F                     	;# 
  4007  0710                     	;# 
  4008  0711                     	;# 
  4009  0712                     	;# 
  4010  0713                     	;# 
  4011  0714                     	;# 
  4012  0716                     	;# 
  4013  0717                     	;# 
  4014  0718                     	;# 
  4015  0719                     	;# 
  4016  071A                     	;# 
  4017  071B                     	;# 
  4018  071C                     	;# 
  4019  071D                     	;# 
  4020  071E                     	;# 
  4021  0796                     	;# 
  4022  0797                     	;# 
  4023  0798                     	;# 
  4024  0799                     	;# 
  4025  079A                     	;# 
  4026  079B                     	;# 
  4027  079C                     	;# 
  4028  079D                     	;# 
  4029  080C                     	;# 
  4030  080D                     	;# 
  4031  080E                     	;# 
  4032  080F                     	;# 
  4033  0810                     	;# 
  4034  0811                     	;# 
  4035  0812                     	;# 
  4036  0813                     	;# 
  4037  0814                     	;# 
  4038  081A                     	;# 
  4039  081A                     	;# 
  4040  081B                     	;# 
  4041  081C                     	;# 
  4042  081C                     	;# 
  4043  081D                     	;# 
  4044  081E                     	;# 
  4045  081F                     	;# 
  4046  088C                     	;# 
  4047  088D                     	;# 
  4048  088E                     	;# 
  4049  088F                     	;# 
  4050  0890                     	;# 
  4051  0891                     	;# 
  4052  0892                     	;# 
  4053  0893                     	;# 
  4054  0895                     	;# 
  4055  0896                     	;# 
  4056  0897                     	;# 
  4057  0898                     	;# 
  4058  0899                     	;# 
  4059  089A                     	;# 
  4060  089B                     	;# 
  4061  090C                     	;# 
  4062  090E                     	;# 
  4063  090F                     	;# 
  4064  091F                     	;# 
  4065  098F                     	;# 
  4066  098F                     	;# 
  4067  0990                     	;# 
  4068  0991                     	;# 
  4069  0992                     	;# 
  4070  0993                     	;# 
  4071  0994                     	;# 
  4072  0995                     	;# 
  4073  0996                     	;# 
  4074  0997                     	;# 
  4075  1E0F                     	;# 
  4076  1E10                     	;# 
  4077  1E11                     	;# 
  4078  1E12                     	;# 
  4079  1E13                     	;# 
  4080  1E14                     	;# 
  4081  1E15                     	;# 
  4082  1E16                     	;# 
  4083  1E17                     	;# 
  4084  1E18                     	;# 
  4085  1E19                     	;# 
  4086  1E1A                     	;# 
  4087  1E1B                     	;# 
  4088  1E1C                     	;# 
  4089  1E1D                     	;# 
  4090  1E1E                     	;# 
  4091  1E1F                     	;# 
  4092  1E20                     	;# 
  4093  1E21                     	;# 
  4094  1E22                     	;# 
  4095  1E23                     	;# 
  4096  1E24                     	;# 
  4097  1E25                     	;# 
  4098  1E26                     	;# 
  4099  1E27                     	;# 
  4100  1E28                     	;# 
  4101  1E29                     	;# 
  4102  1E2A                     	;# 
  4103  1E2B                     	;# 
  4104  1E2C                     	;# 
  4105  1E2D                     	;# 
  4106  1E2E                     	;# 
  4107  1E2F                     	;# 
  4108  1E30                     	;# 
  4109  1E31                     	;# 
  4110  1E32                     	;# 
  4111  1E33                     	;# 
  4112  1E34                     	;# 
  4113  1E35                     	;# 
  4114  1E36                     	;# 
  4115  1E37                     	;# 
  4116  1E8F                     	;# 
  4117  1E90                     	;# 
  4118  1E91                     	;# 
  4119  1E92                     	;# 
  4120  1E93                     	;# 
  4121  1E94                     	;# 
  4122  1E95                     	;# 
  4123  1E96                     	;# 
  4124  1E97                     	;# 
  4125  1E9C                     	;# 
  4126  1E9D                     	;# 
  4127  1E9E                     	;# 
  4128  1EA1                     	;# 
  4129  1EA2                     	;# 
  4130  1EA3                     	;# 
  4131  1EA4                     	;# 
  4132  1EA9                     	;# 
  4133  1EAA                     	;# 
  4134  1EB1                     	;# 
  4135  1EB2                     	;# 
  4136  1EB8                     	;# 
  4137  1EB9                     	;# 
  4138  1EBA                     	;# 
  4139  1EBB                     	;# 
  4140  1EBC                     	;# 
  4141  1EBD                     	;# 
  4142  1EBE                     	;# 
  4143  1EC3                     	;# 
  4144  1EC5                     	;# 
  4145  1EC6                     	;# 
  4146  1EC7                     	;# 
  4147  1EC8                     	;# 
  4148  1EC9                     	;# 
  4149  1ECA                     	;# 
  4150  1ECB                     	;# 
  4151  1ECB                     	;# 
  4152  1ECB                     	;# 
  4153  1ECC                     	;# 
  4154  1ECC                     	;# 
  4155  1ECC                     	;# 
  4156  1F10                     	;# 
  4157  1F11                     	;# 
  4158  1F12                     	;# 
  4159  1F14                     	;# 
  4160  1F15                     	;# 
  4161  1F1C                     	;# 
  4162  1F1D                     	;# 
  4163  1F1E                     	;# 
  4164  1F1F                     	;# 
  4165  1F20                     	;# 
  4166  1F21                     	;# 
  4167  1F22                     	;# 
  4168  1F23                     	;# 
  4169  1F24                     	;# 
  4170  1F25                     	;# 
  4171  1F26                     	;# 
  4172  1F27                     	;# 
  4173  1F38                     	;# 
  4174  1F39                     	;# 
  4175  1F3A                     	;# 
  4176  1F3B                     	;# 
  4177  1F3C                     	;# 
  4178  1F3D                     	;# 
  4179  1F3E                     	;# 
  4180  1F3F                     	;# 
  4181  1F43                     	;# 
  4182  1F44                     	;# 
  4183  1F45                     	;# 
  4184  1F46                     	;# 
  4185  1F47                     	;# 
  4186  1F48                     	;# 
  4187  1F49                     	;# 
  4188  1F4A                     	;# 
  4189  1F4E                     	;# 
  4190  1F4F                     	;# 
  4191  1F50                     	;# 
  4192  1F51                     	;# 
  4193  1F52                     	;# 
  4194  1F53                     	;# 
  4195  1F54                     	;# 
  4196  1F55                     	;# 
  4197  1FE4                     	;# 
  4198  1FE5                     	;# 
  4199  1FE6                     	;# 
  4200  1FE7                     	;# 
  4201  1FE8                     	;# 
  4202  1FE8                     	;# 
  4203  1FE9                     	;# 
  4204  1FEA                     	;# 
  4205  1FEB                     	;# 
  4206  1FED                     	;# 
  4207  1FEE                     	;# 
  4208  1FEF                     	;# 
  4209  0000                     	;# 
  4210  0001                     	;# 
  4211  0002                     	;# 
  4212  0003                     	;# 
  4213  0004                     	;# 
  4214  0005                     	;# 
  4215  0006                     	;# 
  4216  0007                     	;# 
  4217  0008                     	;# 
  4218  0009                     	;# 
  4219  000A                     	;# 
  4220  000B                     	;# 
  4221  000C                     	;# 
  4222  000D                     	;# 
  4223  000E                     	;# 
  4224  0012                     	;# 
  4225  0013                     	;# 
  4226  0014                     	;# 
  4227  0018                     	;# 
  4228  0019                     	;# 
  4229  001A                     	;# 
  4230  008C                     	;# 
  4231  008C                     	;# 
  4232  008D                     	;# 
  4233  008E                     	;# 
  4234  008E                     	;# 
  4235  008F                     	;# 
  4236  0090                     	;# 
  4237  0090                     	;# 
  4238  0091                     	;# 
  4239  0092                     	;# 
  4240  0092                     	;# 
  4241  0093                     	;# 
  4242  0094                     	;# 
  4243  0094                     	;# 
  4244  0095                     	;# 
  4245  0096                     	;# 
  4246  0096                     	;# 
  4247  0097                     	;# 
  4248  0098                     	;# 
  4249  0099                     	;# 
  4250  009A                     	;# 
  4251  009B                     	;# 
  4252  009B                     	;# 
  4253  009C                     	;# 
  4254  009D                     	;# 
  4255  009D                     	;# 
  4256  009E                     	;# 
  4257  009F                     	;# 
  4258  010C                     	;# 
  4259  010C                     	;# 
  4260  010D                     	;# 
  4261  010E                     	;# 
  4262  010F                     	;# 
  4263  010F                     	;# 
  4264  0110                     	;# 
  4265  0111                     	;# 
  4266  0112                     	;# 
  4267  0113                     	;# 
  4268  0114                     	;# 
  4269  0115                     	;# 
  4270  0116                     	;# 
  4271  0117                     	;# 
  4272  0118                     	;# 
  4273  0119                     	;# 
  4274  0119                     	;# 
  4275  0119                     	;# 
  4276  011A                     	;# 
  4277  011A                     	;# 
  4278  011A                     	;# 
  4279  011B                     	;# 
  4280  011B                     	;# 
  4281  011B                     	;# 
  4282  011B                     	;# 
  4283  011B                     	;# 
  4284  011C                     	;# 
  4285  011C                     	;# 
  4286  011C                     	;# 
  4287  011D                     	;# 
  4288  011D                     	;# 
  4289  011D                     	;# 
  4290  011E                     	;# 
  4291  011E                     	;# 
  4292  011E                     	;# 
  4293  011F                     	;# 
  4294  011F                     	;# 
  4295  011F                     	;# 
  4296  011F                     	;# 
  4297  011F                     	;# 
  4298  018C                     	;# 
  4299  018D                     	;# 
  4300  018E                     	;# 
  4301  018F                     	;# 
  4302  0190                     	;# 
  4303  0191                     	;# 
  4304  0192                     	;# 
  4305  0196                     	;# 
  4306  0197                     	;# 
  4307  0198                     	;# 
  4308  0199                     	;# 
  4309  019A                     	;# 
  4310  019B                     	;# 
  4311  019C                     	;# 
  4312  020C                     	;# 
  4313  020D                     	;# 
  4314  020E                     	;# 
  4315  020E                     	;# 
  4316  020F                     	;# 
  4317  020F                     	;# 
  4318  0210                     	;# 
  4319  0210                     	;# 
  4320  0211                     	;# 
  4321  0211                     	;# 
  4322  0212                     	;# 
  4323  0213                     	;# 
  4324  0214                     	;# 
  4325  0214                     	;# 
  4326  0215                     	;# 
  4327  0215                     	;# 
  4328  0216                     	;# 
  4329  0216                     	;# 
  4330  0217                     	;# 
  4331  0217                     	;# 
  4332  0218                     	;# 
  4333  0219                     	;# 
  4334  021A                     	;# 
  4335  021A                     	;# 
  4336  021B                     	;# 
  4337  021B                     	;# 
  4338  021C                     	;# 
  4339  021C                     	;# 
  4340  021D                     	;# 
  4341  021D                     	;# 
  4342  021E                     	;# 
  4343  021F                     	;# 
  4344  028C                     	;# 
  4345  028C                     	;# 
  4346  028D                     	;# 
  4347  028D                     	;# 
  4348  028E                     	;# 
  4349  028F                     	;# 
  4350  0290                     	;# 
  4351  0291                     	;# 
  4352  0292                     	;# 
  4353  0292                     	;# 
  4354  0293                     	;# 
  4355  0293                     	;# 
  4356  0294                     	;# 
  4357  0295                     	;# 
  4358  0296                     	;# 
  4359  0297                     	;# 
  4360  0298                     	;# 
  4361  0298                     	;# 
  4362  0299                     	;# 
  4363  0299                     	;# 
  4364  029A                     	;# 
  4365  029B                     	;# 
  4366  029C                     	;# 
  4367  029D                     	;# 
  4368  029F                     	;# 
  4369  030C                     	;# 
  4370  030C                     	;# 
  4371  030D                     	;# 
  4372  030E                     	;# 
  4373  030F                     	;# 
  4374  0310                     	;# 
  4375  0310                     	;# 
  4376  0311                     	;# 
  4377  0312                     	;# 
  4378  0313                     	;# 
  4379  0314                     	;# 
  4380  0314                     	;# 
  4381  0315                     	;# 
  4382  0316                     	;# 
  4383  0317                     	;# 
  4384  0318                     	;# 
  4385  0318                     	;# 
  4386  0319                     	;# 
  4387  031A                     	;# 
  4388  031B                     	;# 
  4389  038C                     	;# 
  4390  038C                     	;# 
  4391  038D                     	;# 
  4392  038E                     	;# 
  4393  0390                     	;# 
  4394  0390                     	;# 
  4395  0391                     	;# 
  4396  0392                     	;# 
  4397  048C                     	;# 
  4398  048C                     	;# 
  4399  048D                     	;# 
  4400  048E                     	;# 
  4401  048F                     	;# 
  4402  048F                     	;# 
  4403  0490                     	;# 
  4404  0491                     	;# 
  4405  0492                     	;# 
  4406  0492                     	;# 
  4407  0493                     	;# 
  4408  0494                     	;# 
  4409  0495                     	;# 
  4410  0495                     	;# 
  4411  0496                     	;# 
  4412  0497                     	;# 
  4413  0498                     	;# 
  4414  0499                     	;# 
  4415  049A                     	;# 
  4416  049B                     	;# 
  4417  049C                     	;# 
  4418  049D                     	;# 
  4419  058C                     	;# 
  4420  058C                     	;# 
  4421  058D                     	;# 
  4422  058E                     	;# 
  4423  058F                     	;# 
  4424  058F                     	;# 
  4425  0590                     	;# 
  4426  0591                     	;# 
  4427  0592                     	;# 
  4428  0593                     	;# 
  4429  059C                     	;# 
  4430  059C                     	;# 
  4431  059D                     	;# 
  4432  059D                     	;# 
  4433  059E                     	;# 
  4434  059F                     	;# 
  4435  060C                     	;# 
  4436  060C                     	;# 
  4437  060D                     	;# 
  4438  060D                     	;# 
  4439  060E                     	;# 
  4440  060F                     	;# 
  4441  0610                     	;# 
  4442  0611                     	;# 
  4443  0612                     	;# 
  4444  0613                     	;# 
  4445  0614                     	;# 
  4446  0616                     	;# 
  4447  0616                     	;# 
  4448  0617                     	;# 
  4449  0617                     	;# 
  4450  0618                     	;# 
  4451  0619                     	;# 
  4452  061A                     	;# 
  4453  061B                     	;# 
  4454  061C                     	;# 
  4455  061D                     	;# 
  4456  061E                     	;# 
  4457  070C                     	;# 
  4458  070D                     	;# 
  4459  070E                     	;# 
  4460  070F                     	;# 
  4461  0710                     	;# 
  4462  0711                     	;# 
  4463  0712                     	;# 
  4464  0713                     	;# 
  4465  0714                     	;# 
  4466  0716                     	;# 
  4467  0717                     	;# 
  4468  0718                     	;# 
  4469  0719                     	;# 
  4470  071A                     	;# 
  4471  071B                     	;# 
  4472  071C                     	;# 
  4473  071D                     	;# 
  4474  071E                     	;# 
  4475  0796                     	;# 
  4476  0797                     	;# 
  4477  0798                     	;# 
  4478  0799                     	;# 
  4479  079A                     	;# 
  4480  079B                     	;# 
  4481  079C                     	;# 
  4482  079D                     	;# 
  4483  080C                     	;# 
  4484  080D                     	;# 
  4485  080E                     	;# 
  4486  080F                     	;# 
  4487  0810                     	;# 
  4488  0811                     	;# 
  4489  0812                     	;# 
  4490  0813                     	;# 
  4491  0814                     	;# 
  4492  081A                     	;# 
  4493  081A                     	;# 
  4494  081B                     	;# 
  4495  081C                     	;# 
  4496  081C                     	;# 
  4497  081D                     	;# 
  4498  081E                     	;# 
  4499  081F                     	;# 
  4500  088C                     	;# 
  4501  088D                     	;# 
  4502  088E                     	;# 
  4503  088F                     	;# 
  4504  0890                     	;# 
  4505  0891                     	;# 
  4506  0892                     	;# 
  4507  0893                     	;# 
  4508  0895                     	;# 
  4509  0896                     	;# 
  4510  0897                     	;# 
  4511  0898                     	;# 
  4512  0899                     	;# 
  4513  089A                     	;# 
  4514  089B                     	;# 
  4515  090C                     	;# 
  4516  090E                     	;# 
  4517  090F                     	;# 
  4518  091F                     	;# 
  4519  098F                     	;# 
  4520  098F                     	;# 
  4521  0990                     	;# 
  4522  0991                     	;# 
  4523  0992                     	;# 
  4524  0993                     	;# 
  4525  0994                     	;# 
  4526  0995                     	;# 
  4527  0996                     	;# 
  4528  0997                     	;# 
  4529  1E0F                     	;# 
  4530  1E10                     	;# 
  4531  1E11                     	;# 
  4532  1E12                     	;# 
  4533  1E13                     	;# 
  4534  1E14                     	;# 
  4535  1E15                     	;# 
  4536  1E16                     	;# 
  4537  1E17                     	;# 
  4538  1E18                     	;# 
  4539  1E19                     	;# 
  4540  1E1A                     	;# 
  4541  1E1B                     	;# 
  4542  1E1C                     	;# 
  4543  1E1D                     	;# 
  4544  1E1E                     	;# 
  4545  1E1F                     	;# 
  4546  1E20                     	;# 
  4547  1E21                     	;# 
  4548  1E22                     	;# 
  4549  1E23                     	;# 
  4550  1E24                     	;# 
  4551  1E25                     	;# 
  4552  1E26                     	;# 
  4553  1E27                     	;# 
  4554  1E28                     	;# 
  4555  1E29                     	;# 
  4556  1E2A                     	;# 
  4557  1E2B                     	;# 
  4558  1E2C                     	;# 
  4559  1E2D                     	;# 
  4560  1E2E                     	;# 
  4561  1E2F                     	;# 
  4562  1E30                     	;# 
  4563  1E31                     	;# 
  4564  1E32                     	;# 
  4565  1E33                     	;# 
  4566  1E34                     	;# 
  4567  1E35                     	;# 
  4568  1E36                     	;# 
  4569  1E37                     	;# 
  4570  1E8F                     	;# 
  4571  1E90                     	;# 
  4572  1E91                     	;# 
  4573  1E92                     	;# 
  4574  1E93                     	;# 
  4575  1E94                     	;# 
  4576  1E95                     	;# 
  4577  1E96                     	;# 
  4578  1E97                     	;# 
  4579  1E9C                     	;# 
  4580  1E9D                     	;# 
  4581  1E9E                     	;# 
  4582  1EA1                     	;# 
  4583  1EA2                     	;# 
  4584  1EA3                     	;# 
  4585  1EA4                     	;# 
  4586  1EA9                     	;# 
  4587  1EAA                     	;# 
  4588  1EB1                     	;# 
  4589  1EB2                     	;# 
  4590  1EB8                     	;# 
  4591  1EB9                     	;# 
  4592  1EBA                     	;# 
  4593  1EBB                     	;# 
  4594  1EBC                     	;# 
  4595  1EBD                     	;# 
  4596  1EBE                     	;# 
  4597  1EC3                     	;# 
  4598  1EC5                     	;# 
  4599  1EC6                     	;# 
  4600  1EC7                     	;# 
  4601  1EC8                     	;# 
  4602  1EC9                     	;# 
  4603  1ECA                     	;# 
  4604  1ECB                     	;# 
  4605  1ECB                     	;# 
  4606  1ECB                     	;# 
  4607  1ECC                     	;# 
  4608  1ECC                     	;# 
  4609  1ECC                     	;# 
  4610  1F10                     	;# 
  4611  1F11                     	;# 
  4612  1F12                     	;# 
  4613  1F14                     	;# 
  4614  1F15                     	;# 
  4615  1F1C                     	;# 
  4616  1F1D                     	;# 
  4617  1F1E                     	;# 
  4618  1F1F                     	;# 
  4619  1F20                     	;# 
  4620  1F21                     	;# 
  4621  1F22                     	;# 
  4622  1F23                     	;# 
  4623  1F24                     	;# 
  4624  1F25                     	;# 
  4625  1F26                     	;# 
  4626  1F27                     	;# 
  4627  1F38                     	;# 
  4628  1F39                     	;# 
  4629  1F3A                     	;# 
  4630  1F3B                     	;# 
  4631  1F3C                     	;# 
  4632  1F3D                     	;# 
  4633  1F3E                     	;# 
  4634  1F3F                     	;# 
  4635  1F43                     	;# 
  4636  1F44                     	;# 
  4637  1F45                     	;# 
  4638  1F46                     	;# 
  4639  1F47                     	;# 
  4640  1F48                     	;# 
  4641  1F49                     	;# 
  4642  1F4A                     	;# 
  4643  1F4E                     	;# 
  4644  1F4F                     	;# 
  4645  1F50                     	;# 
  4646  1F51                     	;# 
  4647  1F52                     	;# 
  4648  1F53                     	;# 
  4649  1F54                     	;# 
  4650  1F55                     	;# 
  4651  1FE4                     	;# 
  4652  1FE5                     	;# 
  4653  1FE6                     	;# 
  4654  1FE7                     	;# 
  4655  1FE8                     	;# 
  4656  1FE8                     	;# 
  4657  1FE9                     	;# 
  4658  1FEA                     	;# 
  4659  1FEB                     	;# 
  4660  1FED                     	;# 
  4661  1FEE                     	;# 
  4662  1FEF                     	;# 
  4663  0000                     	;# 
  4664  0001                     	;# 
  4665  0002                     	;# 
  4666  0003                     	;# 
  4667  0004                     	;# 
  4668  0005                     	;# 
  4669  0006                     	;# 
  4670  0007                     	;# 
  4671  0008                     	;# 
  4672  0009                     	;# 
  4673  000A                     	;# 
  4674  000B                     	;# 
  4675  000C                     	;# 
  4676  000D                     	;# 
  4677  000E                     	;# 
  4678  0012                     	;# 
  4679  0013                     	;# 
  4680  0014                     	;# 
  4681  0018                     	;# 
  4682  0019                     	;# 
  4683  001A                     	;# 
  4684  008C                     	;# 
  4685  008C                     	;# 
  4686  008D                     	;# 
  4687  008E                     	;# 
  4688  008E                     	;# 
  4689  008F                     	;# 
  4690  0090                     	;# 
  4691  0090                     	;# 
  4692  0091                     	;# 
  4693  0092                     	;# 
  4694  0092                     	;# 
  4695  0093                     	;# 
  4696  0094                     	;# 
  4697  0094                     	;# 
  4698  0095                     	;# 
  4699  0096                     	;# 
  4700  0096                     	;# 
  4701  0097                     	;# 
  4702  0098                     	;# 
  4703  0099                     	;# 
  4704  009A                     	;# 
  4705  009B                     	;# 
  4706  009B                     	;# 
  4707  009C                     	;# 
  4708  009D                     	;# 
  4709  009D                     	;# 
  4710  009E                     	;# 
  4711  009F                     	;# 
  4712  010C                     	;# 
  4713  010C                     	;# 
  4714  010D                     	;# 
  4715  010E                     	;# 
  4716  010F                     	;# 
  4717  010F                     	;# 
  4718  0110                     	;# 
  4719  0111                     	;# 
  4720  0112                     	;# 
  4721  0113                     	;# 
  4722  0114                     	;# 
  4723  0115                     	;# 
  4724  0116                     	;# 
  4725  0117                     	;# 
  4726  0118                     	;# 
  4727  0119                     	;# 
  4728  0119                     	;# 
  4729  0119                     	;# 
  4730  011A                     	;# 
  4731  011A                     	;# 
  4732  011A                     	;# 
  4733  011B                     	;# 
  4734  011B                     	;# 
  4735  011B                     	;# 
  4736  011B                     	;# 
  4737  011B                     	;# 
  4738  011C                     	;# 
  4739  011C                     	;# 
  4740  011C                     	;# 
  4741  011D                     	;# 
  4742  011D                     	;# 
  4743  011D                     	;# 
  4744  011E                     	;# 
  4745  011E                     	;# 
  4746  011E                     	;# 
  4747  011F                     	;# 
  4748  011F                     	;# 
  4749  011F                     	;# 
  4750  011F                     	;# 
  4751  011F                     	;# 
  4752  018C                     	;# 
  4753  018D                     	;# 
  4754  018E                     	;# 
  4755  018F                     	;# 
  4756  0190                     	;# 
  4757  0191                     	;# 
  4758  0192                     	;# 
  4759  0196                     	;# 
  4760  0197                     	;# 
  4761  0198                     	;# 
  4762  0199                     	;# 
  4763  019A                     	;# 
  4764  019B                     	;# 
  4765  019C                     	;# 
  4766  020C                     	;# 
  4767  020D                     	;# 
  4768  020E                     	;# 
  4769  020E                     	;# 
  4770  020F                     	;# 
  4771  020F                     	;# 
  4772  0210                     	;# 
  4773  0210                     	;# 
  4774  0211                     	;# 
  4775  0211                     	;# 
  4776  0212                     	;# 
  4777  0213                     	;# 
  4778  0214                     	;# 
  4779  0214                     	;# 
  4780  0215                     	;# 
  4781  0215                     	;# 
  4782  0216                     	;# 
  4783  0216                     	;# 
  4784  0217                     	;# 
  4785  0217                     	;# 
  4786  0218                     	;# 
  4787  0219                     	;# 
  4788  021A                     	;# 
  4789  021A                     	;# 
  4790  021B                     	;# 
  4791  021B                     	;# 
  4792  021C                     	;# 
  4793  021C                     	;# 
  4794  021D                     	;# 
  4795  021D                     	;# 
  4796  021E                     	;# 
  4797  021F                     	;# 
  4798  028C                     	;# 
  4799  028C                     	;# 
  4800  028D                     	;# 
  4801  028D                     	;# 
  4802  028E                     	;# 
  4803  028F                     	;# 
  4804  0290                     	;# 
  4805  0291                     	;# 
  4806  0292                     	;# 
  4807  0292                     	;# 
  4808  0293                     	;# 
  4809  0293                     	;# 
  4810  0294                     	;# 
  4811  0295                     	;# 
  4812  0296                     	;# 
  4813  0297                     	;# 
  4814  0298                     	;# 
  4815  0298                     	;# 
  4816  0299                     	;# 
  4817  0299                     	;# 
  4818  029A                     	;# 
  4819  029B                     	;# 
  4820  029C                     	;# 
  4821  029D                     	;# 
  4822  029F                     	;# 
  4823  030C                     	;# 
  4824  030C                     	;# 
  4825  030D                     	;# 
  4826  030E                     	;# 
  4827  030F                     	;# 
  4828  0310                     	;# 
  4829  0310                     	;# 
  4830  0311                     	;# 
  4831  0312                     	;# 
  4832  0313                     	;# 
  4833  0314                     	;# 
  4834  0314                     	;# 
  4835  0315                     	;# 
  4836  0316                     	;# 
  4837  0317                     	;# 
  4838  0318                     	;# 
  4839  0318                     	;# 
  4840  0319                     	;# 
  4841  031A                     	;# 
  4842  031B                     	;# 
  4843  038C                     	;# 
  4844  038C                     	;# 
  4845  038D                     	;# 
  4846  038E                     	;# 
  4847  0390                     	;# 
  4848  0390                     	;# 
  4849  0391                     	;# 
  4850  0392                     	;# 
  4851  048C                     	;# 
  4852  048C                     	;# 
  4853  048D                     	;# 
  4854  048E                     	;# 
  4855  048F                     	;# 
  4856  048F                     	;# 
  4857  0490                     	;# 
  4858  0491                     	;# 
  4859  0492                     	;# 
  4860  0492                     	;# 
  4861  0493                     	;# 
  4862  0494                     	;# 
  4863  0495                     	;# 
  4864  0495                     	;# 
  4865  0496                     	;# 
  4866  0497                     	;# 
  4867  0498                     	;# 
  4868  0499                     	;# 
  4869  049A                     	;# 
  4870  049B                     	;# 
  4871  049C                     	;# 
  4872  049D                     	;# 
  4873  058C                     	;# 
  4874  058C                     	;# 
  4875  058D                     	;# 
  4876  058E                     	;# 
  4877  058F                     	;# 
  4878  058F                     	;# 
  4879  0590                     	;# 
  4880  0591                     	;# 
  4881  0592                     	;# 
  4882  0593                     	;# 
  4883  059C                     	;# 
  4884  059C                     	;# 
  4885  059D                     	;# 
  4886  059D                     	;# 
  4887  059E                     	;# 
  4888  059F                     	;# 
  4889  060C                     	;# 
  4890  060C                     	;# 
  4891  060D                     	;# 
  4892  060D                     	;# 
  4893  060E                     	;# 
  4894  060F                     	;# 
  4895  0610                     	;# 
  4896  0611                     	;# 
  4897  0612                     	;# 
  4898  0613                     	;# 
  4899  0614                     	;# 
  4900  0616                     	;# 
  4901  0616                     	;# 
  4902  0617                     	;# 
  4903  0617                     	;# 
  4904  0618                     	;# 
  4905  0619                     	;# 
  4906  061A                     	;# 
  4907  061B                     	;# 
  4908  061C                     	;# 
  4909  061D                     	;# 
  4910  061E                     	;# 
  4911  070C                     	;# 
  4912  070D                     	;# 
  4913  070E                     	;# 
  4914  070F                     	;# 
  4915  0710                     	;# 
  4916  0711                     	;# 
  4917  0712                     	;# 
  4918  0713                     	;# 
  4919  0714                     	;# 
  4920  0716                     	;# 
  4921  0717                     	;# 
  4922  0718                     	;# 
  4923  0719                     	;# 
  4924  071A                     	;# 
  4925  071B                     	;# 
  4926  071C                     	;# 
  4927  071D                     	;# 
  4928  071E                     	;# 
  4929  0796                     	;# 
  4930  0797                     	;# 
  4931  0798                     	;# 
  4932  0799                     	;# 
  4933  079A                     	;# 
  4934  079B                     	;# 
  4935  079C                     	;# 
  4936  079D                     	;# 
  4937  080C                     	;# 
  4938  080D                     	;# 
  4939  080E                     	;# 
  4940  080F                     	;# 
  4941  0810                     	;# 
  4942  0811                     	;# 
  4943  0812                     	;# 
  4944  0813                     	;# 
  4945  0814                     	;# 
  4946  081A                     	;# 
  4947  081A                     	;# 
  4948  081B                     	;# 
  4949  081C                     	;# 
  4950  081C                     	;# 
  4951  081D                     	;# 
  4952  081E                     	;# 
  4953  081F                     	;# 
  4954  088C                     	;# 
  4955  088D                     	;# 
  4956  088E                     	;# 
  4957  088F                     	;# 
  4958  0890                     	;# 
  4959  0891                     	;# 
  4960  0892                     	;# 
  4961  0893                     	;# 
  4962  0895                     	;# 
  4963  0896                     	;# 
  4964  0897                     	;# 
  4965  0898                     	;# 
  4966  0899                     	;# 
  4967  089A                     	;# 
  4968  089B                     	;# 
  4969  090C                     	;# 
  4970  090E                     	;# 
  4971  090F                     	;# 
  4972  091F                     	;# 
  4973  098F                     	;# 
  4974  098F                     	;# 
  4975  0990                     	;# 
  4976  0991                     	;# 
  4977  0992                     	;# 
  4978  0993                     	;# 
  4979  0994                     	;# 
  4980  0995                     	;# 
  4981  0996                     	;# 
  4982  0997                     	;# 
  4983  1E0F                     	;# 
  4984  1E10                     	;# 
  4985  1E11                     	;# 
  4986  1E12                     	;# 
  4987  1E13                     	;# 
  4988  1E14                     	;# 
  4989  1E15                     	;# 
  4990  1E16                     	;# 
  4991  1E17                     	;# 
  4992  1E18                     	;# 
  4993  1E19                     	;# 
  4994  1E1A                     	;# 
  4995  1E1B                     	;# 
  4996  1E1C                     	;# 
  4997  1E1D                     	;# 
  4998  1E1E                     	;# 
  4999  1E1F                     	;# 
  5000  1E20                     	;# 
  5001  1E21                     	;# 
  5002  1E22                     	;# 
  5003  1E23                     	;# 
  5004  1E24                     	;# 
  5005  1E25                     	;# 
  5006  1E26                     	;# 
  5007  1E27                     	;# 
  5008  1E28                     	;# 
  5009  1E29                     	;# 
  5010  1E2A                     	;# 
  5011  1E2B                     	;# 
  5012  1E2C                     	;# 
  5013  1E2D                     	;# 
  5014  1E2E                     	;# 
  5015  1E2F                     	;# 
  5016  1E30                     	;# 
  5017  1E31                     	;# 
  5018  1E32                     	;# 
  5019  1E33                     	;# 
  5020  1E34                     	;# 
  5021  1E35                     	;# 
  5022  1E36                     	;# 
  5023  1E37                     	;# 
  5024  1E8F                     	;# 
  5025  1E90                     	;# 
  5026  1E91                     	;# 
  5027  1E92                     	;# 
  5028  1E93                     	;# 
  5029  1E94                     	;# 
  5030  1E95                     	;# 
  5031  1E96                     	;# 
  5032  1E97                     	;# 
  5033  1E9C                     	;# 
  5034  1E9D                     	;# 
  5035  1E9E                     	;# 
  5036  1EA1                     	;# 
  5037  1EA2                     	;# 
  5038  1EA3                     	;# 
  5039  1EA4                     	;# 
  5040  1EA9                     	;# 
  5041  1EAA                     	;# 
  5042  1EB1                     	;# 
  5043  1EB2                     	;# 
  5044  1EB8                     	;# 
  5045  1EB9                     	;# 
  5046  1EBA                     	;# 
  5047  1EBB                     	;# 
  5048  1EBC                     	;# 
  5049  1EBD                     	;# 
  5050  1EBE                     	;# 
  5051  1EC3                     	;# 
  5052  1EC5                     	;# 
  5053  1EC6                     	;# 
  5054  1EC7                     	;# 
  5055  1EC8                     	;# 
  5056  1EC9                     	;# 
  5057  1ECA                     	;# 
  5058  1ECB                     	;# 
  5059  1ECB                     	;# 
  5060  1ECB                     	;# 
  5061  1ECC                     	;# 
  5062  1ECC                     	;# 
  5063  1ECC                     	;# 
  5064  1F10                     	;# 
  5065  1F11                     	;# 
  5066  1F12                     	;# 
  5067  1F14                     	;# 
  5068  1F15                     	;# 
  5069  1F1C                     	;# 
  5070  1F1D                     	;# 
  5071  1F1E                     	;# 
  5072  1F1F                     	;# 
  5073  1F20                     	;# 
  5074  1F21                     	;# 
  5075  1F22                     	;# 
  5076  1F23                     	;# 
  5077  1F24                     	;# 
  5078  1F25                     	;# 
  5079  1F26                     	;# 
  5080  1F27                     	;# 
  5081  1F38                     	;# 
  5082  1F39                     	;# 
  5083  1F3A                     	;# 
  5084  1F3B                     	;# 
  5085  1F3C                     	;# 
  5086  1F3D                     	;# 
  5087  1F3E                     	;# 
  5088  1F3F                     	;# 
  5089  1F43                     	;# 
  5090  1F44                     	;# 
  5091  1F45                     	;# 
  5092  1F46                     	;# 
  5093  1F47                     	;# 
  5094  1F48                     	;# 
  5095  1F49                     	;# 
  5096  1F4A                     	;# 
  5097  1F4E                     	;# 
  5098  1F4F                     	;# 
  5099  1F50                     	;# 
  5100  1F51                     	;# 
  5101  1F52                     	;# 
  5102  1F53                     	;# 
  5103  1F54                     	;# 
  5104  1F55                     	;# 
  5105  1FE4                     	;# 
  5106  1FE5                     	;# 
  5107  1FE6                     	;# 
  5108  1FE7                     	;# 
  5109  1FE8                     	;# 
  5110  1FE8                     	;# 
  5111  1FE9                     	;# 
  5112  1FEA                     	;# 
  5113  1FEB                     	;# 
  5114  1FED                     	;# 
  5115  1FEE                     	;# 
  5116  1FEF                     	;_nmea_data
  5117                           
  5118 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  5119  0000                     
  5120 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  5121  0000                     
  5122 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  5123  0000                     
  5124 ;; Function _ReadEnvSensor is unused but had its address taken
  5125  0000                     
  5126 ;; Function _WriteEnvSensor is unused but had its address taken
  5127  0000                     
  5128                           	psect	idataBANK3
  5129  0E12                     __pidataBANK3:	
  5130                           
  5131                           ;initializer for _setNavFlightMode
  5132  0E12  34B5               	retlw	181
  5133  0E13  3462               	retlw	98
  5134  0E14  3406               	retlw	6
  5135  0E15  3424               	retlw	36
  5136  0E16  3424               	retlw	36
  5137  0E17  3400               	retlw	0
  5138  0E18  34FF               	retlw	255
  5139  0E19  34FF               	retlw	255
  5140  0E1A  3406               	retlw	6
  5141  0E1B  3403               	retlw	3
  5142  0E1C  3400               	retlw	0
  5143  0E1D  3400               	retlw	0
  5144  0E1E  3400               	retlw	0
  5145  0E1F  3400               	retlw	0
  5146  0E20  3410               	retlw	16
  5147  0E21  3427               	retlw	39
  5148  0E22  3400               	retlw	0
  5149  0E23  3400               	retlw	0
  5150  0E24  3405               	retlw	5
  5151  0E25  3400               	retlw	0
  5152  0E26  34FA               	retlw	250
  5153  0E27  3400               	retlw	0
  5154  0E28  34FA               	retlw	250
  5155  0E29  3400               	retlw	0
  5156  0E2A  3464               	retlw	100
  5157  0E2B  3400               	retlw	0
  5158  0E2C  342C               	retlw	44
  5159  0E2D  3401               	retlw	1
  5160  0E2E  3400               	retlw	0
  5161  0E2F  3400               	retlw	0
  5162  0E30  3400               	retlw	0
  5163  0E31  3400               	retlw	0
  5164  0E32  3400               	retlw	0
  5165  0E33  3400               	retlw	0
  5166  0E34  3400               	retlw	0
  5167  0E35  3400               	retlw	0
  5168  0E36  3400               	retlw	0
  5169  0E37  3400               	retlw	0
  5170  0E38  3400               	retlw	0
  5171  0E39  3400               	retlw	0
  5172  0E3A  3400               	retlw	0
  5173  0E3B  3400               	retlw	0
  5174  0E3C  3416               	retlw	22
  5175  0E3D  34DC               	retlw	220
  5176                           
  5177                           	psect	stringtext1
  5178  10B4                     __pstringtext1:	
  5179  10B4                     _HALF_BAUD_DELAY:	
  5180  10B4  340A               	retlw	10
  5181  10B5  3400               	retlw	0
  5182  10B6                     __end_of_HALF_BAUD_DELAY:	
  5183                           
  5184                           	psect	nvBANK1
  5185  00EA                     __pnvBANK1:	
  5186  00EA                     _EUSART1_OverrunErrorHandler:	
  5187  00EA                     	ds	2
  5188  00EC                     _EUSART1_FramingErrorHandler:	
  5189  00EC                     	ds	2
  5190  00EE                     _TMR0_InterruptHandler:	
  5191  00EE                     	ds	2
  5192                           
  5193                           	psect	nvBANK2
  5194  016D                     __pnvBANK2:	
  5195  016D                     _EUSART1_ErrorHandler:	
  5196  016D                     	ds	2
  5197  000B                     _INTCONbits	set	11
  5198  0018                     _LATAbits	set	24
  5199  001A                     _LATCbits	set	26
  5200  0014                     _TRISC	set	20
  5201  0013                     _TRISB	set	19
  5202  0012                     _TRISA	set	18
  5203  001A                     _LATC	set	26
  5204  0019                     _LATB	set	25
  5205  0018                     _LATA	set	24
  5206  011A                     _TX1REG	set	282
  5207  0119                     _RC1REG	set	281
  5208  011D                     _RC1STAbits	set	285
  5209  011E                     _TX1STAbits	set	286
  5210  011C                     _SP1BRGH	set	284
  5211  011B                     _SP1BRGL	set	283
  5212  011E                     _TX1STA	set	286
  5213  011D                     _RC1STA	set	285
  5214  011F                     _BAUD1CON	set	287
  5215  0191                     _SSP1CON2bits	set	401
  5216  018C                     _SSP1BUF	set	396
  5217  0190                     _SSP1CON1bits	set	400
  5218  018D                     _SSP1ADD	set	397
  5219  0192                     _SSP1CON3	set	402
  5220  0190                     _SSP1CON1	set	400
  5221  018F                     _SSP1STAT	set	399
  5222  059E                     _T0CON0bits	set	1438
  5223  059E                     _T0CON0	set	1438
  5224  059C                     _TMR0L	set	1436
  5225  059D                     _TMR0H	set	1437
  5226  059F                     _T0CON1	set	1439
  5227  070F                     _PIR3bits	set	1807
  5228  0716                     _PIE0bits	set	1814
  5229  070C                     _PIR0bits	set	1804
  5230  079D                     _PMD7	set	1949
  5231  079C                     _PMD6	set	1948
  5232  079B                     _PMD5	set	1947
  5233  079A                     _PMD4	set	1946
  5234  0799                     _PMD3	set	1945
  5235  0798                     _PMD2	set	1944
  5236  0797                     _PMD1	set	1943
  5237  0796                     _PMD0	set	1942
  5238  0892                     _OSCTUNE	set	2194
  5239  0893                     _OSCFRQ	set	2195
  5240  0891                     _OSCEN	set	2193
  5241  088F                     _OSCCON3	set	2191
  5242  088D                     _OSCCON1	set	2189
  5243  1EC6                     _SSP1DATPPS	set	7878
  5244  1EC5                     _SSP1CLKPPS	set	7877
  5245  1ECB                     _RX1DTPPS	set	7883
  5246  1F1C                     _RB4PPS	set	7964
  5247  1F1E                     _RB6PPS	set	7966
  5248  1F1F                     _RB7PPS	set	7967
  5249  1F52                     _INLVLC	set	8018
  5250  1F47                     _INLVLB	set	8007
  5251  1F3C                     _INLVLA	set	7996
  5252  1F51                     _SLRCONC	set	8017
  5253  1F46                     _SLRCONB	set	8006
  5254  1F3B                     _SLRCONA	set	7995
  5255  1F50                     _ODCONC	set	8016
  5256  1F45                     _ODCONB	set	8005
  5257  1F3A                     _ODCONA	set	7994
  5258  1F4F                     _WPUC	set	8015
  5259  1F39                     _WPUA	set	7993
  5260  1F44                     _WPUB	set	8004
  5261  1F38                     _ANSELA	set	7992
  5262  1F43                     _ANSELB	set	8003
  5263  1F4E                     _ANSELC	set	8014
  5264                           
  5265                           	psect	stringtext2
  5266  1000                     __pstringtext2:	
  5267  1000                     STR_6:	
  5268  1000  3424               	retlw	36	;'$'
  5269  1001  3450               	retlw	80	;'P'
  5270  1002  3455               	retlw	85	;'U'
  5271  1003  3442               	retlw	66	;'B'
  5272  1004  3458               	retlw	88	;'X'
  5273  1005  342C               	retlw	44	;','
  5274  1006  3434               	retlw	52	;'4'
  5275  1007  3430               	retlw	48	;'0'
  5276  1008  342C               	retlw	44	;','
  5277  1009  3452               	retlw	82	;'R'
  5278  100A  344D               	retlw	77	;'M'
  5279  100B  3443               	retlw	67	;'C'
  5280  100C  342C               	retlw	44	;','
  5281  100D  3430               	retlw	48	;'0'
  5282  100E  342C               	retlw	44	;','
  5283  100F  3430               	retlw	48	;'0'
  5284  1010  342C               	retlw	44	;','
  5285  1011  3430               	retlw	48	;'0'
  5286  1012  342C               	retlw	44	;','
  5287  1013  3430               	retlw	48	;'0'
  5288  1014  342A               	retlw	42	;'*'
  5289  1015  3434               	retlw	52	;'4'
  5290  1016  3437               	retlw	55	;'7'
  5291  1017  340D               	retlw	13
  5292  1018  340A               	retlw	10
  5293  1019  3400               	retlw	0
  5294                           
  5295                           	psect	stringtext3
  5296  101A                     __pstringtext3:	
  5297  101A                     STR_4:	
  5298  101A  3424               	retlw	36	;'$'
  5299  101B  3450               	retlw	80	;'P'
  5300  101C  3455               	retlw	85	;'U'
  5301  101D  3442               	retlw	66	;'B'
  5302  101E  3458               	retlw	88	;'X'
  5303  101F  342C               	retlw	44	;','
  5304  1020  3434               	retlw	52	;'4'
  5305  1021  3430               	retlw	48	;'0'
  5306  1022  342C               	retlw	44	;','
  5307  1023  3447               	retlw	71	;'G'
  5308  1024  3453               	retlw	83	;'S'
  5309  1025  3456               	retlw	86	;'V'
  5310  1026  342C               	retlw	44	;','
  5311  1027  3430               	retlw	48	;'0'
  5312  1028  342C               	retlw	44	;','
  5313  1029  3430               	retlw	48	;'0'
  5314  102A  342C               	retlw	44	;','
  5315  102B  3430               	retlw	48	;'0'
  5316  102C  342C               	retlw	44	;','
  5317  102D  3430               	retlw	48	;'0'
  5318  102E  342A               	retlw	42	;'*'
  5319  102F  3435               	retlw	53	;'5'
  5320  1030  3439               	retlw	57	;'9'
  5321  1031  340D               	retlw	13
  5322  1032  340A               	retlw	10
  5323  1033  3400               	retlw	0
  5324                           
  5325                           	psect	stringtext4
  5326  1034                     __pstringtext4:	
  5327  1034                     STR_2:	
  5328  1034  3424               	retlw	36	;'$'
  5329  1035  3450               	retlw	80	;'P'
  5330  1036  3455               	retlw	85	;'U'
  5331  1037  3442               	retlw	66	;'B'
  5332  1038  3458               	retlw	88	;'X'
  5333  1039  342C               	retlw	44	;','
  5334  103A  3434               	retlw	52	;'4'
  5335  103B  3430               	retlw	48	;'0'
  5336  103C  342C               	retlw	44	;','
  5337  103D  3447               	retlw	71	;'G'
  5338  103E  3447               	retlw	71	;'G'
  5339  103F  3441               	retlw	65	;'A'
  5340  1040  342C               	retlw	44	;','
  5341  1041  3430               	retlw	48	;'0'
  5342  1042  342C               	retlw	44	;','
  5343  1043  3430               	retlw	48	;'0'
  5344  1044  342C               	retlw	44	;','
  5345  1045  3430               	retlw	48	;'0'
  5346  1046  342C               	retlw	44	;','
  5347  1047  3430               	retlw	48	;'0'
  5348  1048  342A               	retlw	42	;'*'
  5349  1049  3435               	retlw	53	;'5'
  5350  104A  3441               	retlw	65	;'A'
  5351  104B  340D               	retlw	13
  5352  104C  340A               	retlw	10
  5353  104D  3400               	retlw	0
  5354                           
  5355                           	psect	stringtext5
  5356  104E                     __pstringtext5:	
  5357  104E                     STR_1:	
  5358  104E  3424               	retlw	36	;'$'
  5359  104F  3450               	retlw	80	;'P'
  5360  1050  3455               	retlw	85	;'U'
  5361  1051  3442               	retlw	66	;'B'
  5362  1052  3458               	retlw	88	;'X'
  5363  1053  342C               	retlw	44	;','
  5364  1054  3434               	retlw	52	;'4'
  5365  1055  3430               	retlw	48	;'0'
  5366  1056  342C               	retlw	44	;','
  5367  1057  3447               	retlw	71	;'G'
  5368  1058  344C               	retlw	76	;'L'
  5369  1059  344C               	retlw	76	;'L'
  5370  105A  342C               	retlw	44	;','
  5371  105B  3430               	retlw	48	;'0'
  5372  105C  342C               	retlw	44	;','
  5373  105D  3430               	retlw	48	;'0'
  5374  105E  342C               	retlw	44	;','
  5375  105F  3430               	retlw	48	;'0'
  5376  1060  342C               	retlw	44	;','
  5377  1061  3430               	retlw	48	;'0'
  5378  1062  342A               	retlw	42	;'*'
  5379  1063  3435               	retlw	53	;'5'
  5380  1064  3443               	retlw	67	;'C'
  5381  1065  340D               	retlw	13
  5382  1066  340A               	retlw	10
  5383  1067  3400               	retlw	0
  5384                           
  5385                           	psect	stringtext6
  5386  1068                     __pstringtext6:	
  5387  1068                     STR_5:	
  5388  1068  3424               	retlw	36	;'$'
  5389  1069  3450               	retlw	80	;'P'
  5390  106A  3455               	retlw	85	;'U'
  5391  106B  3442               	retlw	66	;'B'
  5392  106C  3458               	retlw	88	;'X'
  5393  106D  342C               	retlw	44	;','
  5394  106E  3434               	retlw	52	;'4'
  5395  106F  3430               	retlw	48	;'0'
  5396  1070  342C               	retlw	44	;','
  5397  1071  3447               	retlw	71	;'G'
  5398  1072  3453               	retlw	83	;'S'
  5399  1073  3441               	retlw	65	;'A'
  5400  1074  342C               	retlw	44	;','
  5401  1075  3430               	retlw	48	;'0'
  5402  1076  342C               	retlw	44	;','
  5403  1077  3430               	retlw	48	;'0'
  5404  1078  342C               	retlw	44	;','
  5405  1079  3430               	retlw	48	;'0'
  5406  107A  342C               	retlw	44	;','
  5407  107B  3430               	retlw	48	;'0'
  5408  107C  342A               	retlw	42	;'*'
  5409  107D  3434               	retlw	52	;'4'
  5410  107E  3445               	retlw	69	;'E'
  5411  107F  340D               	retlw	13
  5412  1080  340A               	retlw	10
  5413  1081  3400               	retlw	0
  5414                           
  5415                           	psect	stringtext7
  5416  1082                     __pstringtext7:	
  5417  1082                     STR_3:	
  5418  1082  3424               	retlw	36	;'$'
  5419  1083  3450               	retlw	80	;'P'
  5420  1084  3455               	retlw	85	;'U'
  5421  1085  3442               	retlw	66	;'B'
  5422  1086  3458               	retlw	88	;'X'
  5423  1087  342C               	retlw	44	;','
  5424  1088  3434               	retlw	52	;'4'
  5425  1089  3430               	retlw	48	;'0'
  5426  108A  342C               	retlw	44	;','
  5427  108B  3456               	retlw	86	;'V'
  5428  108C  3454               	retlw	84	;'T'
  5429  108D  3447               	retlw	71	;'G'
  5430  108E  342C               	retlw	44	;','
  5431  108F  3430               	retlw	48	;'0'
  5432  1090  342C               	retlw	44	;','
  5433  1091  3430               	retlw	48	;'0'
  5434  1092  342C               	retlw	44	;','
  5435  1093  3430               	retlw	48	;'0'
  5436  1094  342C               	retlw	44	;','
  5437  1095  3430               	retlw	48	;'0'
  5438  1096  342A               	retlw	42	;'*'
  5439  1097  3435               	retlw	53	;'5'
  5440  1098  3445               	retlw	69	;'E'
  5441  1099  340D               	retlw	13
  5442  109A  340A               	retlw	10
  5443  109B  3400               	retlw	0
  5444                           
  5445                           	psect	stringtext8
  5446  109C                     __pstringtext8:	
  5447  109C                     STR_7:	
  5448  109C  3424               	retlw	36	;'$'
  5449  109D  3450               	retlw	80	;'P'
  5450  109E  3455               	retlw	85	;'U'
  5451  109F  3442               	retlw	66	;'B'
  5452  10A0  3458               	retlw	88	;'X'
  5453  10A1  342C               	retlw	44	;','
  5454  10A2  3430               	retlw	48	;'0'
  5455  10A3  3430               	retlw	48	;'0'
  5456  10A4  342A               	retlw	42	;'*'
  5457  10A5  3433               	retlw	51	;'3'
  5458  10A6  3433               	retlw	51	;'3'
  5459  10A7  340D               	retlw	13
  5460  10A8  340A               	retlw	10
  5461  10A9  3400               	retlw	0
  5462                           
  5463                           	psect	stringtext9
  5464  10AA                     __pstringtext9:	
  5465  10AA                     STR_10:	
  5466  10AA  3457               	retlw	87	;'W'
  5467  10AB  3469               	retlw	105	;'i'
  5468  10AC  3473               	retlw	115	;'s'
  5469  10AD  3470               	retlw	112	;'p'
  5470  10AE  342D               	retlw	45	;'-'
  5471  10AF  3431               	retlw	49	;'1'
  5472  10B0  3400               	retlw	0
  5473                           
  5474                           	psect	stringtext10
  5475  10B1                     __pstringtext10:	
  5476  10B1                     STR_11:	
  5477  10B1  3424               	retlw	36	;'$'
  5478  10B2  3424               	retlw	36	;'$'
  5479  10B3  3400               	retlw	0
  5480                           
  5481                           	psect	stringtext11
  5482  10B6                     __pstringtext11:	
  5483  10B6                     STR_8:	
  5484  10B6  3453               	retlw	83	;'S'
  5485  10B7  3400               	retlw	0
  5486                           
  5487                           	psect	stringtext12
  5488  10B8                     __pstringtext12:	
  5489  10B8                     STR_9:	
  5490  10B8  3457               	retlw	87	;'W'
  5491  10B9  3400               	retlw	0
  5492                           
  5493                           	psect	stringtext13
  5494  0000                     __pstringtext13:	
  5495                           
  5496                           ; #config settings
  5497  0000                     
  5498                           	psect	cinit
  5499  0010                     start_initialization:	
  5500  0010                     __initialization:		;BIGRAM
  5501                           
  5502                           ; Initialize objects allocated to BANK3
  5503  0010  3012               	movlw	low __pidataBANK3
  5504  0011  0084               	movwf	4
  5505  0012  308E               	movlw	(high __pidataBANK3)| (0+128)
  5506  0013  0085               	movwf	5
  5507  0014  30A0               	movlw	low __pdataBANK3
  5508  0015  0086               	movwf	6
  5509  0016  3001               	movlw	high __pdataBANK3
  5510  0017  0087               	movwf	7
  5511  0018  3000               	movlw	0
  5512  0019  00FF               	movwf	btemp+1
  5513  001A  302C               	movlw	44
  5514  001B  318B  239C  3180   	fcall	init_ram
  5515                           
  5516                           ; Clear objects allocated to BIGRAM
  5517  001E  30D8               	movlw	low (0+9944)
  5518  001F  0084               	movwf	4
  5519  0020  3026               	movlw	high (0+9944)
  5520  0021  0085               	movwf	5
  5521  0022  3018               	movlw	24
  5522  0023  00FE               	movwf	btemp
  5523  0024  3001               	movlw	1
  5524  0025  00FF               	movwf	btemp+1
  5525  0026  318B  2390  3180   	fcall	clear_ram0
  5526                           
  5527                           ; Clear objects allocated to BANK1
  5528  0029  30A0               	movlw	low __pbssBANK1
  5529  002A  0084               	movwf	4
  5530  002B  3000               	movlw	high __pbssBANK1
  5531  002C  0085               	movwf	5
  5532  002D  304A               	movlw	74
  5533  002E  00FE               	movwf	btemp
  5534  002F  3000               	movlw	0
  5535  0030  00FF               	movwf	btemp+1
  5536  0031  318B  2390  3180   	fcall	clear_ram0
  5537                           
  5538                           ; Clear objects allocated to BANK2
  5539  0034  3020               	movlw	low __pbssBANK2
  5540  0035  0084               	movwf	4
  5541  0036  3001               	movlw	high __pbssBANK2
  5542  0037  0085               	movwf	5
  5543  0038  304D               	movlw	77
  5544  0039  00FE               	movwf	btemp
  5545  003A  3000               	movlw	0
  5546  003B  00FF               	movwf	btemp+1
  5547  003C  318B  2390         	fcall	clear_ram0
  5548  003E                     end_of_initialization:	
  5549                           ;End of C runtime variable initialization code
  5550                           
  5551  003E                     __end_of__initialization:	
  5552  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5553  003F  0140               	movlb	0
  5554  0040  3182  2A72         	ljmp	_main	;jump to C main() function
  5555                           
  5556                           	psect	bssBANK1
  5557  00A0                     __pbssBANK1:	
  5558  00A0                     main@F11368:	
  5559  00A0                     	ds	16
  5560  00B0                     bme280_get_sensor_data@F273:	
  5561  00B0                     	ds	12
  5562  00BC                     bme280_get_sensor_data@F271:	
  5563  00BC                     	ds	8
  5564  00C4                     _ticks:	
  5565  00C4                     	ds	4
  5566  00C8                     ___g_timeout_start:	
  5567  00C8                     	ds	4
  5568  00CC                     _id:	
  5569  00CC                     	ds	2
  5570  00CE                     _gps_configured:	
  5571  00CE                     	ds	1
  5572  00CF                     _eusart1RxLastError:	
  5573  00CF                     	ds	1
  5574  00D0                     _csvField:	
  5575  00D0                     	ds	20
  5576  00E4                     _checksum:	
  5577  00E4                     	ds	6
  5578                           
  5579                           	psect	bssBANK2
  5580  0120                     __pbssBANK2:	
  5581  0120                     get_calib_data@F376:	
  5582  0120                     	ds	26
  5583  013A                     _EnvSensor:	
  5584  013A                     	ds	51
  5585                           
  5586                           	psect	dataBANK3
  5587  01A0                     __pdataBANK3:	
  5588  01A0                     _setNavFlightMode:	
  5589  01A0                     	ds	44
  5590                           
  5591                           	psect	inittext
  5592  0B9C                     init_ram:	
  5593  0B9C  00FE               	movwf	126
  5594  0B9D                     initloop:	
  5595  0B9D  0012               	moviw fsr0++
  5596  0B9E  001E               	movwi fsr1++
  5597  0B9F  3001               	movlw	1
  5598  0BA0  02FE               	subwf	126,f
  5599  0BA1  3000               	movlw	0
  5600  0BA2  3BFF               	subwfb	127,f
  5601  0BA3  087F               	movf	127,w
  5602  0BA4  047E               	iorwf	126,w
  5603  0BA5  1903               	btfsc	3,2
  5604  0BA6  3400               	retlw	0
  5605  0BA7  2B9D               	goto	initloop
  5606                           
  5607                           	psect	clrtext
  5608  0B90                     clear_ram0:	
  5609                           ;	Called with FSR0 containing the base address, and
  5610                           ;	btemp/btemp+1 has the size to clear
  5611                           
  5612  0B90  0064               	clrwdt	;clear the watchdog before getting into this loop
  5613  0B91                     clrloop0:	
  5614  0B91  0180               	clrf	0	;clear RAM location pointed to by FSR
  5615  0B92  3101               	addfsr 0,1
  5616  0B93  3001               	movlw	1
  5617  0B94  02FE               	subwf	126,f
  5618  0B95  3000               	movlw	0
  5619  0B96  3BFF               	subwfb	127,f
  5620  0B97  087F               	movf	127,w
  5621  0B98  047E               	iorwf	126,w
  5622  0B99  1903               	btfsc	3,2
  5623  0B9A  3400               	retlw	0	;all done for this memory range, return
  5624  0B9B  2B91               	goto	clrloop0	;have we reached the end yet?
  5625                           
  5626                           	psect	cstackCOMMON
  5627  0070                     __pcstackCOMMON:	
  5628  0070                     ?_TMR0_SetInterruptHandler:	
  5629  0070                     ?_TMR0_DefaultInterruptHandler:	
  5630                           ; 1 bytes @ 0x0
  5631                           
  5632  0070                     ??_TMR0_DefaultInterruptHandler:	
  5633                           ; 1 bytes @ 0x0
  5634                           
  5635  0070                     ?_EUSART1_SetFramingErrorHandler:	
  5636                           ; 1 bytes @ 0x0
  5637                           
  5638  0070                     ?_EUSART1_SetOverrunErrorHandler:	
  5639                           ; 1 bytes @ 0x0
  5640                           
  5641  0070                     ?_EUSART1_SetErrorHandler:	
  5642                           ; 1 bytes @ 0x0
  5643                           
  5644  0070                     ?_PMD_Initialize:	
  5645                           ; 1 bytes @ 0x0
  5646                           
  5647  0070                     ??_PMD_Initialize:	
  5648                           ; 1 bytes @ 0x0
  5649                           
  5650  0070                     ?_PIN_MANAGER_Initialize:	
  5651                           ; 1 bytes @ 0x0
  5652                           
  5653  0070                     ??_PIN_MANAGER_Initialize:	
  5654                           ; 1 bytes @ 0x0
  5655                           
  5656  0070                     ?_OSCILLATOR_Initialize:	
  5657                           ; 1 bytes @ 0x0
  5658                           
  5659  0070                     ??_OSCILLATOR_Initialize:	
  5660                           ; 1 bytes @ 0x0
  5661                           
  5662  0070                     ?_Sleep:	
  5663                           ; 1 bytes @ 0x0
  5664                           
  5665  0070                     ?_InitTiming:	
  5666                           ; 1 bytes @ 0x0
  5667                           
  5668  0070                     ?_TMR0_Initialize:	
  5669                           ; 1 bytes @ 0x0
  5670                           
  5671  0070                     ?_TMR0_ISR:	
  5672                           ; 1 bytes @ 0x0
  5673                           
  5674  0070                     ??_TMR0_ISR:	
  5675                           ; 1 bytes @ 0x0
  5676                           
  5677  0070                     ?_EUSART1_Initialize:	
  5678                           ; 1 bytes @ 0x0
  5679                           
  5680  0070                     ?_EUSART1_is_rx_ready:	
  5681                           ; 1 bytes @ 0x0
  5682                           
  5683  0070                     ??_EUSART1_is_rx_ready:	
  5684                           ; 1 bytes @ 0x0
  5685                           
  5686  0070                     ?_EUSART1_Read:	
  5687                           ; 1 bytes @ 0x0
  5688                           
  5689  0070                     ??_EUSART1_Read:	
  5690                           ; 1 bytes @ 0x0
  5691                           
  5692  0070                     ?_EUSART1_Write:	
  5693                           ; 1 bytes @ 0x0
  5694                           
  5695  0070                     ??_EUSART1_Write:	
  5696                           ; 1 bytes @ 0x0
  5697                           
  5698  0070                     ?_INTERRUPT_InterruptManager:	
  5699                           ; 1 bytes @ 0x0
  5700                           
  5701  0070                     ??_INTERRUPT_InterruptManager:	
  5702                           ; 1 bytes @ 0x0
  5703                           
  5704  0070                     ?_SYSTEM_Initialize:	
  5705                           ; 1 bytes @ 0x0
  5706                           
  5707  0070                     ?_ClearString:	
  5708                           ; 1 bytes @ 0x0
  5709                           
  5710  0070                     ?_ClearStringn:	
  5711                           ; 1 bytes @ 0x0
  5712                           
  5713  0070                     ?_ReverseString:	
  5714                           ; 1 bytes @ 0x0
  5715                           
  5716  0070                     ?_ClearTxData:	
  5717                           ; 1 bytes @ 0x0
  5718                           
  5719  0070                     ??_ClearTxData:	
  5720                           ; 1 bytes @ 0x0
  5721                           
  5722  0070                     ?_GPS_SendUBX:	
  5723                           ; 1 bytes @ 0x0
  5724                           
  5725  0070                     ?_GPS_HasAcknowledged:	
  5726                           ; 1 bytes @ 0x0
  5727                           
  5728  0070                     ??_GPS_HasAcknowledged:	
  5729                           ; 1 bytes @ 0x0
  5730                           
  5731  0070                     ?_SetupGPS:	
  5732                           ; 1 bytes @ 0x0
  5733                           
  5734  0070                     ?_ClearNMEA:	
  5735                           ; 1 bytes @ 0x0
  5736                           
  5737  0070                     ??_ClearNMEA:	
  5738                           ; 1 bytes @ 0x0
  5739                           
  5740  0070                     ?_PollGPS:	
  5741                           ; 1 bytes @ 0x0
  5742                           
  5743  0070                     ?_main:	
  5744                           ; 1 bytes @ 0x0
  5745                           
  5746  0070                     ?_TransmitBit:	
  5747                           ; 1 bytes @ 0x0
  5748                           
  5749  0070                     ?_TransmitChar:	
  5750                           ; 1 bytes @ 0x0
  5751                           
  5752  0070                     ?_TimerISR:	
  5753                           ; 1 bytes @ 0x0
  5754                           
  5755  0070                     ??_TimerISR:	
  5756                           ; 1 bytes @ 0x0
  5757                           
  5758  0070                     ?_strlen:	
  5759                           ; 1 bytes @ 0x0
  5760                           
  5761  0070                     ?_GetLengthUBX:	
  5762                           ; 2 bytes @ 0x0
  5763                           
  5764  0070                     ?___awdiv:	
  5765                           ; 2 bytes @ 0x0
  5766                           
  5767  0070                     ?___awmod:	
  5768                           ; 2 bytes @ 0x0
  5769                           
  5770  0070                     ?___lldiv:	
  5771                           ; 2 bytes @ 0x0
  5772                           
  5773  0070                     ?___llmod:	
  5774                           ; 4 bytes @ 0x0
  5775                           
  5776  0070                     EUSART1_Write@txData:	
  5777                           ; 4 bytes @ 0x0
  5778                           
  5779  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  5780                           ; 1 bytes @ 0x0
  5781                           
  5782  0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  5783                           ; 2 bytes @ 0x0
  5784                           
  5785  0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  5786                           ; 2 bytes @ 0x0
  5787                           
  5788  0070                     EUSART1_SetErrorHandler@interruptHandler:	
  5789                           ; 2 bytes @ 0x0
  5790                           
  5791  0070                     ClearStringn@length:	
  5792                           ; 2 bytes @ 0x0
  5793                           
  5794  0070                     ___awdiv@divisor:	
  5795                           ; 2 bytes @ 0x0
  5796                           
  5797  0070                     ___awmod@divisor:	
  5798                           ; 2 bytes @ 0x0
  5799                           
  5800  0070                     strlen@s:	
  5801                           ; 2 bytes @ 0x0
  5802                           
  5803  0070                     Sleep@ms:	
  5804                           ; 2 bytes @ 0x0
  5805                           
  5806  0070                     ___lldiv@divisor:	
  5807                           ; 4 bytes @ 0x0
  5808                           
  5809  0070                     ___llmod@divisor:	
  5810                           ; 4 bytes @ 0x0
  5811                           
  5812                           
  5813                           ; 4 bytes @ 0x0
  5814  0070                     	ds	2
  5815  0072                     ??_TMR0_SetInterruptHandler:	
  5816  0072                     ??_EUSART1_SetFramingErrorHandler:	
  5817                           ; 1 bytes @ 0x2
  5818                           
  5819  0072                     ??_EUSART1_SetOverrunErrorHandler:	
  5820                           ; 1 bytes @ 0x2
  5821                           
  5822  0072                     ??_EUSART1_SetErrorHandler:	
  5823                           ; 1 bytes @ 0x2
  5824                           
  5825  0072                     ??_strlen:	
  5826                           ; 1 bytes @ 0x2
  5827                           
  5828  0072                     ??_InitTiming:	
  5829                           ; 1 bytes @ 0x2
  5830                           
  5831  0072                     ??_TMR0_Initialize:	
  5832                           ; 1 bytes @ 0x2
  5833                           
  5834  0072                     ??_EUSART1_Initialize:	
  5835                           ; 1 bytes @ 0x2
  5836                           
  5837  0072                     ??_SYSTEM_Initialize:	
  5838                           ; 1 bytes @ 0x2
  5839                           
  5840  0072                     ??_ClearStringn:	
  5841                           ; 1 bytes @ 0x2
  5842                           
  5843  0072                     ClearTxData@i:	
  5844                           ; 1 bytes @ 0x2
  5845                           
  5846  0072                     ClearNMEA@i:	
  5847                           ; 2 bytes @ 0x2
  5848                           
  5849  0072                     ___awdiv@dividend:	
  5850                           ; 2 bytes @ 0x2
  5851                           
  5852  0072                     ___awmod@dividend:	
  5853                           ; 2 bytes @ 0x2
  5854                           
  5855                           
  5856                           ; 2 bytes @ 0x2
  5857  0072                     	ds	1
  5858  0073                     ??_GetLengthUBX:	
  5859  0073                     ClearStringn@str:	
  5860                           ; 1 bytes @ 0x3
  5861                           
  5862  0073                     GetLengthUBX@data:	
  5863                           ; 1 bytes @ 0x3
  5864                           
  5865  0073                     strlen@a:	
  5866                           ; 1 bytes @ 0x3
  5867                           
  5868                           
  5869                           ; 2 bytes @ 0x3
  5870  0073                     	ds	1
  5871  0074                     ??_Sleep:	
  5872  0074                     ??_GPS_SendUBX:	
  5873                           ; 1 bytes @ 0x4
  5874                           
  5875  0074                     ??___awdiv:	
  5876                           ; 1 bytes @ 0x4
  5877                           
  5878  0074                     ??___awmod:	
  5879                           ; 1 bytes @ 0x4
  5880                           
  5881  0074                     ClearStringn@i:	
  5882                           ; 1 bytes @ 0x4
  5883                           
  5884  0074                     ___lldiv@dividend:	
  5885                           ; 2 bytes @ 0x4
  5886                           
  5887  0074                     ___llmod@dividend:	
  5888                           ; 4 bytes @ 0x4
  5889                           
  5890                           
  5891                           ; 4 bytes @ 0x4
  5892  0074                     	ds	1
  5893  0075                     ??_ClearString:	
  5894  0075                     ?_WriteGPS:	
  5895                           ; 1 bytes @ 0x5
  5896                           
  5897  0075                     ?_Insert:	
  5898                           ; 1 bytes @ 0x5
  5899                           
  5900  0075                     ?_crc16_update:	
  5901                           ; 2 bytes @ 0x5
  5902                           
  5903  0075                     ___awdiv@counter:	
  5904                           ; 2 bytes @ 0x5
  5905                           
  5906  0075                     ___awmod@counter:	
  5907                           ; 1 bytes @ 0x5
  5908                           
  5909  0075                     Insert@dest:	
  5910                           ; 1 bytes @ 0x5
  5911                           
  5912  0075                     WriteGPS@message:	
  5913                           ; 2 bytes @ 0x5
  5914                           
  5915  0075                     GPS_SendUBX@length:	
  5916                           ; 2 bytes @ 0x5
  5917                           
  5918  0075                     crc16_update@pData:	
  5919                           ; 2 bytes @ 0x5
  5920                           
  5921                           
  5922                           ; 2 bytes @ 0x5
  5923  0075                     	ds	1
  5924  0076                     ?_GetAtRowCSV:	
  5925  0076                     ___awdiv@sign:	
  5926                           ; 1 bytes @ 0x6
  5927                           
  5928  0076                     ___awmod@sign:	
  5929                           ; 1 bytes @ 0x6
  5930                           
  5931  0076                     ClearString@counti:	
  5932                           ; 1 bytes @ 0x6
  5933                           
  5934  0076                     GetAtRowCSV@src:	
  5935                           ; 2 bytes @ 0x6
  5936                           
  5937                           
  5938                           ; 2 bytes @ 0x6
  5939  0076                     	ds	1
  5940  0077                     ??_WriteGPS:	
  5941  0077                     Insert@src:	
  5942                           ; 1 bytes @ 0x7
  5943                           
  5944  0077                     GPS_SendUBX@i:	
  5945                           ; 1 bytes @ 0x7
  5946                           
  5947  0077                     crc16_update@length:	
  5948                           ; 2 bytes @ 0x7
  5949                           
  5950  0077                     ___awdiv@quotient:	
  5951                           ; 2 bytes @ 0x7
  5952                           
  5953                           
  5954                           ; 2 bytes @ 0x7
  5955  0077                     	ds	1
  5956  0078                     ??___lldiv:	
  5957  0078                     ??___llmod:	
  5958                           ; 1 bytes @ 0x8
  5959                           
  5960  0078                     ClearString@i:	
  5961                           ; 1 bytes @ 0x8
  5962                           
  5963  0078                     GetAtRowCSV@column:	
  5964                           ; 2 bytes @ 0x8
  5965                           
  5966  0078                     Insert@index:	
  5967                           ; 2 bytes @ 0x8
  5968                           
  5969  0078                     WriteGPS@counti:	
  5970                           ; 2 bytes @ 0x8
  5971                           
  5972  0078                     Sleep@start:	
  5973                           ; 2 bytes @ 0x8
  5974                           
  5975                           
  5976                           ; 4 bytes @ 0x8
  5977  0078                     	ds	1
  5978  0079                     ??_ReverseString:	
  5979  0079                     GPS_SendUBX@data:	
  5980                           ; 1 bytes @ 0x9
  5981                           
  5982  0079                     ___llmod@counter:	
  5983                           ; 1 bytes @ 0x9
  5984                           
  5985  0079                     crc16_update@wCrc:	
  5986                           ; 1 bytes @ 0x9
  5987                           
  5988  0079                     ___lldiv@quotient:	
  5989                           ; 2 bytes @ 0x9
  5990                           
  5991                           
  5992                           ; 4 bytes @ 0x9
  5993  0079                     	ds	1
  5994  007A                     ??_GetAtRowCSV:	
  5995  007A                     ClearString@str:	
  5996                           ; 1 bytes @ 0xA
  5997                           
  5998  007A                     Insert@destLimit:	
  5999                           ; 1 bytes @ 0xA
  6000                           
  6001  007A                     WriteGPS@i:	
  6002                           ; 2 bytes @ 0xA
  6003                           
  6004                           
  6005                           ; 2 bytes @ 0xA
  6006  007A                     	ds	1
  6007  007B                     ?_IntToString:	
  6008  007B                     ??_crc16_update:	
  6009                           ; 1 bytes @ 0xB
  6010                           
  6011  007B                     ?_strcmp:	
  6012                           ; 1 bytes @ 0xB
  6013                           
  6014  007B                     IntToString@n:	
  6015                           ; 2 bytes @ 0xB
  6016                           
  6017  007B                     strcmp@r:	
  6018                           ; 2 bytes @ 0xB
  6019                           
  6020                           
  6021                           ; 2 bytes @ 0xB
  6022  007B                     	ds	1
  6023  007C                     ??_DebugAlert:	
  6024  007C                     ??_InsertString:	
  6025                           ; 1 bytes @ 0xC
  6026                           
  6027  007C                     ??_SetupGPS:	
  6028                           ; 1 bytes @ 0xC
  6029                           
  6030  007C                     ??_TransmitBit:	
  6031                           ; 1 bytes @ 0xC
  6032                           
  6033  007C                     ?_InsertTxDataSep:	
  6034                           ; 1 bytes @ 0xC
  6035                           
  6036  007C                     TransmitBit@b:	
  6037                           ; 2 bytes @ 0xC
  6038                           
  6039  007C                     InsertTxDataSep@index:	
  6040                           ; 1 bytes @ 0xC
  6041                           
  6042                           
  6043                           ; 2 bytes @ 0xC
  6044  007C                     	ds	1
  6045  007D                     ??_strcmp:	
  6046  007D                     ??_TransmitChar:	
  6047                           ; 1 bytes @ 0xD
  6048                           
  6049  007D                     IntToString@dest:	
  6050                           ; 1 bytes @ 0xD
  6051                           
  6052  007D                     ___lldiv@counter:	
  6053                           ; 1 bytes @ 0xD
  6054                           
  6055                           
  6056                           ; 1 bytes @ 0xD
  6057  007D                     	ds	1
  6058  007E                     ??_crc16:	
  6059  007E                     ??_InsertTxData:	
  6060                           ; 1 bytes @ 0xE
  6061                           
  6062                           
  6063                           	psect	cstackBANK0
  6064  0020                     __pcstackBANK0:	
  6065                           ; 1 bytes @ 0xE
  6066                           
  6067  0020                     ?_DebugAlert:	
  6068  0020                     ??_Insert:	
  6069                           ; 1 bytes @ 0x0
  6070                           
  6071  0020                     crc16_update@i:	
  6072                           ; 1 bytes @ 0x0
  6073                           
  6074  0020                     TransmitChar@byte:	
  6075                           ; 1 bytes @ 0x0
  6076                           
  6077  0020                     DebugAlert@delay_high:	
  6078                           ; 1 bytes @ 0x0
  6079                           
  6080  0020                     GetAtRowCSV@counti:	
  6081                           ; 2 bytes @ 0x0
  6082                           
  6083  0020                     ReverseString@halfway:	
  6084                           ; 2 bytes @ 0x0
  6085                           
  6086  0020                     GPS_HasAcknowledged@startTime:	
  6087                           ; 2 bytes @ 0x0
  6088                           
  6089                           
  6090                           ; 4 bytes @ 0x0
  6091  0020                     	ds	1
  6092  0021                     ?_crc16:	
  6093  0021                     crc16@data:	
  6094                           ; 2 bytes @ 0x1
  6095                           
  6096  0021                     TransmitChar@i:	
  6097                           ; 2 bytes @ 0x1
  6098                           
  6099                           
  6100                           ; 2 bytes @ 0x1
  6101  0021                     	ds	1
  6102  0022                     ReverseString@temp:	
  6103  0022                     DebugAlert@delay_low:	
  6104                           ; 1 bytes @ 0x2
  6105                           
  6106  0022                     GetAtRowCSV@col:	
  6107                           ; 2 bytes @ 0x2
  6108                           
  6109                           
  6110                           ; 2 bytes @ 0x2
  6111  0022                     	ds	1
  6112  0023                     ?_TransmitString:	
  6113  0023                     ReverseString@opposite:	
  6114                           ; 1 bytes @ 0x3
  6115                           
  6116  0023                     crc16@crc:	
  6117                           ; 1 bytes @ 0x3
  6118                           
  6119  0023                     TransmitString@message:	
  6120                           ; 2 bytes @ 0x3
  6121                           
  6122                           
  6123                           ; 2 bytes @ 0x3
  6124  0023                     	ds	1
  6125  0024                     DebugAlert@num_flashes:	
  6126  0024                     GPS_HasAcknowledged@ackByte:	
  6127                           ; 1 bytes @ 0x4
  6128                           
  6129  0024                     GetAtRowCSV@index:	
  6130                           ; 1 bytes @ 0x4
  6131                           
  6132  0024                     ReverseString@counti:	
  6133                           ; 2 bytes @ 0x4
  6134                           
  6135                           
  6136                           ; 2 bytes @ 0x4
  6137  0024                     	ds	1
  6138  0025                     ??_TransmitString:	
  6139  0025                     DebugAlert@i:	
  6140                           ; 1 bytes @ 0x5
  6141                           
  6142  0025                     Insert@length:	
  6143                           ; 2 bytes @ 0x5
  6144                           
  6145  0025                     GPS_HasAcknowledged@ackPacket:	
  6146                           ; 2 bytes @ 0x5
  6147                           
  6148                           
  6149                           ; 10 bytes @ 0x5
  6150  0025                     	ds	1
  6151  0026                     GetAtRowCSV@i:	
  6152  0026                     ReverseString@i:	
  6153                           ; 2 bytes @ 0x6
  6154                           
  6155  0026                     TransmitString@counti:	
  6156                           ; 2 bytes @ 0x6
  6157                           
  6158                           
  6159                           ; 2 bytes @ 0x6
  6160  0026                     	ds	1
  6161  0027                     Insert@i:	
  6162                           
  6163                           ; 2 bytes @ 0x7
  6164  0027                     	ds	1
  6165  0028                     ReverseString@str:	
  6166  0028                     strcmp@l:	
  6167                           ; 1 bytes @ 0x8
  6168                           
  6169  0028                     TransmitString@i:	
  6170                           ; 1 bytes @ 0x8
  6171                           
  6172                           
  6173                           ; 2 bytes @ 0x8
  6174  0028                     	ds	1
  6175  0029                     ?_UIntToHexString:	
  6176  0029                     ??_IntToString:	
  6177                           ; 1 bytes @ 0x9
  6178                           
  6179  0029                     ?_UIntToString:	
  6180                           ; 1 bytes @ 0x9
  6181                           
  6182  0029                     ??_InsertTxDataSep:	
  6183                           ; 1 bytes @ 0x9
  6184                           
  6185  0029                     ?_InsertString:	
  6186                           ; 1 bytes @ 0x9
  6187                           
  6188  0029                     InsertString@dest:	
  6189                           ; 2 bytes @ 0x9
  6190                           
  6191  0029                     UIntToHexString@n:	
  6192                           ; 2 bytes @ 0x9
  6193                           
  6194  0029                     UIntToString@n:	
  6195                           ; 4 bytes @ 0x9
  6196                           
  6197                           
  6198                           ; 4 bytes @ 0x9
  6199  0029                     	ds	2
  6200  002B                     IntToString@sign:	
  6201  002B                     InsertString@src:	
  6202                           ; 1 bytes @ 0xB
  6203                           
  6204                           
  6205                           ; 2 bytes @ 0xB
  6206  002B                     	ds	1
  6207  002C                     IntToString@i:	
  6208                           
  6209                           ; 2 bytes @ 0xC
  6210  002C                     	ds	1
  6211  002D                     UIntToHexString@dest:	
  6212  002D                     UIntToString@dest:	
  6213                           ; 1 bytes @ 0xD
  6214                           
  6215  002D                     InsertString@index:	
  6216                           ; 1 bytes @ 0xD
  6217                           
  6218                           
  6219                           ; 2 bytes @ 0xD
  6220  002D                     	ds	1
  6221  002E                     ??_UIntToHexString:	
  6222  002E                     ??_UIntToString:	
  6223                           ; 1 bytes @ 0xE
  6224                           
  6225                           
  6226                           ; 1 bytes @ 0xE
  6227  002E                     	ds	1
  6228  002F                     GPS_HasAcknowledged@data:	
  6229  002F                     InsertString@destLimit:	
  6230                           ; 1 bytes @ 0xF
  6231                           
  6232                           
  6233                           ; 2 bytes @ 0xF
  6234  002F                     	ds	1
  6235  0030                     GPS_HasAcknowledged@ackByteID:	
  6236  0030                     UIntToString@i:	
  6237                           ; 1 bytes @ 0x10
  6238                           
  6239  0030                     _UIntToHexString$1748:	
  6240                           ; 2 bytes @ 0x10
  6241                           
  6242                           
  6243                           ; 4 bytes @ 0x10
  6244  0030                     	ds	1
  6245  0031                     GPS_HasAcknowledged@i:	
  6246  0031                     InsertString@counti:	
  6247                           ; 1 bytes @ 0x11
  6248                           
  6249                           
  6250                           ; 2 bytes @ 0x11
  6251  0031                     	ds	2
  6252  0033                     InsertString@i:	
  6253                           
  6254                           ; 2 bytes @ 0x13
  6255  0033                     	ds	1
  6256  0034                     UIntToHexString@remainder:	
  6257                           
  6258                           ; 4 bytes @ 0x14
  6259  0034                     	ds	1
  6260  0035                     ?_InsertTxData:	
  6261  0035                     InsertTxData@index:	
  6262                           ; 2 bytes @ 0x15
  6263                           
  6264                           
  6265                           ; 2 bytes @ 0x15
  6266  0035                     	ds	2
  6267  0037                     InsertTxData@field:	
  6268                           
  6269                           ; 2 bytes @ 0x17
  6270  0037                     	ds	1
  6271  0038                     UIntToHexString@i:	
  6272                           
  6273                           ; 4 bytes @ 0x18
  6274  0038                     	ds	1
  6275  0039                     ??_PollGPS:	
  6276                           
  6277                           ; 1 bytes @ 0x19
  6278  0039                     	ds	4
  6279  003D                     PollGPS@startTime:	
  6280                           
  6281                           ; 4 bytes @ 0x1D
  6282  003D                     	ds	4
  6283  0041                     PollGPS@counti:	
  6284                           
  6285                           ; 2 bytes @ 0x21
  6286  0041                     	ds	2
  6287  0043                     PollGPS@success:	
  6288                           
  6289                           ; 1 bytes @ 0x23
  6290  0043                     	ds	1
  6291  0044                     _PollGPS$2657:	
  6292                           
  6293                           ; 1 bytes @ 0x24
  6294  0044                     	ds	1
  6295  0045                     PollGPS@eusart_complete:	
  6296                           
  6297                           ; 1 bytes @ 0x25
  6298  0045                     	ds	1
  6299  0046                     PollGPS@byte:	
  6300                           
  6301                           ; 1 bytes @ 0x26
  6302  0046                     	ds	1
  6303  0047                     PollGPS@i:	
  6304                           
  6305                           ; 2 bytes @ 0x27
  6306  0047                     	ds	2
  6307  0049                     PollGPS@index:	
  6308                           
  6309                           ; 2 bytes @ 0x29
  6310  0049                     	ds	2
  6311  004B                     ??_main:	
  6312                           
  6313                           ; 1 bytes @ 0x2B
  6314  004B                     	ds	5
  6315  0050                     main@convertedNumber:	
  6316                           
  6317                           ; 16 bytes @ 0x30
  6318  0050                     	ds	16
  6319  0060                     main@end:	
  6320                           
  6321                           ; 2 bytes @ 0x40
  6322  0060                     	ds	2
  6323  0062                     main@sensor_data:	
  6324                           
  6325                           ; 12 bytes @ 0x42
  6326  0062                     	ds	12
  6327  006E                     main@index:	
  6328                           
  6329                           ; 2 bytes @ 0x4E
  6330  006E                     	ds	2
  6331                           
  6332                           	psect	maintext
  6333  0272                     __pmaintext:	
  6334 ;;
  6335 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  6336 ;;
  6337 ;; *************** function _main *****************
  6338 ;; Defined at:
  6339 ;;		line 602 in file "main.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;		None
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;  sensor_data    12   66[BANK0 ] struct bme280_data
  6344 ;;  end             2   64[BANK0 ] int 
  6345 ;;  convertedNum   16   48[BANK0 ] unsigned char [16]
  6346 ;;  index           2   78[BANK0 ] int 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : B3F/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6357 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6358 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6359 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6360 ;;Total ram usage:       37 bytes
  6361 ;; Hardware stack levels required when called:    8
  6362 ;; This function calls:
  6363 ;;		_ClearString
  6364 ;;		_ClearTxData
  6365 ;;		_DebugAlert
  6366 ;;		_InitTiming
  6367 ;;		_Insert
  6368 ;;		_InsertString
  6369 ;;		_IntToString
  6370 ;;		_PollGPS
  6371 ;;		_SYSTEM_Initialize
  6372 ;;		_SetupGPS
  6373 ;;		_Sleep
  6374 ;;		_TransmitString
  6375 ;;		_UIntToHexString
  6376 ;;		_UIntToString
  6377 ;;		_crc16
  6378 ;;		_strlen
  6379 ;; This function is called by:
  6380 ;;		Startup code after reset
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           
  6385                           ;psect for function _main
  6386  0272                     _main:	
  6387                           
  6388                           ;main.c: 605:     SYSTEM_Initialize();
  6389                           
  6390                           ;incstack = 0
  6391                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6392  0272  318B  23B5  3182   	fcall	_SYSTEM_Initialize
  6393                           
  6394                           ;main.c: 606:     InitTiming();
  6395  0275  318B  2357  3182   	fcall	_InitTiming
  6396                           
  6397                           ;main.c: 612:     SetupGPS();
  6398  0278  318F  2763  3182   	fcall	_SetupGPS
  6399  027B                     l4684:	
  6400                           
  6401                           ;main.c: 616:     {;main.c: 617:         int index = 0;
  6402  027B  0140               	movlb	0	; select bank0
  6403  027C  01EE               	clrf	main@index
  6404  027D  01EF               	clrf	main@index+1
  6405                           
  6406                           ;main.c: 618:         char convertedNumber[16] = {'\0'};
  6407  027E  3050               	movlw	low main@convertedNumber
  6408  027F  0086               	movwf	6
  6409  0280  3000               	movlw	high main@convertedNumber
  6410  0281  0087               	movwf	7
  6411  0282  3010               	movlw	16
  6412  0283  00CB               	movwf	??_main
  6413  0284  3000               	movlw	0
  6414  0285                     u4360:	
  6415  0285  001E               	movwi fsr1++
  6416  0286  0BCB               	decfsz	??_main,f
  6417  0287  2A85               	goto	u4360
  6418                           
  6419                           ;main.c: 621:         ClearTxData();
  6420  0288  318C  2447  3182   	fcall	_ClearTxData
  6421                           
  6422                           ;main.c: 624:         index = InsertString(txdata, "Wisp-1", index, 140);
  6423  028B  3064               	movlw	100
  6424  028C  0140               	movlb	0	; select bank0
  6425  028D  00A9               	movwf	InsertString@dest
  6426  028E  3027               	movlw	39
  6427  028F  00AA               	movwf	InsertString@dest+1
  6428  0290  30AA               	movlw	low (STR_10| (0+32768))
  6429  0291  00AB               	movwf	InsertString@src
  6430  0292  3090               	movlw	high (STR_10| (0+32768))
  6431  0293  00AC               	movwf	InsertString@src+1
  6432  0294  086F               	movf	main@index+1,w
  6433  0295  00AE               	movwf	InsertString@index+1
  6434  0296  086E               	movf	main@index,w
  6435  0297  00AD               	movwf	InsertString@index
  6436  0298  308C               	movlw	140
  6437  0299  00AF               	movwf	InsertString@destLimit
  6438  029A  3000               	movlw	0
  6439  029B  00B0               	movwf	InsertString@destLimit+1
  6440  029C  3187  27AA  3182   	fcall	_InsertString
  6441  029F  0140               	movlb	0	; select bank0
  6442  02A0  082A               	movf	?_InsertString+1,w
  6443  02A1  00EF               	movwf	main@index+1
  6444  02A2  0829               	movf	?_InsertString,w
  6445  02A3  00EE               	movwf	main@index
  6446                           
  6447                           ;main.c: 625:         index = Insert(txdata, ',', index, 140);
  6448  02A4  3064               	movlw	100
  6449  02A5  00F5               	movwf	Insert@dest
  6450  02A6  3027               	movlw	39
  6451  02A7  00F6               	movwf	Insert@dest+1
  6452  02A8  302C               	movlw	44
  6453  02A9  00CB               	movwf	??_main
  6454  02AA  084B               	movf	??_main,w
  6455  02AB  00F7               	movwf	Insert@src
  6456  02AC  086F               	movf	main@index+1,w
  6457  02AD  00F9               	movwf	Insert@index+1
  6458  02AE  086E               	movf	main@index,w
  6459  02AF  00F8               	movwf	Insert@index
  6460  02B0  308C               	movlw	140
  6461  02B1  00FA               	movwf	Insert@destLimit
  6462  02B2  3000               	movlw	0
  6463  02B3  00FB               	movwf	Insert@destLimit+1
  6464  02B4  3185  2569  3182   	fcall	_Insert
  6465  02B7  0876               	movf	?_Insert+1,w
  6466  02B8  0140               	movlb	0	; select bank0
  6467  02B9  00EF               	movwf	main@index+1
  6468  02BA  0875               	movf	?_Insert,w
  6469  02BB  00EE               	movwf	main@index
  6470                           
  6471                           ;main.c: 626:         ClearString(convertedNumber);
  6472  02BC  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6473  02BD  318C  24C7  3182   	fcall	_ClearString
  6474                           
  6475                           ;main.c: 627:         IntToString(id, convertedNumber);
  6476  02C0  0141               	movlb	1	; select bank1
  6477  02C1  084D               	movf	(_id+1)^(0+128),w
  6478  02C2  00FC               	movwf	IntToString@n+1
  6479  02C3  084C               	movf	_id^(0+128),w
  6480  02C4  00FB               	movwf	IntToString@n
  6481  02C5  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6482  02C6  0140               	movlb	0	; select bank0
  6483  02C7  00CB               	movwf	??_main
  6484  02C8  084B               	movf	??_main,w
  6485  02C9  00FD               	movwf	IntToString@dest
  6486  02CA  3185  25DE  3182   	fcall	_IntToString
  6487                           
  6488                           ;main.c: 628:         index = InsertString(txdata, convertedNumber, index, 140);
  6489  02CD  3064               	movlw	100
  6490  02CE  0140               	movlb	0	; select bank0
  6491  02CF  00A9               	movwf	InsertString@dest
  6492  02D0  3027               	movlw	39
  6493  02D1  00AA               	movwf	InsertString@dest+1
  6494  02D2  3050               	movlw	low main@convertedNumber
  6495  02D3  00AB               	movwf	InsertString@src
  6496  02D4  3000               	movlw	high main@convertedNumber
  6497  02D5  00AC               	movwf	InsertString@src+1
  6498  02D6  086F               	movf	main@index+1,w
  6499  02D7  00AE               	movwf	InsertString@index+1
  6500  02D8  086E               	movf	main@index,w
  6501  02D9  00AD               	movwf	InsertString@index
  6502  02DA  308C               	movlw	140
  6503  02DB  00AF               	movwf	InsertString@destLimit
  6504  02DC  3000               	movlw	0
  6505  02DD  00B0               	movwf	InsertString@destLimit+1
  6506  02DE  3187  27AA  3182   	fcall	_InsertString
  6507  02E1  0140               	movlb	0	; select bank0
  6508  02E2  082A               	movf	?_InsertString+1,w
  6509  02E3  00EF               	movwf	main@index+1
  6510  02E4  0829               	movf	?_InsertString,w
  6511  02E5  00EE               	movwf	main@index
  6512                           
  6513                           ;main.c: 629:         index = Insert(txdata, ',', index, 140);
  6514  02E6  3064               	movlw	100
  6515  02E7  00F5               	movwf	Insert@dest
  6516  02E8  3027               	movlw	39
  6517  02E9  00F6               	movwf	Insert@dest+1
  6518  02EA  302C               	movlw	44
  6519  02EB  00CB               	movwf	??_main
  6520  02EC  084B               	movf	??_main,w
  6521  02ED  00F7               	movwf	Insert@src
  6522  02EE  086F               	movf	main@index+1,w
  6523  02EF  00F9               	movwf	Insert@index+1
  6524  02F0  086E               	movf	main@index,w
  6525  02F1  00F8               	movwf	Insert@index
  6526  02F2  308C               	movlw	140
  6527  02F3  00FA               	movwf	Insert@destLimit
  6528  02F4  3000               	movlw	0
  6529  02F5  00FB               	movwf	Insert@destLimit+1
  6530  02F6  3185  2569  3182   	fcall	_Insert
  6531  02F9  0876               	movf	?_Insert+1,w
  6532  02FA  0140               	movlb	0	; select bank0
  6533  02FB  00EF               	movwf	main@index+1
  6534  02FC  0875               	movf	?_Insert,w
  6535  02FD  00EE               	movwf	main@index
  6536                           
  6537                           ;main.c: 633:         if (PollGPS())
  6538  02FE  3180  2042  3182   	fcall	_PollGPS
  6539  0301  3A00               	xorlw	0
  6540  0302  1903               	skipnz
  6541  0303  2C45               	goto	l4742
  6542                           
  6543                           ;main.c: 637:         {;main.c: 638:             struct bme280_data sensor_data;;main.c:
      +                           642:             index = strlen(txdata);
  6544  0304  3064               	movlw	100
  6545  0305  00F0               	movwf	strlen@s
  6546  0306  3027               	movlw	39
  6547  0307  00F1               	movwf	strlen@s+1
  6548  0308  318B  23FD  3182   	fcall	_strlen
  6549  030B  0871               	movf	?_strlen+1,w
  6550  030C  0140               	movlb	0	; select bank0
  6551  030D  00EF               	movwf	main@index+1
  6552  030E  0870               	movf	?_strlen,w
  6553  030F  00EE               	movwf	main@index
  6554                           
  6555                           ;main.c: 645:             IntToString(sensor_data.temperature, convertedNumber);
  6556  0310  0867               	movf	main@sensor_data+5,w
  6557  0311  00FC               	movwf	IntToString@n+1
  6558  0312  0866               	movf	main@sensor_data+4,w
  6559  0313  00FB               	movwf	IntToString@n
  6560  0314  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6561  0315  00CB               	movwf	??_main
  6562  0316  084B               	movf	??_main,w
  6563  0317  00FD               	movwf	IntToString@dest
  6564  0318  3185  25DE  3182   	fcall	_IntToString
  6565                           
  6566                           ;main.c: 646:             index = InsertString(txdata, convertedNumber, index, 140);
  6567  031B  3064               	movlw	100
  6568  031C  0140               	movlb	0	; select bank0
  6569  031D  00A9               	movwf	InsertString@dest
  6570  031E  3027               	movlw	39
  6571  031F  00AA               	movwf	InsertString@dest+1
  6572  0320  3050               	movlw	low main@convertedNumber
  6573  0321  00AB               	movwf	InsertString@src
  6574  0322  3000               	movlw	high main@convertedNumber
  6575  0323  00AC               	movwf	InsertString@src+1
  6576  0324  086F               	movf	main@index+1,w
  6577  0325  00AE               	movwf	InsertString@index+1
  6578  0326  086E               	movf	main@index,w
  6579  0327  00AD               	movwf	InsertString@index
  6580  0328  308C               	movlw	140
  6581  0329  00AF               	movwf	InsertString@destLimit
  6582  032A  3000               	movlw	0
  6583  032B  00B0               	movwf	InsertString@destLimit+1
  6584  032C  3187  27AA  3182   	fcall	_InsertString
  6585  032F  0140               	movlb	0	; select bank0
  6586  0330  082A               	movf	?_InsertString+1,w
  6587  0331  00EF               	movwf	main@index+1
  6588  0332  0829               	movf	?_InsertString,w
  6589  0333  00EE               	movwf	main@index
  6590                           
  6591                           ;main.c: 647:             index = Insert(txdata, ',', index, 140);
  6592  0334  3064               	movlw	100
  6593  0335  00F5               	movwf	Insert@dest
  6594  0336  3027               	movlw	39
  6595  0337  00F6               	movwf	Insert@dest+1
  6596  0338  302C               	movlw	44
  6597  0339  00CB               	movwf	??_main
  6598  033A  084B               	movf	??_main,w
  6599  033B  00F7               	movwf	Insert@src
  6600  033C  086F               	movf	main@index+1,w
  6601  033D  00F9               	movwf	Insert@index+1
  6602  033E  086E               	movf	main@index,w
  6603  033F  00F8               	movwf	Insert@index
  6604  0340  308C               	movlw	140
  6605  0341  00FA               	movwf	Insert@destLimit
  6606  0342  3000               	movlw	0
  6607  0343  00FB               	movwf	Insert@destLimit+1
  6608  0344  3185  2569  3182   	fcall	_Insert
  6609  0347  0876               	movf	?_Insert+1,w
  6610  0348  0140               	movlb	0	; select bank0
  6611  0349  00EF               	movwf	main@index+1
  6612  034A  0875               	movf	?_Insert,w
  6613  034B  00EE               	movwf	main@index
  6614                           
  6615                           ;main.c: 648:             ClearString(convertedNumber);
  6616  034C  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6617  034D  318C  24C7  3182   	fcall	_ClearString
  6618                           
  6619                           ;main.c: 650:             UIntToString(sensor_data.pressure, convertedNumber);
  6620  0350  0140               	movlb	0	; select bank0
  6621  0351  0865               	movf	main@sensor_data+3,w
  6622  0352  00AC               	movwf	UIntToString@n+3
  6623  0353  0864               	movf	main@sensor_data+2,w
  6624  0354  00AB               	movwf	UIntToString@n+2
  6625  0355  0863               	movf	main@sensor_data+1,w
  6626  0356  00AA               	movwf	UIntToString@n+1
  6627  0357  0862               	movf	main@sensor_data,w
  6628  0358  00A9               	movwf	UIntToString@n
  6629  0359  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6630  035A  00CB               	movwf	??_main
  6631  035B  084B               	movf	??_main,w
  6632  035C  00AD               	movwf	UIntToString@dest
  6633  035D  3187  2705  3182   	fcall	_UIntToString
  6634                           
  6635                           ;main.c: 651:             index = InsertString(txdata, convertedNumber, index, 140);
  6636  0360  3064               	movlw	100
  6637  0361  0140               	movlb	0	; select bank0
  6638  0362  00A9               	movwf	InsertString@dest
  6639  0363  3027               	movlw	39
  6640  0364  00AA               	movwf	InsertString@dest+1
  6641  0365  3050               	movlw	low main@convertedNumber
  6642  0366  00AB               	movwf	InsertString@src
  6643  0367  3000               	movlw	high main@convertedNumber
  6644  0368  00AC               	movwf	InsertString@src+1
  6645  0369  086F               	movf	main@index+1,w
  6646  036A  00AE               	movwf	InsertString@index+1
  6647  036B  086E               	movf	main@index,w
  6648  036C  00AD               	movwf	InsertString@index
  6649  036D  308C               	movlw	140
  6650  036E  00AF               	movwf	InsertString@destLimit
  6651  036F  3000               	movlw	0
  6652  0370  00B0               	movwf	InsertString@destLimit+1
  6653  0371  3187  27AA  3182   	fcall	_InsertString
  6654  0374  0140               	movlb	0	; select bank0
  6655  0375  082A               	movf	?_InsertString+1,w
  6656  0376  00EF               	movwf	main@index+1
  6657  0377  0829               	movf	?_InsertString,w
  6658  0378  00EE               	movwf	main@index
  6659                           
  6660                           ;main.c: 652:             index = Insert(txdata, ',', index, 140);
  6661  0379  3064               	movlw	100
  6662  037A  00F5               	movwf	Insert@dest
  6663  037B  3027               	movlw	39
  6664  037C  00F6               	movwf	Insert@dest+1
  6665  037D  302C               	movlw	44
  6666  037E  00CB               	movwf	??_main
  6667  037F  084B               	movf	??_main,w
  6668  0380  00F7               	movwf	Insert@src
  6669  0381  086F               	movf	main@index+1,w
  6670  0382  00F9               	movwf	Insert@index+1
  6671  0383  086E               	movf	main@index,w
  6672  0384  00F8               	movwf	Insert@index
  6673  0385  308C               	movlw	140
  6674  0386  00FA               	movwf	Insert@destLimit
  6675  0387  3000               	movlw	0
  6676  0388  00FB               	movwf	Insert@destLimit+1
  6677  0389  3185  2569  3182   	fcall	_Insert
  6678  038C  0876               	movf	?_Insert+1,w
  6679  038D  0140               	movlb	0	; select bank0
  6680  038E  00EF               	movwf	main@index+1
  6681  038F  0875               	movf	?_Insert,w
  6682  0390  00EE               	movwf	main@index
  6683                           
  6684                           ;main.c: 653:             ClearString(convertedNumber);
  6685  0391  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6686  0392  318C  24C7  3182   	fcall	_ClearString
  6687                           
  6688                           ;main.c: 655:             UIntToString(sensor_data.humidity, convertedNumber);
  6689  0395  3008               	movlw	8
  6690  0396  3E62               	addlw	(low (main@sensor_data| 0))& (0+255)
  6691  0397  0086               	movwf	6
  6692  0398  0187               	clrf	7
  6693  0399  3F40               	moviw [0]fsr1
  6694  039A  0140               	movlb	0	; select bank0
  6695  039B  00A9               	movwf	UIntToString@n
  6696  039C  3F41               	moviw [1]fsr1
  6697  039D  00AA               	movwf	UIntToString@n+1
  6698  039E  3F42               	moviw [2]fsr1
  6699  039F  00AB               	movwf	UIntToString@n+2
  6700  03A0  3F43               	moviw [3]fsr1
  6701  03A1  00AC               	movwf	UIntToString@n+3
  6702  03A2  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6703  03A3  00CB               	movwf	??_main
  6704  03A4  084B               	movf	??_main,w
  6705  03A5  00AD               	movwf	UIntToString@dest
  6706  03A6  3187  2705  3182   	fcall	_UIntToString
  6707                           
  6708                           ;main.c: 656:             index = InsertString(txdata, convertedNumber, index, 140);
  6709  03A9  3064               	movlw	100
  6710  03AA  0140               	movlb	0	; select bank0
  6711  03AB  00A9               	movwf	InsertString@dest
  6712  03AC  3027               	movlw	39
  6713  03AD  00AA               	movwf	InsertString@dest+1
  6714  03AE  3050               	movlw	low main@convertedNumber
  6715  03AF  00AB               	movwf	InsertString@src
  6716  03B0  3000               	movlw	high main@convertedNumber
  6717  03B1  00AC               	movwf	InsertString@src+1
  6718  03B2  086F               	movf	main@index+1,w
  6719  03B3  00AE               	movwf	InsertString@index+1
  6720  03B4  086E               	movf	main@index,w
  6721  03B5  00AD               	movwf	InsertString@index
  6722  03B6  308C               	movlw	140
  6723  03B7  00AF               	movwf	InsertString@destLimit
  6724  03B8  3000               	movlw	0
  6725  03B9  00B0               	movwf	InsertString@destLimit+1
  6726  03BA  3187  27AA  3182   	fcall	_InsertString
  6727  03BD  0140               	movlb	0	; select bank0
  6728  03BE  082A               	movf	?_InsertString+1,w
  6729  03BF  00EF               	movwf	main@index+1
  6730  03C0  0829               	movf	?_InsertString,w
  6731  03C1  00EE               	movwf	main@index
  6732                           
  6733                           ;main.c: 658:             int end = index;
  6734  03C2  086F               	movf	main@index+1,w
  6735  03C3  00E1               	movwf	main@end+1
  6736  03C4  086E               	movf	main@index,w
  6737  03C5  00E0               	movwf	main@end
  6738                           
  6739                           ;main.c: 661:             UIntToHexString(crc16(txdata), checksum);
  6740  03C6  3064               	movlw	100
  6741  03C7  00A1               	movwf	crc16@data
  6742  03C8  3027               	movlw	39
  6743  03C9  00A2               	movwf	crc16@data+1
  6744  03CA  318C  24A2  3182   	fcall	_crc16
  6745  03CD  0140               	movlb	0	; select bank0
  6746  03CE  0821               	movf	?_crc16,w
  6747  03CF  00CB               	movwf	??_main
  6748  03D0  0822               	movf	?_crc16+1,w
  6749  03D1  00CC               	movwf	??_main+1
  6750  03D2  01CD               	clrf	??_main+2
  6751  03D3  01CE               	clrf	??_main+3
  6752  03D4  084E               	movf	??_main+3,w
  6753  03D5  00AC               	movwf	UIntToHexString@n+3
  6754  03D6  084D               	movf	??_main+2,w
  6755  03D7  00AB               	movwf	UIntToHexString@n+2
  6756  03D8  084C               	movf	??_main+1,w
  6757  03D9  00AA               	movwf	UIntToHexString@n+1
  6758  03DA  084B               	movf	??_main,w
  6759  03DB  00A9               	movwf	UIntToHexString@n
  6760  03DC  30E4               	movlw	(low (_checksum| 0))& (0+255)
  6761  03DD  00CF               	movwf	??_main+4
  6762  03DE  084F               	movf	??_main+4,w
  6763  03DF  00AD               	movwf	UIntToHexString@dest
  6764  03E0  3184  24F3  3182   	fcall	_UIntToHexString
  6765                           
  6766                           ;main.c: 663:             index = Insert(txdata, '*', end, 140);
  6767  03E3  3064               	movlw	100
  6768  03E4  00F5               	movwf	Insert@dest
  6769  03E5  3027               	movlw	39
  6770  03E6  00F6               	movwf	Insert@dest+1
  6771  03E7  302A               	movlw	42
  6772  03E8  0140               	movlb	0	; select bank0
  6773  03E9  00CB               	movwf	??_main
  6774  03EA  084B               	movf	??_main,w
  6775  03EB  00F7               	movwf	Insert@src
  6776  03EC  0861               	movf	main@end+1,w
  6777  03ED  00F9               	movwf	Insert@index+1
  6778  03EE  0860               	movf	main@end,w
  6779  03EF  00F8               	movwf	Insert@index
  6780  03F0  308C               	movlw	140
  6781  03F1  00FA               	movwf	Insert@destLimit
  6782  03F2  3000               	movlw	0
  6783  03F3  00FB               	movwf	Insert@destLimit+1
  6784  03F4  3185  2569  3182   	fcall	_Insert
  6785  03F7  0876               	movf	?_Insert+1,w
  6786  03F8  0140               	movlb	0	; select bank0
  6787  03F9  00EF               	movwf	main@index+1
  6788  03FA  0875               	movf	?_Insert,w
  6789  03FB  00EE               	movwf	main@index
  6790                           
  6791                           ;main.c: 664:             index = InsertString(txdata, checksum, index, 140);
  6792  03FC  3064               	movlw	100
  6793  03FD  00A9               	movwf	InsertString@dest
  6794  03FE  3027               	movlw	39
  6795  03FF  00AA               	movwf	InsertString@dest+1
  6796  0400  30E4               	movlw	low _checksum
  6797  0401  00AB               	movwf	InsertString@src
  6798  0402  3000               	movlw	high _checksum
  6799  0403  00AC               	movwf	InsertString@src+1
  6800  0404  086F               	movf	main@index+1,w
  6801  0405  00AE               	movwf	InsertString@index+1
  6802  0406  086E               	movf	main@index,w
  6803  0407  00AD               	movwf	InsertString@index
  6804  0408  308C               	movlw	140
  6805  0409  00AF               	movwf	InsertString@destLimit
  6806  040A  3000               	movlw	0
  6807  040B  00B0               	movwf	InsertString@destLimit+1
  6808  040C  3187  27AA  3182   	fcall	_InsertString
  6809  040F  0140               	movlb	0	; select bank0
  6810  0410  082A               	movf	?_InsertString+1,w
  6811  0411  00EF               	movwf	main@index+1
  6812  0412  0829               	movf	?_InsertString,w
  6813  0413  00EE               	movwf	main@index
  6814                           
  6815                           ;main.c: 665:             index = Insert(txdata, '\n', index, 140);
  6816  0414  3064               	movlw	100
  6817  0415  00F5               	movwf	Insert@dest
  6818  0416  3027               	movlw	39
  6819  0417  00F6               	movwf	Insert@dest+1
  6820  0418  300A               	movlw	10
  6821  0419  00CB               	movwf	??_main
  6822  041A  084B               	movf	??_main,w
  6823  041B  00F7               	movwf	Insert@src
  6824  041C  086F               	movf	main@index+1,w
  6825  041D  00F9               	movwf	Insert@index+1
  6826  041E  086E               	movf	main@index,w
  6827  041F  00F8               	movwf	Insert@index
  6828  0420  308C               	movlw	140
  6829  0421  00FA               	movwf	Insert@destLimit
  6830  0422  3000               	movlw	0
  6831  0423  00FB               	movwf	Insert@destLimit+1
  6832  0424  3185  2569  3182   	fcall	_Insert
  6833  0427  0876               	movf	?_Insert+1,w
  6834  0428  0140               	movlb	0	; select bank0
  6835  0429  00EF               	movwf	main@index+1
  6836  042A  0875               	movf	?_Insert,w
  6837  042B  00EE               	movwf	main@index
  6838                           
  6839                           ;main.c: 668:             id++;
  6840  042C  3001               	movlw	1
  6841  042D  0141               	movlb	1	; select bank1
  6842  042E  07CC               	addwf	_id^(0+128),f
  6843  042F  3000               	movlw	0
  6844  0430  3DCD               	addwfc	(_id+1)^(0+128),f
  6845  0431  0140               	movlb	0	; select bank0
  6846  0432  1518               	bsf	24,2	;volatile
  6847                           
  6848                           ;main.c: 670:             TransmitString("$$");
  6849  0433  30B1               	movlw	low (STR_11| (0+32768))
  6850  0434  00A3               	movwf	TransmitString@message
  6851  0435  3090               	movlw	high (STR_11| (0+32768))
  6852  0436  00A4               	movwf	TransmitString@message+1
  6853  0437  318D  25E6  3182   	fcall	_TransmitString
  6854                           
  6855                           ;main.c: 671:             TransmitString(txdata);
  6856  043A  3064               	movlw	100
  6857  043B  0140               	movlb	0	; select bank0
  6858  043C  00A3               	movwf	TransmitString@message
  6859  043D  3027               	movlw	39
  6860  043E  00A4               	movwf	TransmitString@message+1
  6861  043F  318D  25E6  3182   	fcall	_TransmitString
  6862  0442  0140               	movlb	0	; select bank0
  6863  0443  1118               	bcf	24,2	;volatile
  6864  0444  2C55               	goto	l824
  6865  0445                     l4742:	
  6866                           
  6867                           ;main.c: 676:         {;main.c: 678:             DebugAlert(400, 200, 3);
  6868  0445  3090               	movlw	144
  6869  0446  0140               	movlb	0	; select bank0
  6870  0447  00A0               	movwf	DebugAlert@delay_high
  6871  0448  3001               	movlw	1
  6872  0449  00A1               	movwf	DebugAlert@delay_high+1
  6873  044A  30C8               	movlw	200
  6874  044B  00A2               	movwf	DebugAlert@delay_low
  6875  044C  3000               	movlw	0
  6876  044D  00A3               	movwf	DebugAlert@delay_low+1
  6877  044E  3003               	movlw	3
  6878  044F  00CB               	movwf	??_main
  6879  0450  084B               	movf	??_main,w
  6880  0451  00A4               	movwf	DebugAlert@num_flashes
  6881  0452  318D  2565  3182   	fcall	_DebugAlert
  6882  0455                     l824:	
  6883                           ;main.c: 679:         }
  6884                           
  6885                           
  6886                           ;main.c: 681:         Sleep(5000);
  6887  0455  3000               	movlw	0
  6888  0456  00F3               	movwf	Sleep@ms+3
  6889  0457  3000               	movlw	0
  6890  0458  00F2               	movwf	Sleep@ms+2
  6891  0459  3013               	movlw	19
  6892  045A  00F1               	movwf	Sleep@ms+1
  6893  045B  3088               	movlw	136
  6894  045C  00F0               	movwf	Sleep@ms
  6895  045D  318D  258F  3182   	fcall	_Sleep
  6896  0460  2A7B               	goto	l4684
  6897  0461                     __end_of_main:	
  6898                           
  6899                           	psect	text1
  6900  0CA2                     __ptext1:	
  6901 ;; *************** function _crc16 *****************
  6902 ;; Defined at:
  6903 ;;		line 22 in file "rtty.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  data            2    1[BANK0 ] PTR unsigned char 
  6906 ;;		 -> txdata(140), 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;  crc             2    3[BANK0 ] unsigned short 
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  2    1[BANK0 ] unsigned short 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6921 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6922 ;;Total ram usage:        4 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:    4
  6925 ;; This function calls:
  6926 ;;		_crc16_update
  6927 ;;		_strlen
  6928 ;; This function is called by:
  6929 ;;		_main
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           
  6934                           ;psect for function _crc16
  6935  0CA2                     _crc16:	
  6936                           
  6937                           ;rtty.c: 22: uint16_t crc16(char* data);rtty.c: 23: {;rtty.c: 24:     uint16_t crc = 0xF
      +                          FFF;
  6938                           
  6939                           ;incstack = 0
  6940                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6941  0CA2  30FF               	movlw	255
  6942  0CA3  0140               	movlb	0	; select bank0
  6943  0CA4  00A3               	movwf	crc16@crc
  6944  0CA5  30FF               	movlw	255
  6945  0CA6  00A4               	movwf	crc16@crc+1
  6946                           
  6947                           ;rtty.c: 25:     crc = crc16_update(data, strlen(data), crc);
  6948  0CA7  0822               	movf	crc16@data+1,w
  6949  0CA8  00F6               	movwf	crc16_update@pData+1
  6950  0CA9  0821               	movf	crc16@data,w
  6951  0CAA  00F5               	movwf	crc16_update@pData
  6952  0CAB  0822               	movf	crc16@data+1,w
  6953  0CAC  00F1               	movwf	strlen@s+1
  6954  0CAD  0821               	movf	crc16@data,w
  6955  0CAE  00F0               	movwf	strlen@s
  6956  0CAF  318B  23FD  318C   	fcall	_strlen
  6957  0CB2  0871               	movf	?_strlen+1,w
  6958  0CB3  00F8               	movwf	crc16_update@length+1
  6959  0CB4  0870               	movf	?_strlen,w
  6960  0CB5  00F7               	movwf	crc16_update@length
  6961  0CB6  0140               	movlb	0	; select bank0
  6962  0CB7  0824               	movf	crc16@crc+1,w
  6963  0CB8  00FA               	movwf	crc16_update@wCrc+1
  6964  0CB9  0823               	movf	crc16@crc,w
  6965  0CBA  00F9               	movwf	crc16_update@wCrc
  6966  0CBB  318E  269F         	fcall	_crc16_update
  6967  0CBD  0876               	movf	?_crc16_update+1,w
  6968  0CBE  0140               	movlb	0	; select bank0
  6969  0CBF  00A4               	movwf	crc16@crc+1
  6970  0CC0  0875               	movf	?_crc16_update,w
  6971  0CC1  00A3               	movwf	crc16@crc
  6972                           
  6973                           ;rtty.c: 26:     return crc & 0xFFFF;
  6974  0CC2  0824               	movf	crc16@crc+1,w
  6975  0CC3  00A2               	movwf	?_crc16+1
  6976  0CC4  0823               	movf	crc16@crc,w
  6977  0CC5  00A1               	movwf	?_crc16
  6978  0CC6  0008               	return
  6979  0CC7                     __end_of_crc16:	
  6980                           
  6981                           	psect	text2
  6982  0E9F                     __ptext2:	
  6983 ;; *************** function _crc16_update *****************
  6984 ;; Defined at:
  6985 ;;		line 11 in file "rtty.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  pData           2    5[COMMON] PTR unsigned char 
  6988 ;;		 -> txdata(140), 
  6989 ;;  length          2    7[COMMON] int 
  6990 ;;  wCrc            2    9[COMMON] unsigned short 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  i               1    0[BANK0 ] unsigned char 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  2    5[COMMON] unsigned short 
  6995 ;; Registers used:
  6996 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7002 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7004 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7005 ;;      Totals:         9       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7006 ;;Total ram usage:       10 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    3
  7009 ;; This function calls:
  7010 ;;		Nothing
  7011 ;; This function is called by:
  7012 ;;		_crc16
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           
  7017                           ;psect for function _crc16_update
  7018  0E9F                     _crc16_update:	
  7019  0E9F                     l3858:	
  7020                           ;rtty.c: 11: uint16_t crc16_update(char* pData, int length, uint16_t wCrc);rtty.c: 12: {
      +                          ;rtty.c: 13:     uint8_t i;;rtty.c: 14:     while (length--) {
  7021                           
  7022                           ;incstack = 0
  7023                           ; Regs used in _crc16_update: [wreg+fsr1l+fsr1h+status,2+status,0]
  7024                           
  7025                           
  7026                           ;rtty.c: 14:     while (length--) {
  7027  0E9F  30FF               	movlw	255
  7028  0EA0  07F7               	addwf	crc16_update@length,f
  7029  0EA1  30FF               	movlw	255
  7030  0EA2  3DF8               	addwfc	crc16_update@length+1,f
  7031  0EA3  0A77               	incf	crc16_update@length,w
  7032  0EA4  1903               	btfsc	3,2
  7033  0EA5  0A78               	incf	crc16_update@length+1,w
  7034  0EA6  1903               	btfsc	3,2
  7035  0EA7  2ED7               	goto	l3860
  7036                           
  7037                           ;rtty.c: 15:         wCrc ^= *(unsigned char *)pData++ << 8;
  7038  0EA8  0875               	movf	crc16_update@pData,w
  7039  0EA9  0086               	movwf	6
  7040  0EAA  0876               	movf	crc16_update@pData+1,w
  7041  0EAB  0087               	movwf	7
  7042  0EAC  0801               	movf	1,w
  7043  0EAD  00FB               	movwf	??_crc16_update
  7044  0EAE  01FC               	clrf	??_crc16_update+1
  7045  0EAF  087B               	movf	??_crc16_update,w
  7046  0EB0  00FC               	movwf	??_crc16_update+1
  7047  0EB1  01FB               	clrf	??_crc16_update
  7048  0EB2  087B               	movf	??_crc16_update,w
  7049  0EB3  06F9               	xorwf	crc16_update@wCrc,f
  7050  0EB4  087C               	movf	??_crc16_update+1,w
  7051  0EB5  06FA               	xorwf	crc16_update@wCrc+1,f
  7052  0EB6  3001               	movlw	1
  7053  0EB7  07F5               	addwf	crc16_update@pData,f
  7054  0EB8  3000               	movlw	0
  7055  0EB9  3DF6               	addwfc	crc16_update@pData+1,f
  7056                           
  7057                           ;rtty.c: 16:         for (i=0; i < 8; i++)
  7058  0EBA  0140               	movlb	0	; select bank0
  7059  0EBB  01A0               	clrf	crc16_update@i
  7060  0EBC                     l840:	
  7061                           
  7062                           ;rtty.c: 17:             wCrc = wCrc & 0x8000 ? (wCrc << 1) ^ 0x1021 : wCrc << 1;
  7063  0EBC  1BFA               	btfsc	crc16_update@wCrc+1,7
  7064  0EBD  2EC2               	goto	l3854
  7065  0EBE  3579               	lslf	crc16_update@wCrc,w
  7066  0EBF  00F9               	movwf	crc16_update@wCrc
  7067  0EC0  0D7A               	rlf	crc16_update@wCrc+1,w
  7068  0EC1  2ECD               	goto	L1
  7069  0EC2                     l3854:	
  7070  0EC2  087A               	movf	crc16_update@wCrc+1,w
  7071  0EC3  00FC               	movwf	??_crc16_update+1
  7072  0EC4  0879               	movf	crc16_update@wCrc,w
  7073  0EC5  00FB               	movwf	??_crc16_update
  7074  0EC6  35FB               	lslf	??_crc16_update,f
  7075  0EC7  0DFC               	rlf	??_crc16_update+1,f
  7076  0EC8  3021               	movlw	33
  7077  0EC9  067B               	xorwf	??_crc16_update,w
  7078  0ECA  00F9               	movwf	crc16_update@wCrc
  7079  0ECB  3010               	movlw	16
  7080  0ECC  067C               	xorwf	??_crc16_update+1,w
  7081  0ECD                     L1:	
  7082  0ECD  00FA               	movwf	crc16_update@wCrc+1
  7083  0ECE  3001               	movlw	1
  7084  0ECF  00FB               	movwf	??_crc16_update
  7085  0ED0  087B               	movf	??_crc16_update,w
  7086  0ED1  07A0               	addwf	crc16_update@i,f
  7087  0ED2  3008               	movlw	8
  7088  0ED3  0220               	subwf	crc16_update@i,w
  7089  0ED4  1803               	btfsc	3,0
  7090  0ED5  2E9F               	goto	l3858
  7091  0ED6  2EBC               	goto	l840
  7092  0ED7                     l3860:	
  7093                           
  7094                           ;rtty.c: 19:     return wCrc;
  7095  0ED7  087A               	movf	crc16_update@wCrc+1,w
  7096  0ED8  00F6               	movwf	?_crc16_update+1
  7097  0ED9  0879               	movf	crc16_update@wCrc,w
  7098  0EDA  00F5               	movwf	?_crc16_update
  7099  0EDB  0008               	return
  7100  0EDC                     __end_of_crc16_update:	
  7101                           
  7102                           	psect	text3
  7103  0705                     __ptext3:	
  7104 ;; *************** function _UIntToString *****************
  7105 ;; Defined at:
  7106 ;;		line 207 in file "main.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  n               4    9[BANK0 ] unsigned long 
  7109 ;;  dest            1   13[BANK0 ] PTR unsigned char 
  7110 ;;		 -> main@convertedNumber(16), 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  i               2   16[BANK0 ] int 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      void 
  7115 ;; Registers used:
  7116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7122 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7123 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7125 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7126 ;;Total ram usage:        9 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:    5
  7129 ;; This function calls:
  7130 ;;		_ReverseString
  7131 ;;		___lldiv
  7132 ;;		___llmod
  7133 ;; This function is called by:
  7134 ;;		_main
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           
  7139                           ;psect for function _UIntToString
  7140  0705                     _UIntToString:	
  7141                           
  7142                           ;main.c: 207: void UIntToString(uint32_t n, char* dest);main.c: 208: {;main.c: 209:     
      +                          int i = 0;
  7143                           
  7144                           ;incstack = 0
  7145                           ; Regs used in _UIntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7146  0705  0140               	movlb	0	; select bank0
  7147  0706  01B0               	clrf	UIntToString@i
  7148  0707  01B1               	clrf	UIntToString@i+1
  7149  0708                     l4166:	
  7150                           
  7151                           ;main.c: 214:         dest[i++] = n % 10 + '0';
  7152  0708  3000               	movlw	0
  7153  0709  00F3               	movwf	___llmod@divisor+3
  7154  070A  3000               	movlw	0
  7155  070B  00F2               	movwf	___llmod@divisor+2
  7156  070C  3000               	movlw	0
  7157  070D  00F1               	movwf	___llmod@divisor+1
  7158  070E  300A               	movlw	10
  7159  070F  00F0               	movwf	___llmod@divisor
  7160  0710  082C               	movf	UIntToString@n+3,w
  7161  0711  00F7               	movwf	___llmod@dividend+3
  7162  0712  082B               	movf	UIntToString@n+2,w
  7163  0713  00F6               	movwf	___llmod@dividend+2
  7164  0714  082A               	movf	UIntToString@n+1,w
  7165  0715  00F5               	movwf	___llmod@dividend+1
  7166  0716  0829               	movf	UIntToString@n,w
  7167  0717  00F4               	movwf	___llmod@dividend
  7168  0718  318E  26DC  3187   	fcall	___llmod
  7169  071B  0870               	movf	?___llmod,w
  7170  071C  3E30               	addlw	48
  7171  071D  0140               	movlb	0	; select bank0
  7172  071E  00AE               	movwf	??_UIntToString
  7173  071F  0830               	movf	UIntToString@i,w
  7174  0720  072D               	addwf	UIntToString@dest,w
  7175  0721  00AF               	movwf	??_UIntToString+1
  7176  0722  082F               	movf	??_UIntToString+1,w
  7177  0723  0086               	movwf	6
  7178  0724  0187               	clrf	7
  7179  0725  082E               	movf	??_UIntToString,w
  7180  0726  0081               	movwf	1
  7181  0727  3001               	movlw	1
  7182  0728  07B0               	addwf	UIntToString@i,f
  7183  0729  3000               	movlw	0
  7184  072A  3DB1               	addwfc	UIntToString@i+1,f
  7185                           
  7186                           ;main.c: 216:     } while ((n /= 10) > 0);
  7187  072B  3000               	movlw	0
  7188  072C  00F3               	movwf	___lldiv@divisor+3
  7189  072D  3000               	movlw	0
  7190  072E  00F2               	movwf	___lldiv@divisor+2
  7191  072F  3000               	movlw	0
  7192  0730  00F1               	movwf	___lldiv@divisor+1
  7193  0731  300A               	movlw	10
  7194  0732  00F0               	movwf	___lldiv@divisor
  7195  0733  082C               	movf	UIntToString@n+3,w
  7196  0734  00F7               	movwf	___lldiv@dividend+3
  7197  0735  082B               	movf	UIntToString@n+2,w
  7198  0736  00F6               	movwf	___lldiv@dividend+2
  7199  0737  082A               	movf	UIntToString@n+1,w
  7200  0738  00F5               	movwf	___lldiv@dividend+1
  7201  0739  0829               	movf	UIntToString@n,w
  7202  073A  00F4               	movwf	___lldiv@dividend
  7203  073B  3187  2758  3187   	fcall	___lldiv
  7204  073E  0873               	movf	?___lldiv+3,w
  7205  073F  0140               	movlb	0	; select bank0
  7206  0740  00AC               	movwf	UIntToString@n+3
  7207  0741  0872               	movf	?___lldiv+2,w
  7208  0742  00AB               	movwf	UIntToString@n+2
  7209  0743  0871               	movf	?___lldiv+1,w
  7210  0744  00AA               	movwf	UIntToString@n+1
  7211  0745  0870               	movf	?___lldiv,w
  7212  0746  00A9               	movwf	UIntToString@n
  7213  0747  082C               	movf	UIntToString@n+3,w
  7214  0748  042B               	iorwf	UIntToString@n+2,w
  7215  0749  042A               	iorwf	UIntToString@n+1,w
  7216  074A  0429               	iorwf	UIntToString@n,w
  7217  074B  1D03               	skipz
  7218  074C  2F08               	goto	l4166
  7219                           
  7220                           ;main.c: 217:     dest[i] = '\0';
  7221  074D  0830               	movf	UIntToString@i,w
  7222  074E  072D               	addwf	UIntToString@dest,w
  7223  074F  00AE               	movwf	??_UIntToString
  7224  0750  082E               	movf	??_UIntToString,w
  7225  0751  0086               	movwf	6
  7226  0752  0187               	clrf	7
  7227  0753  0181               	clrf	1
  7228                           
  7229                           ;main.c: 219:     ReverseString(dest);
  7230  0754  082D               	movf	UIntToString@dest,w
  7231  0755  3186  26A5         	fcall	_ReverseString
  7232  0757  0008               	return
  7233  0758                     __end_of_UIntToString:	
  7234                           
  7235                           	psect	text4
  7236  0EDC                     __ptext4:	
  7237 ;; *************** function ___llmod *****************
  7238 ;; Defined at:
  7239 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\llmod.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;  divisor         4    0[COMMON] unsigned long 
  7242 ;;  dividend        4    4[COMMON] unsigned long 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  counter         1    9[COMMON] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  4    0[COMMON] unsigned long 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7254 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7257 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7258 ;;Total ram usage:       10 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    3
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_UIntToString
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           
  7269                           ;psect for function ___llmod
  7270  0EDC                     ___llmod:	
  7271                           
  7272                           ;incstack = 0
  7273                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7274  0EDC  0873               	movf	___llmod@divisor+3,w
  7275  0EDD  0472               	iorwf	___llmod@divisor+2,w
  7276  0EDE  0471               	iorwf	___llmod@divisor+1,w
  7277  0EDF  0470               	iorwf	___llmod@divisor,w
  7278  0EE0  1903               	skipnz
  7279  0EE1  2F15               	goto	l3960
  7280  0EE2  01F9               	clrf	___llmod@counter
  7281  0EE3  0AF9               	incf	___llmod@counter,f
  7282  0EE4                     l3950:	
  7283  0EE4  1BF3               	btfsc	___llmod@divisor+3,7
  7284  0EE5  2EF2               	goto	l3952
  7285  0EE6  3001               	movlw	1
  7286  0EE7                     u3285:	
  7287  0EE7  35F0               	lslf	___llmod@divisor,f
  7288  0EE8  0DF1               	rlf	___llmod@divisor+1,f
  7289  0EE9  0DF2               	rlf	___llmod@divisor+2,f
  7290  0EEA  0DF3               	rlf	___llmod@divisor+3,f
  7291  0EEB  0B89               	decfsz	9,f
  7292  0EEC  2EE7               	goto	u3285
  7293  0EED  3001               	movlw	1
  7294  0EEE  00F8               	movwf	??___llmod
  7295  0EEF  0878               	movf	??___llmod,w
  7296  0EF0  07F9               	addwf	___llmod@counter,f
  7297  0EF1  2EE4               	goto	l3950
  7298  0EF2                     l3952:	
  7299  0EF2  0873               	movf	___llmod@divisor+3,w
  7300  0EF3  0277               	subwf	___llmod@dividend+3,w
  7301  0EF4  1D03               	skipz
  7302  0EF5  2F00               	goto	u3305
  7303  0EF6  0872               	movf	___llmod@divisor+2,w
  7304  0EF7  0276               	subwf	___llmod@dividend+2,w
  7305  0EF8  1D03               	skipz
  7306  0EF9  2F00               	goto	u3305
  7307  0EFA  0871               	movf	___llmod@divisor+1,w
  7308  0EFB  0275               	subwf	___llmod@dividend+1,w
  7309  0EFC  1D03               	skipz
  7310  0EFD  2F00               	goto	u3305
  7311  0EFE  0870               	movf	___llmod@divisor,w
  7312  0EFF  0274               	subwf	___llmod@dividend,w
  7313  0F00                     u3305:	
  7314  0F00  1C03               	skipc
  7315  0F01  2F0A               	goto	l3956
  7316  0F02  0870               	movf	___llmod@divisor,w
  7317  0F03  02F4               	subwf	___llmod@dividend,f
  7318  0F04  0871               	movf	___llmod@divisor+1,w
  7319  0F05  3BF5               	subwfb	___llmod@dividend+1,f
  7320  0F06  0872               	movf	___llmod@divisor+2,w
  7321  0F07  3BF6               	subwfb	___llmod@dividend+2,f
  7322  0F08  0873               	movf	___llmod@divisor+3,w
  7323  0F09  3BF7               	subwfb	___llmod@dividend+3,f
  7324  0F0A                     l3956:	
  7325  0F0A  3001               	movlw	1
  7326  0F0B                     u3315:	
  7327  0F0B  36F3               	lsrf	___llmod@divisor+3,f
  7328  0F0C  0CF2               	rrf	___llmod@divisor+2,f
  7329  0F0D  0CF1               	rrf	___llmod@divisor+1,f
  7330  0F0E  0CF0               	rrf	___llmod@divisor,f
  7331  0F0F  0B89               	decfsz	9,f
  7332  0F10  2F0B               	goto	u3315
  7333  0F11  3001               	movlw	1
  7334  0F12  02F9               	subwf	___llmod@counter,f
  7335  0F13  1D03               	btfss	3,2
  7336  0F14  2EF2               	goto	l3952
  7337  0F15                     l3960:	
  7338  0F15  0877               	movf	___llmod@dividend+3,w
  7339  0F16  00F3               	movwf	?___llmod+3
  7340  0F17  0876               	movf	___llmod@dividend+2,w
  7341  0F18  00F2               	movwf	?___llmod+2
  7342  0F19  0875               	movf	___llmod@dividend+1,w
  7343  0F1A  00F1               	movwf	?___llmod+1
  7344  0F1B  0874               	movf	___llmod@dividend,w
  7345  0F1C  00F0               	movwf	?___llmod
  7346  0F1D  0008               	return
  7347  0F1E                     __end_of___llmod:	
  7348                           
  7349                           	psect	text5
  7350  0758                     __ptext5:	
  7351 ;; *************** function ___lldiv *****************
  7352 ;; Defined at:
  7353 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\__lldiv.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  divisor         4    0[COMMON] unsigned long 
  7356 ;;  dividend        4    4[COMMON] unsigned long 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  quotient        4    9[COMMON] unsigned long 
  7359 ;;  counter         1   13[COMMON] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  4    0[COMMON] unsigned long 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7369 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7370 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7372 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7373 ;;Total ram usage:       14 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    3
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_UIntToString
  7380 ;;		_compensate_pressure
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function ___lldiv
  7386  0758                     ___lldiv:	
  7387                           
  7388                           ;incstack = 0
  7389                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7390  0758  3000               	movlw	0
  7391  0759  00FC               	movwf	___lldiv@quotient+3
  7392  075A  3000               	movlw	0
  7393  075B  00FB               	movwf	___lldiv@quotient+2
  7394  075C  3000               	movlw	0
  7395  075D  00FA               	movwf	___lldiv@quotient+1
  7396  075E  3000               	movlw	0
  7397  075F  00F9               	movwf	___lldiv@quotient
  7398  0760  0873               	movf	___lldiv@divisor+3,w
  7399  0761  0472               	iorwf	___lldiv@divisor+2,w
  7400  0762  0471               	iorwf	___lldiv@divisor+1,w
  7401  0763  0470               	iorwf	___lldiv@divisor,w
  7402  0764  1903               	skipnz
  7403  0765  2FA1               	goto	l3902
  7404  0766  01FD               	clrf	___lldiv@counter
  7405  0767  0AFD               	incf	___lldiv@counter,f
  7406  0768                     l3888:	
  7407  0768  1BF3               	btfsc	___lldiv@divisor+3,7
  7408  0769  2F76               	goto	l3890
  7409  076A  3001               	movlw	1
  7410  076B                     u3125:	
  7411  076B  35F0               	lslf	___lldiv@divisor,f
  7412  076C  0DF1               	rlf	___lldiv@divisor+1,f
  7413  076D  0DF2               	rlf	___lldiv@divisor+2,f
  7414  076E  0DF3               	rlf	___lldiv@divisor+3,f
  7415  076F  0B89               	decfsz	9,f
  7416  0770  2F6B               	goto	u3125
  7417  0771  3001               	movlw	1
  7418  0772  00F8               	movwf	??___lldiv
  7419  0773  0878               	movf	??___lldiv,w
  7420  0774  07FD               	addwf	___lldiv@counter,f
  7421  0775  2F68               	goto	l3888
  7422  0776                     l3890:	
  7423  0776  3001               	movlw	1
  7424  0777                     u3145:	
  7425  0777  35F9               	lslf	___lldiv@quotient,f
  7426  0778  0DFA               	rlf	___lldiv@quotient+1,f
  7427  0779  0DFB               	rlf	___lldiv@quotient+2,f
  7428  077A  0DFC               	rlf	___lldiv@quotient+3,f
  7429  077B  0B89               	decfsz	9,f
  7430  077C  2F77               	goto	u3145
  7431  077D  0873               	movf	___lldiv@divisor+3,w
  7432  077E  0277               	subwf	___lldiv@dividend+3,w
  7433  077F  1D03               	skipz
  7434  0780  2F8B               	goto	u3155
  7435  0781  0872               	movf	___lldiv@divisor+2,w
  7436  0782  0276               	subwf	___lldiv@dividend+2,w
  7437  0783  1D03               	skipz
  7438  0784  2F8B               	goto	u3155
  7439  0785  0871               	movf	___lldiv@divisor+1,w
  7440  0786  0275               	subwf	___lldiv@dividend+1,w
  7441  0787  1D03               	skipz
  7442  0788  2F8B               	goto	u3155
  7443  0789  0870               	movf	___lldiv@divisor,w
  7444  078A  0274               	subwf	___lldiv@dividend,w
  7445  078B                     u3155:	
  7446  078B  1C03               	skipc
  7447  078C  2F96               	goto	l3898
  7448  078D  0870               	movf	___lldiv@divisor,w
  7449  078E  02F4               	subwf	___lldiv@dividend,f
  7450  078F  0871               	movf	___lldiv@divisor+1,w
  7451  0790  3BF5               	subwfb	___lldiv@dividend+1,f
  7452  0791  0872               	movf	___lldiv@divisor+2,w
  7453  0792  3BF6               	subwfb	___lldiv@dividend+2,f
  7454  0793  0873               	movf	___lldiv@divisor+3,w
  7455  0794  3BF7               	subwfb	___lldiv@dividend+3,f
  7456  0795  1479               	bsf	___lldiv@quotient,0
  7457  0796                     l3898:	
  7458  0796  3001               	movlw	1
  7459  0797                     u3165:	
  7460  0797  36F3               	lsrf	___lldiv@divisor+3,f
  7461  0798  0CF2               	rrf	___lldiv@divisor+2,f
  7462  0799  0CF1               	rrf	___lldiv@divisor+1,f
  7463  079A  0CF0               	rrf	___lldiv@divisor,f
  7464  079B  0B89               	decfsz	9,f
  7465  079C  2F97               	goto	u3165
  7466  079D  3001               	movlw	1
  7467  079E  02FD               	subwf	___lldiv@counter,f
  7468  079F  1D03               	btfss	3,2
  7469  07A0  2F76               	goto	l3890
  7470  07A1                     l3902:	
  7471  07A1  087C               	movf	___lldiv@quotient+3,w
  7472  07A2  00F3               	movwf	?___lldiv+3
  7473  07A3  087B               	movf	___lldiv@quotient+2,w
  7474  07A4  00F2               	movwf	?___lldiv+2
  7475  07A5  087A               	movf	___lldiv@quotient+1,w
  7476  07A6  00F1               	movwf	?___lldiv+1
  7477  07A7  0879               	movf	___lldiv@quotient,w
  7478  07A8  00F0               	movwf	?___lldiv
  7479  07A9  0008               	return
  7480  07AA                     __end_of___lldiv:	
  7481                           
  7482                           	psect	text6
  7483  04F3                     __ptext6:	
  7484 ;; *************** function _UIntToHexString *****************
  7485 ;; Defined at:
  7486 ;;		line 138 in file "main.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  n               4    9[BANK0 ] unsigned long 
  7489 ;;  dest            1   13[BANK0 ] PTR unsigned char 
  7490 ;;		 -> checksum(6), 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  remainder       4   20[BANK0 ] unsigned long 
  7493 ;;  i               4   24[BANK0 ] unsigned long 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7503 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7504 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7505 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7506 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7507 ;;Total ram usage:       19 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    5
  7510 ;; This function calls:
  7511 ;;		_ReverseString
  7512 ;; This function is called by:
  7513 ;;		_main
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           
  7518                           ;psect for function _UIntToHexString
  7519  04F3                     _UIntToHexString:	
  7520                           
  7521                           ;main.c: 138: void UIntToHexString(uint32_t n, char* dest);main.c: 139: {;main.c: 140:  
      +                             uint32_t i = 0;
  7522                           
  7523                           ;incstack = 0
  7524                           ; Regs used in _UIntToHexString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7525  04F3  3000               	movlw	0
  7526  04F4  0140               	movlb	0	; select bank0
  7527  04F5  00BB               	movwf	UIntToHexString@i+3
  7528  04F6  3000               	movlw	0
  7529  04F7  00BA               	movwf	UIntToHexString@i+2
  7530  04F8  3000               	movlw	0
  7531  04F9  00B9               	movwf	UIntToHexString@i+1
  7532  04FA  3000               	movlw	0
  7533  04FB  00B8               	movwf	UIntToHexString@i
  7534  04FC                     l675:	
  7535                           ;main.c: 141:     do {
  7536                           
  7537                           
  7538                           ;main.c: 144:         uint32_t remainder = n % 16;
  7539  04FC  300F               	movlw	15
  7540  04FD  0529               	andwf	UIntToHexString@n,w
  7541  04FE  00B4               	movwf	UIntToHexString@remainder
  7542  04FF  3000               	movlw	0
  7543  0500  052A               	andwf	UIntToHexString@n+1,w
  7544  0501  00B5               	movwf	UIntToHexString@remainder+1
  7545  0502  3000               	movlw	0
  7546  0503  052B               	andwf	UIntToHexString@n+2,w
  7547  0504  00B6               	movwf	UIntToHexString@remainder+2
  7548  0505  3000               	movlw	0
  7549  0506  052C               	andwf	UIntToHexString@n+3,w
  7550  0507  00B7               	movwf	UIntToHexString@remainder+3
  7551                           
  7552                           ;main.c: 146:         dest[i++] = remainder + (remainder >= 10 ? 55 : '0');
  7553  0508  0837               	movf	UIntToHexString@remainder+3,w
  7554  0509  1D03               	btfss	3,2
  7555  050A  2D1D               	goto	l4124
  7556  050B  0836               	movf	UIntToHexString@remainder+2,w
  7557  050C  1D03               	btfss	3,2
  7558  050D  2D1D               	goto	l4124
  7559  050E  0835               	movf	UIntToHexString@remainder+1,w
  7560  050F  1D03               	btfss	3,2
  7561  0510  2D1D               	goto	l4124
  7562  0511  300A               	movlw	10
  7563  0512  0234               	subwf	UIntToHexString@remainder,w
  7564  0513  1803               	btfsc	3,0
  7565  0514  2D1D               	goto	l4124
  7566  0515  3000               	movlw	0
  7567  0516  00B3               	movwf	_UIntToHexString$1748+3
  7568  0517  3000               	movlw	0
  7569  0518  00B2               	movwf	_UIntToHexString$1748+2
  7570  0519  3000               	movlw	0
  7571  051A  00B1               	movwf	_UIntToHexString$1748+1
  7572  051B  3030               	movlw	48
  7573  051C  2D24               	goto	L2
  7574  051D                     l4124:	
  7575  051D  3000               	movlw	0
  7576  051E  00B3               	movwf	_UIntToHexString$1748+3
  7577  051F  3000               	movlw	0
  7578  0520  00B2               	movwf	_UIntToHexString$1748+2
  7579  0521  3000               	movlw	0
  7580  0522  00B1               	movwf	_UIntToHexString$1748+1
  7581  0523  3037               	movlw	55
  7582  0524                     L2:	
  7583  0524  00B0               	movwf	_UIntToHexString$1748
  7584  0525  0830               	movf	_UIntToHexString$1748,w
  7585  0526  0734               	addwf	UIntToHexString@remainder,w
  7586  0527  00AE               	movwf	??_UIntToHexString
  7587  0528  0838               	movf	UIntToHexString@i,w
  7588  0529  072D               	addwf	UIntToHexString@dest,w
  7589  052A  00AF               	movwf	??_UIntToHexString+1
  7590  052B  082F               	movf	??_UIntToHexString+1,w
  7591  052C  0086               	movwf	6
  7592  052D  0187               	clrf	7
  7593  052E  082E               	movf	??_UIntToHexString,w
  7594  052F  0081               	movwf	1
  7595  0530  3001               	movlw	1
  7596  0531  07B8               	addwf	UIntToHexString@i,f
  7597  0532  3000               	movlw	0
  7598  0533  3DB9               	addwfc	UIntToHexString@i+1,f
  7599  0534  3000               	movlw	0
  7600  0535  3DBA               	addwfc	UIntToHexString@i+2,f
  7601  0536  3000               	movlw	0
  7602  0537  3DBB               	addwfc	UIntToHexString@i+3,f
  7603                           
  7604                           ;main.c: 148:     } while ((n /= 16) > 0);
  7605  0538  3004               	movlw	4
  7606  0539                     u3555:	
  7607  0539  36AC               	lsrf	UIntToHexString@n+3,f
  7608  053A  0CAB               	rrf	UIntToHexString@n+2,f
  7609  053B  0CAA               	rrf	UIntToHexString@n+1,f
  7610  053C  0CA9               	rrf	UIntToHexString@n,f
  7611  053D  0B89               	decfsz	9,f
  7612  053E  2D39               	goto	u3555
  7613  053F  082C               	movf	UIntToHexString@n+3,w
  7614  0540  042B               	iorwf	UIntToHexString@n+2,w
  7615  0541  042A               	iorwf	UIntToHexString@n+1,w
  7616  0542  0429               	iorwf	UIntToHexString@n,w
  7617  0543  1903               	btfsc	3,2
  7618  0544  2D58               	goto	l4136
  7619  0545  2CFC               	goto	l675
  7620  0546                     l4132:	
  7621                           
  7622                           ;main.c: 150:     {;main.c: 151:         dest[i] = '0';
  7623  0546  3030               	movlw	48
  7624  0547  00AE               	movwf	??_UIntToHexString
  7625  0548  0838               	movf	UIntToHexString@i,w
  7626  0549  072D               	addwf	UIntToHexString@dest,w
  7627  054A  00AF               	movwf	??_UIntToHexString+1
  7628  054B  082F               	movf	??_UIntToHexString+1,w
  7629  054C  0086               	movwf	6
  7630  054D  0187               	clrf	7
  7631  054E  082E               	movf	??_UIntToHexString,w
  7632  054F  0081               	movwf	1
  7633                           
  7634                           ;main.c: 152:         i++;
  7635  0550  3001               	movlw	1
  7636  0551  07B8               	addwf	UIntToHexString@i,f
  7637  0552  3000               	movlw	0
  7638  0553  3DB9               	addwfc	UIntToHexString@i+1,f
  7639  0554  3000               	movlw	0
  7640  0555  3DBA               	addwfc	UIntToHexString@i+2,f
  7641  0556  3000               	movlw	0
  7642  0557  3DBB               	addwfc	UIntToHexString@i+3,f
  7643  0558                     l4136:	
  7644                           
  7645                           ;main.c: 149:     while (i < 4)
  7646  0558  083B               	movf	UIntToHexString@i+3,w
  7647  0559  1D03               	btfss	3,2
  7648  055A  2D65               	goto	l4138
  7649  055B  083A               	movf	UIntToHexString@i+2,w
  7650  055C  1D03               	btfss	3,2
  7651  055D  2D65               	goto	l4138
  7652  055E  0839               	movf	UIntToHexString@i+1,w
  7653  055F  1D03               	btfss	3,2
  7654  0560  2D65               	goto	l4138
  7655  0561  3004               	movlw	4
  7656  0562  0238               	subwf	UIntToHexString@i,w
  7657  0563  1C03               	btfss	3,0
  7658  0564  2D46               	goto	l4132
  7659  0565                     l4138:	
  7660                           
  7661                           ;main.c: 154:     ReverseString(dest);
  7662  0565  082D               	movf	UIntToHexString@dest,w
  7663  0566  3186  26A5         	fcall	_ReverseString
  7664  0568  0008               	return
  7665  0569                     __end_of_UIntToHexString:	
  7666                           
  7667                           	psect	text7
  7668  0DE6                     __ptext7:	
  7669 ;; *************** function _TransmitString *****************
  7670 ;; Defined at:
  7671 ;;		line 71 in file "rtty.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  message         2    3[BANK0 ] PTR unsigned char 
  7674 ;;		 -> STR_11(3), txdata(140), 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  i               2    8[BANK0 ] int 
  7677 ;;  counti          2    6[BANK0 ] int 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  1    wreg      void 
  7680 ;; Registers used:
  7681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7688 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7690 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7691 ;;Total ram usage:        7 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    6
  7694 ;; This function calls:
  7695 ;;		_TransmitChar
  7696 ;;		_strlen
  7697 ;; This function is called by:
  7698 ;;		_main
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           
  7703                           ;psect for function _TransmitString
  7704  0DE6                     _TransmitString:	
  7705                           
  7706                           ;rtty.c: 71: void TransmitString(char* message);rtty.c: 72: {;rtty.c: 76:  for (int i = 
      +                          0, counti = strlen(message); i < counti; i++)
  7707                           
  7708                           ;incstack = 0
  7709                           ; Regs used in _TransmitString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7710  0DE6  0140               	movlb	0	; select bank0
  7711  0DE7  01A8               	clrf	TransmitString@i
  7712  0DE8  01A9               	clrf	TransmitString@i+1
  7713  0DE9  0824               	movf	TransmitString@message+1,w
  7714  0DEA  00F1               	movwf	strlen@s+1
  7715  0DEB  0823               	movf	TransmitString@message,w
  7716  0DEC  00F0               	movwf	strlen@s
  7717  0DED  318B  23FD  318D   	fcall	_strlen
  7718  0DF0  0871               	movf	?_strlen+1,w
  7719  0DF1  0140               	movlb	0	; select bank0
  7720  0DF2  00A7               	movwf	TransmitString@counti+1
  7721  0DF3  0870               	movf	?_strlen,w
  7722  0DF4  00A6               	movwf	TransmitString@counti
  7723  0DF5                     l4294:	
  7724  0DF5  0829               	movf	TransmitString@i+1,w
  7725  0DF6  3A80               	xorlw	128
  7726  0DF7  00A5               	movwf	??_TransmitString
  7727  0DF8  0827               	movf	TransmitString@counti+1,w
  7728  0DF9  3A80               	xorlw	128
  7729  0DFA  0225               	subwf	??_TransmitString,w
  7730  0DFB  1D03               	skipz
  7731  0DFC  2DFF               	goto	u3765
  7732  0DFD  0826               	movf	TransmitString@counti,w
  7733  0DFE  0228               	subwf	TransmitString@i,w
  7734  0DFF                     u3765:	
  7735  0DFF  1803               	btfsc	3,0
  7736  0E00  0008               	return
  7737                           
  7738                           ;rtty.c: 77:  {;rtty.c: 78:   TransmitChar(message[i]);
  7739  0E01  0140               	movlb	0	; select bank0
  7740  0E02  0823               	movf	TransmitString@message,w
  7741  0E03  0728               	addwf	TransmitString@i,w
  7742  0E04  0084               	movwf	4
  7743  0E05  0824               	movf	TransmitString@message+1,w
  7744  0E06  3D29               	addwfc	TransmitString@i+1,w
  7745  0E07  0085               	movwf	5
  7746  0E08  0800               	movf	0,w	;code access
  7747  0E09  318E  266E  318D   	fcall	_TransmitChar
  7748                           
  7749                           ;rtty.c: 79:  }
  7750  0E0C  3001               	movlw	1
  7751  0E0D  0140               	movlb	0	; select bank0
  7752  0E0E  07A8               	addwf	TransmitString@i,f
  7753  0E0F  3000               	movlw	0
  7754  0E10  3DA9               	addwfc	TransmitString@i+1,f
  7755  0E11  2DF5               	goto	l4294
  7756  0E12                     __end_of_TransmitString:	
  7757                           
  7758                           	psect	text8
  7759  0E6E                     __ptext8:	
  7760 ;; *************** function _TransmitChar *****************
  7761 ;; Defined at:
  7762 ;;		line 49 in file "rtty.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  byte            1    wreg     unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  byte            1    0[BANK0 ] unsigned char 
  7767 ;;  i               2    1[BANK0 ] int 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7778 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7780 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7781 ;;Total ram usage:        4 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    5
  7784 ;; This function calls:
  7785 ;;		_TransmitBit
  7786 ;; This function is called by:
  7787 ;;		_TransmitString
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           
  7792                           ;psect for function _TransmitChar
  7793  0E6E                     _TransmitChar:	
  7794                           
  7795                           ;incstack = 0
  7796                           ; Regs used in _TransmitChar: [wreg+status,2+status,0+pclath+cstack]
  7797                           ;TransmitChar@byte stored from wreg
  7798  0E6E  0140               	movlb	0	; select bank0
  7799  0E6F  00A0               	movwf	TransmitChar@byte
  7800                           
  7801                           ;rtty.c: 49: void TransmitChar(char byte);rtty.c: 50: {;rtty.c: 60:     TransmitBit(0);
  7802  0E70  3000               	movlw	0
  7803  0E71  318B  23E9  318E   	fcall	_TransmitBit
  7804                           
  7805                           ;rtty.c: 62:  for (int i = 0; i < 7; i++)
  7806  0E74  0140               	movlb	0	; select bank0
  7807  0E75  01A1               	clrf	TransmitChar@i
  7808  0E76  01A2               	clrf	TransmitChar@i+1
  7809  0E77                     l3872:	
  7810                           
  7811                           ;rtty.c: 63:  {;rtty.c: 64:   TransmitBit((byte >> i) & 1);
  7812  0E77  0140               	movlb	0	; select bank0
  7813  0E78  0820               	movf	TransmitChar@byte,w
  7814  0E79  00FD               	movwf	??_TransmitChar
  7815  0E7A  0A21               	incf	TransmitChar@i,w
  7816  0E7B  2E7D               	goto	u3074
  7817  0E7C                     u3075:	
  7818  0E7C  36FD               	lsrf	??_TransmitChar,f
  7819  0E7D                     u3074:	
  7820  0E7D  0B89               	decfsz	9,f
  7821  0E7E  2E7C               	goto	u3075
  7822  0E7F  1C7D               	btfss	??_TransmitChar,0
  7823  0E80  2E83               	goto	u3080
  7824  0E81  3001               	movlw	1
  7825  0E82  2E84               	goto	u3090
  7826  0E83                     u3080:	
  7827  0E83  3000               	movlw	0
  7828  0E84                     u3090:	
  7829  0E84  318B  23E9  318E   	fcall	_TransmitBit
  7830                           
  7831                           ;rtty.c: 65:  }
  7832  0E87  3001               	movlw	1
  7833  0E88  0140               	movlb	0	; select bank0
  7834  0E89  07A1               	addwf	TransmitChar@i,f
  7835  0E8A  3000               	movlw	0
  7836  0E8B  3DA2               	addwfc	TransmitChar@i+1,f
  7837  0E8C  0822               	movf	TransmitChar@i+1,w
  7838  0E8D  3A80               	xorlw	128
  7839  0E8E  00FD               	movwf	??_TransmitChar
  7840  0E8F  3080               	movlw	128
  7841  0E90  027D               	subwf	??_TransmitChar,w
  7842  0E91  1D03               	skipz
  7843  0E92  2E95               	goto	u3105
  7844  0E93  3007               	movlw	7
  7845  0E94  0221               	subwf	TransmitChar@i,w
  7846  0E95                     u3105:	
  7847  0E95  1C03               	skipc
  7848  0E96  2E77               	goto	l3872
  7849                           
  7850                           ;rtty.c: 67:  TransmitBit(1);
  7851  0E97  3001               	movlw	1
  7852  0E98  318B  23E9  318E   	fcall	_TransmitBit
  7853                           
  7854                           ;rtty.c: 68:  TransmitBit(1);
  7855  0E9B  3001               	movlw	1
  7856  0E9C  318B  23E9         	fcall	_TransmitBit
  7857  0E9E  0008               	return
  7858  0E9F                     __end_of_TransmitChar:	
  7859                           
  7860                           	psect	text9
  7861  0BE9                     __ptext9:	
  7862 ;; *************** function _TransmitBit *****************
  7863 ;; Defined at:
  7864 ;;		line 29 in file "rtty.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  b               1    wreg     _Bool 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  b               1   12[COMMON] _Bool 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, status,2, status,0, pclath, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7882 ;;Total ram usage:        1 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    4
  7885 ;; This function calls:
  7886 ;;		_Sleep
  7887 ;; This function is called by:
  7888 ;;		_TransmitChar
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           
  7893                           ;psect for function _TransmitBit
  7894  0BE9                     _TransmitBit:	
  7895                           
  7896                           ;incstack = 0
  7897                           ; Regs used in _TransmitBit: [wreg+status,2+status,0+pclath+cstack]
  7898                           ;TransmitBit@b stored from wreg
  7899  0BE9  00FC               	movwf	TransmitBit@b
  7900                           
  7901                           ;rtty.c: 29: void TransmitBit(_Bool b);rtty.c: 30: {;rtty.c: 31:  if (b)
  7902  0BEA  087C               	movf	TransmitBit@b,w
  7903  0BEB  1903               	btfsc	3,2
  7904  0BEC  2BF0               	goto	l857
  7905                           
  7906                           ;rtty.c: 32:  {;rtty.c: 33:   do { LATAbits.LATA4 = 1; } while(0);
  7907  0BED  0140               	movlb	0	; select bank0
  7908  0BEE  1618               	bsf	24,4	;volatile
  7909  0BEF  2BF2               	goto	l3528
  7910  0BF0                     l857:	
  7911                           ;rtty.c: 36:  {;rtty.c: 37:   do { LATAbits.LATA4 = 0; } while(0);
  7912                           
  7913  0BF0  0140               	movlb	0	; select bank0
  7914  0BF1  1218               	bcf	24,4	;volatile
  7915  0BF2                     l3528:	
  7916  0BF2  3000               	movlw	0
  7917  0BF3  00F3               	movwf	Sleep@ms+3
  7918  0BF4  3000               	movlw	0
  7919  0BF5  00F2               	movwf	Sleep@ms+2
  7920  0BF6  3000               	movlw	0
  7921  0BF7  00F1               	movwf	Sleep@ms+1
  7922  0BF8  3014               	movlw	20
  7923  0BF9  00F0               	movwf	Sleep@ms
  7924  0BFA  318D  258F         	fcall	_Sleep
  7925  0BFC  0008               	return
  7926  0BFD                     __end_of_TransmitBit:	
  7927                           
  7928                           	psect	text10
  7929  0F63                     __ptext10:	
  7930 ;; *************** function _SetupGPS *****************
  7931 ;; Defined at:
  7932 ;;		line 429 in file "main.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;		None
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7950 ;;Total ram usage:        1 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; Hardware stack levels required when called:    5
  7953 ;; This function calls:
  7954 ;;		_GPS_HasAcknowledged
  7955 ;;		_GPS_SendUBX
  7956 ;;		_Sleep
  7957 ;;		_WriteGPS
  7958 ;; This function is called by:
  7959 ;;		_main
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           
  7964                           ;psect for function _SetupGPS
  7965  0F63                     _SetupGPS:	
  7966                           
  7967                           ;incstack = 0
  7968                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7969                           ;main.c: 431:     do { LATAbits.LATA5 = 0; } while(0);
  7970  0F63  0140               	movlb	0	; select bank0
  7971  0F64  1298               	bcf	24,5	;volatile
  7972  0F65                     l4194:	
  7973                           
  7974                           ;main.c: 432:     while (!gps_configured)
  7975  0F65  0141               	movlb	1	; select bank1
  7976  0F66  084E               	movf	_gps_configured^(0+128),w
  7977  0F67  1D03               	btfss	3,2
  7978  0F68  2F81               	goto	l775
  7979                           
  7980                           ;main.c: 433:     {;main.c: 434:         GPS_SendUBX(setNavFlightMode);
  7981  0F69  30A0               	movlw	(low (_setNavFlightMode| (0+256)))& (0+255)
  7982  0F6A  318C  24ED  318F   	fcall	_GPS_SendUBX
  7983                           
  7984                           ;main.c: 435:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
  7985  0F6D  30A0               	movlw	(low (_setNavFlightMode| (0+256)))& (0+255)
  7986  0F6E  3184  2461  318F   	fcall	_GPS_HasAcknowledged
  7987  0F71  00FC               	movwf	??_SetupGPS
  7988  0F72  087C               	movf	??_SetupGPS,w
  7989  0F73  0141               	movlb	1	; select bank1
  7990  0F74  00CE               	movwf	_gps_configured^(0+128)
  7991                           
  7992                           ;main.c: 436:         Sleep(500);
  7993  0F75  3000               	movlw	0
  7994  0F76  00F3               	movwf	Sleep@ms+3
  7995  0F77  3000               	movlw	0
  7996  0F78  00F2               	movwf	Sleep@ms+2
  7997  0F79  3001               	movlw	1
  7998  0F7A  00F1               	movwf	Sleep@ms+1
  7999  0F7B  30F4               	movlw	244
  8000  0F7C  00F0               	movwf	Sleep@ms
  8001  0F7D  318D  258F  318F   	fcall	_Sleep
  8002  0F80  2F65               	goto	l4194
  8003  0F81                     l775:	
  8004                           ;main.c: 438:     do { LATAbits.LATA5 = 1; } while(0);
  8005                           
  8006  0F81  0140               	movlb	0	; select bank0
  8007  0F82  1698               	bsf	24,5	;volatile
  8008                           
  8009                           ;main.c: 439:     gps_configured = 0;
  8010  0F83  0141               	movlb	1	; select bank1
  8011  0F84  01CE               	clrf	_gps_configured^(0+128)
  8012                           
  8013                           ;main.c: 441:     WriteGPS("$PUBX,40,GLL,0,0,0,0*5C\r\n");
  8014  0F85  304E               	movlw	low (STR_1| (0+32768))
  8015  0F86  00F5               	movwf	WriteGPS@message
  8016  0F87  3090               	movlw	high (STR_1| (0+32768))
  8017  0F88  00F6               	movwf	WriteGPS@message+1
  8018  0F89  318D  2514  318F   	fcall	_WriteGPS
  8019                           
  8020                           ;main.c: 442:     WriteGPS("$PUBX,40,GGA,0,0,0,0*5A\r\n");
  8021  0F8C  3034               	movlw	low (STR_2| (0+32768))
  8022  0F8D  00F5               	movwf	WriteGPS@message
  8023  0F8E  3090               	movlw	high (STR_2| (0+32768))
  8024  0F8F  00F6               	movwf	WriteGPS@message+1
  8025  0F90  318D  2514  318F   	fcall	_WriteGPS
  8026                           
  8027                           ;main.c: 443:     WriteGPS("$PUBX,40,VTG,0,0,0,0*5E\r\n");
  8028  0F93  3082               	movlw	low (STR_3| (0+32768))
  8029  0F94  00F5               	movwf	WriteGPS@message
  8030  0F95  3090               	movlw	high (STR_3| (0+32768))
  8031  0F96  00F6               	movwf	WriteGPS@message+1
  8032  0F97  318D  2514  318F   	fcall	_WriteGPS
  8033                           
  8034                           ;main.c: 444:     WriteGPS("$PUBX,40,GSV,0,0,0,0*59\r\n");
  8035  0F9A  301A               	movlw	low (STR_4| (0+32768))
  8036  0F9B  00F5               	movwf	WriteGPS@message
  8037  0F9C  3090               	movlw	high (STR_4| (0+32768))
  8038  0F9D  00F6               	movwf	WriteGPS@message+1
  8039  0F9E  318D  2514  318F   	fcall	_WriteGPS
  8040                           
  8041                           ;main.c: 445:     WriteGPS("$PUBX,40,GSA,0,0,0,0*4E\r\n");
  8042  0FA1  3068               	movlw	low (STR_5| (0+32768))
  8043  0FA2  00F5               	movwf	WriteGPS@message
  8044  0FA3  3090               	movlw	high (STR_5| (0+32768))
  8045  0FA4  00F6               	movwf	WriteGPS@message+1
  8046  0FA5  318D  2514  318F   	fcall	_WriteGPS
  8047                           
  8048                           ;main.c: 446:     WriteGPS("$PUBX,40,RMC,0,0,0,0*47\r\n");
  8049  0FA8  3000               	movlw	low (STR_6| (0+32768))
  8050  0FA9  00F5               	movwf	WriteGPS@message
  8051  0FAA  3090               	movlw	high (STR_6| (0+32768))
  8052  0FAB  00F6               	movwf	WriteGPS@message+1
  8053  0FAC  318D  2514         	fcall	_WriteGPS
  8054  0FAE  0008               	return
  8055  0FAF                     __end_of_SetupGPS:	
  8056                           
  8057                           	psect	text11
  8058  0CED                     __ptext11:	
  8059 ;; *************** function _GPS_SendUBX *****************
  8060 ;; Defined at:
  8061 ;;		line 345 in file "main.c"
  8062 ;; Parameters:    Size  Location     Type
  8063 ;;  data            1    wreg     PTR unsigned char 
  8064 ;;		 -> setNavFlightMode(44), 
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;  data            1    9[COMMON] PTR unsigned char 
  8067 ;;		 -> setNavFlightMode(44), 
  8068 ;;  i               2    7[COMMON] int 
  8069 ;;  length          2    5[COMMON] int 
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8080 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8082 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8083 ;;Total ram usage:        6 bytes
  8084 ;; Hardware stack levels used:    1
  8085 ;; Hardware stack levels required when called:    4
  8086 ;; This function calls:
  8087 ;;		_EUSART1_Write
  8088 ;;		_GetLengthUBX
  8089 ;; This function is called by:
  8090 ;;		_SetupGPS
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           
  8095                           ;psect for function _GPS_SendUBX
  8096  0CED                     _GPS_SendUBX:	
  8097                           
  8098                           ;incstack = 0
  8099                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8100                           ;GPS_SendUBX@data stored from wreg
  8101  0CED  00F9               	movwf	GPS_SendUBX@data
  8102                           
  8103                           ;main.c: 345: void GPS_SendUBX(uint8_t* data);main.c: 346: {;main.c: 347:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
  8104  0CEE  01F7               	clrf	GPS_SendUBX@i
  8105  0CEF  01F8               	clrf	GPS_SendUBX@i+1
  8106  0CF0  0879               	movf	GPS_SendUBX@data,w
  8107  0CF1  318B  23C4  318C   	fcall	_GetLengthUBX
  8108  0CF4  0871               	movf	?_GetLengthUBX+1,w
  8109  0CF5  00F6               	movwf	GPS_SendUBX@length+1
  8110  0CF6  0870               	movf	?_GetLengthUBX,w
  8111  0CF7  00F5               	movwf	GPS_SendUBX@length
  8112  0CF8                     l3754:	
  8113  0CF8  0878               	movf	GPS_SendUBX@i+1,w
  8114  0CF9  3A80               	xorlw	128
  8115  0CFA  00F4               	movwf	??_GPS_SendUBX
  8116  0CFB  0876               	movf	GPS_SendUBX@length+1,w
  8117  0CFC  3A80               	xorlw	128
  8118  0CFD  0274               	subwf	??_GPS_SendUBX,w
  8119  0CFE  1D03               	skipz
  8120  0CFF  2D02               	goto	u2955
  8121  0D00  0875               	movf	GPS_SendUBX@length,w
  8122  0D01  0277               	subwf	GPS_SendUBX@i,w
  8123  0D02                     u2955:	
  8124  0D02  1803               	btfsc	3,0
  8125  0D03  0008               	return
  8126                           
  8127                           ;main.c: 348:     {;main.c: 349:         EUSART1_Write(data[i]);
  8128  0D04  0877               	movf	GPS_SendUBX@i,w
  8129  0D05  0779               	addwf	GPS_SendUBX@data,w
  8130  0D06  00F4               	movwf	??_GPS_SendUBX
  8131  0D07  0874               	movf	??_GPS_SendUBX,w
  8132  0D08  0086               	movwf	6
  8133  0D09  3001               	movlw	1	; select bank2/3
  8134  0D0A  0087               	movwf	7
  8135  0D0B  0801               	movf	1,w
  8136  0D0C  318B  235F  318C   	fcall	_EUSART1_Write
  8137                           
  8138                           ;main.c: 350:     }
  8139  0D0F  3001               	movlw	1
  8140  0D10  07F7               	addwf	GPS_SendUBX@i,f
  8141  0D11  3000               	movlw	0
  8142  0D12  3DF8               	addwfc	GPS_SendUBX@i+1,f
  8143  0D13  2CF8               	goto	l3754
  8144  0D14                     __end_of_GPS_SendUBX:	
  8145                           
  8146                           	psect	text12
  8147  0BC4                     __ptext12:	
  8148 ;; *************** function _GetLengthUBX *****************
  8149 ;; Defined at:
  8150 ;;		line 339 in file "main.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  data            1    wreg     PTR unsigned char 
  8153 ;;		 -> setNavFlightMode(44), 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  data            1    3[COMMON] PTR unsigned char 
  8156 ;;		 -> setNavFlightMode(44), 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  2    0[COMMON] unsigned int 
  8159 ;; Registers used:
  8160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8166 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8170 ;;Total ram usage:        4 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:    3
  8173 ;; This function calls:
  8174 ;;		Nothing
  8175 ;; This function is called by:
  8176 ;;		_GPS_SendUBX
  8177 ;; This function uses a non-reentrant model
  8178 ;;
  8179                           
  8180                           
  8181                           ;psect for function _GetLengthUBX
  8182  0BC4                     _GetLengthUBX:	
  8183                           
  8184                           ;incstack = 0
  8185                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
  8186                           ;GetLengthUBX@data stored from wreg
  8187  0BC4  00F3               	movwf	GetLengthUBX@data
  8188                           
  8189                           ;main.c: 339: size_t GetLengthUBX(uint8_t* data);main.c: 340: {;main.c: 341:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
  8190  0BC5  0873               	movf	GetLengthUBX@data,w
  8191  0BC6  3E05               	addlw	5
  8192  0BC7  0086               	movwf	6
  8193  0BC8  3001               	movlw	1	; select bank2/3
  8194  0BC9  0087               	movwf	7
  8195  0BCA  0873               	movf	GetLengthUBX@data,w
  8196  0BCB  3E04               	addlw	4
  8197  0BCC  0084               	movwf	4
  8198  0BCD  3001               	movlw	1	; select bank2/3
  8199  0BCE  0085               	movwf	5
  8200  0BCF  0800               	movf	0,w
  8201  0BD0  3E08               	addlw	8
  8202  0BD1  00F0               	movwf	?_GetLengthUBX
  8203  0BD2  3000               	movlw	0
  8204  0BD3  3D01               	addwfc	1,w
  8205  0BD4  00F1               	movwf	?_GetLengthUBX+1
  8206  0BD5  0008               	return
  8207  0BD6                     __end_of_GetLengthUBX:	
  8208                           
  8209                           	psect	text13
  8210  0461                     __ptext13:	
  8211 ;; *************** function _GPS_HasAcknowledged *****************
  8212 ;; Defined at:
  8213 ;;		line 357 in file "main.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;  data            1    wreg     PTR unsigned char 
  8216 ;;		 -> setNavFlightMode(44), 
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  data            1   15[BANK0 ] PTR unsigned char 
  8219 ;;		 -> setNavFlightMode(44), 
  8220 ;;  i               1   17[BANK0 ] unsigned char 
  8221 ;;  ackPacket      10    5[BANK0 ] unsigned char [10]
  8222 ;;  startTime       4    0[BANK0 ] unsigned long 
  8223 ;;  ackByteID       1   16[BANK0 ] unsigned char 
  8224 ;;  ackByte         1    4[BANK0 ] unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      _Bool 
  8227 ;; Registers used:
  8228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8235 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8237 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8238 ;;Total ram usage:       22 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:    4
  8241 ;; This function calls:
  8242 ;;		_EUSART1_Read
  8243 ;;		_EUSART1_is_rx_ready
  8244 ;; This function is called by:
  8245 ;;		_SetupGPS
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           
  8250                           ;psect for function _GPS_HasAcknowledged
  8251  0461                     _GPS_HasAcknowledged:	
  8252                           
  8253                           ;incstack = 0
  8254                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8255                           ;GPS_HasAcknowledged@data stored from wreg
  8256  0461  0140               	movlb	0	; select bank0
  8257  0462  00AF               	movwf	GPS_HasAcknowledged@data
  8258                           
  8259                           ;main.c: 357: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 358: {;main.c: 359:     u
      +                          int8_t ackPacket[10];;main.c: 360:     uint32_t startTime = ticks;
  8260  0463  0141               	movlb	1	; select bank1
  8261  0464  0847               	movf	(_ticks+3)^(0+128),w
  8262  0465  0140               	movlb	0	; select bank0
  8263  0466  00A3               	movwf	GPS_HasAcknowledged@startTime+3
  8264  0467  0141               	movlb	1	; select bank1
  8265  0468  0846               	movf	(_ticks+2)^(0+128),w
  8266  0469  0140               	movlb	0	; select bank0
  8267  046A  00A2               	movwf	GPS_HasAcknowledged@startTime+2
  8268  046B  0141               	movlb	1	; select bank1
  8269  046C  0845               	movf	(_ticks+1)^(0+128),w
  8270  046D  0140               	movlb	0	; select bank0
  8271  046E  00A1               	movwf	GPS_HasAcknowledged@startTime+1
  8272  046F  0141               	movlb	1	; select bank1
  8273  0470  0844               	movf	_ticks^(0+128),w
  8274  0471  0140               	movlb	0	; select bank0
  8275  0472  00A0               	movwf	GPS_HasAcknowledged@startTime
  8276                           
  8277                           ;main.c: 363:     ackPacket[0] = 0xB5;
  8278  0473  30B5               	movlw	181
  8279  0474  00F0               	movwf	??_GPS_HasAcknowledged
  8280  0475  0870               	movf	??_GPS_HasAcknowledged,w
  8281  0476  00A5               	movwf	GPS_HasAcknowledged@ackPacket
  8282                           
  8283                           ;main.c: 364:     ackPacket[1] = 0x62;
  8284  0477  3062               	movlw	98
  8285  0478  00F0               	movwf	??_GPS_HasAcknowledged
  8286  0479  0870               	movf	??_GPS_HasAcknowledged,w
  8287  047A  00A6               	movwf	GPS_HasAcknowledged@ackPacket+1
  8288                           
  8289                           ;main.c: 365:     ackPacket[2] = 0x05;
  8290  047B  3005               	movlw	5
  8291  047C  00F0               	movwf	??_GPS_HasAcknowledged
  8292  047D  0870               	movf	??_GPS_HasAcknowledged,w
  8293  047E  00A7               	movwf	GPS_HasAcknowledged@ackPacket+2
  8294                           
  8295                           ;main.c: 366:     ackPacket[3] = 0x01;
  8296  047F  01A8               	clrf	GPS_HasAcknowledged@ackPacket+3
  8297  0480  0AA8               	incf	GPS_HasAcknowledged@ackPacket+3,f
  8298                           
  8299                           ;main.c: 367:     ackPacket[4] = 0x02;
  8300  0481  3002               	movlw	2
  8301  0482  00F0               	movwf	??_GPS_HasAcknowledged
  8302  0483  0870               	movf	??_GPS_HasAcknowledged,w
  8303  0484  00A9               	movwf	GPS_HasAcknowledged@ackPacket+4
  8304                           
  8305                           ;main.c: 368:     ackPacket[5] = 0x00;
  8306  0485  01AA               	clrf	GPS_HasAcknowledged@ackPacket+5
  8307                           
  8308                           ;main.c: 369:     ackPacket[6] = data[2];
  8309  0486  082F               	movf	GPS_HasAcknowledged@data,w
  8310  0487  0086               	movwf	6
  8311  0488  3001               	movlw	1	; select bank2/3
  8312  0489  0087               	movwf	7
  8313  048A  3001               	movlw	1	; select bank2/3
  8314  048B  3F42               	moviw [2]fsr1
  8315  048C  00AB               	movwf	GPS_HasAcknowledged@ackPacket+6
  8316                           
  8317                           ;main.c: 370:     ackPacket[7] = data[3];
  8318  048D  082F               	movf	GPS_HasAcknowledged@data,w
  8319  048E  0086               	movwf	6
  8320  048F  3001               	movlw	1	; select bank2/3
  8321  0490  0087               	movwf	7
  8322  0491  3001               	movlw	1	; select bank2/3
  8323  0492  3F43               	moviw [3]fsr1
  8324  0493  00AC               	movwf	GPS_HasAcknowledged@ackPacket+7
  8325                           
  8326                           ;main.c: 371:     ackPacket[8] = 0;
  8327  0494  01AD               	clrf	GPS_HasAcknowledged@ackPacket+8
  8328                           
  8329                           ;main.c: 372:     ackPacket[9] = 0;
  8330  0495  01AE               	clrf	GPS_HasAcknowledged@ackPacket+9
  8331                           
  8332                           ;main.c: 375:     for (uint8_t i = 2; i < 8; i++)
  8333  0496  3002               	movlw	2
  8334  0497  00F0               	movwf	??_GPS_HasAcknowledged
  8335  0498  0870               	movf	??_GPS_HasAcknowledged,w
  8336  0499  00B1               	movwf	GPS_HasAcknowledged@i
  8337  049A                     l3776:	
  8338                           
  8339                           ;main.c: 376:     {;main.c: 377:         ackPacket[8] = ackPacket[8] + ackPacket[i];
  8340  049A  0831               	movf	GPS_HasAcknowledged@i,w
  8341  049B  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  8342  049C  0086               	movwf	6
  8343  049D  0187               	clrf	7
  8344  049E  082D               	movf	GPS_HasAcknowledged@ackPacket+8,w
  8345  049F  0701               	addwf	1,w
  8346  04A0  00F0               	movwf	??_GPS_HasAcknowledged
  8347  04A1  0870               	movf	??_GPS_HasAcknowledged,w
  8348  04A2  00AD               	movwf	GPS_HasAcknowledged@ackPacket+8
  8349                           
  8350                           ;main.c: 378:         ackPacket[9] = ackPacket[9] + ackPacket[8];
  8351  04A3  082E               	movf	GPS_HasAcknowledged@ackPacket+9,w
  8352  04A4  072D               	addwf	GPS_HasAcknowledged@ackPacket+8,w
  8353  04A5  00F0               	movwf	??_GPS_HasAcknowledged
  8354  04A6  0870               	movf	??_GPS_HasAcknowledged,w
  8355  04A7  00AE               	movwf	GPS_HasAcknowledged@ackPacket+9
  8356                           
  8357                           ;main.c: 379:     }
  8358  04A8  3001               	movlw	1
  8359  04A9  00F0               	movwf	??_GPS_HasAcknowledged
  8360  04AA  0870               	movf	??_GPS_HasAcknowledged,w
  8361  04AB  07B1               	addwf	GPS_HasAcknowledged@i,f
  8362  04AC  3008               	movlw	8
  8363  04AD  0231               	subwf	GPS_HasAcknowledged@i,w
  8364  04AE  1C03               	skipc
  8365  04AF  2C9A               	goto	l3776
  8366  04B0                     l3784:	
  8367                           
  8368                           ;main.c: 382:     uint8_t ackByte;;main.c: 385:     uint8_t ackByteID = 0;
  8369  04B0  01B0               	clrf	GPS_HasAcknowledged@ackByteID
  8370  04B1                     l3786:	
  8371                           
  8372                           ;main.c: 389:     {;main.c: 392:         if (ackByteID > 9)
  8373  04B1  300A               	movlw	10
  8374  04B2  0140               	movlb	0	; select bank0
  8375  04B3  0230               	subwf	GPS_HasAcknowledged@ackByteID,w
  8376  04B4  1C03               	skipc
  8377  04B5  2CB8               	goto	l3792
  8378                           
  8379                           ;main.c: 393:         {;main.c: 396:             return 1;
  8380  04B6  3001               	movlw	1
  8381  04B7  0008               	return
  8382  04B8                     l3792:	
  8383                           
  8384                           ;main.c: 400:         if (ticks - startTime > 3000)
  8385  04B8  0820               	movf	GPS_HasAcknowledged@startTime,w
  8386  04B9  0141               	movlb	1	; select bank1
  8387  04BA  0244               	subwf	_ticks^(0+128),w
  8388  04BB  00F0               	movwf	??_GPS_HasAcknowledged
  8389  04BC  0140               	movlb	0	; select bank0
  8390  04BD  0821               	movf	GPS_HasAcknowledged@startTime+1,w
  8391  04BE  0141               	movlb	1	; select bank1
  8392  04BF  3B45               	subwfb	(_ticks+1)^(0+128),w
  8393  04C0  00F1               	movwf	??_GPS_HasAcknowledged+1
  8394  04C1  0140               	movlb	0	; select bank0
  8395  04C2  0822               	movf	GPS_HasAcknowledged@startTime+2,w
  8396  04C3  0141               	movlb	1	; select bank1
  8397  04C4  3B46               	subwfb	(_ticks+2)^(0+128),w
  8398  04C5  00F2               	movwf	??_GPS_HasAcknowledged+2
  8399  04C6  0140               	movlb	0	; select bank0
  8400  04C7  0823               	movf	GPS_HasAcknowledged@startTime+3,w
  8401  04C8  0141               	movlb	1	; select bank1
  8402  04C9  3B47               	subwfb	(_ticks+3)^(0+128),w
  8403  04CA  00F3               	movwf	??_GPS_HasAcknowledged+3
  8404  04CB  0873               	movf	??_GPS_HasAcknowledged+3,w
  8405  04CC  1D03               	btfss	3,2
  8406  04CD  2CD7               	goto	l3794
  8407  04CE  0872               	movf	??_GPS_HasAcknowledged+2,w
  8408  04CF  1D03               	btfss	3,2
  8409  04D0  2CD7               	goto	l3794
  8410  04D1  30B9               	movlw	185
  8411  04D2  0270               	subwf	??_GPS_HasAcknowledged,w
  8412  04D3  300B               	movlw	11
  8413  04D4  3B71               	subwfb	??_GPS_HasAcknowledged+1,w
  8414  04D5  1C03               	btfss	3,0
  8415  04D6  2CD9               	goto	l3798
  8416  04D7                     l3794:	
  8417                           
  8418                           ;main.c: 401:         {;main.c: 402:             return 0;
  8419  04D7  3000               	movlw	0
  8420  04D8  0008               	return
  8421  04D9                     l3798:	
  8422                           
  8423                           ;main.c: 406:         if (EUSART1_is_rx_ready())
  8424  04D9  318B  233A  3184   	fcall	_EUSART1_is_rx_ready
  8425  04DC  3A00               	xorlw	0
  8426  04DD  1903               	skipnz
  8427  04DE  2CB1               	goto	l3786
  8428                           
  8429                           ;main.c: 407:         {;main.c: 408:             ackByte = EUSART1_Read();
  8430  04DF  318B  2384  3184   	fcall	_EUSART1_Read
  8431  04E2  00F0               	movwf	??_GPS_HasAcknowledged
  8432  04E3  0870               	movf	??_GPS_HasAcknowledged,w
  8433  04E4  0140               	movlb	0	; select bank0
  8434  04E5  00A4               	movwf	GPS_HasAcknowledged@ackByte
  8435                           
  8436                           ;main.c: 411:             if (ackByte == ackPacket[ackByteID]) {
  8437  04E6  0830               	movf	GPS_HasAcknowledged@ackByteID,w
  8438  04E7  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  8439  04E8  0086               	movwf	6
  8440  04E9  0187               	clrf	7
  8441  04EA  0801               	movf	1,w
  8442  04EB  0624               	xorwf	GPS_HasAcknowledged@ackByte,w
  8443  04EC  1D03               	skipz
  8444  04ED  2CB0               	goto	l3784
  8445                           
  8446                           ;main.c: 412:                 ackByteID++;
  8447  04EE  3001               	movlw	1
  8448  04EF  00F0               	movwf	??_GPS_HasAcknowledged
  8449  04F0  0870               	movf	??_GPS_HasAcknowledged,w
  8450  04F1  07B0               	addwf	GPS_HasAcknowledged@ackByteID,f
  8451                           
  8452                           ;main.c: 413:             }
  8453  04F2  2CB1               	goto	l3786
  8454  04F3                     __end_of_GPS_HasAcknowledged:	
  8455                           
  8456                           	psect	text14
  8457  0BB5                     __ptext14:	
  8458 ;; *************** function _SYSTEM_Initialize *****************
  8459 ;; Defined at:
  8460 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;		None
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;		None
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2, status,0, pclath, cstack
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8478 ;;Total ram usage:        0 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; Hardware stack levels required when called:    5
  8481 ;; This function calls:
  8482 ;;		_EUSART1_Initialize
  8483 ;;		_OSCILLATOR_Initialize
  8484 ;;		_PIN_MANAGER_Initialize
  8485 ;;		_PMD_Initialize
  8486 ;;		_TMR0_Initialize
  8487 ;; This function is called by:
  8488 ;;		_main
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           
  8493                           ;psect for function _SYSTEM_Initialize
  8494  0BB5                     _SYSTEM_Initialize:	
  8495                           
  8496                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8497                           
  8498                           ;incstack = 0
  8499                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8500  0BB5  318B  237A  318B   	fcall	_PMD_Initialize
  8501                           
  8502                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8503  0BB8  318D  253C  318B   	fcall	_PIN_MANAGER_Initialize
  8504                           
  8505                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8506  0BBB  318B  2367  318B   	fcall	_OSCILLATOR_Initialize
  8507                           
  8508                           ;mcc_generated_files/mcc.c: 55:     TMR0_Initialize();
  8509  0BBE  318B  23D6  318B   	fcall	_TMR0_Initialize
  8510                           
  8511                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  8512  0BC1  318C  2481         	fcall	_EUSART1_Initialize
  8513  0BC3  0008               	return
  8514  0BC4                     __end_of_SYSTEM_Initialize:	
  8515                           
  8516                           	psect	text15
  8517  0BD6                     __ptext15:	
  8518 ;; *************** function _TMR0_Initialize *****************
  8519 ;; Defined at:
  8520 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;		None
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0, pclath, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8538 ;;Total ram usage:        0 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    4
  8541 ;; This function calls:
  8542 ;;		_TMR0_SetInterruptHandler
  8543 ;; This function is called by:
  8544 ;;		_SYSTEM_Initialize
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           
  8549                           ;psect for function _TMR0_Initialize
  8550  0BD6                     _TMR0_Initialize:	
  8551                           
  8552                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x40;
  8553                           
  8554                           ;incstack = 0
  8555                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8556  0BD6  3040               	movlw	64
  8557  0BD7  014B               	movlb	11	; select bank11
  8558  0BD8  009F               	movwf	31	;volatile
  8559                           
  8560                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8561  0BD9  30F9               	movlw	249
  8562  0BDA  009D               	movwf	29	;volatile
  8563                           
  8564                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8565  0BDB  019C               	clrf	28	;volatile
  8566                           
  8567                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8568  0BDC  014E               	movlb	14	; select bank14
  8569  0BDD  128C               	bcf	12,5	;volatile
  8570                           
  8571                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8572  0BDE  1696               	bsf	22,5	;volatile
  8573                           
  8574                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8575  0BDF  30FC               	movlw	low _TMR0_DefaultInterruptHandler
  8576  0BE0  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8577  0BE1  3007               	movlw	high _TMR0_DefaultInterruptHandler
  8578  0BE2  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8579  0BE3  318B  233F         	fcall	_TMR0_SetInterruptHandler
  8580                           
  8581                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8582  0BE5  3080               	movlw	128
  8583  0BE6  014B               	movlb	11	; select bank11
  8584  0BE7  009E               	movwf	30	;volatile
  8585  0BE8  0008               	return
  8586  0BE9                     __end_of_TMR0_Initialize:	
  8587                           
  8588                           	psect	text16
  8589  0B7A                     __ptext16:	
  8590 ;; *************** function _PMD_Initialize *****************
  8591 ;; Defined at:
  8592 ;;		line 73 in file "mcc_generated_files/mcc.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;		None
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      void 
  8599 ;; Registers used:
  8600 ;;		status,2
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8610 ;;Total ram usage:        0 bytes
  8611 ;; Hardware stack levels used:    1
  8612 ;; Hardware stack levels required when called:    3
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_SYSTEM_Initialize
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           
  8621                           ;psect for function _PMD_Initialize
  8622  0B7A                     _PMD_Initialize:	
  8623                           
  8624                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  8625                           
  8626                           ;incstack = 0
  8627                           ; Regs used in _PMD_Initialize: [status,2]
  8628  0B7A  014F               	movlb	15	; select bank15
  8629  0B7B  0196               	clrf	22	;volatile
  8630                           
  8631                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  8632  0B7C  0197               	clrf	23	;volatile
  8633                           
  8634                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  8635  0B7D  0198               	clrf	24	;volatile
  8636                           
  8637                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  8638  0B7E  0199               	clrf	25	;volatile
  8639                           
  8640                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  8641  0B7F  019A               	clrf	26	;volatile
  8642                           
  8643                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  8644  0B80  019B               	clrf	27	;volatile
  8645                           
  8646                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
  8647  0B81  019C               	clrf	28	;volatile
  8648                           
  8649                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
  8650  0B82  019D               	clrf	29	;volatile
  8651  0B83  0008               	return
  8652  0B84                     __end_of_PMD_Initialize:	
  8653                           
  8654                           	psect	text17
  8655  0D3C                     __ptext17:	
  8656 ;; *************** function _PIN_MANAGER_Initialize *****************
  8657 ;; Defined at:
  8658 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;		None
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8676 ;;Total ram usage:        0 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    3
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_SYSTEM_Initialize
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           
  8687                           ;psect for function _PIN_MANAGER_Initialize
  8688  0D3C                     _PIN_MANAGER_Initialize:	
  8689                           
  8690                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8691                           
  8692                           ;incstack = 0
  8693                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8694  0D3C  0140               	movlb	0	; select bank0
  8695  0D3D  0198               	clrf	24	;volatile
  8696                           
  8697                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8698  0D3E  0199               	clrf	25	;volatile
  8699                           
  8700                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8701  0D3F  019A               	clrf	26	;volatile
  8702                           
  8703                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x0B;
  8704  0D40  300B               	movlw	11
  8705  0D41  0092               	movwf	18	;volatile
  8706                           
  8707                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
  8708  0D42  3030               	movlw	48
  8709  0D43  0093               	movwf	19	;volatile
  8710                           
  8711                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xDF;
  8712  0D44  30DF               	movlw	223
  8713  0D45  0094               	movwf	20	;volatile
  8714                           
  8715                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  8716  0D46  30FF               	movlw	255
  8717  0D47  017E               	movlb	62	; select bank62
  8718  0D48  00CE               	movwf	78	;volatile
  8719                           
  8720                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xD0;
  8721  0D49  30D0               	movlw	208
  8722  0D4A  00C3               	movwf	67	;volatile
  8723                           
  8724                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  8725  0D4B  3037               	movlw	55
  8726  0D4C  00B8               	movwf	56	;volatile
  8727                           
  8728                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8729  0D4D  01C4               	clrf	68	;volatile
  8730                           
  8731                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8732  0D4E  01B9               	clrf	57	;volatile
  8733                           
  8734                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  8735  0D4F  01CF               	clrf	79	;volatile
  8736                           
  8737                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8738  0D50  01BA               	clrf	58	;volatile
  8739                           
  8740                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8741  0D51  01C5               	clrf	69	;volatile
  8742                           
  8743                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8744  0D52  01D0               	clrf	80	;volatile
  8745                           
  8746                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8747  0D53  3037               	movlw	55
  8748  0D54  00BB               	movwf	59	;volatile
  8749                           
  8750                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8751  0D55  30F0               	movlw	240
  8752  0D56  00C6               	movwf	70	;volatile
  8753                           
  8754                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8755  0D57  30FF               	movlw	255
  8756  0D58  00D1               	movwf	81	;volatile
  8757                           
  8758                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  8759  0D59  303F               	movlw	63
  8760  0D5A  00BC               	movwf	60	;volatile
  8761                           
  8762                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  8763  0D5B  30F0               	movlw	240
  8764  0D5C  00C7               	movwf	71	;volatile
  8765                           
  8766                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  8767  0D5D  30FF               	movlw	255
  8768  0D5E  00D2               	movwf	82	;volatile
  8769                           
  8770                           ;mcc_generated_files/pin_manager.c: 113:     RB7PPS = 0x0F;
  8771  0D5F  300F               	movlw	15
  8772  0D60  009F               	movwf	31	;volatile
  8773                           
  8774                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0D;
  8775  0D61  300D               	movlw	13
  8776  0D62  017D               	movlb	61	; select bank61
  8777  0D63  00CB               	movwf	75	;volatile
  8778  0D64  0008               	return
  8779  0D65                     __end_of_PIN_MANAGER_Initialize:	
  8780                           
  8781                           	psect	text18
  8782  0B67                     __ptext18:	
  8783 ;; *************** function _OSCILLATOR_Initialize *****************
  8784 ;; Defined at:
  8785 ;;		line 59 in file "mcc_generated_files/mcc.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;		None
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      void 
  8792 ;; Registers used:
  8793 ;;		wreg, status,2
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8803 ;;Total ram usage:        0 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:    3
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_SYSTEM_Initialize
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           
  8814                           ;psect for function _OSCILLATOR_Initialize
  8815  0B67                     _OSCILLATOR_Initialize:	
  8816                           
  8817                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  8818                           
  8819                           ;incstack = 0
  8820                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8821  0B67  3062               	movlw	98
  8822  0B68  0151               	movlb	17	; select bank17
  8823  0B69  008D               	movwf	13	;volatile
  8824                           
  8825                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  8826  0B6A  018F               	clrf	15	;volatile
  8827                           
  8828                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  8829  0B6B  0191               	clrf	17	;volatile
  8830                           
  8831                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x02;
  8832  0B6C  3002               	movlw	2
  8833  0B6D  0093               	movwf	19	;volatile
  8834                           
  8835                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  8836  0B6E  0192               	clrf	18	;volatile
  8837  0B6F  0008               	return
  8838  0B70                     __end_of_OSCILLATOR_Initialize:	
  8839                           
  8840                           	psect	text19
  8841  0C81                     __ptext19:	
  8842 ;; *************** function _EUSART1_Initialize *****************
  8843 ;; Defined at:
  8844 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;		None
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0, pclath, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8862 ;;Total ram usage:        0 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    4
  8865 ;; This function calls:
  8866 ;;		_EUSART1_SetErrorHandler
  8867 ;;		_EUSART1_SetFramingErrorHandler
  8868 ;;		_EUSART1_SetOverrunErrorHandler
  8869 ;; This function is called by:
  8870 ;;		_SYSTEM_Initialize
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           
  8875                           ;psect for function _EUSART1_Initialize
  8876  0C81                     _EUSART1_Initialize:	
  8877                           
  8878                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  8879                           
  8880                           ;incstack = 0
  8881                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8882  0C81  3008               	movlw	8
  8883  0C82  0142               	movlb	2	; select bank2
  8884  0C83  009F               	movwf	31	;volatile
  8885                           
  8886                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  8887  0C84  3090               	movlw	144
  8888  0C85  009D               	movwf	29	;volatile
  8889                           
  8890                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  8891  0C86  3024               	movlw	36
  8892  0C87  009E               	movwf	30	;volatile
  8893                           
  8894                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x19;
  8895  0C88  3019               	movlw	25
  8896  0C89  009B               	movwf	27	;volatile
  8897                           
  8898                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  8899  0C8A  019C               	clrf	28	;volatile
  8900                           
  8901                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8902  0C8B  3000               	movlw	0
  8903  0C8C  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8904  0C8D  3000               	movlw	0
  8905  0C8E  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8906  0C8F  318B  234B  318C   	fcall	_EUSART1_SetFramingErrorHandler
  8907                           
  8908                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8909  0C92  3000               	movlw	0
  8910  0C93  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8911  0C94  3000               	movlw	0
  8912  0C95  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8913  0C96  318B  2351  318C   	fcall	_EUSART1_SetOverrunErrorHandler
  8914                           
  8915                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8916  0C99  3000               	movlw	0
  8917  0C9A  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8918  0C9B  3000               	movlw	0
  8919  0C9C  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8920  0C9D  318B  2345         	fcall	_EUSART1_SetErrorHandler
  8921                           
  8922                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8923  0C9F  0141               	movlb	1	; select bank1
  8924  0CA0  01CF               	clrf	_eusart1RxLastError^(0+128)	;volatile
  8925  0CA1  0008               	return
  8926  0CA2                     __end_of_EUSART1_Initialize:	
  8927                           
  8928                           	psect	text20
  8929  0B51                     __ptext20:	
  8930 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8931 ;; Defined at:
  8932 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8935 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;		None
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8951 ;;Total ram usage:        2 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:    3
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		_EUSART1_Initialize
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           
  8962                           ;psect for function _EUSART1_SetOverrunErrorHandler
  8963  0B51                     _EUSART1_SetOverrunErrorHandler:	
  8964                           
  8965                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  8966                           
  8967                           ;incstack = 0
  8968                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  8969  0B51  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  8970  0B52  0141               	movlb	1	; select bank1
  8971  0B53  00EB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  8972  0B54  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  8973  0B55  00EA               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  8974  0B56  0008               	return
  8975  0B57                     __end_of_EUSART1_SetOverrunErrorHandler:	
  8976                           
  8977                           	psect	text21
  8978  0B4B                     __ptext21:	
  8979 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8980 ;; Defined at:
  8981 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8984 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		wreg
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9000 ;;Total ram usage:        2 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:    3
  9003 ;; This function calls:
  9004 ;;		Nothing
  9005 ;; This function is called by:
  9006 ;;		_EUSART1_Initialize
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           
  9011                           ;psect for function _EUSART1_SetFramingErrorHandler
  9012  0B4B                     _EUSART1_SetFramingErrorHandler:	
  9013                           
  9014                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  9015                           
  9016                           ;incstack = 0
  9017                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9018  0B4B  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9019  0B4C  0141               	movlb	1	; select bank1
  9020  0B4D  00ED               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  9021  0B4E  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9022  0B4F  00EC               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  9023  0B50  0008               	return
  9024  0B51                     __end_of_EUSART1_SetFramingErrorHandler:	
  9025                           
  9026                           	psect	text22
  9027  0B45                     __ptext22:	
  9028 ;; *************** function _EUSART1_SetErrorHandler *****************
  9029 ;; Defined at:
  9030 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  9033 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;		None
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  1    wreg      void 
  9038 ;; Registers used:
  9039 ;;		wreg
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9049 ;;Total ram usage:        2 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:    3
  9052 ;; This function calls:
  9053 ;;		Nothing
  9054 ;; This function is called by:
  9055 ;;		_EUSART1_Initialize
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           
  9060                           ;psect for function _EUSART1_SetErrorHandler
  9061  0B45                     _EUSART1_SetErrorHandler:	
  9062                           
  9063                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  9064                           
  9065                           ;incstack = 0
  9066                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9067  0B45  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9068  0B46  0142               	movlb	2	; select bank2
  9069  0B47  00EE               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  9070  0B48  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9071  0B49  00ED               	movwf	_EUSART1_ErrorHandler^(0+256)
  9072  0B4A  0008               	return
  9073  0B4B                     __end_of_EUSART1_SetErrorHandler:	
  9074                           
  9075                           	psect	text23
  9076  0042                     __ptext23:	
  9077 ;; *************** function _PollGPS *****************
  9078 ;; Defined at:
  9079 ;;		line 509 in file "main.c"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;		None
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  byte            1   38[BANK0 ] unsigned char 
  9084 ;;  i               2   39[BANK0 ] int 
  9085 ;;  counti          2   33[BANK0 ] int 
  9086 ;;  startTime       4   29[BANK0 ] unsigned long 
  9087 ;;  index           2   41[BANK0 ] int 
  9088 ;;  eusart_compl    1   37[BANK0 ] _Bool 
  9089 ;;  success         1   35[BANK0 ] _Bool 
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      _Bool 
  9092 ;; Registers used:
  9093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9100 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9101 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9102 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9103 ;;Total ram usage:       18 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; Hardware stack levels required when called:    7
  9106 ;; This function calls:
  9107 ;;		_ClearNMEA
  9108 ;;		_EUSART1_Read
  9109 ;;		_EUSART1_is_rx_ready
  9110 ;;		_GetAtRowCSV
  9111 ;;		_Insert
  9112 ;;		_InsertString
  9113 ;;		_InsertTxData
  9114 ;;		_InsertTxDataSep
  9115 ;;		_WriteGPS
  9116 ;;		_strcmp
  9117 ;;		_strlen
  9118 ;; This function is called by:
  9119 ;;		_main
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           
  9124                           ;psect for function _PollGPS
  9125  0042                     _PollGPS:	
  9126                           
  9127                           ;main.c: 511:     _Bool success = 0;
  9128                           
  9129                           ;incstack = 0
  9130                           ; Regs used in _PollGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9131  0042  0140               	movlb	0	; select bank0
  9132  0043  01C3               	clrf	PollGPS@success
  9133                           
  9134                           ;main.c: 512:     uint32_t startTime = ticks;
  9135  0044  0141               	movlb	1	; select bank1
  9136  0045  0847               	movf	(_ticks+3)^(0+128),w
  9137  0046  0140               	movlb	0	; select bank0
  9138  0047  00C0               	movwf	PollGPS@startTime+3
  9139  0048  0141               	movlb	1	; select bank1
  9140  0049  0846               	movf	(_ticks+2)^(0+128),w
  9141  004A  0140               	movlb	0	; select bank0
  9142  004B  00BF               	movwf	PollGPS@startTime+2
  9143  004C  0141               	movlb	1	; select bank1
  9144  004D  0845               	movf	(_ticks+1)^(0+128),w
  9145  004E  0140               	movlb	0	; select bank0
  9146  004F  00BE               	movwf	PollGPS@startTime+1
  9147  0050  0141               	movlb	1	; select bank1
  9148  0051  0844               	movf	_ticks^(0+128),w
  9149  0052  0140               	movlb	0	; select bank0
  9150  0053  00BD               	movwf	PollGPS@startTime
  9151                           
  9152                           ;main.c: 515:     ClearNMEA();
  9153  0054  318C  2464  3180   	fcall	_ClearNMEA
  9154                           
  9155                           ;main.c: 518:     int index = 0;
  9156  0057  0140               	movlb	0	; select bank0
  9157  0058  01C9               	clrf	PollGPS@index
  9158  0059  01CA               	clrf	PollGPS@index+1
  9159                           
  9160                           ;main.c: 521:     _Bool eusart_complete = 0;
  9161  005A  01C5               	clrf	PollGPS@eusart_complete
  9162                           
  9163                           ;main.c: 524:     WriteGPS("$PUBX,00*33\r\n");
  9164  005B  309C               	movlw	low (STR_7| (0+32768))
  9165  005C  00F5               	movwf	WriteGPS@message
  9166  005D  3090               	movlw	high (STR_7| (0+32768))
  9167  005E  00F6               	movwf	WriteGPS@message+1
  9168  005F  318D  2514  3180   	fcall	_WriteGPS
  9169  0062                     l4268:	
  9170                           ;main.c: 527:     while (ticks - startTime < 3000)
  9171                           
  9172                           
  9173                           ;main.c: 527:     while (ticks - startTime < 3000)
  9174  0062  0140               	movlb	0	; select bank0
  9175  0063  083D               	movf	PollGPS@startTime,w
  9176  0064  0141               	movlb	1	; select bank1
  9177  0065  0244               	subwf	_ticks^(0+128),w
  9178  0066  0140               	movlb	0	; select bank0
  9179  0067  00B9               	movwf	??_PollGPS
  9180  0068  083E               	movf	PollGPS@startTime+1,w
  9181  0069  0141               	movlb	1	; select bank1
  9182  006A  3B45               	subwfb	(_ticks+1)^(0+128),w
  9183  006B  0140               	movlb	0	; select bank0
  9184  006C  00BA               	movwf	??_PollGPS+1
  9185  006D  083F               	movf	PollGPS@startTime+2,w
  9186  006E  0141               	movlb	1	; select bank1
  9187  006F  3B46               	subwfb	(_ticks+2)^(0+128),w
  9188  0070  0140               	movlb	0	; select bank0
  9189  0071  00BB               	movwf	??_PollGPS+2
  9190  0072  0840               	movf	PollGPS@startTime+3,w
  9191  0073  0141               	movlb	1	; select bank1
  9192  0074  3B47               	subwfb	(_ticks+3)^(0+128),w
  9193  0075  0140               	movlb	0	; select bank0
  9194  0076  00BC               	movwf	??_PollGPS+3
  9195  0077  083C               	movf	??_PollGPS+3,w
  9196  0078  1D03               	btfss	3,2
  9197  0079  2A70               	goto	l4270
  9198  007A  083B               	movf	??_PollGPS+2,w
  9199  007B  1D03               	btfss	3,2
  9200  007C  2A70               	goto	l4270
  9201  007D  30B8               	movlw	184
  9202  007E  0239               	subwf	??_PollGPS,w
  9203  007F  300B               	movlw	11
  9204  0080  3B3A               	subwfb	??_PollGPS+1,w
  9205  0081  1803               	btfsc	3,0
  9206  0082  2A70               	goto	l4270
  9207                           
  9208                           ;main.c: 528:     {;main.c: 530:         if (eusart_complete)
  9209  0083  0845               	movf	PollGPS@eusart_complete,w
  9210  0084  1903               	btfsc	3,2
  9211  0085  2A48               	goto	l4256
  9212                           
  9213                           ;main.c: 531:         {;main.c: 532:             index = strlen(txdata);
  9214  0086  3064               	movlw	100
  9215  0087  00F0               	movwf	strlen@s
  9216  0088  3027               	movlw	39
  9217  0089  00F1               	movwf	strlen@s+1
  9218  008A  318B  23FD  3180   	fcall	_strlen
  9219  008D  0871               	movf	?_strlen+1,w
  9220  008E  0140               	movlb	0	; select bank0
  9221  008F  00CA               	movwf	PollGPS@index+1
  9222  0090  0870               	movf	?_strlen,w
  9223  0091  00C9               	movwf	PollGPS@index
  9224                           
  9225                           ;main.c: 534:             for (int i = 0, counti = strlen(GetAtRowCSV(nmea_data, PUBX_TI
      +                          ME)); i < counti; i++)
  9226  0092  01C7               	clrf	PollGPS@i
  9227  0093  01C8               	clrf	PollGPS@i+1
  9228  0094  30D8               	movlw	216
  9229  0095  00F6               	movwf	GetAtRowCSV@src
  9230  0096  3026               	movlw	38
  9231  0097  00F7               	movwf	GetAtRowCSV@src+1
  9232  0098  3000               	movlw	0
  9233  0099  00F9               	movwf	GetAtRowCSV@column+1
  9234  009A  3002               	movlw	2
  9235  009B  00F8               	movwf	GetAtRowCSV@column
  9236  009C  3186  2644  3180   	fcall	_GetAtRowCSV
  9237  009F  0140               	movlb	0	; select bank0
  9238  00A0  00B9               	movwf	??_PollGPS
  9239  00A1  0839               	movf	??_PollGPS,w
  9240  00A2  00C4               	movwf	_PollGPS$2657
  9241  00A3  0844               	movf	_PollGPS$2657,w
  9242  00A4  00F0               	movwf	strlen@s
  9243  00A5  3000               	movlw	0
  9244  00A6  00F1               	movwf	strlen@s+1
  9245  00A7  318B  23FD  3180   	fcall	_strlen
  9246  00AA  0871               	movf	?_strlen+1,w
  9247  00AB  0140               	movlb	0	; select bank0
  9248  00AC  00C2               	movwf	PollGPS@counti+1
  9249  00AD  0870               	movf	?_strlen,w
  9250  00AE  00C1               	movwf	PollGPS@counti
  9251  00AF                     l4242:	
  9252  00AF  0848               	movf	PollGPS@i+1,w
  9253  00B0  3A80               	xorlw	128
  9254  00B1  00B9               	movwf	??_PollGPS
  9255  00B2  0842               	movf	PollGPS@counti+1,w
  9256  00B3  3A80               	xorlw	128
  9257  00B4  0239               	subwf	??_PollGPS,w
  9258  00B5  1D03               	skipz
  9259  00B6  28B9               	goto	u3705
  9260  00B7  0841               	movf	PollGPS@counti,w
  9261  00B8  0247               	subwf	PollGPS@i,w
  9262  00B9                     u3705:	
  9263  00B9  1803               	btfsc	3,0
  9264  00BA  290C               	goto	l4244
  9265                           
  9266                           ;main.c: 535:             {;main.c: 536:                 if (i < 6)
  9267  00BB  0140               	movlb	0	; select bank0
  9268  00BC  0848               	movf	PollGPS@i+1,w
  9269  00BD  3A80               	xorlw	128
  9270  00BE  00B9               	movwf	??_PollGPS
  9271  00BF  3080               	movlw	128
  9272  00C0  0239               	subwf	??_PollGPS,w
  9273  00C1  1D03               	skipz
  9274  00C2  28C5               	goto	u3675
  9275  00C3  3006               	movlw	6
  9276  00C4  0247               	subwf	PollGPS@i,w
  9277  00C5                     u3675:	
  9278  00C5  1803               	skipnc
  9279  00C6  2906               	goto	l4240
  9280                           
  9281                           ;main.c: 537:                 {;main.c: 538:                     if (i == 2 || i == 4)
  9282  00C7  3002               	movlw	2
  9283  00C8  0140               	movlb	0	; select bank0
  9284  00C9  0647               	xorwf	PollGPS@i,w
  9285  00CA  0448               	iorwf	PollGPS@i+1,w
  9286  00CB  1903               	btfsc	3,2
  9287  00CC  28D2               	goto	l4238
  9288  00CD  3004               	movlw	4
  9289  00CE  0647               	xorwf	PollGPS@i,w
  9290  00CF  0448               	iorwf	PollGPS@i+1,w
  9291  00D0  1D03               	btfss	3,2
  9292  00D1  28EA               	goto	l799
  9293  00D2                     l4238:	
  9294                           
  9295                           ;main.c: 539:                     {;main.c: 540:                         index = Insert(
      +                          txdata, ':', index, 140);
  9296  00D2  3064               	movlw	100
  9297  00D3  00F5               	movwf	Insert@dest
  9298  00D4  3027               	movlw	39
  9299  00D5  00F6               	movwf	Insert@dest+1
  9300  00D6  303A               	movlw	58
  9301  00D7  00B9               	movwf	??_PollGPS
  9302  00D8  0839               	movf	??_PollGPS,w
  9303  00D9  00F7               	movwf	Insert@src
  9304  00DA  084A               	movf	PollGPS@index+1,w
  9305  00DB  00F9               	movwf	Insert@index+1
  9306  00DC  0849               	movf	PollGPS@index,w
  9307  00DD  00F8               	movwf	Insert@index
  9308  00DE  308C               	movlw	140
  9309  00DF  00FA               	movwf	Insert@destLimit
  9310  00E0  3000               	movlw	0
  9311  00E1  00FB               	movwf	Insert@destLimit+1
  9312  00E2  3185  2569  3180   	fcall	_Insert
  9313  00E5  0876               	movf	?_Insert+1,w
  9314  00E6  0140               	movlb	0	; select bank0
  9315  00E7  00CA               	movwf	PollGPS@index+1
  9316  00E8  0875               	movf	?_Insert,w
  9317  00E9  00C9               	movwf	PollGPS@index
  9318  00EA                     l799:	
  9319                           ;main.c: 541:                     }
  9320                           
  9321                           
  9322                           ;main.c: 542:                     index = Insert(txdata, csvField[i], index, 140);
  9323  00EA  3064               	movlw	100
  9324  00EB  00F5               	movwf	Insert@dest
  9325  00EC  3027               	movlw	39
  9326  00ED  00F6               	movwf	Insert@dest+1
  9327  00EE  0847               	movf	PollGPS@i,w
  9328  00EF  3ED0               	addlw	(low (_csvField| 0))& (0+255)
  9329  00F0  0086               	movwf	6
  9330  00F1  0187               	clrf	7
  9331  00F2  0801               	movf	1,w
  9332  00F3  00B9               	movwf	??_PollGPS
  9333  00F4  0839               	movf	??_PollGPS,w
  9334  00F5  00F7               	movwf	Insert@src
  9335  00F6  084A               	movf	PollGPS@index+1,w
  9336  00F7  00F9               	movwf	Insert@index+1
  9337  00F8  0849               	movf	PollGPS@index,w
  9338  00F9  00F8               	movwf	Insert@index
  9339  00FA  308C               	movlw	140
  9340  00FB  00FA               	movwf	Insert@destLimit
  9341  00FC  3000               	movlw	0
  9342  00FD  00FB               	movwf	Insert@destLimit+1
  9343  00FE  3185  2569  3180   	fcall	_Insert
  9344  0101  0876               	movf	?_Insert+1,w
  9345  0102  0140               	movlb	0	; select bank0
  9346  0103  00CA               	movwf	PollGPS@index+1
  9347  0104  0875               	movf	?_Insert,w
  9348  0105  00C9               	movwf	PollGPS@index
  9349  0106                     l4240:	
  9350                           
  9351                           ;main.c: 544:             }
  9352  0106  3001               	movlw	1
  9353  0107  0140               	movlb	0	; select bank0
  9354  0108  07C7               	addwf	PollGPS@i,f
  9355  0109  3000               	movlw	0
  9356  010A  3DC8               	addwfc	PollGPS@i+1,f
  9357  010B  28AF               	goto	l4242
  9358  010C                     l4244:	
  9359                           
  9360                           ;main.c: 545:             index = InsertTxDataSep(index);
  9361  010C  0140               	movlb	0	; select bank0
  9362  010D  084A               	movf	PollGPS@index+1,w
  9363  010E  00FD               	movwf	InsertTxDataSep@index+1
  9364  010F  0849               	movf	PollGPS@index,w
  9365  0110  00FC               	movwf	InsertTxDataSep@index
  9366  0111  318C  2414  3180   	fcall	_InsertTxDataSep
  9367  0114  087D               	movf	?_InsertTxDataSep+1,w
  9368  0115  0140               	movlb	0	; select bank0
  9369  0116  00CA               	movwf	PollGPS@index+1
  9370  0117  087C               	movf	?_InsertTxDataSep,w
  9371  0118  00C9               	movwf	PollGPS@index
  9372                           
  9373                           ;main.c: 547:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_NS), "S") == 0)
  9374  0119  30B6               	movlw	low (STR_8| (0+32768))
  9375  011A  00FB               	movwf	strcmp@r
  9376  011B  3090               	movlw	high (STR_8| (0+32768))
  9377  011C  00FC               	movwf	strcmp@r+1
  9378  011D  30D8               	movlw	216
  9379  011E  00F6               	movwf	GetAtRowCSV@src
  9380  011F  3026               	movlw	38
  9381  0120  00F7               	movwf	GetAtRowCSV@src+1
  9382  0121  3000               	movlw	0
  9383  0122  00F9               	movwf	GetAtRowCSV@column+1
  9384  0123  3004               	movlw	4
  9385  0124  00F8               	movwf	GetAtRowCSV@column
  9386  0125  3186  2644  3180   	fcall	_GetAtRowCSV
  9387  0128  318D  25BA  3180   	fcall	_strcmp
  9388  012B  087B               	movf	?_strcmp,w
  9389  012C  047C               	iorwf	?_strcmp+1,w
  9390  012D  1D03               	btfss	3,2
  9391  012E  2948               	goto	l803
  9392                           
  9393                           ;main.c: 548:             {;main.c: 549:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
  9394  012F  3064               	movlw	100
  9395  0130  00F5               	movwf	Insert@dest
  9396  0131  3027               	movlw	39
  9397  0132  00F6               	movwf	Insert@dest+1
  9398  0133  302D               	movlw	45
  9399  0134  0140               	movlb	0	; select bank0
  9400  0135  00B9               	movwf	??_PollGPS
  9401  0136  0839               	movf	??_PollGPS,w
  9402  0137  00F7               	movwf	Insert@src
  9403  0138  084A               	movf	PollGPS@index+1,w
  9404  0139  00F9               	movwf	Insert@index+1
  9405  013A  0849               	movf	PollGPS@index,w
  9406  013B  00F8               	movwf	Insert@index
  9407  013C  308C               	movlw	140
  9408  013D  00FA               	movwf	Insert@destLimit
  9409  013E  3000               	movlw	0
  9410  013F  00FB               	movwf	Insert@destLimit+1
  9411  0140  3185  2569  3180   	fcall	_Insert
  9412  0143  0876               	movf	?_Insert+1,w
  9413  0144  0140               	movlb	0	; select bank0
  9414  0145  00CA               	movwf	PollGPS@index+1
  9415  0146  0875               	movf	?_Insert,w
  9416  0147  00C9               	movwf	PollGPS@index
  9417  0148                     l803:	
  9418                           ;main.c: 550:             }
  9419                           
  9420                           
  9421                           ;main.c: 551:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LAT),
      +                           index, 140);
  9422  0148  3064               	movlw	100
  9423  0149  0140               	movlb	0	; select bank0
  9424  014A  00A9               	movwf	InsertString@dest
  9425  014B  3027               	movlw	39
  9426  014C  00AA               	movwf	InsertString@dest+1
  9427  014D  30D8               	movlw	216
  9428  014E  00F6               	movwf	GetAtRowCSV@src
  9429  014F  3026               	movlw	38
  9430  0150  00F7               	movwf	GetAtRowCSV@src+1
  9431  0151  3000               	movlw	0
  9432  0152  00F9               	movwf	GetAtRowCSV@column+1
  9433  0153  3003               	movlw	3
  9434  0154  00F8               	movwf	GetAtRowCSV@column
  9435  0155  3186  2644  3180   	fcall	_GetAtRowCSV
  9436  0158  0140               	movlb	0	; select bank0
  9437  0159  00AB               	movwf	InsertString@src
  9438  015A  3000               	movlw	0
  9439  015B  00AC               	movwf	InsertString@src+1
  9440  015C  084A               	movf	PollGPS@index+1,w
  9441  015D  00AE               	movwf	InsertString@index+1
  9442  015E  0849               	movf	PollGPS@index,w
  9443  015F  00AD               	movwf	InsertString@index
  9444  0160  308C               	movlw	140
  9445  0161  00AF               	movwf	InsertString@destLimit
  9446  0162  3000               	movlw	0
  9447  0163  00B0               	movwf	InsertString@destLimit+1
  9448  0164  3187  27AA  3180   	fcall	_InsertString
  9449  0167  0140               	movlb	0	; select bank0
  9450  0168  082A               	movf	?_InsertString+1,w
  9451  0169  00CA               	movwf	PollGPS@index+1
  9452  016A  0829               	movf	?_InsertString,w
  9453  016B  00C9               	movwf	PollGPS@index
  9454                           
  9455                           ;main.c: 552:             index = InsertTxDataSep(index);
  9456  016C  084A               	movf	PollGPS@index+1,w
  9457  016D  00FD               	movwf	InsertTxDataSep@index+1
  9458  016E  0849               	movf	PollGPS@index,w
  9459  016F  00FC               	movwf	InsertTxDataSep@index
  9460  0170  318C  2414  3180   	fcall	_InsertTxDataSep
  9461  0173  087D               	movf	?_InsertTxDataSep+1,w
  9462  0174  0140               	movlb	0	; select bank0
  9463  0175  00CA               	movwf	PollGPS@index+1
  9464  0176  087C               	movf	?_InsertTxDataSep,w
  9465  0177  00C9               	movwf	PollGPS@index
  9466                           
  9467                           ;main.c: 554:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_EW), "W") == 0)
  9468  0178  30B8               	movlw	low (STR_9| (0+32768))
  9469  0179  00FB               	movwf	strcmp@r
  9470  017A  3090               	movlw	high (STR_9| (0+32768))
  9471  017B  00FC               	movwf	strcmp@r+1
  9472  017C  30D8               	movlw	216
  9473  017D  00F6               	movwf	GetAtRowCSV@src
  9474  017E  3026               	movlw	38
  9475  017F  00F7               	movwf	GetAtRowCSV@src+1
  9476  0180  3000               	movlw	0
  9477  0181  00F9               	movwf	GetAtRowCSV@column+1
  9478  0182  3006               	movlw	6
  9479  0183  00F8               	movwf	GetAtRowCSV@column
  9480  0184  3186  2644  3180   	fcall	_GetAtRowCSV
  9481  0187  318D  25BA  3180   	fcall	_strcmp
  9482  018A  087B               	movf	?_strcmp,w
  9483  018B  047C               	iorwf	?_strcmp+1,w
  9484  018C  1D03               	btfss	3,2
  9485  018D  29A7               	goto	l804
  9486                           
  9487                           ;main.c: 555:             {;main.c: 556:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
  9488  018E  3064               	movlw	100
  9489  018F  00F5               	movwf	Insert@dest
  9490  0190  3027               	movlw	39
  9491  0191  00F6               	movwf	Insert@dest+1
  9492  0192  302D               	movlw	45
  9493  0193  0140               	movlb	0	; select bank0
  9494  0194  00B9               	movwf	??_PollGPS
  9495  0195  0839               	movf	??_PollGPS,w
  9496  0196  00F7               	movwf	Insert@src
  9497  0197  084A               	movf	PollGPS@index+1,w
  9498  0198  00F9               	movwf	Insert@index+1
  9499  0199  0849               	movf	PollGPS@index,w
  9500  019A  00F8               	movwf	Insert@index
  9501  019B  308C               	movlw	140
  9502  019C  00FA               	movwf	Insert@destLimit
  9503  019D  3000               	movlw	0
  9504  019E  00FB               	movwf	Insert@destLimit+1
  9505  019F  3185  2569  3180   	fcall	_Insert
  9506  01A2  0876               	movf	?_Insert+1,w
  9507  01A3  0140               	movlb	0	; select bank0
  9508  01A4  00CA               	movwf	PollGPS@index+1
  9509  01A5  0875               	movf	?_Insert,w
  9510  01A6  00C9               	movwf	PollGPS@index
  9511  01A7                     l804:	
  9512                           ;main.c: 557:             }
  9513                           
  9514                           
  9515                           ;main.c: 558:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LONG)
      +                          , index, 140);
  9516  01A7  3064               	movlw	100
  9517  01A8  0140               	movlb	0	; select bank0
  9518  01A9  00A9               	movwf	InsertString@dest
  9519  01AA  3027               	movlw	39
  9520  01AB  00AA               	movwf	InsertString@dest+1
  9521  01AC  30D8               	movlw	216
  9522  01AD  00F6               	movwf	GetAtRowCSV@src
  9523  01AE  3026               	movlw	38
  9524  01AF  00F7               	movwf	GetAtRowCSV@src+1
  9525  01B0  3000               	movlw	0
  9526  01B1  00F9               	movwf	GetAtRowCSV@column+1
  9527  01B2  3005               	movlw	5
  9528  01B3  00F8               	movwf	GetAtRowCSV@column
  9529  01B4  3186  2644  3180   	fcall	_GetAtRowCSV
  9530  01B7  0140               	movlb	0	; select bank0
  9531  01B8  00AB               	movwf	InsertString@src
  9532  01B9  3000               	movlw	0
  9533  01BA  00AC               	movwf	InsertString@src+1
  9534  01BB  084A               	movf	PollGPS@index+1,w
  9535  01BC  00AE               	movwf	InsertString@index+1
  9536  01BD  0849               	movf	PollGPS@index,w
  9537  01BE  00AD               	movwf	InsertString@index
  9538  01BF  308C               	movlw	140
  9539  01C0  00AF               	movwf	InsertString@destLimit
  9540  01C1  3000               	movlw	0
  9541  01C2  00B0               	movwf	InsertString@destLimit+1
  9542  01C3  3187  27AA  3180   	fcall	_InsertString
  9543  01C6  0140               	movlb	0	; select bank0
  9544  01C7  082A               	movf	?_InsertString+1,w
  9545  01C8  00CA               	movwf	PollGPS@index+1
  9546  01C9  0829               	movf	?_InsertString,w
  9547  01CA  00C9               	movwf	PollGPS@index
  9548                           
  9549                           ;main.c: 559:             index = InsertTxDataSep(index);
  9550  01CB  084A               	movf	PollGPS@index+1,w
  9551  01CC  00FD               	movwf	InsertTxDataSep@index+1
  9552  01CD  0849               	movf	PollGPS@index,w
  9553  01CE  00FC               	movwf	InsertTxDataSep@index
  9554  01CF  318C  2414  3180   	fcall	_InsertTxDataSep
  9555  01D2  087D               	movf	?_InsertTxDataSep+1,w
  9556  01D3  0140               	movlb	0	; select bank0
  9557  01D4  00CA               	movwf	PollGPS@index+1
  9558  01D5  087C               	movf	?_InsertTxDataSep,w
  9559  01D6  00C9               	movwf	PollGPS@index
  9560                           
  9561                           ;main.c: 561:             index = InsertTxData(index, PUBX_ALT);
  9562  01D7  084A               	movf	PollGPS@index+1,w
  9563  01D8  00B6               	movwf	InsertTxData@index+1
  9564  01D9  0849               	movf	PollGPS@index,w
  9565  01DA  00B5               	movwf	InsertTxData@index
  9566  01DB  3000               	movlw	0
  9567  01DC  00B8               	movwf	InsertTxData@field+1
  9568  01DD  3007               	movlw	7
  9569  01DE  00B7               	movwf	InsertTxData@field
  9570  01DF  318E  263E  3180   	fcall	_InsertTxData
  9571  01E2  0140               	movlb	0	; select bank0
  9572  01E3  0836               	movf	?_InsertTxData+1,w
  9573  01E4  00CA               	movwf	PollGPS@index+1
  9574  01E5  0835               	movf	?_InsertTxData,w
  9575  01E6  00C9               	movwf	PollGPS@index
  9576                           
  9577                           ;main.c: 562:             index = InsertTxData(index, PUBX_HDOP);
  9578  01E7  084A               	movf	PollGPS@index+1,w
  9579  01E8  00B6               	movwf	InsertTxData@index+1
  9580  01E9  0849               	movf	PollGPS@index,w
  9581  01EA  00B5               	movwf	InsertTxData@index
  9582  01EB  3000               	movlw	0
  9583  01EC  00B8               	movwf	InsertTxData@field+1
  9584  01ED  3009               	movlw	9
  9585  01EE  00B7               	movwf	InsertTxData@field
  9586  01EF  318E  263E  3180   	fcall	_InsertTxData
  9587  01F2  0140               	movlb	0	; select bank0
  9588  01F3  0836               	movf	?_InsertTxData+1,w
  9589  01F4  00CA               	movwf	PollGPS@index+1
  9590  01F5  0835               	movf	?_InsertTxData,w
  9591  01F6  00C9               	movwf	PollGPS@index
  9592                           
  9593                           ;main.c: 563:             index = InsertTxData(index, PUBX_VDOP);
  9594  01F7  084A               	movf	PollGPS@index+1,w
  9595  01F8  00B6               	movwf	InsertTxData@index+1
  9596  01F9  0849               	movf	PollGPS@index,w
  9597  01FA  00B5               	movwf	InsertTxData@index
  9598  01FB  3000               	movlw	0
  9599  01FC  00B8               	movwf	InsertTxData@field+1
  9600  01FD  300A               	movlw	10
  9601  01FE  00B7               	movwf	InsertTxData@field
  9602  01FF  318E  263E  3180   	fcall	_InsertTxData
  9603  0202  0140               	movlb	0	; select bank0
  9604  0203  0836               	movf	?_InsertTxData+1,w
  9605  0204  00CA               	movwf	PollGPS@index+1
  9606  0205  0835               	movf	?_InsertTxData,w
  9607  0206  00C9               	movwf	PollGPS@index
  9608                           
  9609                           ;main.c: 564:             index = InsertTxData(index, PUBX_SOG);
  9610  0207  084A               	movf	PollGPS@index+1,w
  9611  0208  00B6               	movwf	InsertTxData@index+1
  9612  0209  0849               	movf	PollGPS@index,w
  9613  020A  00B5               	movwf	InsertTxData@index
  9614  020B  3000               	movlw	0
  9615  020C  00B8               	movwf	InsertTxData@field+1
  9616  020D  300B               	movlw	11
  9617  020E  00B7               	movwf	InsertTxData@field
  9618  020F  318E  263E  3180   	fcall	_InsertTxData
  9619  0212  0140               	movlb	0	; select bank0
  9620  0213  0836               	movf	?_InsertTxData+1,w
  9621  0214  00CA               	movwf	PollGPS@index+1
  9622  0215  0835               	movf	?_InsertTxData,w
  9623  0216  00C9               	movwf	PollGPS@index
  9624                           
  9625                           ;main.c: 565:             index = InsertTxData(index, PUBX_COG);
  9626  0217  084A               	movf	PollGPS@index+1,w
  9627  0218  00B6               	movwf	InsertTxData@index+1
  9628  0219  0849               	movf	PollGPS@index,w
  9629  021A  00B5               	movwf	InsertTxData@index
  9630  021B  3000               	movlw	0
  9631  021C  00B8               	movwf	InsertTxData@field+1
  9632  021D  300C               	movlw	12
  9633  021E  00B7               	movwf	InsertTxData@field
  9634  021F  318E  263E  3180   	fcall	_InsertTxData
  9635  0222  0140               	movlb	0	; select bank0
  9636  0223  0836               	movf	?_InsertTxData+1,w
  9637  0224  00CA               	movwf	PollGPS@index+1
  9638  0225  0835               	movf	?_InsertTxData,w
  9639  0226  00C9               	movwf	PollGPS@index
  9640                           
  9641                           ;main.c: 566:             index = InsertTxData(index, PUBX_VVEL);
  9642  0227  084A               	movf	PollGPS@index+1,w
  9643  0228  00B6               	movwf	InsertTxData@index+1
  9644  0229  0849               	movf	PollGPS@index,w
  9645  022A  00B5               	movwf	InsertTxData@index
  9646  022B  3000               	movlw	0
  9647  022C  00B8               	movwf	InsertTxData@field+1
  9648  022D  300D               	movlw	13
  9649  022E  00B7               	movwf	InsertTxData@field
  9650  022F  318E  263E  3180   	fcall	_InsertTxData
  9651  0232  0140               	movlb	0	; select bank0
  9652  0233  0836               	movf	?_InsertTxData+1,w
  9653  0234  00CA               	movwf	PollGPS@index+1
  9654  0235  0835               	movf	?_InsertTxData,w
  9655  0236  00C9               	movwf	PollGPS@index
  9656                           
  9657                           ;main.c: 567:             index = InsertTxData(index, PUBX_NAVSTAT);
  9658  0237  084A               	movf	PollGPS@index+1,w
  9659  0238  00B6               	movwf	InsertTxData@index+1
  9660  0239  0849               	movf	PollGPS@index,w
  9661  023A  00B5               	movwf	InsertTxData@index
  9662  023B  3000               	movlw	0
  9663  023C  00B8               	movwf	InsertTxData@field+1
  9664  023D  3008               	movlw	8
  9665  023E  00B7               	movwf	InsertTxData@field
  9666  023F  318E  263E         	fcall	_InsertTxData
  9667  0241  0140               	movlb	0	; select bank0
  9668  0242  0836               	movf	?_InsertTxData+1,w
  9669  0243  00CA               	movwf	PollGPS@index+1
  9670  0244  0835               	movf	?_InsertTxData,w
  9671  0245  00C9               	movwf	PollGPS@index
  9672                           
  9673                           ;main.c: 568:             return 1;
  9674  0246  3001               	movlw	1
  9675  0247  0008               	return
  9676  0248                     l4256:	
  9677                           
  9678                           ;main.c: 571:         {;main.c: 573:             if (EUSART1_is_rx_ready())
  9679  0248  318B  233A  3180   	fcall	_EUSART1_is_rx_ready
  9680  024B  3A00               	xorlw	0
  9681  024C  1903               	skipnz
  9682  024D  2862               	goto	l4268
  9683                           
  9684                           ;main.c: 574:             {;main.c: 575:                 char byte = EUSART1_Read();
  9685  024E  318B  2384  3180   	fcall	_EUSART1_Read
  9686  0251  0140               	movlb	0	; select bank0
  9687  0252  00B9               	movwf	??_PollGPS
  9688  0253  0839               	movf	??_PollGPS,w
  9689  0254  00C6               	movwf	PollGPS@byte
  9690                           
  9691                           ;main.c: 580:                 nmea_data[index] = byte;
  9692  0255  30D8               	movlw	216
  9693  0256  00B9               	movwf	??_PollGPS
  9694  0257  3026               	movlw	38
  9695  0258  00BA               	movwf	??_PollGPS+1
  9696  0259  0849               	movf	PollGPS@index,w
  9697  025A  0739               	addwf	??_PollGPS,w
  9698  025B  00BB               	movwf	??_PollGPS+2
  9699  025C  084A               	movf	PollGPS@index+1,w
  9700  025D  3D3A               	addwfc	??_PollGPS+1,w
  9701  025E  00BC               	movwf	??_PollGPS+3
  9702  025F  083B               	movf	??_PollGPS+2,w
  9703  0260  0086               	movwf	6
  9704  0261  083C               	movf	??_PollGPS+3,w
  9705  0262  0087               	movwf	7
  9706  0263  0846               	movf	PollGPS@byte,w
  9707  0264  0081               	movwf	1
  9708                           
  9709                           ;main.c: 582:                 if (byte == '\n')
  9710  0265  300A               	movlw	10
  9711  0266  0646               	xorwf	PollGPS@byte,w
  9712  0267  1D03               	btfss	3,2
  9713  0268  2A6B               	goto	l4266
  9714                           
  9715                           ;main.c: 583:                 {;main.c: 584:                     eusart_complete = 1;
  9716  0269  01C5               	clrf	PollGPS@eusart_complete
  9717  026A  0AC5               	incf	PollGPS@eusart_complete,f
  9718  026B                     l4266:	
  9719                           
  9720                           ;main.c: 589:                 index++;
  9721  026B  3001               	movlw	1
  9722  026C  07C9               	addwf	PollGPS@index,f
  9723  026D  3000               	movlw	0
  9724  026E  3DCA               	addwfc	PollGPS@index+1,f
  9725  026F  2862               	goto	l4268
  9726  0270                     l4270:	
  9727                           
  9728                           ;main.c: 595:     return success;
  9729  0270  0843               	movf	PollGPS@success,w
  9730  0271  0008               	return
  9731  0272                     __end_of_PollGPS:	
  9732                           
  9733                           	psect	text24
  9734  0DBA                     __ptext24:	
  9735 ;; *************** function _strcmp *****************
  9736 ;; Defined at:
  9737 ;;		line 3 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcmp.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;  l               1    wreg     PTR const unsigned char 
  9740 ;;		 -> csvField(20), 
  9741 ;;  r               2   11[COMMON] PTR const unsigned char 
  9742 ;;		 -> STR_9(2), STR_8(2), 
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;  l               1    8[BANK0 ] PTR const unsigned char 
  9745 ;;		 -> csvField(20), 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  2   11[COMMON] int 
  9748 ;; Registers used:
  9749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9756 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9758 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9759 ;;Total ram usage:        4 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    3
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_PollGPS
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           
  9770                           ;psect for function _strcmp
  9771  0DBA                     _strcmp:	
  9772                           
  9773                           ;incstack = 0
  9774                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  9775                           ;strcmp@l stored from wreg
  9776  0DBA  0140               	movlb	0	; select bank0
  9777  0DBB  00A8               	movwf	strcmp@l
  9778  0DBC  2DCB               	goto	l3832
  9779  0DBD                     l3834:	
  9780  0DBD  0828               	movf	strcmp@l,w
  9781  0DBE  0086               	movwf	6
  9782  0DBF  0187               	clrf	7
  9783  0DC0  0801               	movf	1,w
  9784  0DC1  1903               	btfsc	3,2
  9785  0DC2  2DD8               	goto	l3836
  9786  0DC3  3001               	movlw	1
  9787  0DC4  00FD               	movwf	??_strcmp
  9788  0DC5  087D               	movf	??_strcmp,w
  9789  0DC6  07A8               	addwf	strcmp@l,f
  9790  0DC7  3001               	movlw	1
  9791  0DC8  07FB               	addwf	strcmp@r,f
  9792  0DC9  3000               	movlw	0
  9793  0DCA  3DFC               	addwfc	strcmp@r+1,f
  9794  0DCB                     l3832:	
  9795  0DCB  087B               	movf	strcmp@r,w
  9796  0DCC  0084               	movwf	4
  9797  0DCD  087C               	movf	strcmp@r+1,w
  9798  0DCE  0085               	movwf	5
  9799  0DCF  0800               	movf	0,w	;code access
  9800  0DD0  00FD               	movwf	??_strcmp
  9801  0DD1  0828               	movf	strcmp@l,w
  9802  0DD2  0086               	movwf	6
  9803  0DD3  0187               	clrf	7
  9804  0DD4  0801               	movf	1,w
  9805  0DD5  067D               	xorwf	??_strcmp,w
  9806  0DD6  1903               	btfsc	3,2
  9807  0DD7  2DBD               	goto	l3834
  9808  0DD8                     l3836:	
  9809  0DD8  0828               	movf	strcmp@l,w
  9810  0DD9  0086               	movwf	6
  9811  0DDA  0187               	clrf	7
  9812  0DDB  087B               	movf	strcmp@r,w
  9813  0DDC  0084               	movwf	4
  9814  0DDD  087C               	movf	strcmp@r+1,w
  9815  0DDE  0085               	movwf	5
  9816  0DDF  0800               	movf	0,w	;code access
  9817  0DE0  0201               	subwf	1,w
  9818  0DE1  00FB               	movwf	?_strcmp
  9819  0DE2  01FC               	clrf	?_strcmp+1
  9820  0DE3  1C03               	skipc
  9821  0DE4  03FC               	decf	?_strcmp+1,f
  9822  0DE5  0008               	return
  9823  0DE6                     __end_of_strcmp:	
  9824                           
  9825                           	psect	text25
  9826  0D14                     __ptext25:	
  9827 ;; *************** function _WriteGPS *****************
  9828 ;; Defined at:
  9829 ;;		line 310 in file "main.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  message         2    5[COMMON] PTR unsigned char 
  9832 ;;		 -> STR_7(14), STR_6(26), STR_5(26), STR_4(26), 
  9833 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;  i               2   10[COMMON] int 
  9836 ;;  counti          2    8[COMMON] int 
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  1    wreg      void 
  9839 ;; Registers used:
  9840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9847 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9849 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9850 ;;Total ram usage:        7 bytes
  9851 ;; Hardware stack levels used:    1
  9852 ;; Hardware stack levels required when called:    4
  9853 ;; This function calls:
  9854 ;;		_EUSART1_Write
  9855 ;;		_strlen
  9856 ;; This function is called by:
  9857 ;;		_SetupGPS
  9858 ;;		_PollGPS
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           
  9863                           ;psect for function _WriteGPS
  9864  0D14                     _WriteGPS:	
  9865                           
  9866                           ;main.c: 310: void WriteGPS(char* message);main.c: 311: {;main.c: 312:     for (int i = 
      +                          0, counti = strlen(message); i <= counti; i++)
  9867                           
  9868                           ;incstack = 0
  9869                           ; Regs used in _WriteGPS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9870  0D14  01FA               	clrf	WriteGPS@i
  9871  0D15  01FB               	clrf	WriteGPS@i+1
  9872  0D16  0876               	movf	WriteGPS@message+1,w
  9873  0D17  00F1               	movwf	strlen@s+1
  9874  0D18  0875               	movf	WriteGPS@message,w
  9875  0D19  00F0               	movwf	strlen@s
  9876  0D1A  318B  23FD  318D   	fcall	_strlen
  9877  0D1D  0871               	movf	?_strlen+1,w
  9878  0D1E  00F9               	movwf	WriteGPS@counti+1
  9879  0D1F  0870               	movf	?_strlen,w
  9880  0D20  00F8               	movwf	WriteGPS@counti
  9881  0D21                     l3744:	
  9882  0D21  0879               	movf	WriteGPS@counti+1,w
  9883  0D22  3A80               	xorlw	128
  9884  0D23  00F7               	movwf	??_WriteGPS
  9885  0D24  087B               	movf	WriteGPS@i+1,w
  9886  0D25  3A80               	xorlw	128
  9887  0D26  0277               	subwf	??_WriteGPS,w
  9888  0D27  1D03               	skipz
  9889  0D28  2D2B               	goto	u2945
  9890  0D29  087A               	movf	WriteGPS@i,w
  9891  0D2A  0278               	subwf	WriteGPS@counti,w
  9892  0D2B                     u2945:	
  9893  0D2B  1C03               	btfss	3,0
  9894  0D2C  0008               	return
  9895                           
  9896                           ;main.c: 313:     {;main.c: 314:         EUSART1_Write((uint8_t)message[i]);
  9897  0D2D  0875               	movf	WriteGPS@message,w
  9898  0D2E  077A               	addwf	WriteGPS@i,w
  9899  0D2F  0084               	movwf	4
  9900  0D30  0876               	movf	WriteGPS@message+1,w
  9901  0D31  3D7B               	addwfc	WriteGPS@i+1,w
  9902  0D32  0085               	movwf	5
  9903  0D33  0800               	movf	0,w	;code access
  9904  0D34  318B  235F  318D   	fcall	_EUSART1_Write
  9905                           
  9906                           ;main.c: 315:     }
  9907  0D37  3001               	movlw	1
  9908  0D38  07FA               	addwf	WriteGPS@i,f
  9909  0D39  3000               	movlw	0
  9910  0D3A  3DFB               	addwfc	WriteGPS@i+1,f
  9911  0D3B  2D21               	goto	l3744
  9912  0D3C                     __end_of_WriteGPS:	
  9913                           
  9914                           	psect	text26
  9915  0B5F                     __ptext26:	
  9916 ;; *************** function _EUSART1_Write *****************
  9917 ;; Defined at:
  9918 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;  txData          1    wreg     unsigned char 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  txData          1    0[COMMON] unsigned char 
  9923 ;; Return value:  Size  Location     Type
  9924 ;;                  1    wreg      void 
  9925 ;; Registers used:
  9926 ;;		wreg
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9936 ;;Total ram usage:        1 bytes
  9937 ;; Hardware stack levels used:    1
  9938 ;; Hardware stack levels required when called:    3
  9939 ;; This function calls:
  9940 ;;		Nothing
  9941 ;; This function is called by:
  9942 ;;		_WriteGPS
  9943 ;;		_GPS_SendUBX
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           
  9947                           
  9948                           ;psect for function _EUSART1_Write
  9949  0B5F                     _EUSART1_Write:	
  9950                           
  9951                           ;incstack = 0
  9952                           ; Regs used in _EUSART1_Write: [wreg]
  9953                           ;EUSART1_Write@txData stored from wreg
  9954  0B5F  00F0               	movwf	EUSART1_Write@txData
  9955  0B60                     l355:	
  9956                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
  9957                           
  9958                           
  9959                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
  9960  0B60  014E               	movlb	14	; select bank14
  9961  0B61  1E0F               	btfss	15,4	;volatile
  9962  0B62  2B60               	goto	l355
  9963                           
  9964                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
  9965  0B63  0870               	movf	EUSART1_Write@txData,w
  9966  0B64  0142               	movlb	2	; select bank2
  9967  0B65  009A               	movwf	26	;volatile
  9968  0B66  0008               	return
  9969  0B67                     __end_of_EUSART1_Write:	
  9970                           
  9971                           	psect	text27
  9972  0E3E                     __ptext27:	
  9973 ;; *************** function _InsertTxData *****************
  9974 ;; Defined at:
  9975 ;;		line 503 in file "main.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  index           2   21[BANK0 ] int 
  9978 ;;  field           2   23[BANK0 ] int 
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;		None
  9981 ;; Return value:  Size  Location     Type
  9982 ;;                  2   21[BANK0 ] int 
  9983 ;; Registers used:
  9984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9985 ;; Tracked objects:
  9986 ;;		On entry : 0/0
  9987 ;;		On exit  : 0/0
  9988 ;;		Unchanged: 0/0
  9989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9993 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9994 ;;Total ram usage:        4 bytes
  9995 ;; Hardware stack levels used:    1
  9996 ;; Hardware stack levels required when called:    6
  9997 ;; This function calls:
  9998 ;;		_GetAtRowCSV
  9999 ;;		_InsertString
 10000 ;;		_InsertTxDataSep
 10001 ;; This function is called by:
 10002 ;;		_PollGPS
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           
 10007                           ;psect for function _InsertTxData
 10008  0E3E                     _InsertTxData:	
 10009                           
 10010                           ;main.c: 503: int InsertTxData(int index, int field);main.c: 504: {;main.c: 505:     ind
      +                          ex = InsertString(txdata, GetAtRowCSV(nmea_data, field), index, 140);
 10011                           
 10012                           ;incstack = 0
 10013                           ; Regs used in _InsertTxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10014  0E3E  3064               	movlw	100
 10015  0E3F  0140               	movlb	0	; select bank0
 10016  0E40  00A9               	movwf	InsertString@dest
 10017  0E41  3027               	movlw	39
 10018  0E42  00AA               	movwf	InsertString@dest+1
 10019  0E43  30D8               	movlw	216
 10020  0E44  00F6               	movwf	GetAtRowCSV@src
 10021  0E45  3026               	movlw	38
 10022  0E46  00F7               	movwf	GetAtRowCSV@src+1
 10023  0E47  0838               	movf	InsertTxData@field+1,w
 10024  0E48  00F9               	movwf	GetAtRowCSV@column+1
 10025  0E49  0837               	movf	InsertTxData@field,w
 10026  0E4A  00F8               	movwf	GetAtRowCSV@column
 10027  0E4B  3186  2644  318E   	fcall	_GetAtRowCSV
 10028  0E4E  0140               	movlb	0	; select bank0
 10029  0E4F  00AB               	movwf	InsertString@src
 10030  0E50  3000               	movlw	0
 10031  0E51  00AC               	movwf	InsertString@src+1
 10032  0E52  0836               	movf	InsertTxData@index+1,w
 10033  0E53  00AE               	movwf	InsertString@index+1
 10034  0E54  0835               	movf	InsertTxData@index,w
 10035  0E55  00AD               	movwf	InsertString@index
 10036  0E56  308C               	movlw	140
 10037  0E57  00AF               	movwf	InsertString@destLimit
 10038  0E58  3000               	movlw	0
 10039  0E59  00B0               	movwf	InsertString@destLimit+1
 10040  0E5A  3187  27AA  318E   	fcall	_InsertString
 10041  0E5D  0140               	movlb	0	; select bank0
 10042  0E5E  082A               	movf	?_InsertString+1,w
 10043  0E5F  00B6               	movwf	InsertTxData@index+1
 10044  0E60  0829               	movf	?_InsertString,w
 10045  0E61  00B5               	movwf	InsertTxData@index
 10046                           
 10047                           ;main.c: 506:     return InsertTxDataSep(index);
 10048  0E62  0836               	movf	InsertTxData@index+1,w
 10049  0E63  00FD               	movwf	InsertTxDataSep@index+1
 10050  0E64  0835               	movf	InsertTxData@index,w
 10051  0E65  00FC               	movwf	InsertTxDataSep@index
 10052  0E66  318C  2414         	fcall	_InsertTxDataSep
 10053  0E68  087D               	movf	?_InsertTxDataSep+1,w
 10054  0E69  0140               	movlb	0	; select bank0
 10055  0E6A  00B6               	movwf	?_InsertTxData+1
 10056  0E6B  087C               	movf	?_InsertTxDataSep,w
 10057  0E6C  00B5               	movwf	?_InsertTxData
 10058  0E6D  0008               	return
 10059  0E6E                     __end_of_InsertTxData:	
 10060                           
 10061                           	psect	text28
 10062  0C14                     __ptext28:	
 10063 ;; *************** function _InsertTxDataSep *****************
 10064 ;; Defined at:
 10065 ;;		line 498 in file "main.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  index           2   12[COMMON] int 
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;		None
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  2   12[COMMON] int 
 10072 ;; Registers used:
 10073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10081 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10082 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10083 ;;Total ram usage:        3 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; Hardware stack levels required when called:    5
 10086 ;; This function calls:
 10087 ;;		_Insert
 10088 ;; This function is called by:
 10089 ;;		_InsertTxData
 10090 ;;		_PollGPS
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           
 10095                           ;psect for function _InsertTxDataSep
 10096  0C14                     _InsertTxDataSep:	
 10097                           
 10098                           ;main.c: 498: int InsertTxDataSep(int index);main.c: 499: {;main.c: 500:     return Inse
      +                          rt(txdata, ',', index, 140);
 10099                           
 10100                           ;incstack = 0
 10101                           ; Regs used in _InsertTxDataSep: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10102  0C14  3064               	movlw	100
 10103  0C15  00F5               	movwf	Insert@dest
 10104  0C16  3027               	movlw	39
 10105  0C17  00F6               	movwf	Insert@dest+1
 10106  0C18  302C               	movlw	44
 10107  0C19  0140               	movlb	0	; select bank0
 10108  0C1A  00A9               	movwf	??_InsertTxDataSep
 10109  0C1B  0829               	movf	??_InsertTxDataSep,w
 10110  0C1C  00F7               	movwf	Insert@src
 10111  0C1D  087D               	movf	InsertTxDataSep@index+1,w
 10112  0C1E  00F9               	movwf	Insert@index+1
 10113  0C1F  087C               	movf	InsertTxDataSep@index,w
 10114  0C20  00F8               	movwf	Insert@index
 10115  0C21  308C               	movlw	140
 10116  0C22  00FA               	movwf	Insert@destLimit
 10117  0C23  3000               	movlw	0
 10118  0C24  00FB               	movwf	Insert@destLimit+1
 10119  0C25  3185  2569         	fcall	_Insert
 10120  0C27  0876               	movf	?_Insert+1,w
 10121  0C28  00FD               	movwf	?_InsertTxDataSep+1
 10122  0C29  0875               	movf	?_Insert,w
 10123  0C2A  00FC               	movwf	?_InsertTxDataSep
 10124  0C2B  0008               	return
 10125  0C2C                     __end_of_InsertTxDataSep:	
 10126                           
 10127                           	psect	text29
 10128  07AA                     __ptext29:	
 10129 ;; *************** function _InsertString *****************
 10130 ;; Defined at:
 10131 ;;		line 112 in file "main.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;  dest            2    9[BANK0 ] PTR unsigned char 
 10134 ;;		 -> txdata(140), 
 10135 ;;  src             2   11[BANK0 ] PTR unsigned char 
 10136 ;;		 -> checksum(6), STR_10(7), main@convertedNumber(16), csvField(20), 
 10137 ;;  index           2   13[BANK0 ] int 
 10138 ;;  destLimit       2   15[BANK0 ] int 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  i               2   19[BANK0 ] int 
 10141 ;;  counti          2   17[BANK0 ] int 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  2    9[BANK0 ] int 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10151 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10152 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10154 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10155 ;;Total ram usage:       13 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    5
 10158 ;; This function calls:
 10159 ;;		_Insert
 10160 ;;		_strlen
 10161 ;; This function is called by:
 10162 ;;		_InsertTxData
 10163 ;;		_PollGPS
 10164 ;;		_main
 10165 ;; This function uses a non-reentrant model
 10166 ;;
 10167                           
 10168                           
 10169                           ;psect for function _InsertString
 10170  07AA                     _InsertString:	
 10171                           
 10172                           ;main.c: 112: int InsertString(char* dest, char* src, int index, int destLimit);main.c: 
      +                          113: {;main.c: 114:     for (int i = 0, counti = strlen(src); i < counti && index < dest
      +                          Limit; i++)
 10173                           
 10174                           ;incstack = 0
 10175                           ; Regs used in _InsertString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10176  07AA  0140               	movlb	0	; select bank0
 10177  07AB  01B3               	clrf	InsertString@i
 10178  07AC  01B4               	clrf	InsertString@i+1
 10179  07AD  082C               	movf	InsertString@src+1,w
 10180  07AE  00F1               	movwf	strlen@s+1
 10181  07AF  082B               	movf	InsertString@src,w
 10182  07B0  00F0               	movwf	strlen@s
 10183  07B1  318B  23FD  3187   	fcall	_strlen
 10184  07B4  0871               	movf	?_strlen+1,w
 10185  07B5  0140               	movlb	0	; select bank0
 10186  07B6  00B2               	movwf	InsertString@counti+1
 10187  07B7  0870               	movf	?_strlen,w
 10188  07B8  00B1               	movwf	InsertString@counti
 10189  07B9  2FEA               	goto	l3510
 10190  07BA                     l3512:	
 10191  07BA  0140               	movlb	0	; select bank0
 10192  07BB  082E               	movf	InsertString@index+1,w
 10193  07BC  3A80               	xorlw	128
 10194  07BD  00FC               	movwf	??_InsertString
 10195  07BE  0830               	movf	InsertString@destLimit+1,w
 10196  07BF  3A80               	xorlw	128
 10197  07C0  027C               	subwf	??_InsertString,w
 10198  07C1  1D03               	skipz
 10199  07C2  2FC5               	goto	u2735
 10200  07C3  082F               	movf	InsertString@destLimit,w
 10201  07C4  022D               	subwf	InsertString@index,w
 10202  07C5                     u2735:	
 10203  07C5  1803               	btfsc	3,0
 10204  07C6  2FF6               	goto	l3514
 10205                           
 10206                           ;main.c: 115:     {;main.c: 117:         index = Insert(dest, src[i], index, destLimit);
 10207  07C7  0140               	movlb	0	; select bank0
 10208  07C8  082A               	movf	InsertString@dest+1,w
 10209  07C9  00F6               	movwf	Insert@dest+1
 10210  07CA  0829               	movf	InsertString@dest,w
 10211  07CB  00F5               	movwf	Insert@dest
 10212  07CC  082B               	movf	InsertString@src,w
 10213  07CD  0733               	addwf	InsertString@i,w
 10214  07CE  0084               	movwf	4
 10215  07CF  082C               	movf	InsertString@src+1,w
 10216  07D0  3D34               	addwfc	InsertString@i+1,w
 10217  07D1  0085               	movwf	5
 10218  07D2  0800               	movf	0,w	;code access
 10219  07D3  00FC               	movwf	??_InsertString
 10220  07D4  087C               	movf	??_InsertString,w
 10221  07D5  00F7               	movwf	Insert@src
 10222  07D6  082E               	movf	InsertString@index+1,w
 10223  07D7  00F9               	movwf	Insert@index+1
 10224  07D8  082D               	movf	InsertString@index,w
 10225  07D9  00F8               	movwf	Insert@index
 10226  07DA  0830               	movf	InsertString@destLimit+1,w
 10227  07DB  00FB               	movwf	Insert@destLimit+1
 10228  07DC  082F               	movf	InsertString@destLimit,w
 10229  07DD  00FA               	movwf	Insert@destLimit
 10230  07DE  3185  2569  3187   	fcall	_Insert
 10231  07E1  0876               	movf	?_Insert+1,w
 10232  07E2  0140               	movlb	0	; select bank0
 10233  07E3  00AE               	movwf	InsertString@index+1
 10234  07E4  0875               	movf	?_Insert,w
 10235  07E5  00AD               	movwf	InsertString@index
 10236                           
 10237                           ;main.c: 118:     }
 10238  07E6  3001               	movlw	1
 10239  07E7  07B3               	addwf	InsertString@i,f
 10240  07E8  3000               	movlw	0
 10241  07E9  3DB4               	addwfc	InsertString@i+1,f
 10242  07EA                     l3510:	
 10243  07EA  0834               	movf	InsertString@i+1,w
 10244  07EB  3A80               	xorlw	128
 10245  07EC  00FC               	movwf	??_InsertString
 10246  07ED  0832               	movf	InsertString@counti+1,w
 10247  07EE  3A80               	xorlw	128
 10248  07EF  027C               	subwf	??_InsertString,w
 10249  07F0  1D03               	skipz
 10250  07F1  2FF4               	goto	u2725
 10251  07F2  0831               	movf	InsertString@counti,w
 10252  07F3  0233               	subwf	InsertString@i,w
 10253  07F4                     u2725:	
 10254  07F4  1C03               	btfss	3,0
 10255  07F5  2FBA               	goto	l3512
 10256  07F6                     l3514:	
 10257                           
 10258                           ;main.c: 119:     return index;
 10259  07F6  0140               	movlb	0	; select bank0
 10260  07F7  082E               	movf	InsertString@index+1,w
 10261  07F8  00AA               	movwf	?_InsertString+1
 10262  07F9  082D               	movf	InsertString@index,w
 10263  07FA  00A9               	movwf	?_InsertString
 10264  07FB  0008               	return
 10265  07FC                     __end_of_InsertString:	
 10266                           
 10267                           	psect	text30
 10268  0569                     __ptext30:	
 10269 ;; *************** function _Insert *****************
 10270 ;; Defined at:
 10271 ;;		line 93 in file "main.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  dest            2    5[COMMON] PTR unsigned char 
 10274 ;;		 -> txdata(140), 
 10275 ;;  src             1    7[COMMON] unsigned char 
 10276 ;;  index           2    8[COMMON] int 
 10277 ;;  destLimit       2   10[COMMON] int 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  i               2    7[BANK0 ] int 
 10280 ;;  length          2    5[BANK0 ] int 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  2    5[COMMON] int 
 10283 ;; Registers used:
 10284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10290 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10291 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10292 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10293 ;;      Totals:         7       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10294 ;;Total ram usage:       16 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:    4
 10297 ;; This function calls:
 10298 ;;		_strlen
 10299 ;; This function is called by:
 10300 ;;		_InsertString
 10301 ;;		_InsertTxDataSep
 10302 ;;		_PollGPS
 10303 ;;		_main
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           
 10308                           ;psect for function _Insert
 10309  0569                     _Insert:	
 10310                           
 10311                           ;main.c: 93: int Insert(char* dest, char src, int index, int destLimit);main.c: 94: {;ma
      +                          in.c: 95:     int length = strlen(dest);
 10312                           
 10313                           ;incstack = 0
 10314                           ; Regs used in _Insert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10315  0569  0876               	movf	Insert@dest+1,w
 10316  056A  00F1               	movwf	strlen@s+1
 10317  056B  0875               	movf	Insert@dest,w
 10318  056C  00F0               	movwf	strlen@s
 10319  056D  318B  23FD  3185   	fcall	_strlen
 10320  0570  0871               	movf	?_strlen+1,w
 10321  0571  0140               	movlb	0	; select bank0
 10322  0572  00A6               	movwf	Insert@length+1
 10323  0573  0870               	movf	?_strlen,w
 10324  0574  00A5               	movwf	Insert@length
 10325                           
 10326                           ;main.c: 96:     if (length < destLimit - 1)
 10327  0575  087A               	movf	Insert@destLimit,w
 10328  0576  3EFF               	addlw	255
 10329  0577  00A0               	movwf	??_Insert
 10330  0578  30FF               	movlw	255
 10331  0579  3D7B               	addwfc	Insert@destLimit+1,w
 10332  057A  00A1               	movwf	??_Insert+1
 10333  057B  0826               	movf	Insert@length+1,w
 10334  057C  3A80               	xorlw	128
 10335  057D  00A2               	movwf	??_Insert+2
 10336  057E  0821               	movf	??_Insert+1,w
 10337  057F  3A80               	xorlw	128
 10338  0580  0222               	subwf	??_Insert+2,w
 10339  0581  1D03               	skipz
 10340  0582  2D85               	goto	u2565
 10341  0583  0820               	movf	??_Insert,w
 10342  0584  0225               	subwf	Insert@length,w
 10343  0585                     u2565:	
 10344  0585  1803               	skipnc
 10345  0586  2DD2               	goto	l3360
 10346                           
 10347                           ;main.c: 97:     {;main.c: 98:         dest[length + 1] = '\0';
 10348  0587  0140               	movlb	0	; select bank0
 10349  0588  0825               	movf	Insert@length,w
 10350  0589  0775               	addwf	Insert@dest,w
 10351  058A  00A0               	movwf	??_Insert
 10352  058B  0826               	movf	Insert@length+1,w
 10353  058C  3D76               	addwfc	Insert@dest+1,w
 10354  058D  00A1               	movwf	??_Insert+1
 10355  058E  0820               	movf	??_Insert,w
 10356  058F  0086               	movwf	6
 10357  0590  0821               	movf	??_Insert+1,w
 10358  0591  0087               	movwf	7
 10359  0592  3141               	addfsr 1,1
 10360  0593  0181               	clrf	1
 10361                           
 10362                           ;main.c: 99:         for (int i = length; i > index; i--)
 10363  0594  0826               	movf	Insert@length+1,w
 10364  0595  00A8               	movwf	Insert@i+1
 10365  0596  0825               	movf	Insert@length,w
 10366  0597  00A7               	movwf	Insert@i
 10367  0598                     l3356:	
 10368  0598  0879               	movf	Insert@index+1,w
 10369  0599  3A80               	xorlw	128
 10370  059A  00A0               	movwf	??_Insert
 10371  059B  0828               	movf	Insert@i+1,w
 10372  059C  3A80               	xorlw	128
 10373  059D  0220               	subwf	??_Insert,w
 10374  059E  1D03               	skipz
 10375  059F  2DA2               	goto	u2575
 10376  05A0  0827               	movf	Insert@i,w
 10377  05A1  0278               	subwf	Insert@index,w
 10378  05A2                     u2575:	
 10379  05A2  1803               	btfsc	3,0
 10380  05A3  2DC4               	goto	l3358
 10381                           
 10382                           ;main.c: 100:         {;main.c: 101:             dest[i] = dest[i - 1];
 10383  05A4  0140               	movlb	0	; select bank0
 10384  05A5  0827               	movf	Insert@i,w
 10385  05A6  0775               	addwf	Insert@dest,w
 10386  05A7  00A0               	movwf	??_Insert
 10387  05A8  0828               	movf	Insert@i+1,w
 10388  05A9  3D76               	addwfc	Insert@dest+1,w
 10389  05AA  00A1               	movwf	??_Insert+1
 10390  05AB  0820               	movf	??_Insert,w
 10391  05AC  3EFF               	addlw	255
 10392  05AD  0086               	movwf	6
 10393  05AE  30FF               	movlw	255
 10394  05AF  3D21               	addwfc	??_Insert+1,w
 10395  05B0  0087               	movwf	7
 10396  05B1  0801               	movf	1,w
 10397  05B2  00A2               	movwf	??_Insert+2
 10398  05B3  0827               	movf	Insert@i,w
 10399  05B4  0775               	addwf	Insert@dest,w
 10400  05B5  00A3               	movwf	??_Insert+3
 10401  05B6  0828               	movf	Insert@i+1,w
 10402  05B7  3D76               	addwfc	Insert@dest+1,w
 10403  05B8  00A4               	movwf	??_Insert+4
 10404  05B9  0823               	movf	??_Insert+3,w
 10405  05BA  0086               	movwf	6
 10406  05BB  0824               	movf	??_Insert+4,w
 10407  05BC  0087               	movwf	7
 10408  05BD  0822               	movf	??_Insert+2,w
 10409  05BE  0081               	movwf	1
 10410                           
 10411                           ;main.c: 102:         }
 10412  05BF  30FF               	movlw	255
 10413  05C0  07A7               	addwf	Insert@i,f
 10414  05C1  30FF               	movlw	255
 10415  05C2  3DA8               	addwfc	Insert@i+1,f
 10416  05C3  2D98               	goto	l3356
 10417  05C4                     l3358:	
 10418                           
 10419                           ;main.c: 103:         dest[index] = src;
 10420  05C4  0878               	movf	Insert@index,w
 10421  05C5  0775               	addwf	Insert@dest,w
 10422  05C6  0140               	movlb	0	; select bank0
 10423  05C7  00A0               	movwf	??_Insert
 10424  05C8  0879               	movf	Insert@index+1,w
 10425  05C9  3D76               	addwfc	Insert@dest+1,w
 10426  05CA  00A1               	movwf	??_Insert+1
 10427  05CB  0820               	movf	??_Insert,w
 10428  05CC  0086               	movwf	6
 10429  05CD  0821               	movf	??_Insert+1,w
 10430  05CE  0087               	movwf	7
 10431  05CF  0877               	movf	Insert@src,w
 10432  05D0  0081               	movwf	1
 10433                           
 10434                           ;main.c: 104:     }
 10435  05D1  2DD7               	goto	l3364
 10436  05D2                     l3360:	
 10437                           
 10438                           ;main.c: 106:     {;main.c: 107:         return index;
 10439  05D2  0879               	movf	Insert@index+1,w
 10440  05D3  00F6               	movwf	?_Insert+1
 10441  05D4  0878               	movf	Insert@index,w
 10442  05D5  00F5               	movwf	?_Insert
 10443  05D6  0008               	return
 10444  05D7                     l3364:	
 10445                           
 10446                           ;main.c: 109:     return index + 1;
 10447  05D7  0878               	movf	Insert@index,w
 10448  05D8  3E01               	addlw	1
 10449  05D9  00F5               	movwf	?_Insert
 10450  05DA  3000               	movlw	0
 10451  05DB  3D79               	addwfc	Insert@index+1,w
 10452  05DC  00F6               	movwf	?_Insert+1
 10453  05DD  0008               	return
 10454  05DE                     __end_of_Insert:	
 10455                           
 10456                           	psect	text31
 10457  0644                     __ptext31:	
 10458 ;; *************** function _GetAtRowCSV *****************
 10459 ;; Defined at:
 10460 ;;		line 67 in file "main.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  src             2    6[COMMON] PTR unsigned char 
 10463 ;;		 -> nmea_data(140), 
 10464 ;;  column          2    8[COMMON] int 
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;  i               2    6[BANK0 ] int 
 10467 ;;  counti          2    0[BANK0 ] int 
 10468 ;;  index           2    4[BANK0 ] int 
 10469 ;;  col             2    2[BANK0 ] int 
 10470 ;; Return value:  Size  Location     Type
 10471 ;;                  1    wreg      PTR unsigned char 
 10472 ;; Registers used:
 10473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10474 ;; Tracked objects:
 10475 ;;		On entry : 0/0
 10476 ;;		On exit  : 0/0
 10477 ;;		Unchanged: 0/0
 10478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10480 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10482 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10483 ;;Total ram usage:       13 bytes
 10484 ;; Hardware stack levels used:    1
 10485 ;; Hardware stack levels required when called:    4
 10486 ;; This function calls:
 10487 ;;		_ClearStringn
 10488 ;;		_strlen
 10489 ;; This function is called by:
 10490 ;;		_InsertTxData
 10491 ;;		_PollGPS
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           
 10496                           ;psect for function _GetAtRowCSV
 10497  0644                     _GetAtRowCSV:	
 10498                           
 10499                           ;main.c: 67: char* GetAtRowCSV(char* src, int column);main.c: 68: {;main.c: 69:     Clea
      +                          rStringn(csvField, 20);
 10500                           
 10501                           ;incstack = 0
 10502                           ; Regs used in _GetAtRowCSV: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10503  0644  3014               	movlw	20
 10504  0645  00F0               	movwf	ClearStringn@length
 10505  0646  3000               	movlw	0
 10506  0647  00F1               	movwf	ClearStringn@length+1
 10507  0648  30D0               	movlw	(low (_csvField| 0))& (0+255)
 10508  0649  318C  242C  3186   	fcall	_ClearStringn
 10509                           
 10510                           ;main.c: 70:     int col = 0;
 10511  064C  0140               	movlb	0	; select bank0
 10512  064D  01A2               	clrf	GetAtRowCSV@col
 10513  064E  01A3               	clrf	GetAtRowCSV@col+1
 10514                           
 10515                           ;main.c: 71:     int index = 0;
 10516  064F  01A4               	clrf	GetAtRowCSV@index
 10517  0650  01A5               	clrf	GetAtRowCSV@index+1
 10518                           
 10519                           ;main.c: 72:     for (int i = 0, counti = strlen(src); i < counti; i++)
 10520  0651  01A6               	clrf	GetAtRowCSV@i
 10521  0652  01A7               	clrf	GetAtRowCSV@i+1
 10522  0653  0877               	movf	GetAtRowCSV@src+1,w
 10523  0654  00F1               	movwf	strlen@s+1
 10524  0655  0876               	movf	GetAtRowCSV@src,w
 10525  0656  00F0               	movwf	strlen@s
 10526  0657  318B  23FD  3186   	fcall	_strlen
 10527  065A  0871               	movf	?_strlen+1,w
 10528  065B  0140               	movlb	0	; select bank0
 10529  065C  00A1               	movwf	GetAtRowCSV@counti+1
 10530  065D  0870               	movf	?_strlen,w
 10531  065E  00A0               	movwf	GetAtRowCSV@counti
 10532  065F                     l644:	
 10533  065F  0827               	movf	GetAtRowCSV@i+1,w
 10534  0660  3A80               	xorlw	128
 10535  0661  00FA               	movwf	??_GetAtRowCSV
 10536  0662  0821               	movf	GetAtRowCSV@counti+1,w
 10537  0663  3A80               	xorlw	128
 10538  0664  027A               	subwf	??_GetAtRowCSV,w
 10539  0665  1D03               	skipz
 10540  0666  2E69               	goto	u2715
 10541  0667  0820               	movf	GetAtRowCSV@counti,w
 10542  0668  0226               	subwf	GetAtRowCSV@i,w
 10543  0669                     u2715:	
 10544  0669  1803               	btfsc	3,0
 10545  066A  2EA3               	goto	l3498
 10546                           
 10547                           ;main.c: 73:     {;main.c: 74:         if (col == column)
 10548  066B  0879               	movf	GetAtRowCSV@column+1,w
 10549  066C  0140               	movlb	0	; select bank0
 10550  066D  0623               	xorwf	GetAtRowCSV@col+1,w
 10551  066E  1D03               	skipz
 10552  066F  2E72               	goto	u2685
 10553  0670  0878               	movf	GetAtRowCSV@column,w
 10554  0671  0622               	xorwf	GetAtRowCSV@col,w
 10555  0672                     u2685:	
 10556  0672  1D03               	skipz
 10557  0673  2E90               	goto	l3494
 10558                           
 10559                           ;main.c: 75:         {;main.c: 76:             if (src[i] == ',')
 10560  0674  0826               	movf	GetAtRowCSV@i,w
 10561  0675  0776               	addwf	GetAtRowCSV@src,w
 10562  0676  0086               	movwf	6
 10563  0677  0827               	movf	GetAtRowCSV@i+1,w
 10564  0678  3D77               	addwfc	GetAtRowCSV@src+1,w
 10565  0679  0087               	movwf	7
 10566  067A  302C               	movlw	44
 10567  067B  0601               	xorwf	1,w
 10568  067C  1903               	btfsc	3,2
 10569  067D  2EA3               	goto	l3498
 10570                           
 10571                           ;main.c: 80:             csvField[index] = src[i];
 10572  067E  0826               	movf	GetAtRowCSV@i,w
 10573  067F  0776               	addwf	GetAtRowCSV@src,w
 10574  0680  0086               	movwf	6
 10575  0681  0827               	movf	GetAtRowCSV@i+1,w
 10576  0682  3D77               	addwfc	GetAtRowCSV@src+1,w
 10577  0683  0087               	movwf	7
 10578  0684  0801               	movf	1,w
 10579  0685  00FA               	movwf	??_GetAtRowCSV
 10580  0686  0824               	movf	GetAtRowCSV@index,w
 10581  0687  3ED0               	addlw	(low (_csvField| 0))& (0+255)
 10582  0688  0086               	movwf	6
 10583  0689  0187               	clrf	7
 10584  068A  087A               	movf	??_GetAtRowCSV,w
 10585  068B  0081               	movwf	1
 10586                           
 10587                           ;main.c: 81:             index++;
 10588  068C  3001               	movlw	1
 10589  068D  07A4               	addwf	GetAtRowCSV@index,f
 10590  068E  3000               	movlw	0
 10591  068F  3DA5               	addwfc	GetAtRowCSV@index+1,f
 10592  0690                     l3494:	
 10593                           
 10594                           ;main.c: 83:         if (src[i] == ',')
 10595  0690  0826               	movf	GetAtRowCSV@i,w
 10596  0691  0776               	addwf	GetAtRowCSV@src,w
 10597  0692  0086               	movwf	6
 10598  0693  0827               	movf	GetAtRowCSV@i+1,w
 10599  0694  3D77               	addwfc	GetAtRowCSV@src+1,w
 10600  0695  0087               	movwf	7
 10601  0696  302C               	movlw	44
 10602  0697  0601               	xorwf	1,w
 10603  0698  1D03               	btfss	3,2
 10604  0699  2E9E               	goto	l649
 10605                           
 10606                           ;main.c: 84:         {;main.c: 85:             col++;
 10607  069A  3001               	movlw	1
 10608  069B  07A2               	addwf	GetAtRowCSV@col,f
 10609  069C  3000               	movlw	0
 10610  069D  3DA3               	addwfc	GetAtRowCSV@col+1,f
 10611  069E                     l649:	
 10612                           ;main.c: 86:         }
 10613                           
 10614                           
 10615                           ;main.c: 87:     }
 10616  069E  3001               	movlw	1
 10617  069F  07A6               	addwf	GetAtRowCSV@i,f
 10618  06A0  3000               	movlw	0
 10619  06A1  3DA7               	addwfc	GetAtRowCSV@i+1,f
 10620  06A2  2E5F               	goto	l644
 10621  06A3                     l3498:	
 10622                           
 10623                           ;main.c: 88:     return csvField;
 10624  06A3  30D0               	movlw	(low (_csvField| 0))& (0+255)
 10625  06A4  0008               	return
 10626  06A5                     __end_of_GetAtRowCSV:	
 10627                           
 10628                           	psect	text32
 10629  0C2C                     __ptext32:	
 10630 ;; *************** function _ClearStringn *****************
 10631 ;; Defined at:
 10632 ;;		line 56 in file "main.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  str             1    wreg     PTR unsigned char 
 10635 ;;		 -> csvField(20), 
 10636 ;;  length          2    0[COMMON] int 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;  str             1    3[COMMON] PTR unsigned char 
 10639 ;;		 -> csvField(20), 
 10640 ;;  i               2    4[COMMON] int 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  1    wreg      void 
 10643 ;; Registers used:
 10644 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10651 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10654 ;;Total ram usage:        6 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:    3
 10657 ;; This function calls:
 10658 ;;		Nothing
 10659 ;; This function is called by:
 10660 ;;		_GetAtRowCSV
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           
 10665                           ;psect for function _ClearStringn
 10666  0C2C                     _ClearStringn:	
 10667                           
 10668                           ;incstack = 0
 10669                           ; Regs used in _ClearStringn: [wreg+fsr1l+fsr1h+status,2+status,0]
 10670                           ;ClearStringn@str stored from wreg
 10671  0C2C  00F3               	movwf	ClearStringn@str
 10672                           
 10673                           ;main.c: 56: void ClearStringn(char* str, int length);main.c: 57: {;main.c: 58:     for 
      +                          (int i = 0; i < length; i++)
 10674  0C2D  01F4               	clrf	ClearStringn@i
 10675  0C2E  01F5               	clrf	ClearStringn@i+1
 10676  0C2F                     l3342:	
 10677  0C2F  0875               	movf	ClearStringn@i+1,w
 10678  0C30  3A80               	xorlw	128
 10679  0C31  00F2               	movwf	??_ClearStringn
 10680  0C32  0871               	movf	ClearStringn@length+1,w
 10681  0C33  3A80               	xorlw	128
 10682  0C34  0272               	subwf	??_ClearStringn,w
 10683  0C35  1D03               	skipz
 10684  0C36  2C39               	goto	u2555
 10685  0C37  0870               	movf	ClearStringn@length,w
 10686  0C38  0274               	subwf	ClearStringn@i,w
 10687  0C39                     u2555:	
 10688  0C39  1803               	btfsc	3,0
 10689  0C3A  0008               	return
 10690                           
 10691                           ;main.c: 59:     {;main.c: 60:         str[i] = '\0';
 10692  0C3B  0874               	movf	ClearStringn@i,w
 10693  0C3C  0773               	addwf	ClearStringn@str,w
 10694  0C3D  00F2               	movwf	??_ClearStringn
 10695  0C3E  0872               	movf	??_ClearStringn,w
 10696  0C3F  0086               	movwf	6
 10697  0C40  0187               	clrf	7
 10698  0C41  0181               	clrf	1
 10699                           
 10700                           ;main.c: 61:     }
 10701  0C42  3001               	movlw	1
 10702  0C43  07F4               	addwf	ClearStringn@i,f
 10703  0C44  3000               	movlw	0
 10704  0C45  3DF5               	addwfc	ClearStringn@i+1,f
 10705  0C46  2C2F               	goto	l3342
 10706  0C47                     __end_of_ClearStringn:	
 10707                           
 10708                           	psect	text33
 10709  0B3A                     __ptext33:	
 10710 ;; *************** function _EUSART1_is_rx_ready *****************
 10711 ;; Defined at:
 10712 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;		None
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;		None
 10717 ;; Return value:  Size  Location     Type
 10718 ;;                  1    wreg      _Bool 
 10719 ;; Registers used:
 10720 ;;		wreg, status,2, status,0
 10721 ;; Tracked objects:
 10722 ;;		On entry : 0/0
 10723 ;;		On exit  : 0/0
 10724 ;;		Unchanged: 0/0
 10725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10730 ;;Total ram usage:        0 bytes
 10731 ;; Hardware stack levels used:    1
 10732 ;; Hardware stack levels required when called:    3
 10733 ;; This function calls:
 10734 ;;		Nothing
 10735 ;; This function is called by:
 10736 ;;		_GPS_HasAcknowledged
 10737 ;;		_PollGPS
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           
 10742                           ;psect for function _EUSART1_is_rx_ready
 10743  0B3A                     _EUSART1_is_rx_ready:	
 10744                           
 10745                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR3bits.RC1IF);
 10746                           
 10747                           ;incstack = 0
 10748                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 10749  0B3A  014E               	movlb	14	; select bank14
 10750  0B3B  0E0F               	swapf	15,w	;volatile
 10751  0B3C  0C89               	rrf	9,f
 10752  0B3D  3901               	andlw	1
 10753  0B3E  0008               	return
 10754  0B3F                     __end_of_EUSART1_is_rx_ready:	
 10755                           
 10756                           	psect	text34
 10757  0B84                     __ptext34:	
 10758 ;; *************** function _EUSART1_Read *****************
 10759 ;; Defined at:
 10760 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;		None
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;		None
 10765 ;; Return value:  Size  Location     Type
 10766 ;;                  1    wreg      unsigned char 
 10767 ;; Registers used:
 10768 ;;		wreg, status,2
 10769 ;; Tracked objects:
 10770 ;;		On entry : 0/0
 10771 ;;		On exit  : 0/0
 10772 ;;		Unchanged: 0/0
 10773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10778 ;;Total ram usage:        0 bytes
 10779 ;; Hardware stack levels used:    1
 10780 ;; Hardware stack levels required when called:    3
 10781 ;; This function calls:
 10782 ;;		Nothing
 10783 ;; This function is called by:
 10784 ;;		_GPS_HasAcknowledged
 10785 ;;		_PollGPS
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           
 10790                           ;psect for function _EUSART1_Read
 10791  0B84                     _EUSART1_Read:	
 10792  0B84                     l348:	
 10793                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
 10794                           
 10795                           ;incstack = 0
 10796                           ; Regs used in _EUSART1_Read: [wreg+status,2]
 10797                           
 10798                           
 10799                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
 10800  0B84  014E               	movlb	14	; select bank14
 10801  0B85  1E8F               	btfss	15,5	;volatile
 10802  0B86  2B84               	goto	l348
 10803                           
 10804                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 10805  0B87  0141               	movlb	1	; select bank1
 10806  0B88  01CF               	clrf	_eusart1RxLastError^(0+128)	;volatile
 10807                           
 10808                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
 10809  0B89  0142               	movlb	2	; select bank2
 10810  0B8A  1C9D               	btfss	29,1	;volatile
 10811  0B8B  2B8E               	goto	l3462
 10812                           
 10813                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
 10814  0B8C  121D               	bcf	29,4	;volatile
 10815                           
 10816                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
 10817  0B8D  161D               	bsf	29,4	;volatile
 10818  0B8E                     l3462:	
 10819                           
 10820                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
 10821  0B8E  0819               	movf	25,w	;volatile
 10822  0B8F  0008               	return
 10823  0B90                     __end_of_EUSART1_Read:	
 10824                           
 10825                           	psect	text35
 10826  0C64                     __ptext35:	
 10827 ;; *************** function _ClearNMEA *****************
 10828 ;; Defined at:
 10829 ;;		line 490 in file "main.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;		None
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;  i               2    2[COMMON] int 
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  1    wreg      void 
 10836 ;; Registers used:
 10837 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10838 ;; Tracked objects:
 10839 ;;		On entry : 0/0
 10840 ;;		On exit  : 0/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10846 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10847 ;;Total ram usage:        4 bytes
 10848 ;; Hardware stack levels used:    1
 10849 ;; Hardware stack levels required when called:    3
 10850 ;; This function calls:
 10851 ;;		Nothing
 10852 ;; This function is called by:
 10853 ;;		_PollGPS
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           
 10858                           ;psect for function _ClearNMEA
 10859  0C64                     _ClearNMEA:	
 10860                           
 10861                           ;main.c: 492:     for (int i = 0; i < 140; i++)
 10862                           
 10863                           ;incstack = 0
 10864                           ; Regs used in _ClearNMEA: [wreg+fsr1l+fsr1h+status,2+status,0]
 10865  0C64  01F2               	clrf	ClearNMEA@i
 10866  0C65  01F3               	clrf	ClearNMEA@i+1
 10867  0C66                     l3818:	
 10868                           
 10869                           ;main.c: 493:     {;main.c: 494:         nmea_data[i] = '\0';
 10870  0C66  30D8               	movlw	216
 10871  0C67  00F0               	movwf	??_ClearNMEA
 10872  0C68  3026               	movlw	38
 10873  0C69  00F1               	movwf	??_ClearNMEA+1
 10874  0C6A  0872               	movf	ClearNMEA@i,w
 10875  0C6B  0770               	addwf	??_ClearNMEA,w
 10876  0C6C  0086               	movwf	6
 10877  0C6D  0873               	movf	ClearNMEA@i+1,w
 10878  0C6E  3D71               	addwfc	??_ClearNMEA+1,w
 10879  0C6F  0087               	movwf	7
 10880  0C70  0181               	clrf	1
 10881                           
 10882                           ;main.c: 495:     }
 10883  0C71  3001               	movlw	1
 10884  0C72  07F2               	addwf	ClearNMEA@i,f
 10885  0C73  3000               	movlw	0
 10886  0C74  3DF3               	addwfc	ClearNMEA@i+1,f
 10887  0C75  0873               	movf	ClearNMEA@i+1,w
 10888  0C76  3A80               	xorlw	128
 10889  0C77  00F0               	movwf	??_ClearNMEA
 10890  0C78  3080               	movlw	128
 10891  0C79  0270               	subwf	??_ClearNMEA,w
 10892  0C7A  1D03               	skipz
 10893  0C7B  2C7E               	goto	u3015
 10894  0C7C  308C               	movlw	140
 10895  0C7D  0272               	subwf	ClearNMEA@i,w
 10896  0C7E                     u3015:	
 10897  0C7E  1803               	btfsc	3,0
 10898  0C7F  0008               	return
 10899  0C80  2C66               	goto	l3818
 10900  0C81                     __end_of_ClearNMEA:	
 10901                           
 10902                           	psect	text36
 10903  05DE                     __ptext36:	
 10904 ;; *************** function _IntToString *****************
 10905 ;; Defined at:
 10906 ;;		line 180 in file "main.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;  n               2   11[COMMON] int 
 10909 ;;  dest            1   13[COMMON] PTR unsigned char 
 10910 ;;		 -> main@convertedNumber(16), 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  i               2   12[BANK0 ] int 
 10913 ;;  sign            1   11[BANK0 ] _Bool 
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10923 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10924 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10925 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10926 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10927 ;;Total ram usage:        8 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    5
 10930 ;; This function calls:
 10931 ;;		_ReverseString
 10932 ;;		___awdiv
 10933 ;;		___awmod
 10934 ;; This function is called by:
 10935 ;;		_main
 10936 ;;		_FloatToString
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           
 10941                           ;psect for function _IntToString
 10942  05DE                     _IntToString:	
 10943                           
 10944                           ;main.c: 180: void IntToString(int n, char* dest);main.c: 181: {;main.c: 182:     int i 
      +                          = 0;
 10945                           
 10946                           ;incstack = 0
 10947                           ; Regs used in _IntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10948  05DE  0140               	movlb	0	; select bank0
 10949  05DF  01AC               	clrf	IntToString@i
 10950  05E0  01AD               	clrf	IntToString@i+1
 10951                           
 10952                           ;main.c: 183:     _Bool sign = n < 0;
 10953  05E1  1FFC               	btfss	IntToString@n+1,7
 10954  05E2  2DE5               	goto	u3580
 10955  05E3  3001               	movlw	1
 10956  05E4  2DE6               	goto	u3590
 10957  05E5                     u3580:	
 10958  05E5  3000               	movlw	0
 10959  05E6                     u3590:	
 10960  05E6  00A9               	movwf	??_IntToString
 10961  05E7  0829               	movf	??_IntToString,w
 10962  05E8  00AB               	movwf	IntToString@sign
 10963                           
 10964                           ;main.c: 184:     if (sign)
 10965  05E9  082B               	movf	IntToString@sign,w
 10966  05EA  1903               	btfsc	3,2
 10967  05EB  2DF1               	goto	l4148
 10968                           
 10969                           ;main.c: 185:     {;main.c: 187:         n = -n;
 10970  05EC  09FB               	comf	IntToString@n,f
 10971  05ED  09FC               	comf	IntToString@n+1,f
 10972  05EE  0AFB               	incf	IntToString@n,f
 10973  05EF  1903               	skipnz
 10974  05F0  0AFC               	incf	IntToString@n+1,f
 10975  05F1                     l4148:	
 10976                           
 10977                           ;main.c: 193:         dest[i++] = n % 10 + '0';
 10978  05F1  300A               	movlw	10
 10979  05F2  00F0               	movwf	___awmod@divisor
 10980  05F3  3000               	movlw	0
 10981  05F4  00F1               	movwf	___awmod@divisor+1
 10982  05F5  087C               	movf	IntToString@n+1,w
 10983  05F6  00F3               	movwf	___awmod@dividend+1
 10984  05F7  087B               	movf	IntToString@n,w
 10985  05F8  00F2               	movwf	___awmod@dividend
 10986  05F9  318F  271E  3185   	fcall	___awmod
 10987  05FC  0870               	movf	?___awmod,w
 10988  05FD  3E30               	addlw	48
 10989  05FE  0140               	movlb	0	; select bank0
 10990  05FF  00A9               	movwf	??_IntToString
 10991  0600  082C               	movf	IntToString@i,w
 10992  0601  077D               	addwf	IntToString@dest,w
 10993  0602  00AA               	movwf	??_IntToString+1
 10994  0603  082A               	movf	??_IntToString+1,w
 10995  0604  0086               	movwf	6
 10996  0605  0187               	clrf	7
 10997  0606  0829               	movf	??_IntToString,w
 10998  0607  0081               	movwf	1
 10999  0608  3001               	movlw	1
 11000  0609  07AC               	addwf	IntToString@i,f
 11001  060A  3000               	movlw	0
 11002  060B  3DAD               	addwfc	IntToString@i+1,f
 11003                           
 11004                           ;main.c: 195:     } while ((n /= 10) > 0);
 11005  060C  300A               	movlw	10
 11006  060D  00F0               	movwf	___awdiv@divisor
 11007  060E  3000               	movlw	0
 11008  060F  00F1               	movwf	___awdiv@divisor+1
 11009  0610  087C               	movf	IntToString@n+1,w
 11010  0611  00F3               	movwf	___awdiv@dividend+1
 11011  0612  087B               	movf	IntToString@n,w
 11012  0613  00F2               	movwf	___awdiv@dividend
 11013  0614  318F  27AF  3185   	fcall	___awdiv
 11014  0617  0871               	movf	?___awdiv+1,w
 11015  0618  00FC               	movwf	IntToString@n+1
 11016  0619  0870               	movf	?___awdiv,w
 11017  061A  00FB               	movwf	IntToString@n
 11018  061B  087C               	movf	IntToString@n+1,w
 11019  061C  3A80               	xorlw	128
 11020  061D  0140               	movlb	0	; select bank0
 11021  061E  00A9               	movwf	??_IntToString
 11022  061F  3080               	movlw	128
 11023  0620  0229               	subwf	??_IntToString,w
 11024  0621  1D03               	skipz
 11025  0622  2E25               	goto	u3615
 11026  0623  3001               	movlw	1
 11027  0624  027B               	subwf	IntToString@n,w
 11028  0625                     u3615:	
 11029  0625  1803               	skipnc
 11030  0626  2DF1               	goto	l4148
 11031                           
 11032                           ;main.c: 196:     if (sign)
 11033  0627  0140               	movlb	0	; select bank0
 11034  0628  082B               	movf	IntToString@sign,w
 11035  0629  1903               	btfsc	3,2
 11036  062A  2E39               	goto	l4160
 11037                           
 11038                           ;main.c: 197:     {;main.c: 198:         dest[i++] = '-';
 11039  062B  302D               	movlw	45
 11040  062C  00A9               	movwf	??_IntToString
 11041  062D  082C               	movf	IntToString@i,w
 11042  062E  077D               	addwf	IntToString@dest,w
 11043  062F  00AA               	movwf	??_IntToString+1
 11044  0630  082A               	movf	??_IntToString+1,w
 11045  0631  0086               	movwf	6
 11046  0632  0187               	clrf	7
 11047  0633  0829               	movf	??_IntToString,w
 11048  0634  0081               	movwf	1
 11049  0635  3001               	movlw	1
 11050  0636  07AC               	addwf	IntToString@i,f
 11051  0637  3000               	movlw	0
 11052  0638  3DAD               	addwfc	IntToString@i+1,f
 11053  0639                     l4160:	
 11054                           
 11055                           ;main.c: 200:     dest[i] = '\0';
 11056  0639  082C               	movf	IntToString@i,w
 11057  063A  077D               	addwf	IntToString@dest,w
 11058  063B  00A9               	movwf	??_IntToString
 11059  063C  0829               	movf	??_IntToString,w
 11060  063D  0086               	movwf	6
 11061  063E  0187               	clrf	7
 11062  063F  0181               	clrf	1
 11063                           
 11064                           ;main.c: 202:     ReverseString(dest);
 11065  0640  087D               	movf	IntToString@dest,w
 11066  0641  3186  26A5         	fcall	_ReverseString
 11067  0643  0008               	return
 11068  0644                     __end_of_IntToString:	
 11069                           
 11070                           	psect	text37
 11071  0F1E                     __ptext37:	
 11072 ;; *************** function ___awmod *****************
 11073 ;; Defined at:
 11074 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awmod.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;  divisor         2    0[COMMON] int 
 11077 ;;  dividend        2    2[COMMON] int 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;  sign            1    6[COMMON] unsigned char 
 11080 ;;  counter         1    5[COMMON] unsigned char 
 11081 ;; Return value:  Size  Location     Type
 11082 ;;                  2    0[COMMON] int 
 11083 ;; Registers used:
 11084 ;;		wreg, status,2, status,0
 11085 ;; Tracked objects:
 11086 ;;		On entry : 0/0
 11087 ;;		On exit  : 0/0
 11088 ;;		Unchanged: 0/0
 11089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11093 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11094 ;;Total ram usage:        7 bytes
 11095 ;; Hardware stack levels used:    1
 11096 ;; Hardware stack levels required when called:    3
 11097 ;; This function calls:
 11098 ;;		Nothing
 11099 ;; This function is called by:
 11100 ;;		_IntToString
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           
 11105                           ;psect for function ___awmod
 11106  0F1E                     ___awmod:	
 11107                           
 11108                           ;incstack = 0
 11109                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11110  0F1E  01F6               	clrf	___awmod@sign
 11111  0F1F  1FF3               	btfss	___awmod@dividend+1,7
 11112  0F20  2F28               	goto	l3914
 11113  0F21  09F2               	comf	___awmod@dividend,f
 11114  0F22  09F3               	comf	___awmod@dividend+1,f
 11115  0F23  0AF2               	incf	___awmod@dividend,f
 11116  0F24  1903               	skipnz
 11117  0F25  0AF3               	incf	___awmod@dividend+1,f
 11118  0F26  01F6               	clrf	___awmod@sign
 11119  0F27  0AF6               	incf	___awmod@sign,f
 11120  0F28                     l3914:	
 11121  0F28  1FF1               	btfss	___awmod@divisor+1,7
 11122  0F29  2F2F               	goto	l3918
 11123  0F2A  09F0               	comf	___awmod@divisor,f
 11124  0F2B  09F1               	comf	___awmod@divisor+1,f
 11125  0F2C  0AF0               	incf	___awmod@divisor,f
 11126  0F2D  1903               	skipnz
 11127  0F2E  0AF1               	incf	___awmod@divisor+1,f
 11128  0F2F                     l3918:	
 11129  0F2F  0870               	movf	___awmod@divisor,w
 11130  0F30  0471               	iorwf	___awmod@divisor+1,w
 11131  0F31  1903               	btfsc	3,2
 11132  0F32  2F56               	goto	l3936
 11133  0F33  01F5               	clrf	___awmod@counter
 11134  0F34  0AF5               	incf	___awmod@counter,f
 11135  0F35                     l3926:	
 11136  0F35  1BF1               	btfsc	___awmod@divisor+1,7
 11137  0F36  2F41               	goto	l3928
 11138  0F37  3001               	movlw	1
 11139  0F38                     u3215:	
 11140  0F38  35F0               	lslf	___awmod@divisor,f
 11141  0F39  0DF1               	rlf	___awmod@divisor+1,f
 11142  0F3A  0B89               	decfsz	9,f
 11143  0F3B  2F38               	goto	u3215
 11144  0F3C  3001               	movlw	1
 11145  0F3D  00F4               	movwf	??___awmod
 11146  0F3E  0874               	movf	??___awmod,w
 11147  0F3F  07F5               	addwf	___awmod@counter,f
 11148  0F40  2F35               	goto	l3926
 11149  0F41                     l3928:	
 11150  0F41  0871               	movf	___awmod@divisor+1,w
 11151  0F42  0273               	subwf	___awmod@dividend+1,w
 11152  0F43  1D03               	skipz
 11153  0F44  2F47               	goto	u3235
 11154  0F45  0870               	movf	___awmod@divisor,w
 11155  0F46  0272               	subwf	___awmod@dividend,w
 11156  0F47                     u3235:	
 11157  0F47  1C03               	skipc
 11158  0F48  2F4D               	goto	l3932
 11159  0F49  0870               	movf	___awmod@divisor,w
 11160  0F4A  02F2               	subwf	___awmod@dividend,f
 11161  0F4B  0871               	movf	___awmod@divisor+1,w
 11162  0F4C  3BF3               	subwfb	___awmod@dividend+1,f
 11163  0F4D                     l3932:	
 11164  0F4D  3001               	movlw	1
 11165  0F4E                     u3245:	
 11166  0F4E  36F1               	lsrf	___awmod@divisor+1,f
 11167  0F4F  0CF0               	rrf	___awmod@divisor,f
 11168  0F50  0B89               	decfsz	9,f
 11169  0F51  2F4E               	goto	u3245
 11170  0F52  3001               	movlw	1
 11171  0F53  02F5               	subwf	___awmod@counter,f
 11172  0F54  1D03               	btfss	3,2
 11173  0F55  2F41               	goto	l3928
 11174  0F56                     l3936:	
 11175  0F56  0876               	movf	___awmod@sign,w
 11176  0F57  1903               	btfsc	3,2
 11177  0F58  2F5E               	goto	l3940
 11178  0F59  09F2               	comf	___awmod@dividend,f
 11179  0F5A  09F3               	comf	___awmod@dividend+1,f
 11180  0F5B  0AF2               	incf	___awmod@dividend,f
 11181  0F5C  1903               	skipnz
 11182  0F5D  0AF3               	incf	___awmod@dividend+1,f
 11183  0F5E                     l3940:	
 11184  0F5E  0873               	movf	___awmod@dividend+1,w
 11185  0F5F  00F1               	movwf	?___awmod+1
 11186  0F60  0872               	movf	___awmod@dividend,w
 11187  0F61  00F0               	movwf	?___awmod
 11188  0F62  0008               	return
 11189  0F63                     __end_of___awmod:	
 11190                           
 11191                           	psect	text38
 11192  06A5                     __ptext38:	
 11193 ;; *************** function _ReverseString *****************
 11194 ;; Defined at:
 11195 ;;		line 125 in file "main.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;  str             1    wreg     PTR unsigned char 
 11198 ;;		 -> checksum(6), main@convertedNumber(16), 
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;  str             1    8[BANK0 ] PTR unsigned char 
 11201 ;;		 -> checksum(6), main@convertedNumber(16), 
 11202 ;;  opposite        1    3[BANK0 ] PTR unsigned char 
 11203 ;;		 -> checksum(6), main@convertedNumber(16), 
 11204 ;;  temp            1    2[BANK0 ] unsigned char 
 11205 ;;  i               2    6[BANK0 ] int 
 11206 ;;  halfway         2    0[BANK0 ] int 
 11207 ;;  counti          2    4[BANK0 ] int 
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  1    wreg      void 
 11210 ;; Registers used:
 11211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11218 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11219 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11220 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11221 ;;Total ram usage:       11 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; Hardware stack levels required when called:    4
 11224 ;; This function calls:
 11225 ;;		___awdiv
 11226 ;;		_strlen
 11227 ;; This function is called by:
 11228 ;;		_UIntToHexString
 11229 ;;		_IntToString
 11230 ;;		_UIntToString
 11231 ;;		_IntToHexString
 11232 ;; This function uses a non-reentrant model
 11233 ;;
 11234                           
 11235                           
 11236                           ;psect for function _ReverseString
 11237  06A5                     _ReverseString:	
 11238                           
 11239                           ;incstack = 0
 11240                           ; Regs used in _ReverseString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11241                           ;ReverseString@str stored from wreg
 11242  06A5  0140               	movlb	0	; select bank0
 11243  06A6  00A8               	movwf	ReverseString@str
 11244                           
 11245                           ;main.c: 125: void ReverseString(char* str);main.c: 126: {;main.c: 127:     int counti =
      +                           strlen(str);
 11246  06A7  0828               	movf	ReverseString@str,w
 11247  06A8  00F0               	movwf	strlen@s
 11248  06A9  3000               	movlw	0
 11249  06AA  00F1               	movwf	strlen@s+1
 11250  06AB  318B  23FD  3186   	fcall	_strlen
 11251  06AE  0871               	movf	?_strlen+1,w
 11252  06AF  0140               	movlb	0	; select bank0
 11253  06B0  00A5               	movwf	ReverseString@counti+1
 11254  06B1  0870               	movf	?_strlen,w
 11255  06B2  00A4               	movwf	ReverseString@counti
 11256                           
 11257                           ;main.c: 128:     for (int i = 0, halfway = counti / 2; i < halfway; i++)
 11258  06B3  01A6               	clrf	ReverseString@i
 11259  06B4  01A7               	clrf	ReverseString@i+1
 11260  06B5  3002               	movlw	2
 11261  06B6  00F0               	movwf	___awdiv@divisor
 11262  06B7  3000               	movlw	0
 11263  06B8  00F1               	movwf	___awdiv@divisor+1
 11264  06B9  0825               	movf	ReverseString@counti+1,w
 11265  06BA  00F3               	movwf	___awdiv@dividend+1
 11266  06BB  0824               	movf	ReverseString@counti,w
 11267  06BC  00F2               	movwf	___awdiv@dividend
 11268  06BD  318F  27AF  3186   	fcall	___awdiv
 11269  06C0  0871               	movf	?___awdiv+1,w
 11270  06C1  0140               	movlb	0	; select bank0
 11271  06C2  00A1               	movwf	ReverseString@halfway+1
 11272  06C3  0870               	movf	?___awdiv,w
 11273  06C4  00A0               	movwf	ReverseString@halfway
 11274  06C5                     l3732:	
 11275  06C5  0827               	movf	ReverseString@i+1,w
 11276  06C6  3A80               	xorlw	128
 11277  06C7  00F9               	movwf	??_ReverseString
 11278  06C8  0821               	movf	ReverseString@halfway+1,w
 11279  06C9  3A80               	xorlw	128
 11280  06CA  0279               	subwf	??_ReverseString,w
 11281  06CB  1D03               	skipz
 11282  06CC  2ECF               	goto	u2935
 11283  06CD  0820               	movf	ReverseString@halfway,w
 11284  06CE  0226               	subwf	ReverseString@i,w
 11285  06CF                     u2935:	
 11286  06CF  1803               	btfsc	3,0
 11287  06D0  2EFC               	goto	l3734
 11288                           
 11289                           ;main.c: 129:     {;main.c: 130:         char temp = str[i];
 11290  06D1  0140               	movlb	0	; select bank0
 11291  06D2  0826               	movf	ReverseString@i,w
 11292  06D3  0728               	addwf	ReverseString@str,w
 11293  06D4  00F9               	movwf	??_ReverseString
 11294  06D5  0879               	movf	??_ReverseString,w
 11295  06D6  0086               	movwf	6
 11296  06D7  0187               	clrf	7
 11297  06D8  0801               	movf	1,w
 11298  06D9  00FA               	movwf	??_ReverseString+1
 11299  06DA  087A               	movf	??_ReverseString+1,w
 11300  06DB  00A2               	movwf	ReverseString@temp
 11301                           
 11302                           ;main.c: 131:         char* opposite = str + (counti - 1 - i);
 11303  06DC  0826               	movf	ReverseString@i,w
 11304  06DD  0228               	subwf	ReverseString@str,w
 11305  06DE  0724               	addwf	ReverseString@counti,w
 11306  06DF  3EFF               	addlw	-1
 11307  06E0  00F9               	movwf	??_ReverseString
 11308  06E1  0879               	movf	??_ReverseString,w
 11309  06E2  00A3               	movwf	ReverseString@opposite
 11310                           
 11311                           ;main.c: 132:         str[i] = *opposite;
 11312  06E3  0823               	movf	ReverseString@opposite,w
 11313  06E4  0086               	movwf	6
 11314  06E5  0187               	clrf	7
 11315  06E6  0801               	movf	1,w
 11316  06E7  00F9               	movwf	??_ReverseString
 11317  06E8  0826               	movf	ReverseString@i,w
 11318  06E9  0728               	addwf	ReverseString@str,w
 11319  06EA  00FA               	movwf	??_ReverseString+1
 11320  06EB  087A               	movf	??_ReverseString+1,w
 11321  06EC  0086               	movwf	6
 11322  06ED  0187               	clrf	7
 11323  06EE  0879               	movf	??_ReverseString,w
 11324  06EF  0081               	movwf	1
 11325                           
 11326                           ;main.c: 133:         *opposite = temp;
 11327  06F0  0822               	movf	ReverseString@temp,w
 11328  06F1  00F9               	movwf	??_ReverseString
 11329  06F2  0823               	movf	ReverseString@opposite,w
 11330  06F3  0086               	movwf	6
 11331  06F4  0187               	clrf	7
 11332  06F5  0879               	movf	??_ReverseString,w
 11333  06F6  0081               	movwf	1
 11334                           
 11335                           ;main.c: 134:     }
 11336  06F7  3001               	movlw	1
 11337  06F8  07A6               	addwf	ReverseString@i,f
 11338  06F9  3000               	movlw	0
 11339  06FA  3DA7               	addwfc	ReverseString@i+1,f
 11340  06FB  2EC5               	goto	l3732
 11341  06FC                     l3734:	
 11342                           
 11343                           ;main.c: 135:     str[counti] = '\0';
 11344  06FC  0140               	movlb	0	; select bank0
 11345  06FD  0824               	movf	ReverseString@counti,w
 11346  06FE  0728               	addwf	ReverseString@str,w
 11347  06FF  00F9               	movwf	??_ReverseString
 11348  0700  0879               	movf	??_ReverseString,w
 11349  0701  0086               	movwf	6
 11350  0702  0187               	clrf	7
 11351  0703  0181               	clrf	1
 11352  0704  0008               	return
 11353  0705                     __end_of_ReverseString:	
 11354                           
 11355                           	psect	text39
 11356  0FAF                     __ptext39:	
 11357 ;; *************** function ___awdiv *****************
 11358 ;; Defined at:
 11359 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awdiv.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  divisor         2    0[COMMON] int 
 11362 ;;  dividend        2    2[COMMON] int 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  quotient        2    7[COMMON] int 
 11365 ;;  sign            1    6[COMMON] unsigned char 
 11366 ;;  counter         1    5[COMMON] unsigned char 
 11367 ;; Return value:  Size  Location     Type
 11368 ;;                  2    0[COMMON] int 
 11369 ;; Registers used:
 11370 ;;		wreg, status,2, status,0
 11371 ;; Tracked objects:
 11372 ;;		On entry : 0/0
 11373 ;;		On exit  : 0/0
 11374 ;;		Unchanged: 0/0
 11375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11376 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11377 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11379 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11380 ;;Total ram usage:        9 bytes
 11381 ;; Hardware stack levels used:    1
 11382 ;; Hardware stack levels required when called:    3
 11383 ;; This function calls:
 11384 ;;		Nothing
 11385 ;; This function is called by:
 11386 ;;		_ReverseString
 11387 ;;		_IntToString
 11388 ;;		_IntToHexString
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392                           
 11393                           ;psect for function ___awdiv
 11394  0FAF                     ___awdiv:	
 11395                           
 11396                           ;incstack = 0
 11397                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11398  0FAF  01F6               	clrf	___awdiv@sign
 11399  0FB0  1FF1               	btfss	___awdiv@divisor+1,7
 11400  0FB1  2FB9               	goto	l3538
 11401  0FB2  09F0               	comf	___awdiv@divisor,f
 11402  0FB3  09F1               	comf	___awdiv@divisor+1,f
 11403  0FB4  0AF0               	incf	___awdiv@divisor,f
 11404  0FB5  1903               	skipnz
 11405  0FB6  0AF1               	incf	___awdiv@divisor+1,f
 11406  0FB7  01F6               	clrf	___awdiv@sign
 11407  0FB8  0AF6               	incf	___awdiv@sign,f
 11408  0FB9                     l3538:	
 11409  0FB9  1FF3               	btfss	___awdiv@dividend+1,7
 11410  0FBA  2FC4               	goto	l3544
 11411  0FBB  09F2               	comf	___awdiv@dividend,f
 11412  0FBC  09F3               	comf	___awdiv@dividend+1,f
 11413  0FBD  0AF2               	incf	___awdiv@dividend,f
 11414  0FBE  1903               	skipnz
 11415  0FBF  0AF3               	incf	___awdiv@dividend+1,f
 11416  0FC0  3001               	movlw	1
 11417  0FC1  00F4               	movwf	??___awdiv
 11418  0FC2  0874               	movf	??___awdiv,w
 11419  0FC3  06F6               	xorwf	___awdiv@sign,f
 11420  0FC4                     l3544:	
 11421  0FC4  01F7               	clrf	___awdiv@quotient
 11422  0FC5  01F8               	clrf	___awdiv@quotient+1
 11423  0FC6  0870               	movf	___awdiv@divisor,w
 11424  0FC7  0471               	iorwf	___awdiv@divisor+1,w
 11425  0FC8  1903               	btfsc	3,2
 11426  0FC9  2FF3               	goto	l3566
 11427  0FCA  01F5               	clrf	___awdiv@counter
 11428  0FCB  0AF5               	incf	___awdiv@counter,f
 11429  0FCC                     l3554:	
 11430  0FCC  1BF1               	btfsc	___awdiv@divisor+1,7
 11431  0FCD  2FD8               	goto	l3556
 11432  0FCE  3001               	movlw	1
 11433  0FCF                     u2785:	
 11434  0FCF  35F0               	lslf	___awdiv@divisor,f
 11435  0FD0  0DF1               	rlf	___awdiv@divisor+1,f
 11436  0FD1  0B89               	decfsz	9,f
 11437  0FD2  2FCF               	goto	u2785
 11438  0FD3  3001               	movlw	1
 11439  0FD4  00F4               	movwf	??___awdiv
 11440  0FD5  0874               	movf	??___awdiv,w
 11441  0FD6  07F5               	addwf	___awdiv@counter,f
 11442  0FD7  2FCC               	goto	l3554
 11443  0FD8                     l3556:	
 11444  0FD8  3001               	movlw	1
 11445  0FD9                     u2805:	
 11446  0FD9  35F7               	lslf	___awdiv@quotient,f
 11447  0FDA  0DF8               	rlf	___awdiv@quotient+1,f
 11448  0FDB  0B89               	decfsz	9,f
 11449  0FDC  2FD9               	goto	u2805
 11450  0FDD  0871               	movf	___awdiv@divisor+1,w
 11451  0FDE  0273               	subwf	___awdiv@dividend+1,w
 11452  0FDF  1D03               	skipz
 11453  0FE0  2FE3               	goto	u2815
 11454  0FE1  0870               	movf	___awdiv@divisor,w
 11455  0FE2  0272               	subwf	___awdiv@dividend,w
 11456  0FE3                     u2815:	
 11457  0FE3  1C03               	skipc
 11458  0FE4  2FEA               	goto	l3562
 11459  0FE5  0870               	movf	___awdiv@divisor,w
 11460  0FE6  02F2               	subwf	___awdiv@dividend,f
 11461  0FE7  0871               	movf	___awdiv@divisor+1,w
 11462  0FE8  3BF3               	subwfb	___awdiv@dividend+1,f
 11463  0FE9  1477               	bsf	___awdiv@quotient,0
 11464  0FEA                     l3562:	
 11465  0FEA  3001               	movlw	1
 11466  0FEB                     u2825:	
 11467  0FEB  36F1               	lsrf	___awdiv@divisor+1,f
 11468  0FEC  0CF0               	rrf	___awdiv@divisor,f
 11469  0FED  0B89               	decfsz	9,f
 11470  0FEE  2FEB               	goto	u2825
 11471  0FEF  3001               	movlw	1
 11472  0FF0  02F5               	subwf	___awdiv@counter,f
 11473  0FF1  1D03               	btfss	3,2
 11474  0FF2  2FD8               	goto	l3556
 11475  0FF3                     l3566:	
 11476  0FF3  0876               	movf	___awdiv@sign,w
 11477  0FF4  1903               	btfsc	3,2
 11478  0FF5  2FFB               	goto	l3570
 11479  0FF6  09F7               	comf	___awdiv@quotient,f
 11480  0FF7  09F8               	comf	___awdiv@quotient+1,f
 11481  0FF8  0AF7               	incf	___awdiv@quotient,f
 11482  0FF9  1903               	skipnz
 11483  0FFA  0AF8               	incf	___awdiv@quotient+1,f
 11484  0FFB                     l3570:	
 11485  0FFB  0878               	movf	___awdiv@quotient+1,w
 11486  0FFC  00F1               	movwf	?___awdiv+1
 11487  0FFD  0877               	movf	___awdiv@quotient,w
 11488  0FFE  00F0               	movwf	?___awdiv
 11489  0FFF  0008               	return
 11490  1000                     __end_of___awdiv:	
 11491                           
 11492                           	psect	text40
 11493  0B57                     __ptext40:	
 11494 ;; *************** function _InitTiming *****************
 11495 ;; Defined at:
 11496 ;;		line 11 in file "timing.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;		None
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;		None
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  1    wreg      void 
 11503 ;; Registers used:
 11504 ;;		wreg, status,2, status,0, pclath, cstack
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11514 ;;Total ram usage:        0 bytes
 11515 ;; Hardware stack levels used:    1
 11516 ;; Hardware stack levels required when called:    4
 11517 ;; This function calls:
 11518 ;;		_TMR0_SetInterruptHandler
 11519 ;; This function is called by:
 11520 ;;		_main
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524                           
 11525                           ;psect for function _InitTiming
 11526  0B57                     _InitTiming:	
 11527                           
 11528                           ;timing.c: 13:     (INTCONbits.GIE = 1);
 11529                           
 11530                           ;incstack = 0
 11531                           ; Regs used in _InitTiming: [wreg+status,2+status,0+pclath+cstack]
 11532  0B57  178B               	bsf	11,7	;volatile
 11533                           
 11534                           ;timing.c: 14:     TMR0_SetInterruptHandler(TimerISR);
 11535  0B58  3070               	movlw	low _TimerISR
 11536  0B59  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11537  0B5A  300B               	movlw	high _TimerISR
 11538  0B5B  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11539  0B5C  318B  233F         	fcall	_TMR0_SetInterruptHandler
 11540  0B5E  0008               	return
 11541  0B5F                     __end_of_InitTiming:	
 11542                           
 11543                           	psect	text41
 11544  0B3F                     __ptext41:	
 11545 ;; *************** function _TMR0_SetInterruptHandler *****************
 11546 ;; Defined at:
 11547 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 11550 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;		None
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  1    wreg      void 
 11555 ;; Registers used:
 11556 ;;		wreg
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11566 ;;Total ram usage:        2 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    3
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_TMR0_Initialize
 11573 ;;		_InitTiming
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           
 11578                           ;psect for function _TMR0_SetInterruptHandler
 11579  0B3F                     _TMR0_SetInterruptHandler:	
 11580                           
 11581                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 11582                           
 11583                           ;incstack = 0
 11584                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 11585  0B3F  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 11586  0B40  0141               	movlb	1	; select bank1
 11587  0B41  00EF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 11588  0B42  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 11589  0B43  00EE               	movwf	_TMR0_InterruptHandler^(0+128)
 11590  0B44  0008               	return
 11591  0B45                     __end_of_TMR0_SetInterruptHandler:	
 11592                           
 11593                           	psect	text42
 11594  0D65                     __ptext42:	
 11595 ;; *************** function _DebugAlert *****************
 11596 ;; Defined at:
 11597 ;;		line 4 in file "debug.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;  delay_high      2    0[BANK0 ] unsigned int 
 11600 ;;  delay_low       2    2[BANK0 ] unsigned int 
 11601 ;;  num_flashes     1    4[BANK0 ] unsigned char 
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;  i               2    5[BANK0 ] int 
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  1    wreg      void 
 11606 ;; Registers used:
 11607 ;;		wreg, status,2, status,0, pclath, cstack
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11613 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11616 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11617 ;;Total ram usage:        8 bytes
 11618 ;; Hardware stack levels used:    1
 11619 ;; Hardware stack levels required when called:    4
 11620 ;; This function calls:
 11621 ;;		_Sleep
 11622 ;; This function is called by:
 11623 ;;		_main
 11624 ;;		_I2C_Wait_SSPIF
 11625 ;;		_BME280_Init
 11626 ;; This function uses a non-reentrant model
 11627 ;;
 11628                           
 11629                           
 11630                           ;psect for function _DebugAlert
 11631  0D65                     _DebugAlert:	
 11632                           
 11633                           ;debug.c: 4: void DebugAlert(unsigned int delay_high, unsigned int delay_low, uint8_t nu
      +                          m_flashes);debug.c: 5: {;debug.c: 7:     for (int i = 0; i < num_flashes; i++)
 11634                           
 11635                           ;incstack = 0
 11636                           ; Regs used in _DebugAlert: [wreg+status,2+status,0+pclath+cstack]
 11637  0D65  0140               	movlb	0	; select bank0
 11638  0D66  01A5               	clrf	DebugAlert@i
 11639  0D67  01A6               	clrf	DebugAlert@i+1
 11640  0D68                     l4072:	
 11641  0D68  0826               	movf	DebugAlert@i+1,w
 11642  0D69  3A80               	xorlw	128
 11643  0D6A  00FC               	movwf	??_DebugAlert
 11644  0D6B  3080               	movlw	128
 11645  0D6C  027C               	subwf	??_DebugAlert,w
 11646  0D6D  1D03               	skipz
 11647  0D6E  2D71               	goto	u3515
 11648  0D6F  0824               	movf	DebugAlert@num_flashes,w
 11649  0D70  0225               	subwf	DebugAlert@i,w
 11650  0D71                     u3515:	
 11651  0D71  1803               	btfsc	3,0
 11652  0D72  0008               	return
 11653                           
 11654                           ;debug.c: 8:     {;debug.c: 9:         do { LATCbits.LATC5 = 1; } while(0);
 11655  0D73  0140               	movlb	0	; select bank0
 11656  0D74  169A               	bsf	26,5	;volatile
 11657                           
 11658                           ;debug.c: 10:         Sleep(delay_high);
 11659  0D75  0820               	movf	DebugAlert@delay_high,w
 11660  0D76  00F0               	movwf	Sleep@ms
 11661  0D77  0821               	movf	DebugAlert@delay_high+1,w
 11662  0D78  00F1               	movwf	Sleep@ms+1
 11663  0D79  01F2               	clrf	Sleep@ms+2
 11664  0D7A  01F3               	clrf	Sleep@ms+3
 11665  0D7B  318D  258F  318D   	fcall	_Sleep
 11666  0D7E  0140               	movlb	0	; select bank0
 11667  0D7F  129A               	bcf	26,5	;volatile
 11668                           
 11669                           ;debug.c: 12:         Sleep(delay_low);
 11670  0D80  0822               	movf	DebugAlert@delay_low,w
 11671  0D81  00F0               	movwf	Sleep@ms
 11672  0D82  0823               	movf	DebugAlert@delay_low+1,w
 11673  0D83  00F1               	movwf	Sleep@ms+1
 11674  0D84  01F2               	clrf	Sleep@ms+2
 11675  0D85  01F3               	clrf	Sleep@ms+3
 11676  0D86  318D  258F  318D   	fcall	_Sleep
 11677                           
 11678                           ;debug.c: 13:     }
 11679  0D89  3001               	movlw	1
 11680  0D8A  0140               	movlb	0	; select bank0
 11681  0D8B  07A5               	addwf	DebugAlert@i,f
 11682  0D8C  3000               	movlw	0
 11683  0D8D  3DA6               	addwfc	DebugAlert@i+1,f
 11684  0D8E  2D68               	goto	l4072
 11685  0D8F                     __end_of_DebugAlert:	
 11686                           
 11687                           	psect	text43
 11688  0D8F                     __ptext43:	
 11689 ;; *************** function _Sleep *****************
 11690 ;; Defined at:
 11691 ;;		line 17 in file "timing.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;  ms              4    0[COMMON] unsigned long 
 11694 ;; Auto vars:     Size  Location     Type
 11695 ;;  start           4    8[COMMON] unsigned long 
 11696 ;; Return value:  Size  Location     Type
 11697 ;;                  1    wreg      void 
 11698 ;; Registers used:
 11699 ;;		wreg
 11700 ;; Tracked objects:
 11701 ;;		On entry : 0/0
 11702 ;;		On exit  : 0/0
 11703 ;;		Unchanged: 0/0
 11704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11706 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11707 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11708 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11709 ;;Total ram usage:       12 bytes
 11710 ;; Hardware stack levels used:    1
 11711 ;; Hardware stack levels required when called:    3
 11712 ;; This function calls:
 11713 ;;		Nothing
 11714 ;; This function is called by:
 11715 ;;		_DebugAlert
 11716 ;;		_SetupGPS
 11717 ;;		_main
 11718 ;;		_TransmitBit
 11719 ;;		_BME280_Init
 11720 ;;		_bme280_soft_reset
 11721 ;;		_bme280_init
 11722 ;; This function uses a non-reentrant model
 11723 ;;
 11724                           
 11725                           
 11726                           ;psect for function _Sleep
 11727  0D8F                     _Sleep:	
 11728                           
 11729                           ;timing.c: 17: void Sleep(uint32_t ms);timing.c: 18: {;timing.c: 19:     uint32_t start 
      +                          = ticks;
 11730                           
 11731                           ;incstack = 0
 11732                           ; Regs used in _Sleep: [wreg]
 11733  0D8F  0141               	movlb	1	; select bank1
 11734  0D90  0847               	movf	(_ticks+3)^(0+128),w
 11735  0D91  00FB               	movwf	Sleep@start+3
 11736  0D92  0846               	movf	(_ticks+2)^(0+128),w
 11737  0D93  00FA               	movwf	Sleep@start+2
 11738  0D94  0845               	movf	(_ticks+1)^(0+128),w
 11739  0D95  00F9               	movwf	Sleep@start+1
 11740  0D96  0844               	movf	_ticks^(0+128),w
 11741  0D97  00F8               	movwf	Sleep@start
 11742  0D98                     l887:	
 11743                           ;timing.c: 23:     }
 11744                           
 11745                           ;timing.c: 20:     while (ticks - start < ms)
 11746                           
 11747                           
 11748                           ;timing.c: 20:     while (ticks - start < ms)
 11749  0D98  0878               	movf	Sleep@start,w
 11750  0D99  0141               	movlb	1	; select bank1
 11751  0D9A  0244               	subwf	_ticks^(0+128),w
 11752  0D9B  00F4               	movwf	??_Sleep
 11753  0D9C  0879               	movf	Sleep@start+1,w
 11754  0D9D  3B45               	subwfb	(_ticks+1)^(0+128),w
 11755  0D9E  00F5               	movwf	??_Sleep+1
 11756  0D9F  087A               	movf	Sleep@start+2,w
 11757  0DA0  3B46               	subwfb	(_ticks+2)^(0+128),w
 11758  0DA1  00F6               	movwf	??_Sleep+2
 11759  0DA2  087B               	movf	Sleep@start+3,w
 11760  0DA3  3B47               	subwfb	(_ticks+3)^(0+128),w
 11761  0DA4  00F7               	movwf	??_Sleep+3
 11762  0DA5  0873               	movf	Sleep@ms+3,w
 11763  0DA6  0277               	subwf	??_Sleep+3,w
 11764  0DA7  1D03               	skipz
 11765  0DA8  2DB3               	goto	u2545
 11766  0DA9  0872               	movf	Sleep@ms+2,w
 11767  0DAA  0276               	subwf	??_Sleep+2,w
 11768  0DAB  1D03               	skipz
 11769  0DAC  2DB3               	goto	u2545
 11770  0DAD  0871               	movf	Sleep@ms+1,w
 11771  0DAE  0275               	subwf	??_Sleep+1,w
 11772  0DAF  1D03               	skipz
 11773  0DB0  2DB3               	goto	u2545
 11774  0DB1  0870               	movf	Sleep@ms,w
 11775  0DB2  0274               	subwf	??_Sleep,w
 11776  0DB3                     u2545:	
 11777  0DB3  1803               	btfsc	3,0
 11778  0DB4  0008               	return
 11779                           
 11780                           ;timing.c: 21:     {;timing.c: 22:         _delay((unsigned long)((1)*(1000000/4000.0)))
      +                          ;
 11781  0DB5  3053               	movlw	83
 11782  0DB6                     u4827:	
 11783  0DB6  0B89               	decfsz	9,f
 11784  0DB7  2DB6               	goto	u4827
 11785  0DB8  0000               	nop
 11786  0DB9  2D98               	goto	l887
 11787  0DBA                     __end_of_Sleep:	
 11788                           
 11789                           	psect	text44
 11790  0C47                     __ptext44:	
 11791 ;; *************** function _ClearTxData *****************
 11792 ;; Defined at:
 11793 ;;		line 300 in file "main.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;		None
 11796 ;; Auto vars:     Size  Location     Type
 11797 ;;  i               2    2[COMMON] int 
 11798 ;; Return value:  Size  Location     Type
 11799 ;;                  1    wreg      void 
 11800 ;; Registers used:
 11801 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11802 ;; Tracked objects:
 11803 ;;		On entry : 0/0
 11804 ;;		On exit  : 0/0
 11805 ;;		Unchanged: 0/0
 11806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11810 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11811 ;;Total ram usage:        4 bytes
 11812 ;; Hardware stack levels used:    1
 11813 ;; Hardware stack levels required when called:    3
 11814 ;; This function calls:
 11815 ;;		Nothing
 11816 ;; This function is called by:
 11817 ;;		_main
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           
 11822                           ;psect for function _ClearTxData
 11823  0C47                     _ClearTxData:	
 11824                           
 11825                           ;main.c: 302:     for (int i = 0; i < 140; i++)
 11826                           
 11827                           ;incstack = 0
 11828                           ; Regs used in _ClearTxData: [wreg+fsr1l+fsr1h+status,2+status,0]
 11829  0C47  01F2               	clrf	ClearTxData@i
 11830  0C48  01F3               	clrf	ClearTxData@i+1
 11831  0C49                     l4182:	
 11832                           
 11833                           ;main.c: 303:     {;main.c: 304:         txdata[i] = '\0';
 11834  0C49  3064               	movlw	100
 11835  0C4A  00F0               	movwf	??_ClearTxData
 11836  0C4B  3027               	movlw	39
 11837  0C4C  00F1               	movwf	??_ClearTxData+1
 11838  0C4D  0872               	movf	ClearTxData@i,w
 11839  0C4E  0770               	addwf	??_ClearTxData,w
 11840  0C4F  0086               	movwf	6
 11841  0C50  0873               	movf	ClearTxData@i+1,w
 11842  0C51  3D71               	addwfc	??_ClearTxData+1,w
 11843  0C52  0087               	movwf	7
 11844  0C53  0181               	clrf	1
 11845                           
 11846                           ;main.c: 305:     }
 11847  0C54  3001               	movlw	1
 11848  0C55  07F2               	addwf	ClearTxData@i,f
 11849  0C56  3000               	movlw	0
 11850  0C57  3DF3               	addwfc	ClearTxData@i+1,f
 11851  0C58  0873               	movf	ClearTxData@i+1,w
 11852  0C59  3A80               	xorlw	128
 11853  0C5A  00F0               	movwf	??_ClearTxData
 11854  0C5B  3080               	movlw	128
 11855  0C5C  0270               	subwf	??_ClearTxData,w
 11856  0C5D  1D03               	skipz
 11857  0C5E  2C61               	goto	u3645
 11858  0C5F  308C               	movlw	140
 11859  0C60  0272               	subwf	ClearTxData@i,w
 11860  0C61                     u3645:	
 11861  0C61  1803               	btfsc	3,0
 11862  0C62  0008               	return
 11863  0C63  2C49               	goto	l4182
 11864  0C64                     __end_of_ClearTxData:	
 11865                           
 11866                           	psect	text45
 11867  0CC7                     __ptext45:	
 11868 ;; *************** function _ClearString *****************
 11869 ;; Defined at:
 11870 ;;		line 26 in file "main.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;  str             1    wreg     PTR unsigned char 
 11873 ;;		 -> main@convertedNumber(16), 
 11874 ;; Auto vars:     Size  Location     Type
 11875 ;;  str             1   10[COMMON] PTR unsigned char 
 11876 ;;		 -> main@convertedNumber(16), 
 11877 ;;  i               2    8[COMMON] int 
 11878 ;;  counti          2    6[COMMON] int 
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11889 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11891 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11892 ;;Total ram usage:        6 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:    4
 11895 ;; This function calls:
 11896 ;;		_strlen
 11897 ;; This function is called by:
 11898 ;;		_main
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           
 11903                           ;psect for function _ClearString
 11904  0CC7                     _ClearString:	
 11905                           
 11906                           ;incstack = 0
 11907                           ; Regs used in _ClearString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11908                           ;ClearString@str stored from wreg
 11909  0CC7  00FA               	movwf	ClearString@str
 11910                           
 11911                           ;main.c: 26: void ClearString(char* str);main.c: 27: {;main.c: 28:     for (int i = 0, c
      +                          ounti = strlen(str); i < counti; i++)
 11912  0CC8  01F8               	clrf	ClearString@i
 11913  0CC9  01F9               	clrf	ClearString@i+1
 11914  0CCA  087A               	movf	ClearString@str,w
 11915  0CCB  00F0               	movwf	strlen@s
 11916  0CCC  3000               	movlw	0
 11917  0CCD  00F1               	movwf	strlen@s+1
 11918  0CCE  318B  23FD  318C   	fcall	_strlen
 11919  0CD1  0871               	movf	?_strlen+1,w
 11920  0CD2  00F7               	movwf	ClearString@counti+1
 11921  0CD3  0870               	movf	?_strlen,w
 11922  0CD4  00F6               	movwf	ClearString@counti
 11923  0CD5                     l4116:	
 11924  0CD5  0879               	movf	ClearString@i+1,w
 11925  0CD6  3A80               	xorlw	128
 11926  0CD7  00F5               	movwf	??_ClearString
 11927  0CD8  0877               	movf	ClearString@counti+1,w
 11928  0CD9  3A80               	xorlw	128
 11929  0CDA  0275               	subwf	??_ClearString,w
 11930  0CDB  1D03               	skipz
 11931  0CDC  2CDF               	goto	u3535
 11932  0CDD  0876               	movf	ClearString@counti,w
 11933  0CDE  0278               	subwf	ClearString@i,w
 11934  0CDF                     u3535:	
 11935  0CDF  1803               	btfsc	3,0
 11936  0CE0  0008               	return
 11937                           
 11938                           ;main.c: 29:     {;main.c: 30:         str[i] = '\0';
 11939  0CE1  0878               	movf	ClearString@i,w
 11940  0CE2  077A               	addwf	ClearString@str,w
 11941  0CE3  00F5               	movwf	??_ClearString
 11942  0CE4  0875               	movf	??_ClearString,w
 11943  0CE5  0086               	movwf	6
 11944  0CE6  0187               	clrf	7
 11945  0CE7  0181               	clrf	1
 11946                           
 11947                           ;main.c: 31:     }
 11948  0CE8  3001               	movlw	1
 11949  0CE9  07F8               	addwf	ClearString@i,f
 11950  0CEA  3000               	movlw	0
 11951  0CEB  3DF9               	addwfc	ClearString@i+1,f
 11952  0CEC  2CD5               	goto	l4116
 11953  0CED                     __end_of_ClearString:	
 11954                           
 11955                           	psect	text46
 11956  0BFD                     __ptext46:	
 11957 ;; *************** function _strlen *****************
 11958 ;; Defined at:
 11959 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  s               2    0[COMMON] PTR const unsigned char 
 11962 ;;		 -> STR_11(3), checksum(6), STR_10(7), main@convertedNumber(16), 
 11963 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 11964 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 11965 ;;		 -> txdata(140), csvField(20), 
 11966 ;; Auto vars:     Size  Location     Type
 11967 ;;  a               2    3[COMMON] PTR const unsigned char 
 11968 ;;		 -> STR_11(3), checksum(6), STR_10(7), main@convertedNumber(16), 
 11969 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 11970 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 11971 ;;		 -> txdata(140), csvField(20), 
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  2    0[COMMON] unsigned int 
 11974 ;; Registers used:
 11975 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11984 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11985 ;;Total ram usage:        5 bytes
 11986 ;; Hardware stack levels used:    1
 11987 ;; Hardware stack levels required when called:    3
 11988 ;; This function calls:
 11989 ;;		Nothing
 11990 ;; This function is called by:
 11991 ;;		_ClearString
 11992 ;;		_GetAtRowCSV
 11993 ;;		_Insert
 11994 ;;		_InsertString
 11995 ;;		_ReverseString
 11996 ;;		_WriteGPS
 11997 ;;		_PollGPS
 11998 ;;		_main
 11999 ;;		_crc16
 12000 ;;		_TransmitString
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           
 12005                           ;psect for function _strlen
 12006  0BFD                     _strlen:	
 12007                           
 12008                           ;incstack = 0
 12009                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 12010  0BFD  0871               	movf	strlen@s+1,w
 12011  0BFE  00F4               	movwf	strlen@a+1
 12012  0BFF  0870               	movf	strlen@s,w
 12013  0C00  00F3               	movwf	strlen@a
 12014  0C01                     l3286:	
 12015  0C01  0870               	movf	strlen@s,w
 12016  0C02  0084               	movwf	4
 12017  0C03  0871               	movf	strlen@s+1,w
 12018  0C04  0085               	movwf	5
 12019  0C05  0012               	moviw fsr0++
 12020  0C06  1903               	btfsc	3,2
 12021  0C07  2C0D               	goto	l3288
 12022  0C08  3001               	movlw	1
 12023  0C09  07F0               	addwf	strlen@s,f
 12024  0C0A  3000               	movlw	0
 12025  0C0B  3DF1               	addwfc	strlen@s+1,f
 12026  0C0C  2C01               	goto	l3286
 12027  0C0D                     l3288:	
 12028  0C0D  0873               	movf	strlen@a,w
 12029  0C0E  0270               	subwf	strlen@s,w
 12030  0C0F  00F0               	movwf	?_strlen
 12031  0C10  0874               	movf	strlen@a+1,w
 12032  0C11  3B71               	subwfb	strlen@s+1,w
 12033  0C12  00F1               	movwf	?_strlen+1
 12034  0C13  0008               	return
 12035  0C14                     __end_of_strlen:	
 12036                           
 12037                           	psect	intentry
 12038  0004                     __pintentry:	
 12039 ;; *************** function _INTERRUPT_InterruptManager *****************
 12040 ;; Defined at:
 12041 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;		None
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;		None
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		wreg, status,2, status,0, pclath, cstack
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12059 ;;Total ram usage:        0 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:    2
 12062 ;; This function calls:
 12063 ;;		_TMR0_ISR
 12064 ;; This function is called by:
 12065 ;;		Interrupt level 1
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069  0004                     _INTERRUPT_InterruptManager:	
 12070                           
 12071                           ;incstack = 0
 12072  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12073                           
 12074                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 12075  0005  3180               	pagesel	$
 12076                           
 12077                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 12078  0006  014E               	movlb	14	; select bank14
 12079  0007  1A96               	btfsc	22,5	;volatile
 12080  0008  1E8C               	btfss	12,5	;volatile
 12081  0009  280C               	goto	i1l389
 12082                           
 12083                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 12084  000A  318B  23A8         	fcall	_TMR0_ISR
 12085  000C                     i1l389:	
 12086                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 12087                           
 12088  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12089  000D  0009               	retfie
 12090  000E                     __end_of_INTERRUPT_InterruptManager:	
 12091                           
 12092                           	psect	text48
 12093  0BA8                     __ptext48:	
 12094 ;; *************** function _TMR0_ISR *****************
 12095 ;; Defined at:
 12096 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;		None
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;		None
 12101 ;; Return value:  Size  Location     Type
 12102 ;;                  1    wreg      void 
 12103 ;; Registers used:
 12104 ;;		wreg, status,2, status,0, pclath, cstack
 12105 ;; Tracked objects:
 12106 ;;		On entry : 0/0
 12107 ;;		On exit  : 0/0
 12108 ;;		Unchanged: 0/0
 12109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12114 ;;Total ram usage:        0 bytes
 12115 ;; Hardware stack levels used:    1
 12116 ;; Hardware stack levels required when called:    1
 12117 ;; This function calls:
 12118 ;;		Absolute function
 12119 ;;		_TMR0_DefaultInterruptHandler
 12120 ;;		_TimerISR
 12121 ;; This function is called by:
 12122 ;;		_INTERRUPT_InterruptManager
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           
 12127                           ;psect for function _TMR0_ISR
 12128  0BA8                     _TMR0_ISR:	
 12129                           
 12130                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 12131                           
 12132                           ;incstack = 0
 12133                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 12134  0BA8  014E               	movlb	14	; select bank14
 12135  0BA9  128C               	bcf	12,5	;volatile
 12136                           
 12137                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 12138  0BAA  0141               	movlb	1	; select bank1
 12139  0BAB  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 12140  0BAC  046F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 12141  0BAD  1903               	btfsc	3,2
 12142  0BAE  0008               	return
 12143                           
 12144                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 12145  0BAF  086F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 12146  0BB0  008A               	movwf	10
 12147  0BB1  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 12148  0BB2  000A               	callw
 12149  0BB3  318B               	pagesel	$
 12150  0BB4  0008               	return
 12151  0BB5                     __end_of_TMR0_ISR:	
 12152                           
 12153                           	psect	text49
 12154  07FC                     __ptext49:	
 12155 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 12156 ;; Defined at:
 12157 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;		None
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;		None
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      void 
 12164 ;; Registers used:
 12165 ;;		None
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12175 ;;Total ram usage:        0 bytes
 12176 ;; Hardware stack levels used:    1
 12177 ;; This function calls:
 12178 ;;		Nothing
 12179 ;; This function is called by:
 12180 ;;		_TMR0_Initialize
 12181 ;;		_TMR0_ISR
 12182 ;; This function uses a non-reentrant model
 12183 ;;
 12184                           
 12185                           
 12186                           ;psect for function _TMR0_DefaultInterruptHandler
 12187  07FC                     _TMR0_DefaultInterruptHandler:	
 12188                           
 12189                           ;incstack = 0
 12190                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 12191  07FC  0008               	return
 12192  07FD                     __end_of_TMR0_DefaultInterruptHandler:	
 12193                           
 12194                           	psect	text50
 12195  0B70                     __ptext50:	
 12196 ;; *************** function _TimerISR *****************
 12197 ;; Defined at:
 12198 ;;		line 6 in file "timing.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;		None
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;		None
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  1    wreg      void 
 12205 ;; Registers used:
 12206 ;;		wreg
 12207 ;; Tracked objects:
 12208 ;;		On entry : 0/0
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12216 ;;Total ram usage:        0 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; This function calls:
 12219 ;;		Nothing
 12220 ;; This function is called by:
 12221 ;;		_InitTiming
 12222 ;;		_TMR0_ISR
 12223 ;; This function uses a non-reentrant model
 12224 ;;
 12225                           
 12226                           
 12227                           ;psect for function _TimerISR
 12228  0B70                     _TimerISR:	
 12229                           
 12230                           ;timing.c: 8:     ticks++;
 12231                           
 12232                           ;incstack = 0
 12233                           ; Regs used in _TimerISR: [wreg]
 12234  0B70  3001               	movlw	1
 12235  0B71  0141               	movlb	1	; select bank1
 12236  0B72  07C4               	addwf	_ticks^(0+128),f
 12237  0B73  3000               	movlw	0
 12238  0B74  3DC5               	addwfc	(_ticks+1)^(0+128),f
 12239  0B75  3000               	movlw	0
 12240  0B76  3DC6               	addwfc	(_ticks+2)^(0+128),f
 12241  0B77  3000               	movlw	0
 12242  0B78  3DC7               	addwfc	(_ticks+3)^(0+128),f
 12243  0B79  0008               	return
 12244  0B7A                     __end_of_TimerISR:	
 12245  007E                     btemp	set	126	;btemp
 12246  007E                     int$flags	set	126
 12247  007E                     wtemp0	set	126


Data Sizes:
    Strings     184
    Constant    2
    Data        44
    BSS         151
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      0      80
    BANK2            80      0      79
    BANK3            80      0      44
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           72      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    put_device_to_sleep@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    put_device_to_sleep@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    put_device_to_sleep@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    get_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    get_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    get_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    PollGPS$2657	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK1[20]), 

    S54$4$2	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    S54$3$2	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(COMMON[4]), write_power_mode@sensor_mode_reg_val(COMMON[1]), set_filter_standby_settings@reg_data(COMMON[1]), 
		 -> set_osr_press_temp_settings@reg_data(COMMON[1]), set_osr_humidity_settings@ctrl_meas(COMMON[1]), bme280_get_sensor_data@reg_data(COMMON[8]), bme280_set_sensor_mode@last_set_mode(COMMON[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(COMMON[1]), bme280_init@chip_id(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_11(CODE[3]), checksum(BANK1[6]), STR_10(CODE[7]), main@convertedNumber(BANK0[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK1[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_11(CODE[3]), checksum(BANK1[6]), STR_10(CODE[7]), main@convertedNumber(BANK0[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK1[20]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_8(CODE[2]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK1[20]), 

    TransmitString@message	PTR unsigned char  size(2) Largest target is 140
		 -> STR_11(CODE[3]), txdata(BIGRAM[140]), 

    crc16@data	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    crc16_update@pData	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK3[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK3[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK3[44]), 

    WriteGPS@message	PTR unsigned char  size(2) Largest target is 26
		 -> STR_7(CODE[14]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    UIntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK0[16]), 

    IntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK0[16]), 

    UIntToHexString@dest	PTR unsigned char  size(1) Largest target is 6
		 -> checksum(BANK1[6]), 

    ReverseString@opposite	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK1[6]), main@convertedNumber(BANK0[16]), 

    ReverseString@str	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK1[6]), main@convertedNumber(BANK0[16]), 

    InsertString@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    InsertString@src	PTR unsigned char  size(2) Largest target is 20
		 -> checksum(BANK1[6]), STR_10(CODE[7]), main@convertedNumber(BANK0[16]), csvField(BANK1[20]), 

    Insert@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    sp__GetAtRowCSV	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK1[20]), 

    GetAtRowCSV@src	PTR unsigned char  size(2) Largest target is 140
		 -> nmea_data(BIGRAM[140]), 

    ClearStringn@str	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK1[20]), 

    ClearString@str	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK0[16]), 

    EnvSensor.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    EnvSensor.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    EnvSensor.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_humidity_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_humidity_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_humidity_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_temp_press_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_temp_press_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_temp_press_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_sensor_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    S54bme280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    S54bme280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    S54bme280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 


Critical Paths under _main in COMMON

    _main->_IntToString
    _crc16->_crc16_update
    _crc16_update->_strlen
    _UIntToString->___lldiv
    _TransmitString->_TransmitChar
    _TransmitChar->_TransmitBit
    _TransmitBit->_Sleep
    _SetupGPS->_Sleep
    _SetupGPS->_WriteGPS
    _GPS_SendUBX->_GetLengthUBX
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _PollGPS->_InsertTxDataSep
    _PollGPS->_strcmp
    _strcmp->_GetAtRowCSV
    _WriteGPS->_strlen
    _InsertTxData->_InsertTxDataSep
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _Insert->_strlen
    _GetAtRowCSV->_ClearStringn
    _IntToString->_ReverseString
    _ReverseString->___awdiv
    _InitTiming->_TMR0_SetInterruptHandler
    _DebugAlert->_Sleep
    _ClearString->_strlen

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PollGPS
    _crc16->_crc16_update
    _UIntToString->_ReverseString
    _UIntToHexString->_ReverseString
    _TransmitString->_TransmitChar
    _SetupGPS->_GPS_HasAcknowledged
    _PollGPS->_InsertTxData
    _strcmp->_GetAtRowCSV
    _InsertTxData->_InsertString
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _IntToString->_ReverseString

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   78340
                                             43 BANK0     37    37      0
                        _ClearString
                        _ClearTxData
                         _DebugAlert
                         _InitTiming
                             _Insert
                       _InsertString
                        _IntToString
                            _PollGPS
                  _SYSTEM_Initialize
                           _SetupGPS
                              _Sleep
                     _TransmitString
                    _UIntToHexString
                       _UIntToString
                              _crc16
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _crc16                                                4     2      2    1502
                                              1 BANK0      4     2      2
                       _crc16_update
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc16_update                                        10     4      6     410
                                              5 COMMON     9     3      6
                                              0 BANK0      1     1      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _UIntToString                                         9     4      5    3562
                                              9 BANK0      9     4      5
                      _ReverseString
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UIntToHexString                                     19    14      5    2572
                                              9 BANK0     19    14      5
                      _ReverseString
                              _crc16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       7     5      2    1834
                                              3 BANK0      7     5      2
                       _TransmitChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitChar                                         4     4      0     643
                                             13 COMMON     1     1      0
                                              0 BANK0      3     3      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          1     1      0     553
                                             12 COMMON     1     1      0
                              _Sleep
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             1     1      0    2987
                                             12 COMMON     1     1      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                              _Sleep
                           _WriteGPS
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     245
                                              4 COMMON     6     6      0
                      _EUSART1_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      77
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0     618
                                              0 COMMON     4     4      0
                                              0 BANK0     18    18      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PollGPS                                             18    18      0   42553
                                             25 BANK0     18    18      0
                          _ClearNMEA
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                        _GetAtRowCSV
                             _Insert
                       _InsertString
                       _InsertTxData
                    _InsertTxDataSep
                           _WriteGPS
                             _strcmp
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               4     2      2     330
                                             11 COMMON     3     1      2
                                              8 BANK0      1     1      0
                        _GetAtRowCSV (ARG)
 ---------------------------------------------------------------------------------
 (2) _WriteGPS                                             7     5      2    1593
                                              5 COMMON     7     5      2
                      _EUSART1_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InsertTxData                                         4     0      4   17575
                                             21 BANK0      4     0      4
                        _GetAtRowCSV
                       _InsertString
                    _InsertTxDataSep
 ---------------------------------------------------------------------------------
 (2) _InsertTxDataSep                                      3     1      2    5277
                                             12 COMMON     2     0      2
                                              9 BANK0      1     1      0
                             _Insert
 ---------------------------------------------------------------------------------
 (3) _InsertString                                        13     5      8    8859
                                             12 COMMON     1     1      0
                                              9 BANK0     12     4      8
                        _GetAtRowCSV (ARG)
                             _Insert
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _Insert                                              16     9      7    4951
                                              5 COMMON     7     0      7
                                              0 BANK0      9     9      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _GetAtRowCSV                                         13     9      4    2308
                                              6 COMMON     5     1      4
                                              0 BANK0      8     8      0
                       _ClearStringn
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _ClearStringn                                         6     4      2     199
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearNMEA                                            4     4      0      68
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _IntToString                                          8     5      3    4276
                                             11 COMMON     3     0      3
                                              9 BANK0      5     5      0
                      _ReverseString
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReverseString                                       11    11      0    2172
                                              9 COMMON     2     2      0
                                              0 BANK0      9     9      0
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _InitTiming                                           0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebugAlert                                           8     3      5    1305
                                             12 COMMON     1     1      0
                                              0 BANK0      7     2      5
                              _Sleep
 ---------------------------------------------------------------------------------
 (4) _Sleep                                               12     8      4     531
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (1) _ClearTxData                                          4     4      0      68
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ClearString                                          6     6      0    1138
                                              5 COMMON     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     926
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (8) _TimerISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearString
     _strlen
   _ClearTxData
   _DebugAlert
     _Sleep
   _InitTiming
     _TMR0_SetInterruptHandler
   _Insert
     _strlen
   _InsertString
     _GetAtRowCSV (ARG)
       _ClearStringn
       _strlen
     _Insert (ARG)
       _strlen
     _strlen (ARG)
   _IntToString
     _ReverseString
       ___awdiv
       _strlen
     ___awdiv
     ___awmod
   _PollGPS
     _ClearNMEA
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _GetAtRowCSV
       _ClearStringn
       _strlen
     _Insert
       _strlen
     _InsertString
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
       _Insert (ARG)
         _strlen
       _strlen (ARG)
     _InsertTxData
       _GetAtRowCSV
         _ClearStringn
         _strlen
       _InsertString
         _GetAtRowCSV (ARG)
           _ClearStringn
           _strlen
         _Insert (ARG)
           _strlen
         _strlen (ARG)
       _InsertTxDataSep
         _Insert
           _strlen
     _InsertTxDataSep
       _Insert
         _strlen
     _WriteGPS
       _EUSART1_Write
       _strlen
     _strcmp
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _GPS_SendUBX
       _EUSART1_Write
       _GetLengthUBX
     _Sleep
     _WriteGPS
       _EUSART1_Write
       _strlen
   _Sleep
   _TransmitString
     _TransmitChar
       _TransmitBit
         _Sleep
     _strlen
   _UIntToHexString
     _ReverseString
       ___awdiv
       _strlen
     _crc16 (ARG)
       _crc16_update
         _strlen (ARG)
       _strlen
   _UIntToString
     _ReverseString
       ___awdiv
       _strlen
     ___lldiv
     ___llmod
   _crc16
     _crc16_update
       _strlen (ARG)
     _strlen
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     129       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      2C      12       55.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              48      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     129      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Sep 14 17:57:17 2019

                           __end_of_ClearString 0CED                             __end_of_GetAtRowCSV 06A5  
                              GetAtRowCSV@index 0024                            __end_of_ClearStringn 0C47  
                             GetAtRowCSV@column 0078                                     __CFG_CP$OFF 0000  
                             GetAtRowCSV@counti 0020                                    ___awdiv@sign 0076  
                               GPS_SendUBX@data 0079                                              _id 00CC  
                                   __CFG_LVP$ON 0000                                             l355 0B60  
                                           l348 0B84                                             l803 0148  
                                           l644 065F                                             l804 01A7  
                                           l840 0EBC                                             l824 0455  
                                           l649 069E                                             l675 04FC  
                                           l775 0F81                                             l857 0BF0  
                                           l887 0D98                                             l799 00EA  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 0076  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                               _InsertTxDataSep 0C14                                   __CFG_BBEN$OFF 0000  
                             ___g_timeout_start 00C8                                  ReverseString@i 0026  
                                WriteGPS@counti 0078                                      _DebugAlert 0D65  
                                          l4116 0CD5                                            l4132 0546  
                                          l4124 051D                                            l3342 0C2F  
                                          l3510 07EA                           __size_of_crc16_update 003D  
                                          l4072 0D68                                            l4160 0639  
                                          l3360 05D2                                            l3512 07BA  
                                          l4240 0106                                            l4136 0558  
                                          l3514 07F6                                            l4242 00AF  
                                          l4138 0565                                            l4148 05F1  
                                          l3364 05D7                                            l3356 0598  
                                          l4244 010C                                            l3286 0C01  
                                          l4182 0C49                                            l3462 0B8E  
                                          l3358 05C4                                            l4270 0270  
                                          l4238 00D2                                            l4166 0708  
                                          l3288 0C0D                                            l3544 0FC4  
                                          l4256 0248                                            l3528 0BF2  
                                          l3570 0FFB                                            l3562 0FEA  
                                          l3554 0FCC                                            l3538 0FB9  
                                          l4266 026B                                            l4194 0F65  
                                          l3556 0FD8                                            l3732 06C5  
                                          l4268 0062                                            l3566 0FF3  
                                          l3734 06FC                                            l3494 0690  
                                          l4294 0DF5                                            l3902 07A1  
                                          l3744 0D21                                            l3832 0DCB  
                                          l3914 0F28                                            l3818 0C66  
                                          l3498 06A3                                            l3834 0DBD  
                                          l3754 0CF8                                            l3940 0F5E  
                                          l3932 0F4D                                            l3836 0DD8  
                                          l3860 0ED7                                            l3926 0F35  
                                          l3918 0F2F                                            l3950 0EE4  
                                          l3854 0EC2                                            l4742 0445  
                                          l3928 0F41                                            l3936 0F56  
                                          l3792 04B8                                            l3784 04B0  
                                          l3776 049A                                            l3872 0E77  
                                          l3952 0EF2                                            l3960 0F15  
                                          l3794 04D7                                            l3786 04B1  
                                          l3890 0776                                            l3858 0E9F  
                                          l3956 0F0A                                            l4684 027B  
                                          l3798 04D9                                            l3888 0768  
                                          l3898 0796                                            STR_1 104E  
                                          STR_2 1034                                            STR_3 1082  
                                          STR_4 101A                                            STR_5 1068  
                                          STR_6 1000                                            STR_7 109C  
                                          STR_8 10B6                                            STR_9 10B8  
                                          _LATA 0018                                            _LATB 0019  
                                          u3015 0C7E                                            _LATC 001A  
                                          u3105 0E95                                            u3125 076B  
                                          u3215 0F38                                            u3080 0E83  
                                          u3145 0777                                            u3305 0F00  
                                          u3090 0E84                                            u3074 0E7D  
                                          u3235 0F47                                            u3075 0E7C  
                                          u3155 078B                                            u3315 0F0B  
                                          u3245 0F4E                                            u3165 0797  
                                          u2545 0DB3                                            u3515 0D71  
                                          u2555 0C39                                            u2715 0669  
                                          u2805 0FD9                                            u2565 0585  
                                          u2725 07F4                                            u3285 0EE7  
                                          u3535 0CDF                                            u2815 0FE3  
                                          u3615 0625                                            u2575 05A2  
                                          u2735 07C5                                            u4360 0285  
                                          u2825 0FEB                                            u3705 00B9  
                                          u3555 0539                                            u3580 05E5  
                                          _PMD0 0796                                            u3645 0C61  
                                          u2685 0672                                            _PMD1 0797  
                                          u3590 05E6                                            _PMD2 0798  
                                          u2935 06CF                                            _PMD3 0799  
                                          _PMD4 079A                                            u2785 0FCF  
                                          u2945 0D2B                                            _PMD5 079B  
                                          _PMD6 079C                                            u3675 00C5  
                                          u2955 0D02                                            _PMD7 079D  
                                          u3765 0DFF                                            u4827 0DB6  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   _EUSART1_Write 0B5F  
                                 __CFG_FCMEN$ON 0000                                            _main 0272  
                          __end_of_GetLengthUBX 0BD6                                   ?_EUSART1_Read 0070  
                                  TransmitBit@b 007C                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                               GPS_SendUBX@length 0075  
                  GPS_HasAcknowledged@startTime 0020                                            start 000E  
                               _HALF_BAUD_DELAY 10B4                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                                   ??_IntToString 0029  
                                 _ReadEnvSensor 0000                                 __end_of_PollGPS 0272  
                       __end_of_TMR0_Initialize 0BE9                  ??_TMR0_DefaultInterruptHandler 0070  
                __size_of_OSCILLATOR_Initialize 0009                   __end_of_OSCILLATOR_Initialize 0B70  
                              PollGPS@startTime 003D                           ReverseString@opposite 0023  
                                         ?_main 0070                      GPS_HasAcknowledged@ackByte 0024  
                               __end_of___awdiv 1000                                           STR_10 10AA  
                                         STR_11 10B1                                   __CFG_WDTE$OFF 0000  
                               __end_of___awmod 0F63                                 WriteGPS@message 0075  
                               __end_of___lldiv 07AA                                 ___awdiv@divisor 0070  
                               __end_of___llmod 0F1E                                           i1l389 000C  
                               ___awdiv@counter 0075                                           _OSCEN 0891  
                                  _crc16_update 0E9F                                           _TMR0H 059D  
                                         _TMR0L 059C                                      Insert@dest 0075  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0006  
                     ?_TMR0_SetInterruptHandler 0070                                           _Sleep 0D8F  
                              __end_of_TMR0_ISR 0BB5                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                      UIntToHexString@remainder 0034                                           _crc16 0CA2  
                              crc16_update@wCrc 0079                                ?_UIntToHexString 0029  
                                  ?_GPS_SendUBX 0070                                           _ticks 00C4  
                                 TransmitChar@i 0021                                  ?_EUSART1_Write 0070  
                                         pclath 000A                         GPS_HasAcknowledged@data 002F  
                                   _ClearTxData 0C47                                  ??_EUSART1_Read 0070  
                                         status 0003                                           wtemp0 007E  
                                   _ClearString 0CC7                                     _GetAtRowCSV 0644  
            _EUSART1_DefaultFramingErrorHandler 0000                                   PollGPS@counti 0041  
                          __end_of_UIntToString 0758                                 __initialization 0010  
                         DebugAlert@num_flashes 0024                                      _InitTiming 0B57  
                    __end_of_EUSART1_Initialize 0CA2                                    __end_of_main 0461  
                          GPS_HasAcknowledged@i 0031                                  __CFG_SAFEN$OFF 0000  
                            __size_of_ClearNMEA 001D                     ?_INTERRUPT_InterruptManager 0070  
                       __end_of_InsertTxDataSep 0C2C                                          ??_main 004B  
                         __end_of_ReverseString 0705                             __end_of_IntToString 0644  
                              ReverseString@str 0028                                   ?_InsertTxData 0035  
                              __end_of_TimerISR 0B7A                                __end_of_SetupGPS 0FAF  
                                 ?_InsertString 0029                                          ?_Sleep 0070  
                                        ?_crc16 0021                                      Sleep@start 0078  
                              ___llmod@dividend 0074                                ___awdiv@dividend 0072  
                                   ?_DebugAlert 0020                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                         __end_of_HALF_BAUD_DELAY 10B6  
                              __end_of_WriteGPS 0D3C                                          _RC1REG 0119  
                                        _RC1STA 011D                                          _RB4PPS 1F1C  
                                        _RB6PPS 1F1E                                          _RB7PPS 1F1F  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                    __size_of_EUSART1_is_rx_ready 0005  
                                __CFG_WDTCCS$SC 0000                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                     Insert@index 0078  
                         __size_of_ClearStringn 001B                                       ??_PollGPS 0039  
                                        _Insert 0569                                  __CFG_PWRTS$OFF 0000  
                             crc16_update@pData 0075                                       ??___awdiv 0074  
                                __CFG_STVREN$ON 0000                                       ??___awmod 0074  
                                     ??___lldiv 0078                                       ??___llmod 0078  
                           DebugAlert@delay_low 0022                        ?_EUSART1_SetErrorHandler 0070  
                              ?_TMR0_Initialize 0070                                ___awdiv@quotient 0077  
                               ___awmod@divisor 0070                                 ___awmod@counter 0075  
              ??_EUSART1_SetOverrunErrorHandler 0072                 ?_EUSART1_SetOverrunErrorHandler 0070  
                                        _txdata 2764                                          _strcmp 0DBA  
                                        _strlen 0BFD                                  ??_InsertTxData 007E  
                                  IntToString@i 002C                                    IntToString@n 007B  
                               InsertString@src 002B                                  _PMD_Initialize 0B7A  
                                ??_InsertString 007C                                ??_TransmitString 0025  
                               ??_EUSART1_Write 0070        TMR0_SetInterruptHandler@InterruptHandler 0070  
                         __size_of_GetLengthUBX 0012                                   ClearStringn@i 0074  
                                  _ClearStringn 0C2C                               __end_of_ClearNMEA 0C81  
                             _SYSTEM_Initialize 0BB5                         __end_of__initialization 003E  
                            ?_SYSTEM_Initialize 0070                             main@convertedNumber 0050  
                          _UIntToHexString$1748 0030                             ReverseString@counti 0024  
                                __pcstackCOMMON 0070                                     ?_InitTiming 0070  
                                 __end_of_Sleep 0DBA                                  PollGPS@success 0043  
                                  __pidataBANK3 0E12                                   __end_of_crc16 0CC7  
                           ??_SYSTEM_Initialize 0072                                     _IntToString 05DE  
                                     ?_TMR0_ISR 0070                                   ??_TransmitBit 007C  
                           __size_of_DebugAlert 002A                                     PollGPS@byte 0046  
                        __end_of_PMD_Initialize 0B84                                ?_InsertTxDataSep 007C  
                          __end_of_EUSART1_Read 0B90                                    _GetLengthUBX 0BC4  
                                       ??_Sleep 0074                                         ??_crc16 007E  
                   __end_of_GPS_HasAcknowledged 04F3                       __end_of_SYSTEM_Initialize 0BC4  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                         __size_of_UIntToString 0053                            __size_of_GPS_SendUBX 0027  
                             ReverseString@temp 0022                           InsertString@destLimit 002F  
                              _setNavFlightMode 01A0                                         ?_Insert 0075  
               __end_of_EUSART1_SetErrorHandler 0B4B                                      __pmaintext 0272  
                                     ?_TimerISR 0070                                       ?_SetupGPS 0070  
              __end_of_TMR0_SetInterruptHandler 0B45                                      ??_TMR0_ISR 0070  
                               __CFG_PPS1WAY$ON 0000                                      __pintentry 0004  
                                     ?_WriteGPS 0075                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0070                                  _WriteEnvSensor 0000  
                                       ?_strcmp 007B                                         ?_strlen 0070  
        __end_of_EUSART1_SetFramingErrorHandler 0B51         __size_of_EUSART1_SetFramingErrorHandler 0006  
                _EUSART1_SetFramingErrorHandler 0B4B                             __end_of_TransmitBit 0BFD  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                  _UIntToString 0705                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                             __size_of_InitTiming 0008  
                                  Insert@length 0025                                    ?_ClearTxData 0070  
                                       Insert@i 0027                                    ?_ClearString 0070  
                                  ?_GetAtRowCSV 0076                            __end_of_InsertTxData 0E6E  
                                       Sleep@ms 0070                                         _PollGPS 0042  
                          __end_of_InsertString 07FC                                 __size_of_Insert 0075  
                                    ??_TimerISR 0070                                      ??_SetupGPS 007C  
                              GetLengthUBX@data 0073                                         ___awdiv 0FAF  
                                       ___awmod 0F1E                                         ___lldiv 0758  
                                       ___llmod 0EDC                             _EUSART1_is_rx_ready 0B3A  
                                    ??_WriteGPS 0077                              crc16_update@length 0077  
                                       __ptext1 0CA2                                         __ptext2 0E9F  
                                       __ptext3 0705                                         __ptext4 0EDC  
                                       __ptext5 0758                                         __ptext6 04F3  
                                       __ptext7 0DE6                                         __ptext8 0E6E  
                                       __ptext9 0BE9                            DebugAlert@delay_high 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strcmp 002C  
                               __size_of_strlen 0017                           _OSCILLATOR_Initialize 0B67  
                              ___awmod@dividend 0072                              _EUSART1_Initialize 0C81  
                      ??_PIN_MANAGER_Initialize 0070                                 __CFG_WRTSAF$OFF 0000  
                            get_calib_data@F376 0120                                         main@end 0060  
                    __size_of_SYSTEM_Initialize 000F                                         clrloop0 0B91  
                                  ??_DebugAlert 007C                            end_of_initialization 003E  
                          ?_EUSART1_is_rx_ready 0070                             ?_EUSART1_Initialize 0070  
                              InsertString@dest 0029                                         init_ram 0B9C  
                   _EUSART1_OverrunErrorHandler 00EA                                         initloop 0B9D  
                      __size_of_UIntToHexString 0076                                 ___lldiv@divisor 0070  
                               ___lldiv@counter 007D                           __size_of_EUSART1_Read 000C  
                                    main@F11368 00A0                            ??_EUSART1_Initialize 0072  
                                ClearString@str 007A                                         strcmp@l 0028  
                                       strcmp@r 007B                                     _TransmitBit 0BE9  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0073  
                                       strlen@s 0070                              __end_of_DebugAlert 0D8F  
                      _TMR0_SetInterruptHandler 0B3F                                   ?_TransmitChar 0070  
                               TransmitString@i 0028                                  GetAtRowCSV@col 0022  
                                  GPS_SendUBX@i 0077                                  GetAtRowCSV@src 0076  
              __size_of_EUSART1_SetErrorHandler 0006                             EUSART1_Write@txData 0070  
                              __CFG_FEXTOSC$OFF 0000                           ??_EUSART1_is_rx_ready 0070  
                                  _EUSART1_Read 0B84                                  _gps_configured 00CE  
                                     _ClearNMEA 0C64                            ReverseString@halfway 0020  
                        __size_of_ReverseString 0060                           TransmitString@message 0023  
                                  ??_InitTiming 0072                                  __end_of_Insert 05DE  
                                  ?_IntToString 007B                                       Insert@src 0077  
                             __size_of_TMR0_ISR 000D                          ?_OSCILLATOR_Initialize 0070  
                                     _EnvSensor 013A                                  ??_TransmitChar 007D  
                                __end_of_strcmp 0DE6                                  __end_of_strlen 0C14  
                           start_initialization 0010                             UIntToHexString@dest 002D  
                                  PollGPS@index 0049                        __size_of_TMR0_Initialize 0013  
               __size_of_PIN_MANAGER_Initialize 0029                                UIntToHexString@i 0038  
                              UIntToHexString@n 0029                              __end_of_InitTiming 0B5F  
                         __end_of_EUSART1_Write 0B67                               InsertTxData@field 0037  
                         __size_of_InsertTxData 0030                               InsertTxData@index 0035  
                         __size_of_InsertString 0052                                 ___llmod@divisor 0070  
                               ___llmod@counter 0079                                      ?_ClearNMEA 0070  
                          __size_of_ClearTxData 001D                            __size_of_ClearString 0026  
                                      ??_Insert 0020                                __CFG_LPBOREN$OFF 0000  
                          __size_of_GetAtRowCSV 0061                                    ClearTxData@i 0072  
                              ??_PMD_Initialize 0070                               ??_UIntToHexString 002E  
                             __size_of_TimerISR 000A                                     __pdataBANK3 01A0  
                             __size_of_SetupGPS 004C                                    ClearString@i 0078  
                                      ??_strcmp 007D                                        ??_strlen 0072  
                                 ?_crc16_update 0075                                   _ReverseString 06A5  
                                  GetAtRowCSV@i 0026                               __size_of_WriteGPS 0028  
                                   __pbssBIGRAM 26D8                                    _InsertTxData 0E3E  
                                     ___latbits 0003                                   __pcstackBANK0 0020  
                                  _InsertString 07AA                                   crc16_update@i 0020  
                      __size_of_InsertTxDataSep 0018                                   ??_GPS_SendUBX 0074  
              ??_EUSART1_SetFramingErrorHandler 0072                 ?_EUSART1_SetFramingErrorHandler 0070  
                        PollGPS@eusart_complete 0045                                       crc16@data 0021  
                       __size_of_TransmitString 002C                           _TMR0_InterruptHandler 00EE  
                                     WriteGPS@i 007A                                       __pnvBANK1 00EA  
                                     __pnvBANK2 016D                    __size_of_GPS_HasAcknowledged 0092  
                                      ?_PollGPS 0070                          _PIN_MANAGER_Initialize 0D3C  
                                      ?___awdiv 0070                                        ?___awmod 0070  
                                      ?___lldiv 0070                                        ?___llmod 0070  
                  ??_INTERRUPT_InterruptManager 0070                                  ??_crc16_update 007B  
                                ?_ReverseString 0070                                        _BAUD1CON 011F  
            _EUSART1_DefaultOverrunErrorHandler 0000                                    _PollGPS$2657 0044  
                          _EUSART1_ErrorHandler 016D                              ClearStringn@length 0070  
                       _EUSART1_SetErrorHandler 0B45                                  __size_of_Sleep 002B  
                                __size_of_crc16 0025                            InsertTxDataSep@index 007C  
                                     _nmea_data 26D8                               ??_TMR0_Initialize 0072  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0070  
                                      _LATCbits 001A                                     ??_ClearNMEA 0070  
                           __end_of_GPS_SendUBX 0D14                                       clear_ram0 0B90  
                          __end_of_TransmitChar 0E9F                                        _PIE0bits 0716  
           __size_of_INTERRUPT_InterruptManager 000A                      ??_TMR0_SetInterruptHandler 0072  
                                      _PIR0bits 070C                                        _PIR3bits 070F  
                                      _RX1DTPPS 1ECB                                     DebugAlert@i 0025  
                                 UIntToString@i 0030                                   UIntToString@n 0029  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 0BA8  
                                      _SSP1STAT 018F                                    ?_TransmitBit 0070  
                          __size_of_IntToString 0066                                       main@index 006E  
                          TransmitString@counti 0026                                   ?_ClearStringn 0070  
                                      PollGPS@i 0047                               ??_InsertTxDataSep 0029  
                            InsertString@counti 0031                                 IntToString@dest 007D  
                               IntToString@sign 002B                                        _TimerISR 0B70  
                                      _SetupGPS 0F63                                __size_of_PollGPS 0230  
                                 InsertString@i 0033                         ??_OSCILLATOR_Initialize 0070  
                              __size_of___awdiv 0051                                __size_of___awmod 0045  
                              __size_of___lldiv 0052                                __size_of___llmod 0042  
                   __size_of_EUSART1_Initialize 0021                                 ??_ReverseString 0079  
                                      _WriteGPS 0D14                                   ?_GetLengthUBX 0070  
                             ClearString@counti 0076                       ??_EUSART1_SetErrorHandler 0072  
                   _EUSART1_DefaultErrorHandler 0000                                        crc16@crc 0023  
                   __end_of_EUSART1_is_rx_ready 0B3F                                      _T0CON0bits 059E  
                                      _checksum 00E4                                        __ptext10 0F63  
                                      __ptext11 0CED                                        __ptext20 0B51  
                                      __ptext12 0BC4                                        __ptext21 0B4B  
                                      __ptext13 0461                                        __ptext30 0569  
                                      __ptext22 0B45                                        __ptext14 0BB5  
                                      __ptext31 0644                                        __ptext23 0042  
                                      __ptext15 0BD6                                        __ptext40 0B57  
                                      __ptext32 0C2C                                        __ptext24 0DBA  
                                      __ptext16 0B7A                                        __ptext41 0B3F  
                                      __ptext33 0B3A                                        __ptext25 0D14  
                                      __ptext17 0D3C                                        __ptext50 0B70  
                                      __ptext42 0D65                                        __ptext34 0B84  
                                      __ptext26 0B5F                                        __ptext18 0B67  
                                      __ptext43 0D8F                                        __ptext35 0C64  
                                      __ptext27 0E3E                                        __ptext19 0C81  
                                ??_ClearStringn 0072                                        __ptext44 0C47  
                                      __ptext36 05DE                                        __ptext28 0C14  
                                      __ptext45 0CC7                                        __ptext37 0F1E  
                                      __ptext29 07AA                                        __ptext46 0BFD  
                                      __ptext38 06A5                                        __ptext39 0FAF  
                                      __ptext48 0BA8                                        __ptext49 07FC  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _csvField 00D0                                     _GPS_SendUBX 0CED  
                               _UIntToHexString 04F3                                  _TransmitString 0DE6  
                                 __size_of_main 01EF                            __end_of_crc16_update 0EDC  
          __end_of_TMR0_DefaultInterruptHandler 07FD           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 07FC                            __CFG_WDTCWS$WDTCWS_7 0000  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0070  
                              TransmitChar@byte 0020                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 000E                      _INTERRUPT_InterruptManager 0004  
                                    ClearNMEA@i 0072                                UIntToString@dest 002D  
                   _EUSART1_FramingErrorHandler 00EC                                  ??_GetLengthUBX 0073  
                               main@sensor_data 0062                             _GPS_HasAcknowledged 0461  
                                    _INTCONbits 000B                               InsertString@index 002D  
                                 ?_UIntToString 0029                                  __pstringtext10 10B1  
                                __pstringtext11 10B6                                  __pstringtext12 10B8  
                                __pstringtext13 0000                      bme280_get_sensor_data@F271 00BC  
                    bme280_get_sensor_data@F273 00B0                           __size_of_TransmitChar 0031  
                        __end_of_TransmitString 0E12                                        intlevel1 0000  
                                 ??_ClearTxData 0070                                   ??_ClearString 0075  
                              ___lldiv@dividend 0074                                   ??_GetAtRowCSV 007A  
                       ?_PIN_MANAGER_Initialize 0070                               __CFG_CLKOUTEN$OFF 0000  
        __end_of_EUSART1_SetOverrunErrorHandler 0B57         __size_of_EUSART1_SetOverrunErrorHandler 0006  
                _EUSART1_SetOverrunErrorHandler 0B51                            ?_GPS_HasAcknowledged 0070  
                 ?_TMR0_DefaultInterruptHandler 0070                    GPS_HasAcknowledged@ackByteID 0030  
                  GPS_HasAcknowledged@ackPacket 0025  EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                        __size_of_EUSART1_Write 0008                              _eusart1RxLastError 00CF  
                                 __pstringtext1 10B4                                   __pstringtext2 1000  
                                 __pstringtext3 101A                                   __pstringtext4 1034  
                                 __pstringtext5 104E                                   __pstringtext6 1068  
                                 __pstringtext7 1082                                   __pstringtext8 109C  
                                 __pstringtext9 10AA                            __size_of_TransmitBit 0014  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                                  _TransmitChar 0E6E                                ___lldiv@quotient 0079  
                                ??_UIntToString 002E                                 _TMR0_Initialize 0BD6  
                               ClearStringn@str 0073                         __end_of_UIntToHexString 0569  
                                    _TX1STAbits 011E                                 ?_TransmitString 0023  
                __end_of_PIN_MANAGER_Initialize 0D65                                 Insert@destLimit 007A  
                         ??_GPS_HasAcknowledged 0070                             __end_of_ClearTxData 0C64  
